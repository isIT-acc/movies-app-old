(window.webpackJsonp = window.webpackJsonp || []).push([
  [1],
  {
    0: function (e, t, n) {
      e.exports = n("zUnb");
    },
    "2QA8": function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return r;
      });
      const r = (() =>
        "function" == typeof Symbol
          ? Symbol("rxSubscriber")
          : "@@rxSubscriber_" + Math.random())();
    },
    "2fFW": function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return i;
      });
      let r = !1;
      const i = {
        Promise: void 0,
        set useDeprecatedSynchronousErrorHandling(e) {
          if (e) {
            const e = new Error();
            console.warn(
              "DEPRECATED! RxJS was set to use deprecated synchronous error handling behavior by code at: \n" +
                e.stack
            );
          } else
            r &&
              console.log(
                "RxJS: Back to a better error behavior. Thank you. <3"
              );
          r = e;
        },
        get useDeprecatedSynchronousErrorHandling() {
          return r;
        },
      };
    },
    "5+tZ": function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return l;
      });
      var r = n("ZUHj"),
        i = n("l7GE"),
        s = n("51Dv"),
        o = n("lJxs"),
        a = n("Cfvw");
      function l(e, t, n = Number.POSITIVE_INFINITY) {
        return "function" == typeof t
          ? (r) =>
              r.pipe(
                l(
                  (n, r) =>
                    Object(a.a)(e(n, r)).pipe(
                      Object(o.a)((e, i) => t(n, e, r, i))
                    ),
                  n
                )
              )
          : ("number" == typeof t && (n = t), (t) => t.lift(new c(e, n)));
      }
      class c {
        constructor(e, t = Number.POSITIVE_INFINITY) {
          (this.project = e), (this.concurrent = t);
        }
        call(e, t) {
          return t.subscribe(new u(e, this.project, this.concurrent));
        }
      }
      class u extends i.a {
        constructor(e, t, n = Number.POSITIVE_INFINITY) {
          super(e),
            (this.project = t),
            (this.concurrent = n),
            (this.hasCompleted = !1),
            (this.buffer = []),
            (this.active = 0),
            (this.index = 0);
        }
        _next(e) {
          this.active < this.concurrent
            ? this._tryNext(e)
            : this.buffer.push(e);
        }
        _tryNext(e) {
          let t;
          const n = this.index++;
          try {
            t = this.project(e, n);
          } catch (r) {
            return void this.destination.error(r);
          }
          this.active++, this._innerSub(t, e, n);
        }
        _innerSub(e, t, n) {
          const i = new s.a(this, t, n),
            o = this.destination;
          o.add(i);
          const a = Object(r.a)(this, e, void 0, void 0, i);
          a !== i && o.add(a);
        }
        _complete() {
          (this.hasCompleted = !0),
            0 === this.active &&
              0 === this.buffer.length &&
              this.destination.complete(),
            this.unsubscribe();
        }
        notifyNext(e, t, n, r, i) {
          this.destination.next(t);
        }
        notifyComplete(e) {
          const t = this.buffer;
          this.remove(e),
            this.active--,
            t.length > 0
              ? this._next(t.shift())
              : 0 === this.active &&
                this.hasCompleted &&
                this.destination.complete();
        }
      }
    },
    "51Dv": function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return i;
      });
      var r = n("7o/Q");
      class i extends r.a {
        constructor(e, t, n) {
          super(),
            (this.parent = e),
            (this.outerValue = t),
            (this.outerIndex = n),
            (this.index = 0);
        }
        _next(e) {
          this.parent.notifyNext(
            this.outerValue,
            e,
            this.outerIndex,
            this.index++,
            this
          );
        }
        _error(e) {
          this.parent.notifyError(e, this), this.unsubscribe();
        }
        _complete() {
          this.parent.notifyComplete(this), this.unsubscribe();
        }
      }
    },
    "7o/Q": function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return c;
      });
      var r = n("n6bG"),
        i = n("gRHU"),
        s = n("quSY"),
        o = n("2QA8"),
        a = n("2fFW"),
        l = n("NJ4a");
      class c extends s.a {
        constructor(e, t, n) {
          switch (
            (super(),
            (this.syncErrorValue = null),
            (this.syncErrorThrown = !1),
            (this.syncErrorThrowable = !1),
            (this.isStopped = !1),
            arguments.length)
          ) {
            case 0:
              this.destination = i.a;
              break;
            case 1:
              if (!e) {
                this.destination = i.a;
                break;
              }
              if ("object" == typeof e) {
                e instanceof c
                  ? ((this.syncErrorThrowable = e.syncErrorThrowable),
                    (this.destination = e),
                    e.add(this))
                  : ((this.syncErrorThrowable = !0),
                    (this.destination = new u(this, e)));
                break;
              }
            default:
              (this.syncErrorThrowable = !0),
                (this.destination = new u(this, e, t, n));
          }
        }
        [o.a]() {
          return this;
        }
        static create(e, t, n) {
          const r = new c(e, t, n);
          return (r.syncErrorThrowable = !1), r;
        }
        next(e) {
          this.isStopped || this._next(e);
        }
        error(e) {
          this.isStopped || ((this.isStopped = !0), this._error(e));
        }
        complete() {
          this.isStopped || ((this.isStopped = !0), this._complete());
        }
        unsubscribe() {
          this.closed || ((this.isStopped = !0), super.unsubscribe());
        }
        _next(e) {
          this.destination.next(e);
        }
        _error(e) {
          this.destination.error(e), this.unsubscribe();
        }
        _complete() {
          this.destination.complete(), this.unsubscribe();
        }
        _unsubscribeAndRecycle() {
          const { _parentOrParents: e } = this;
          return (
            (this._parentOrParents = null),
            this.unsubscribe(),
            (this.closed = !1),
            (this.isStopped = !1),
            (this._parentOrParents = e),
            this
          );
        }
      }
      class u extends c {
        constructor(e, t, n, s) {
          let o;
          super(), (this._parentSubscriber = e);
          let a = this;
          Object(r.a)(t)
            ? (o = t)
            : t &&
              ((o = t.next),
              (n = t.error),
              (s = t.complete),
              t !== i.a &&
                ((a = Object.create(t)),
                Object(r.a)(a.unsubscribe) && this.add(a.unsubscribe.bind(a)),
                (a.unsubscribe = this.unsubscribe.bind(this)))),
            (this._context = a),
            (this._next = o),
            (this._error = n),
            (this._complete = s);
        }
        next(e) {
          if (!this.isStopped && this._next) {
            const { _parentSubscriber: t } = this;
            a.a.useDeprecatedSynchronousErrorHandling && t.syncErrorThrowable
              ? this.__tryOrSetError(t, this._next, e) && this.unsubscribe()
              : this.__tryOrUnsub(this._next, e);
          }
        }
        error(e) {
          if (!this.isStopped) {
            const { _parentSubscriber: t } = this,
              { useDeprecatedSynchronousErrorHandling: n } = a.a;
            if (this._error)
              n && t.syncErrorThrowable
                ? (this.__tryOrSetError(t, this._error, e), this.unsubscribe())
                : (this.__tryOrUnsub(this._error, e), this.unsubscribe());
            else if (t.syncErrorThrowable)
              n
                ? ((t.syncErrorValue = e), (t.syncErrorThrown = !0))
                : Object(l.a)(e),
                this.unsubscribe();
            else {
              if ((this.unsubscribe(), n)) throw e;
              Object(l.a)(e);
            }
          }
        }
        complete() {
          if (!this.isStopped) {
            const { _parentSubscriber: e } = this;
            if (this._complete) {
              const t = () => this._complete.call(this._context);
              a.a.useDeprecatedSynchronousErrorHandling && e.syncErrorThrowable
                ? (this.__tryOrSetError(e, t), this.unsubscribe())
                : (this.__tryOrUnsub(t), this.unsubscribe());
            } else this.unsubscribe();
          }
        }
        __tryOrUnsub(e, t) {
          try {
            e.call(this._context, t);
          } catch (n) {
            if ((this.unsubscribe(), a.a.useDeprecatedSynchronousErrorHandling))
              throw n;
            Object(l.a)(n);
          }
        }
        __tryOrSetError(e, t, n) {
          if (!a.a.useDeprecatedSynchronousErrorHandling)
            throw new Error("bad call");
          try {
            t.call(this._context, n);
          } catch (r) {
            return a.a.useDeprecatedSynchronousErrorHandling
              ? ((e.syncErrorValue = r), (e.syncErrorThrown = !0), !0)
              : (Object(l.a)(r), !0);
          }
          return !1;
        }
        _unsubscribe() {
          const { _parentSubscriber: e } = this;
          (this._context = null),
            (this._parentSubscriber = null),
            e.unsubscribe();
        }
      }
    },
    "9ppp": function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return r;
      });
      const r = (() => {
        function e() {
          return (
            Error.call(this),
            (this.message = "object unsubscribed"),
            (this.name = "ObjectUnsubscribedError"),
            this
          );
        }
        return (e.prototype = Object.create(Error.prototype)), e;
      })();
    },
    Cfvw: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return h;
      });
      var r = n("HDdC"),
        i = n("SeVD"),
        s = n("quSY"),
        o = n("kJWO"),
        a = n("jZKg"),
        l = n("Lhse"),
        c = n("c2HN"),
        u = n("I55L");
      function h(e, t) {
        return t
          ? (function (e, t) {
              if (null != e) {
                if (
                  (function (e) {
                    return e && "function" == typeof e[o.a];
                  })(e)
                )
                  return (function (e, t) {
                    return new r.a((n) => {
                      const r = new s.a();
                      return (
                        r.add(
                          t.schedule(() => {
                            const i = e[o.a]();
                            r.add(
                              i.subscribe({
                                next(e) {
                                  r.add(t.schedule(() => n.next(e)));
                                },
                                error(e) {
                                  r.add(t.schedule(() => n.error(e)));
                                },
                                complete() {
                                  r.add(t.schedule(() => n.complete()));
                                },
                              })
                            );
                          })
                        ),
                        r
                      );
                    });
                  })(e, t);
                if (Object(c.a)(e))
                  return (function (e, t) {
                    return new r.a((n) => {
                      const r = new s.a();
                      return (
                        r.add(
                          t.schedule(() =>
                            e.then(
                              (e) => {
                                r.add(
                                  t.schedule(() => {
                                    n.next(e),
                                      r.add(t.schedule(() => n.complete()));
                                  })
                                );
                              },
                              (e) => {
                                r.add(t.schedule(() => n.error(e)));
                              }
                            )
                          )
                        ),
                        r
                      );
                    });
                  })(e, t);
                if (Object(u.a)(e)) return Object(a.a)(e, t);
                if (
                  (function (e) {
                    return e && "function" == typeof e[l.a];
                  })(e) ||
                  "string" == typeof e
                )
                  return (function (e, t) {
                    if (!e) throw new Error("Iterable cannot be null");
                    return new r.a((n) => {
                      const r = new s.a();
                      let i;
                      return (
                        r.add(() => {
                          i && "function" == typeof i.return && i.return();
                        }),
                        r.add(
                          t.schedule(() => {
                            (i = e[l.a]()),
                              r.add(
                                t.schedule(function () {
                                  if (n.closed) return;
                                  let e, t;
                                  try {
                                    const n = i.next();
                                    (e = n.value), (t = n.done);
                                  } catch (r) {
                                    return void n.error(r);
                                  }
                                  t
                                    ? n.complete()
                                    : (n.next(e), this.schedule());
                                })
                              );
                          })
                        ),
                        r
                      );
                    });
                  })(e, t);
              }
              throw new TypeError(
                ((null !== e && typeof e) || e) + " is not observable"
              );
            })(e, t)
          : e instanceof r.a
          ? e
          : new r.a(Object(i.a)(e));
      }
    },
    DH7j: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return r;
      });
      const r = (() =>
        Array.isArray || ((e) => e && "number" == typeof e.length))();
    },
    HDdC: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return c;
      });
      var r = n("7o/Q"),
        i = n("2QA8"),
        s = n("gRHU"),
        o = n("kJWO"),
        a = n("mCNh"),
        l = n("2fFW");
      let c = (() => {
        class e {
          constructor(e) {
            (this._isScalar = !1), e && (this._subscribe = e);
          }
          lift(t) {
            const n = new e();
            return (n.source = this), (n.operator = t), n;
          }
          subscribe(e, t, n) {
            const { operator: o } = this,
              a = (function (e, t, n) {
                if (e) {
                  if (e instanceof r.a) return e;
                  if (e[i.a]) return e[i.a]();
                }
                return e || t || n ? new r.a(e, t, n) : new r.a(s.a);
              })(e, t, n);
            if (
              (a.add(
                o
                  ? o.call(a, this.source)
                  : this.source ||
                    (l.a.useDeprecatedSynchronousErrorHandling &&
                      !a.syncErrorThrowable)
                  ? this._subscribe(a)
                  : this._trySubscribe(a)
              ),
              l.a.useDeprecatedSynchronousErrorHandling &&
                a.syncErrorThrowable &&
                ((a.syncErrorThrowable = !1), a.syncErrorThrown))
            )
              throw a.syncErrorValue;
            return a;
          }
          _trySubscribe(e) {
            try {
              return this._subscribe(e);
            } catch (t) {
              l.a.useDeprecatedSynchronousErrorHandling &&
                ((e.syncErrorThrown = !0), (e.syncErrorValue = t)),
                (function (e) {
                  for (; e; ) {
                    const { closed: t, destination: n, isStopped: i } = e;
                    if (t || i) return !1;
                    e = n && n instanceof r.a ? n : null;
                  }
                  return !0;
                })(e)
                  ? e.error(t)
                  : console.warn(t);
            }
          }
          forEach(e, t) {
            return new (t = u(t))((t, n) => {
              let r;
              r = this.subscribe(
                (t) => {
                  try {
                    e(t);
                  } catch (i) {
                    n(i), r && r.unsubscribe();
                  }
                },
                n,
                t
              );
            });
          }
          _subscribe(e) {
            const { source: t } = this;
            return t && t.subscribe(e);
          }
          [o.a]() {
            return this;
          }
          pipe(...e) {
            return 0 === e.length ? this : Object(a.b)(e)(this);
          }
          toPromise(e) {
            return new (e = u(e))((e, t) => {
              let n;
              this.subscribe(
                (e) => (n = e),
                (e) => t(e),
                () => e(n)
              );
            });
          }
        }
        return (e.create = (t) => new e(t)), e;
      })();
      function u(e) {
        if ((e || (e = l.a.Promise || Promise), !e))
          throw new Error("no Promise impl found");
        return e;
      }
    },
    I55L: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return r;
      });
      const r = (e) =>
        e && "number" == typeof e.length && "function" != typeof e;
    },
    Lhse: function (e, t, n) {
      "use strict";
      function r() {
        return "function" == typeof Symbol && Symbol.iterator
          ? Symbol.iterator
          : "@@iterator";
      }
      n.d(t, "a", function () {
        return i;
      });
      const i = r();
    },
    NJ4a: function (e, t, n) {
      "use strict";
      function r(e) {
        setTimeout(() => {
          throw e;
        }, 0);
      }
      n.d(t, "a", function () {
        return r;
      });
    },
    SeVD: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return u;
      });
      var r = n("ngJS"),
        i = n("NJ4a"),
        s = n("Lhse"),
        o = n("kJWO"),
        a = n("I55L"),
        l = n("c2HN"),
        c = n("XoHu");
      const u = (e) => {
        if (e && "function" == typeof e[o.a])
          return (
            (u = e),
            (e) => {
              const t = u[o.a]();
              if ("function" != typeof t.subscribe)
                throw new TypeError(
                  "Provided object does not correctly implement Symbol.observable"
                );
              return t.subscribe(e);
            }
          );
        if (Object(a.a)(e)) return Object(r.a)(e);
        if (Object(l.a)(e))
          return (
            (n = e),
            (e) => (
              n
                .then(
                  (t) => {
                    e.closed || (e.next(t), e.complete());
                  },
                  (t) => e.error(t)
                )
                .then(null, i.a),
              e
            )
          );
        if (e && "function" == typeof e[s.a])
          return (
            (t = e),
            (e) => {
              const n = t[s.a]();
              for (;;) {
                const t = n.next();
                if (t.done) {
                  e.complete();
                  break;
                }
                if ((e.next(t.value), e.closed)) break;
              }
              return (
                "function" == typeof n.return &&
                  e.add(() => {
                    n.return && n.return();
                  }),
                e
              );
            }
          );
        {
          const t = Object(c.a)(e) ? "an invalid object" : `'${e}'`;
          throw new TypeError(
            `You provided ${t} where a stream was expected. You can provide an Observable, Promise, Array, or Iterable.`
          );
        }
        var t, n, u;
      };
    },
    SpAZ: function (e, t, n) {
      "use strict";
      function r(e) {
        return e;
      }
      n.d(t, "a", function () {
        return r;
      });
    },
    VRyK: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return a;
      });
      var r = n("HDdC"),
        i = n("z+Ro"),
        s = n("bHdf"),
        o = n("yCtX");
      function a(...e) {
        let t = Number.POSITIVE_INFINITY,
          n = null,
          a = e[e.length - 1];
        return (
          Object(i.a)(a)
            ? ((n = e.pop()),
              e.length > 1 &&
                "number" == typeof e[e.length - 1] &&
                (t = e.pop()))
            : "number" == typeof a && (t = e.pop()),
          null === n && 1 === e.length && e[0] instanceof r.a
            ? e[0]
            : Object(s.a)(t)(Object(o.a)(e, n))
        );
      }
    },
    XNiG: function (e, t, n) {
      "use strict";
      n.d(t, "b", function () {
        return c;
      }),
        n.d(t, "a", function () {
          return u;
        });
      var r = n("HDdC"),
        i = n("7o/Q"),
        s = n("quSY"),
        o = n("9ppp"),
        a = n("Ylt2"),
        l = n("2QA8");
      class c extends i.a {
        constructor(e) {
          super(e), (this.destination = e);
        }
      }
      let u = (() => {
        class e extends r.a {
          constructor() {
            super(),
              (this.observers = []),
              (this.closed = !1),
              (this.isStopped = !1),
              (this.hasError = !1),
              (this.thrownError = null);
          }
          [l.a]() {
            return new c(this);
          }
          lift(e) {
            const t = new h(this, this);
            return (t.operator = e), t;
          }
          next(e) {
            if (this.closed) throw new o.a();
            if (!this.isStopped) {
              const { observers: t } = this,
                n = t.length,
                r = t.slice();
              for (let i = 0; i < n; i++) r[i].next(e);
            }
          }
          error(e) {
            if (this.closed) throw new o.a();
            (this.hasError = !0), (this.thrownError = e), (this.isStopped = !0);
            const { observers: t } = this,
              n = t.length,
              r = t.slice();
            for (let i = 0; i < n; i++) r[i].error(e);
            this.observers.length = 0;
          }
          complete() {
            if (this.closed) throw new o.a();
            this.isStopped = !0;
            const { observers: e } = this,
              t = e.length,
              n = e.slice();
            for (let r = 0; r < t; r++) n[r].complete();
            this.observers.length = 0;
          }
          unsubscribe() {
            (this.isStopped = !0), (this.closed = !0), (this.observers = null);
          }
          _trySubscribe(e) {
            if (this.closed) throw new o.a();
            return super._trySubscribe(e);
          }
          _subscribe(e) {
            if (this.closed) throw new o.a();
            return this.hasError
              ? (e.error(this.thrownError), s.a.EMPTY)
              : this.isStopped
              ? (e.complete(), s.a.EMPTY)
              : (this.observers.push(e), new a.a(this, e));
          }
          asObservable() {
            const e = new r.a();
            return (e.source = this), e;
          }
        }
        return (e.create = (e, t) => new h(e, t)), e;
      })();
      class h extends u {
        constructor(e, t) {
          super(), (this.destination = e), (this.source = t);
        }
        next(e) {
          const { destination: t } = this;
          t && t.next && t.next(e);
        }
        error(e) {
          const { destination: t } = this;
          t && t.error && this.destination.error(e);
        }
        complete() {
          const { destination: e } = this;
          e && e.complete && this.destination.complete();
        }
        _subscribe(e) {
          const { source: t } = this;
          return t ? this.source.subscribe(e) : s.a.EMPTY;
        }
      }
    },
    XoHu: function (e, t, n) {
      "use strict";
      function r(e) {
        return null !== e && "object" == typeof e;
      }
      n.d(t, "a", function () {
        return r;
      });
    },
    Ylt2: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return i;
      });
      var r = n("quSY");
      class i extends r.a {
        constructor(e, t) {
          super(),
            (this.subject = e),
            (this.subscriber = t),
            (this.closed = !1);
        }
        unsubscribe() {
          if (this.closed) return;
          this.closed = !0;
          const e = this.subject,
            t = e.observers;
          if (
            ((this.subject = null),
            !t || 0 === t.length || e.isStopped || e.closed)
          )
            return;
          const n = t.indexOf(this.subscriber);
          -1 !== n && t.splice(n, 1);
        }
      }
    },
    ZUHj: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return o;
      });
      var r = n("51Dv"),
        i = n("SeVD"),
        s = n("HDdC");
      function o(e, t, n, o, a = new r.a(e, n, o)) {
        if (!a.closed)
          return t instanceof s.a ? t.subscribe(a) : Object(i.a)(t)(a);
      }
    },
    bHdf: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return s;
      });
      var r = n("5+tZ"),
        i = n("SpAZ");
      function s(e = Number.POSITIVE_INFINITY) {
        return Object(r.a)(i.a, e);
      }
    },
    bnWe: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }), n("fXoL");
      var r = n("fXoL"),
        i = (function () {
          function e() {}
          return (
            (e.ɵfac = function (t) {
              return new (t || e)();
            }),
            (e.ɵprov = r.ɵɵdefineInjectable({
              token: e,
              factory: function (t) {
                return e.ɵfac(t);
              },
            })),
            e
          );
        })();
      t.FlashMessagesService = i;
    },
    c2HN: function (e, t, n) {
      "use strict";
      function r(e) {
        return (
          !!e && "function" != typeof e.subscribe && "function" == typeof e.then
        );
      }
      n.d(t, "a", function () {
        return r;
      });
    },
    fXoL: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, "ANALYZE_FOR_ENTRY_COMPONENTS", function () {
          return xa;
        }),
        n.d(t, "APP_BOOTSTRAP_LISTENER", function () {
          return Jg;
        }),
        n.d(t, "APP_ID", function () {
          return Wg;
        }),
        n.d(t, "APP_INITIALIZER", function () {
          return qg;
        }),
        n.d(t, "ApplicationInitStatus", function () {
          return Gg;
        }),
        n.d(t, "ApplicationModule", function () {
          return Ny;
        }),
        n.d(t, "ApplicationRef", function () {
          return Z_;
        }),
        n.d(t, "Attribute", function () {
          return w;
        }),
        n.d(t, "COMPILER_OPTIONS", function () {
          return v_;
        }),
        n.d(t, "CUSTOM_ELEMENTS_SCHEMA", function () {
          return er;
        }),
        n.d(t, "ChangeDetectionStrategy", function () {
          return Re;
        }),
        n.d(t, "ChangeDetectorRef", function () {
          return _o;
        }),
        n.d(t, "Compiler", function () {
          return y_;
        }),
        n.d(t, "CompilerFactory", function () {
          return b_;
        }),
        n.d(t, "Component", function () {
          return Rg;
        }),
        n.d(t, "ComponentFactory", function () {
          return ah;
        }),
        n.d(t, "ComponentFactoryResolver", function () {
          return hh;
        }),
        n.d(t, "ComponentRef", function () {
          return oh;
        }),
        n.d(t, "ContentChild", function () {
          return Oa;
        }),
        n.d(t, "ContentChildren", function () {
          return Ia;
        }),
        n.d(t, "DEFAULT_CURRENCY_CODE", function () {
          return r_;
        }),
        n.d(t, "DebugElement", function () {
          return Oy;
        }),
        n.d(t, "DebugEventListener", function () {
          return cy;
        }),
        n.d(t, "DebugNode", function () {
          return Iy;
        }),
        n.d(t, "DefaultIterableDiffer", function () {
          return Ih;
        }),
        n.d(t, "Directive", function () {
          return kg;
        }),
        n.d(t, "ElementRef", function () {
          return ph;
        }),
        n.d(t, "EmbeddedViewRef", function () {
          return ly;
        }),
        n.d(t, "ErrorHandler", function () {
          return Jn;
        }),
        n.d(t, "EventEmitter", function () {
          return Em;
        }),
        n.d(t, "Host", function () {
          return b;
        }),
        n.d(t, "HostBinding", function () {
          return Pg;
        }),
        n.d(t, "HostListener", function () {
          return jg;
        }),
        n.d(t, "INJECTOR", function () {
          return re;
        }),
        n.d(t, "Inject", function () {
          return g;
        }),
        n.d(t, "InjectFlags", function () {
          return C;
        }),
        n.d(t, "Injectable", function () {
          return Mo;
        }),
        n.d(t, "InjectionToken", function () {
          return ne;
        }),
        n.d(t, "Injector", function () {
          return na;
        }),
        n.d(t, "Input", function () {
          return Tg;
        }),
        n.d(t, "IterableDiffers", function () {
          return jh;
        }),
        n.d(t, "KeyValueDiffers", function () {
          return Nh;
        }),
        n.d(t, "LOCALE_ID", function () {
          return n_;
        }),
        n.d(t, "MissingTranslationStrategy", function () {
          return o_;
        }),
        n.d(t, "ModuleWithComponentFactories", function () {
          return c_;
        }),
        n.d(t, "NO_ERRORS_SCHEMA", function () {
          return tr;
        }),
        n.d(t, "NgModule", function () {
          return Ug;
        }),
        n.d(t, "NgModuleFactory", function () {
          return be;
        }),
        n.d(t, "NgModuleFactoryLoader", function () {
          return X_;
        }),
        n.d(t, "NgModuleRef", function () {
          return ve;
        }),
        n.d(t, "NgProbeToken", function () {
          return U_;
        }),
        n.d(t, "NgZone", function () {
          return S_;
        }),
        n.d(t, "Optional", function () {
          return _;
        }),
        n.d(t, "Output", function () {
          return Fg;
        }),
        n.d(t, "PACKAGE_ROOT_URL", function () {
          return e_;
        }),
        n.d(t, "PLATFORM_ID", function () {
          return Xg;
        }),
        n.d(t, "PLATFORM_INITIALIZER", function () {
          return Yg;
        }),
        n.d(t, "Pipe", function () {
          return Ag;
        }),
        n.d(t, "PlatformRef", function () {
          return Q_;
        }),
        n.d(t, "Query", function () {
          return Da;
        }),
        n.d(t, "QueryList", function () {
          return Dm;
        }),
        n.d(t, "ReflectiveInjector", function () {
          return Sa;
        }),
        n.d(t, "ReflectiveKey", function () {
          return aa;
        }),
        n.d(t, "Renderer2", function () {
          return vh;
        }),
        n.d(t, "RendererFactory2", function () {
          return _h;
        }),
        n.d(t, "RendererStyleFlags2", function () {
          return yh;
        }),
        n.d(t, "ResolvedReflectiveFactory", function () {
          return ma;
        }),
        n.d(t, "Sanitizer", function () {
          return Ch;
        }),
        n.d(t, "SecurityContext", function () {
          return Hr;
        }),
        n.d(t, "Self", function () {
          return y;
        }),
        n.d(t, "SimpleChange", function () {
          return Qu;
        }),
        n.d(t, "SkipSelf", function () {
          return v;
        }),
        n.d(t, "SystemJsNgModuleLoader", function () {
          return sy;
        }),
        n.d(t, "SystemJsNgModuleLoaderConfig", function () {
          return ry;
        }),
        n.d(t, "TRANSLATIONS", function () {
          return i_;
        }),
        n.d(t, "TRANSLATIONS_FORMAT", function () {
          return s_;
        }),
        n.d(t, "TemplateRef", function () {
          return Bh;
        }),
        n.d(t, "Testability", function () {
          return A_;
        }),
        n.d(t, "TestabilityRegistry", function () {
          return T_;
        }),
        n.d(t, "Type", function () {
          return bo;
        }),
        n.d(t, "VERSION", function () {
          return Eh;
        }),
        n.d(t, "Version", function () {
          return Sh;
        }),
        n.d(t, "ViewChild", function () {
          return Ra;
        }),
        n.d(t, "ViewChildren", function () {
          return ka;
        }),
        n.d(t, "ViewContainerRef", function () {
          return Hh;
        }),
        n.d(t, "ViewEncapsulation", function () {
          return Fe;
        }),
        n.d(t, "ViewRef", function () {
          return ay;
        }),
        n.d(t, "WrappedValue", function () {
          return Ua;
        }),
        n.d(t, "asNativeElements", function () {
          return dy;
        }),
        n.d(t, "assertPlatform", function () {
          return q_;
        }),
        n.d(t, "createPlatform", function () {
          return H_;
        }),
        n.d(t, "createPlatformFactory", function () {
          return $_;
        }),
        n.d(t, "defineInjectable", function () {
          return D;
        }),
        n.d(t, "destroyPlatform", function () {
          return G_;
        }),
        n.d(t, "enableProdMode", function () {
          return vr;
        }),
        n.d(t, "forwardRef", function () {
          return V;
        }),
        n.d(t, "getDebugNode", function () {
          return Sy;
        }),
        n.d(t, "getModuleFactory", function () {
          return ty;
        }),
        n.d(t, "getPlatform", function () {
          return W_;
        }),
        n.d(t, "inject", function () {
          return pe;
        }),
        n.d(t, "isDevMode", function () {
          return yr;
        }),
        n.d(t, "platformCore", function () {
          return ky;
        }),
        n.d(t, "resolveForwardRef", function () {
          return B;
        }),
        n.d(t, "setTestabilityGetter", function () {
          return P_;
        }),
        n.d(t, "\u0275ALLOW_MULTIPLE_PLATFORMS", function () {
          return z_;
        }),
        n.d(t, "\u0275APP_ID_RANDOM_PROVIDER", function () {
          return Kg;
        }),
        n.d(t, "\u0275ChangeDetectorStatus", function () {
          return Ae;
        }),
        n.d(t, "\u0275CodegenComponentFactoryResolver", function () {
          return dh;
        }),
        n.d(
          t,
          "\u0275Compiler_compileModuleAndAllComponentsAsync__POST_R3__",
          function () {
            return g_;
          }
        ),
        n.d(
          t,
          "\u0275Compiler_compileModuleAndAllComponentsSync__POST_R3__",
          function () {
            return p_;
          }
        ),
        n.d(t, "\u0275Compiler_compileModuleAsync__POST_R3__", function () {
          return d_;
        }),
        n.d(t, "\u0275Compiler_compileModuleSync__POST_R3__", function () {
          return u_;
        }),
        n.d(t, "\u0275ComponentFactory", function () {
          return ah;
        }),
        n.d(t, "\u0275Console", function () {
          return t_;
        }),
        n.d(t, "\u0275DEFAULT_LOCALE_ID", function () {
          return ep;
        }),
        n.d(t, "\u0275EMPTY_ARRAY", function () {
          return Ld;
        }),
        n.d(t, "\u0275EMPTY_MAP", function () {
          return Vd;
        }),
        n.d(t, "\u0275INJECTOR_IMPL__POST_R3__", function () {
          return ea;
        }),
        n.d(t, "\u0275INJECTOR_SCOPE", function () {
          return Bo;
        }),
        n.d(t, "\u0275LifecycleHooksFeature", function () {
          return Mu;
        }),
        n.d(t, "\u0275LocaleDataIndex", function () {
          return Xf;
        }),
        n.d(t, "\u0275NG_COMP_DEF", function () {
          return K;
        }),
        n.d(t, "\u0275NG_DIR_DEF", function () {
          return Z;
        }),
        n.d(t, "\u0275NG_ELEMENT_ID", function () {
          return te;
        }),
        n.d(t, "\u0275NG_INJ_DEF", function () {
          return T;
        }),
        n.d(t, "\u0275NG_MOD_DEF", function () {
          return X;
        }),
        n.d(t, "\u0275NG_PIPE_DEF", function () {
          return Y;
        }),
        n.d(t, "\u0275NG_PROV_DEF", function () {
          return A;
        }),
        n.d(t, "\u0275NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR", function () {
          return Af;
        }),
        n.d(t, "\u0275NO_CHANGE", function () {
          return Di;
        }),
        n.d(t, "\u0275NgModuleFactory", function () {
          return Jp;
        }),
        n.d(t, "\u0275NoopNgZone", function () {
          return R_;
        }),
        n.d(t, "\u0275ReflectionCapabilities", function () {
          return Do;
        }),
        n.d(t, "\u0275Render3ComponentFactory", function () {
          return zf;
        }),
        n.d(t, "\u0275Render3ComponentRef", function () {
          return Uf;
        }),
        n.d(t, "\u0275Render3NgModuleRef", function () {
          return Xp;
        }),
        n.d(
          t,
          "\u0275SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__",
          function () {
            return yo;
          }
        ),
        n.d(t, "\u0275SWITCH_COMPILE_COMPONENT__POST_R3__", function () {
          return Ng;
        }),
        n.d(t, "\u0275SWITCH_COMPILE_DIRECTIVE__POST_R3__", function () {
          return Mg;
        }),
        n.d(t, "\u0275SWITCH_COMPILE_INJECTABLE__POST_R3__", function () {
          return Lo;
        }),
        n.d(t, "\u0275SWITCH_COMPILE_NGMODULE__POST_R3__", function () {
          return Hg;
        }),
        n.d(t, "\u0275SWITCH_COMPILE_PIPE__POST_R3__", function () {
          return Lg;
        }),
        n.d(t, "\u0275SWITCH_ELEMENT_REF_FACTORY__POST_R3__", function () {
          return mh;
        }),
        n.d(t, "\u0275SWITCH_IVY_ENABLED__POST_R3__", function () {
          return a_;
        }),
        n.d(t, "\u0275SWITCH_RENDERER2_FACTORY__POST_R3__", function () {
          return bh;
        }),
        n.d(t, "\u0275SWITCH_TEMPLATE_REF_FACTORY__POST_R3__", function () {
          return zh;
        }),
        n.d(
          t,
          "\u0275SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__",
          function () {
            return $h;
          }
        ),
        n.d(t, "\u0275_sanitizeHtml", function () {
          return zr;
        }),
        n.d(t, "\u0275_sanitizeStyle", function () {
          return Gr;
        }),
        n.d(t, "\u0275_sanitizeUrl", function () {
          return Sr;
        }),
        n.d(t, "\u0275allowSanitizationBypassAndThrow", function () {
          return cr;
        }),
        n.d(t, "\u0275and", function () {
          return My;
        }),
        n.d(t, "\u0275angular_packages_core_core_a", function () {
          return z;
        }),
        n.d(t, "\u0275angular_packages_core_core_b", function () {
          return he;
        }),
        n.d(t, "\u0275angular_packages_core_core_ba", function () {
          return Ot;
        }),
        n.d(t, "\u0275angular_packages_core_core_bb", function () {
          return At;
        }),
        n.d(t, "\u0275angular_packages_core_core_bc", function () {
          return Mt;
        }),
        n.d(t, "\u0275angular_packages_core_core_bd", function () {
          return en;
        }),
        n.d(t, "\u0275angular_packages_core_core_bf", function () {
          return hm;
        }),
        n.d(t, "\u0275angular_packages_core_core_bg", function () {
          return dm;
        }),
        n.d(t, "\u0275angular_packages_core_core_bh", function () {
          return fm;
        }),
        n.d(t, "\u0275angular_packages_core_core_bi", function () {
          return pm;
        }),
        n.d(t, "\u0275angular_packages_core_core_bj", function () {
          return mm;
        }),
        n.d(t, "\u0275angular_packages_core_core_bk", function () {
          return Xr;
        }),
        n.d(t, "\u0275angular_packages_core_core_bl", function () {
          return p;
        }),
        n.d(t, "\u0275angular_packages_core_core_bm", function () {
          return m;
        }),
        n.d(t, "\u0275angular_packages_core_core_bn", function () {
          return S;
        }),
        n.d(t, "\u0275angular_packages_core_core_bp", function () {
          return l;
        }),
        n.d(t, "\u0275angular_packages_core_core_bq", function () {
          return Oi;
        }),
        n.d(t, "\u0275angular_packages_core_core_c", function () {
          return _e;
        }),
        n.d(t, "\u0275angular_packages_core_core_d", function () {
          return Ea;
        }),
        n.d(t, "\u0275angular_packages_core_core_e", function () {
          return da;
        }),
        n.d(t, "\u0275angular_packages_core_core_f", function () {
          return ya;
        }),
        n.d(t, "\u0275angular_packages_core_core_g", function () {
          return Qg;
        }),
        n.d(t, "\u0275angular_packages_core_core_h", function () {
          return fo;
        }),
        n.d(t, "\u0275angular_packages_core_core_i", function () {
          return po;
        }),
        n.d(t, "\u0275angular_packages_core_core_j", function () {
          return J_;
        }),
        n.d(t, "\u0275angular_packages_core_core_k", function () {
          return uy;
        }),
        n.d(t, "\u0275angular_packages_core_core_l", function () {
          return hy;
        }),
        n.d(t, "\u0275angular_packages_core_core_m", function () {
          return Ey;
        }),
        n.d(t, "\u0275angular_packages_core_core_n", function () {
          return xh;
        }),
        n.d(t, "\u0275angular_packages_core_core_o", function () {
          return Th;
        }),
        n.d(t, "\u0275angular_packages_core_core_p", function () {
          return Ry;
        }),
        n.d(t, "\u0275angular_packages_core_core_q", function () {
          return Ay;
        }),
        n.d(t, "\u0275angular_packages_core_core_r", function () {
          return Ty;
        }),
        n.d(t, "\u0275angular_packages_core_core_s", function () {
          return Py;
        }),
        n.d(t, "\u0275angular_packages_core_core_t", function () {
          return jy;
        }),
        n.d(t, "\u0275angular_packages_core_core_u", function () {
          return tp;
        }),
        n.d(t, "\u0275angular_packages_core_core_v", function () {
          return Ef;
        }),
        n.d(t, "\u0275angular_packages_core_core_w", function () {
          return nd;
        }),
        n.d(t, "\u0275angular_packages_core_core_x", function () {
          return Bf;
        }),
        n.d(t, "\u0275angular_packages_core_core_y", function () {
          return Vn;
        }),
        n.d(t, "\u0275angular_packages_core_core_z", function () {
          return Et;
        }),
        n.d(t, "\u0275bypassSanitizationTrustHtml", function () {
          return hr;
        }),
        n.d(t, "\u0275bypassSanitizationTrustResourceUrl", function () {
          return mr;
        }),
        n.d(t, "\u0275bypassSanitizationTrustScript", function () {
          return fr;
        }),
        n.d(t, "\u0275bypassSanitizationTrustStyle", function () {
          return dr;
        }),
        n.d(t, "\u0275bypassSanitizationTrustUrl", function () {
          return pr;
        }),
        n.d(t, "\u0275ccf", function () {
          return Xd;
        }),
        n.d(t, "\u0275clearOverrides", function () {
          return hb;
        }),
        n.d(t, "\u0275clearResolutionOfComponentResourcesQueue", function () {
          return ja;
        }),
        n.d(t, "\u0275cmf", function () {
          return db;
        }),
        n.d(t, "\u0275compileComponent", function () {
          return dg;
        }),
        n.d(t, "\u0275compileDirective", function () {
          return fg;
        }),
        n.d(t, "\u0275compileNgModule", function () {
          return ng;
        }),
        n.d(t, "\u0275compileNgModuleDefs", function () {
          return rg;
        }),
        n.d(t, "\u0275compileNgModuleFactory__POST_R3__", function () {
          return L_;
        }),
        n.d(t, "\u0275compilePipe", function () {
          return Ig;
        }),
        n.d(t, "\u0275createInjector", function () {
          return Go;
        }),
        n.d(t, "\u0275crt", function () {
          return ld;
        }),
        n.d(t, "\u0275defaultIterableDiffers", function () {
          return Lh;
        }),
        n.d(t, "\u0275defaultKeyValueDiffers", function () {
          return Vh;
        }),
        n.d(t, "\u0275detectChanges", function () {
          return gl;
        }),
        n.d(t, "\u0275devModeEqual", function () {
          return za;
        }),
        n.d(t, "\u0275did", function () {
          return wf;
        }),
        n.d(t, "\u0275eld", function () {
          return Ly;
        }),
        n.d(t, "\u0275findLocaleData", function () {
          return Wf;
        }),
        n.d(t, "\u0275flushModuleScopingQueueAsMuchAsPossible", function () {
          return eg;
        }),
        n.d(t, "\u0275getComponentViewDefinitionFactory", function () {
          return Jd;
        }),
        n.d(t, "\u0275getDebugNodeR2", function () {
          return xy;
        }),
        n.d(t, "\u0275getDebugNode__POST_R3__", function () {
          return Cy;
        }),
        n.d(t, "\u0275getDirectives", function () {
          return Su;
        }),
        n.d(t, "\u0275getHostElement", function () {
          return xu;
        }),
        n.d(t, "\u0275getInjectableDef", function () {
          return O;
        }),
        n.d(t, "\u0275getLContext", function () {
          return si;
        }),
        n.d(t, "\u0275getLocaleCurrencyCode", function () {
          return Qf;
        }),
        n.d(t, "\u0275getLocalePluralCase", function () {
          return Kf;
        }),
        n.d(t, "\u0275getModuleFactory__POST_R3__", function () {
          return ey;
        }),
        n.d(t, "\u0275getSanitizationBypassType", function () {
          return ur;
        }),
        n.d(t, "\u0275global", function () {
          return G;
        }),
        n.d(t, "\u0275initServicesIfNeeded", function () {
          return Dv;
        }),
        n.d(t, "\u0275inlineInterpolate", function () {
          return Nd;
        }),
        n.d(t, "\u0275interpolate", function () {
          return jd;
        }),
        n.d(t, "\u0275isBoundToModule__POST_R3__", function () {
          return B_;
        }),
        n.d(t, "\u0275isDefaultChangeDetectionStrategy", function () {
          return Te;
        }),
        n.d(t, "\u0275isListLikeIterable", function () {
          return Ha;
        }),
        n.d(t, "\u0275isObservable", function () {
          return Pl;
        }),
        n.d(t, "\u0275isPromise", function () {
          return Fl;
        }),
        n.d(t, "\u0275ivyEnabled", function () {
          return l_;
        }),
        n.d(t, "\u0275looseIdentical", function () {
          return Ba;
        }),
        n.d(t, "\u0275makeDecorator", function () {
          return d;
        }),
        n.d(t, "\u0275markDirty", function () {
          return _l;
        }),
        n.d(t, "\u0275mod", function () {
          return qd;
        }),
        n.d(t, "\u0275mpd", function () {
          return $d;
        }),
        n.d(t, "\u0275ncd", function () {
          return Qy;
        }),
        n.d(t, "\u0275nov", function () {
          return hf;
        }),
        n.d(t, "\u0275overrideComponentView", function () {
          return ub;
        }),
        n.d(t, "\u0275overrideProvider", function () {
          return cb;
        }),
        n.d(t, "\u0275pad", function () {
          return Yy;
        }),
        n.d(t, "\u0275patchComponentDefWithScope", function () {
          return lg;
        }),
        n.d(t, "\u0275pid", function () {
          return Cf;
        }),
        n.d(t, "\u0275pod", function () {
          return Xy;
        }),
        n.d(t, "\u0275ppd", function () {
          return Zy;
        }),
        n.d(t, "\u0275prd", function () {
          return Sf;
        }),
        n.d(t, "\u0275publishDefaultGlobalUtils", function () {
          return Au;
        }),
        n.d(t, "\u0275publishGlobalUtil", function () {
          return Tu;
        }),
        n.d(t, "\u0275qud", function () {
          return Hy;
        }),
        n.d(t, "\u0275registerLocaleData", function () {
          return Gf;
        }),
        n.d(t, "\u0275registerModuleFactory", function () {
          return Qp;
        }),
        n.d(t, "\u0275registerNgModuleType", function () {
          return Zp;
        }),
        n.d(t, "\u0275renderComponent", function () {
          return Fu;
        }),
        n.d(t, "\u0275resetCompiledComponents", function () {
          return og;
        }),
        n.d(t, "\u0275resetJitOptions", function () {
          return Zm;
        }),
        n.d(t, "\u0275resolveComponentResources", function () {
          return Aa;
        }),
        n.d(t, "\u0275setClassMetadata", function () {
          return Gp;
        }),
        n.d(t, "\u0275setCurrentInjector", function () {
          return ce;
        }),
        n.d(t, "\u0275setDocument", function () {
          return ot;
        }),
        n.d(t, "\u0275setLocaleId", function () {
          return qp;
        }),
        n.d(t, "\u0275store", function () {
          return vl;
        }),
        n.d(t, "\u0275stringify", function () {
          return N;
        }),
        n.d(t, "\u0275ted", function () {
          return ev;
        }),
        n.d(t, "\u0275transitiveScopesFor", function () {
          return cg;
        }),
        n.d(t, "\u0275unregisterLocaleData", function () {
          return Yf;
        }),
        n.d(t, "\u0275unv", function () {
          return ad;
        }),
        n.d(t, "\u0275unwrapSafeValue", function () {
          return lr;
        }),
        n.d(t, "\u0275vid", function () {
          return rv;
        }),
        n.d(t, "\u0275whenRendered", function () {
          return Lu;
        }),
        n.d(t, "\u0275\u0275CopyDefinitionFeature", function () {
          return Wu;
        }),
        n.d(t, "\u0275\u0275InheritDefinitionFeature", function () {
          return Bu;
        }),
        n.d(t, "\u0275\u0275NgOnChangesFeature", function () {
          return Ku;
        }),
        n.d(t, "\u0275\u0275ProvidersFeature", function () {
          return sh;
        }),
        n.d(t, "\u0275\u0275advance", function () {
          return Ti;
        }),
        n.d(t, "\u0275\u0275attribute", function () {
          return Ya;
        }),
        n.d(t, "\u0275\u0275attributeInterpolate1", function () {
          return al;
        }),
        n.d(t, "\u0275\u0275attributeInterpolate2", function () {
          return ll;
        }),
        n.d(t, "\u0275\u0275attributeInterpolate3", function () {
          return cl;
        }),
        n.d(t, "\u0275\u0275attributeInterpolate4", function () {
          return ul;
        }),
        n.d(t, "\u0275\u0275attributeInterpolate5", function () {
          return hl;
        }),
        n.d(t, "\u0275\u0275attributeInterpolate6", function () {
          return dl;
        }),
        n.d(t, "\u0275\u0275attributeInterpolate7", function () {
          return fl;
        }),
        n.d(t, "\u0275\u0275attributeInterpolate8", function () {
          return pl;
        }),
        n.d(t, "\u0275\u0275attributeInterpolateV", function () {
          return ml;
        }),
        n.d(t, "\u0275\u0275classMap", function () {
          return vc;
        }),
        n.d(t, "\u0275\u0275classMapInterpolate1", function () {
          return Hc;
        }),
        n.d(t, "\u0275\u0275classMapInterpolate2", function () {
          return $c;
        }),
        n.d(t, "\u0275\u0275classMapInterpolate3", function () {
          return qc;
        }),
        n.d(t, "\u0275\u0275classMapInterpolate4", function () {
          return Gc;
        }),
        n.d(t, "\u0275\u0275classMapInterpolate5", function () {
          return Wc;
        }),
        n.d(t, "\u0275\u0275classMapInterpolate6", function () {
          return Qc;
        }),
        n.d(t, "\u0275\u0275classMapInterpolate7", function () {
          return Kc;
        }),
        n.d(t, "\u0275\u0275classMapInterpolate8", function () {
          return Zc;
        }),
        n.d(t, "\u0275\u0275classMapInterpolateV", function () {
          return Yc;
        }),
        n.d(t, "\u0275\u0275classProp", function () {
          return gc;
        }),
        n.d(t, "\u0275\u0275componentHostSyntheticListener", function () {
          return Nl;
        }),
        n.d(t, "\u0275\u0275contentQuery", function () {
          return Vm;
        }),
        n.d(t, "\u0275\u0275defaultStyleSanitizer", function () {
          return ei;
        }),
        n.d(t, "\u0275\u0275defineComponent", function () {
          return Me;
        }),
        n.d(t, "\u0275\u0275defineDirective", function () {
          return qe;
        }),
        n.d(t, "\u0275\u0275defineInjectable", function () {
          return x;
        }),
        n.d(t, "\u0275\u0275defineInjector", function () {
          return I;
        }),
        n.d(t, "\u0275\u0275defineNgModule", function () {
          return Ue;
        }),
        n.d(t, "\u0275\u0275definePipe", function () {
          return Ge;
        }),
        n.d(t, "\u0275\u0275directiveInject", function () {
          return wl;
        }),
        n.d(t, "\u0275\u0275disableBindings", function () {
          return It;
        }),
        n.d(t, "\u0275\u0275element", function () {
          return Ol;
        }),
        n.d(t, "\u0275\u0275elementContainer", function () {
          return Al;
        }),
        n.d(t, "\u0275\u0275elementContainerEnd", function () {
          return Rl;
        }),
        n.d(t, "\u0275\u0275elementContainerStart", function () {
          return kl;
        }),
        n.d(t, "\u0275\u0275elementEnd", function () {
          return Il;
        }),
        n.d(t, "\u0275\u0275elementStart", function () {
          return Dl;
        }),
        n.d(t, "\u0275\u0275enableBindings", function () {
          return Dt;
        }),
        n.d(t, "\u0275\u0275getCurrentView", function () {
          return Tl;
        }),
        n.d(t, "\u0275\u0275getFactoryOf", function () {
          return Qn;
        }),
        n.d(t, "\u0275\u0275getInheritedFactory", function () {
          return Kn;
        }),
        n.d(t, "\u0275\u0275hostProperty", function () {
          return gu;
        }),
        n.d(t, "\u0275\u0275i18n", function () {
          return Fp;
        }),
        n.d(t, "\u0275\u0275i18nApply", function () {
          return Lp;
        }),
        n.d(t, "\u0275\u0275i18nAttributes", function () {
          return Pp;
        }),
        n.d(t, "\u0275\u0275i18nEnd", function () {
          return kp;
        }),
        n.d(t, "\u0275\u0275i18nExp", function () {
          return Mp;
        }),
        n.d(t, "\u0275\u0275i18nPostprocess", function () {
          return Op;
        }),
        n.d(t, "\u0275\u0275i18nStart", function () {
          return Sp;
        }),
        n.d(t, "\u0275\u0275inject", function () {
          return de;
        }),
        n.d(t, "\u0275\u0275injectAttribute", function () {
          return Cl;
        }),
        n.d(t, "\u0275\u0275injectPipeChangeDetectorRef", function () {
          return Wm;
        }),
        n.d(t, "\u0275\u0275invalidFactory", function () {
          return Sl;
        }),
        n.d(t, "\u0275\u0275invalidFactoryDep", function () {
          return fe;
        }),
        n.d(t, "\u0275\u0275listener", function () {
          return jl;
        }),
        n.d(t, "\u0275\u0275loadQuery", function () {
          return Um;
        }),
        n.d(t, "\u0275\u0275namespaceHTML", function () {
          return an;
        }),
        n.d(t, "\u0275\u0275namespaceMathML", function () {
          return on;
        }),
        n.d(t, "\u0275\u0275namespaceSVG", function () {
          return sn;
        }),
        n.d(t, "\u0275\u0275nextContext", function () {
          return Bl;
        }),
        n.d(t, "\u0275\u0275pipe", function () {
          return gm;
        }),
        n.d(t, "\u0275\u0275pipeBind1", function () {
          return _m;
        }),
        n.d(t, "\u0275\u0275pipeBind2", function () {
          return ym;
        }),
        n.d(t, "\u0275\u0275pipeBind3", function () {
          return vm;
        }),
        n.d(t, "\u0275\u0275pipeBind4", function () {
          return bm;
        }),
        n.d(t, "\u0275\u0275pipeBindV", function () {
          return wm;
        }),
        n.d(t, "\u0275\u0275projection", function () {
          return ql;
        }),
        n.d(t, "\u0275\u0275projectionDef", function () {
          return Ul;
        }),
        n.d(t, "\u0275\u0275property", function () {
          return El;
        }),
        n.d(t, "\u0275\u0275propertyInterpolate", function () {
          return Gl;
        }),
        n.d(t, "\u0275\u0275propertyInterpolate1", function () {
          return Wl;
        }),
        n.d(t, "\u0275\u0275propertyInterpolate2", function () {
          return Ql;
        }),
        n.d(t, "\u0275\u0275propertyInterpolate3", function () {
          return Kl;
        }),
        n.d(t, "\u0275\u0275propertyInterpolate4", function () {
          return Zl;
        }),
        n.d(t, "\u0275\u0275propertyInterpolate5", function () {
          return Yl;
        }),
        n.d(t, "\u0275\u0275propertyInterpolate6", function () {
          return Xl;
        }),
        n.d(t, "\u0275\u0275propertyInterpolate7", function () {
          return Jl;
        }),
        n.d(t, "\u0275\u0275propertyInterpolate8", function () {
          return ec;
        }),
        n.d(t, "\u0275\u0275propertyInterpolateV", function () {
          return tc;
        }),
        n.d(t, "\u0275\u0275pureFunction0", function () {
          return em;
        }),
        n.d(t, "\u0275\u0275pureFunction1", function () {
          return tm;
        }),
        n.d(t, "\u0275\u0275pureFunction2", function () {
          return nm;
        }),
        n.d(t, "\u0275\u0275pureFunction3", function () {
          return rm;
        }),
        n.d(t, "\u0275\u0275pureFunction4", function () {
          return im;
        }),
        n.d(t, "\u0275\u0275pureFunction5", function () {
          return sm;
        }),
        n.d(t, "\u0275\u0275pureFunction6", function () {
          return om;
        }),
        n.d(t, "\u0275\u0275pureFunction7", function () {
          return am;
        }),
        n.d(t, "\u0275\u0275pureFunction8", function () {
          return lm;
        }),
        n.d(t, "\u0275\u0275pureFunctionV", function () {
          return cm;
        }),
        n.d(t, "\u0275\u0275queryRefresh", function () {
          return jm;
        }),
        n.d(t, "\u0275\u0275reference", function () {
          return bl;
        }),
        n.d(t, "\u0275\u0275resolveBody", function () {
          return kn;
        }),
        n.d(t, "\u0275\u0275resolveDocument", function () {
          return On;
        }),
        n.d(t, "\u0275\u0275resolveWindow", function () {
          return In;
        }),
        n.d(t, "\u0275\u0275restoreView", function () {
          return Rt;
        }),
        n.d(t, "\u0275\u0275sanitizeHtml", function () {
          return Wr;
        }),
        n.d(t, "\u0275\u0275sanitizeResourceUrl", function () {
          return Zr;
        }),
        n.d(t, "\u0275\u0275sanitizeScript", function () {
          return Yr;
        }),
        n.d(t, "\u0275\u0275sanitizeStyle", function () {
          return Qr;
        }),
        n.d(t, "\u0275\u0275sanitizeUrl", function () {
          return Kr;
        }),
        n.d(t, "\u0275\u0275sanitizeUrlOrResourceUrl", function () {
          return Jr;
        }),
        n.d(t, "\u0275\u0275select", function () {
          return Fi;
        }),
        n.d(t, "\u0275\u0275setComponentScope", function () {
          return Le;
        }),
        n.d(t, "\u0275\u0275setNgModuleScope", function () {
          return He;
        }),
        n.d(t, "\u0275\u0275staticContentQuery", function () {
          return Bm;
        }),
        n.d(t, "\u0275\u0275staticViewQuery", function () {
          return Nm;
        }),
        n.d(t, "\u0275\u0275styleMap", function () {
          return _c;
        }),
        n.d(t, "\u0275\u0275styleMapInterpolate1", function () {
          return Xc;
        }),
        n.d(t, "\u0275\u0275styleMapInterpolate2", function () {
          return Jc;
        }),
        n.d(t, "\u0275\u0275styleMapInterpolate3", function () {
          return eu;
        }),
        n.d(t, "\u0275\u0275styleMapInterpolate4", function () {
          return tu;
        }),
        n.d(t, "\u0275\u0275styleMapInterpolate5", function () {
          return nu;
        }),
        n.d(t, "\u0275\u0275styleMapInterpolate6", function () {
          return ru;
        }),
        n.d(t, "\u0275\u0275styleMapInterpolate7", function () {
          return iu;
        }),
        n.d(t, "\u0275\u0275styleMapInterpolate8", function () {
          return su;
        }),
        n.d(t, "\u0275\u0275styleMapInterpolateV", function () {
          return ou;
        }),
        n.d(t, "\u0275\u0275styleProp", function () {
          return mc;
        }),
        n.d(t, "\u0275\u0275stylePropInterpolate1", function () {
          return au;
        }),
        n.d(t, "\u0275\u0275stylePropInterpolate2", function () {
          return lu;
        }),
        n.d(t, "\u0275\u0275stylePropInterpolate3", function () {
          return cu;
        }),
        n.d(t, "\u0275\u0275stylePropInterpolate4", function () {
          return uu;
        }),
        n.d(t, "\u0275\u0275stylePropInterpolate5", function () {
          return hu;
        }),
        n.d(t, "\u0275\u0275stylePropInterpolate6", function () {
          return du;
        }),
        n.d(t, "\u0275\u0275stylePropInterpolate7", function () {
          return fu;
        }),
        n.d(t, "\u0275\u0275stylePropInterpolate8", function () {
          return pu;
        }),
        n.d(t, "\u0275\u0275stylePropInterpolateV", function () {
          return mu;
        }),
        n.d(t, "\u0275\u0275styleSanitizer", function () {
          return pc;
        }),
        n.d(t, "\u0275\u0275template", function () {
          return yl;
        }),
        n.d(t, "\u0275\u0275templateRefExtractor", function () {
          return Gm;
        }),
        n.d(t, "\u0275\u0275text", function () {
          return Tc;
        }),
        n.d(t, "\u0275\u0275textInterpolate", function () {
          return Fc;
        }),
        n.d(t, "\u0275\u0275textInterpolate1", function () {
          return Pc;
        }),
        n.d(t, "\u0275\u0275textInterpolate2", function () {
          return jc;
        }),
        n.d(t, "\u0275\u0275textInterpolate3", function () {
          return Nc;
        }),
        n.d(t, "\u0275\u0275textInterpolate4", function () {
          return Mc;
        }),
        n.d(t, "\u0275\u0275textInterpolate5", function () {
          return Lc;
        }),
        n.d(t, "\u0275\u0275textInterpolate6", function () {
          return Vc;
        }),
        n.d(t, "\u0275\u0275textInterpolate7", function () {
          return Bc;
        }),
        n.d(t, "\u0275\u0275textInterpolate8", function () {
          return zc;
        }),
        n.d(t, "\u0275\u0275textInterpolateV", function () {
          return Uc;
        }),
        n.d(t, "\u0275\u0275updateSyntheticHostBinding", function () {
          return _u;
        }),
        n.d(t, "\u0275\u0275viewQuery", function () {
          return Mm;
        });
      var r = n("XNiG"),
        i = n("quSY"),
        s = n("HDdC"),
        o = n("VRyK"),
        a = n("w1tV");
      function l(e) {
        return { toString: e }.toString();
      }
      const c = "__annotations__",
        u = "__parameters__",
        h = "__prop__metadata__";
      function d(e, t, n, r, i) {
        return l(() => {
          const s = f(t);
          function o(...e) {
            if (this instanceof o) return s.call(this, ...e), this;
            const t = new o(...e);
            return function (n) {
              return (
                i && i(n, ...e),
                (n.hasOwnProperty(c)
                  ? n[c]
                  : Object.defineProperty(n, c, { value: [] })[c]
                ).push(t),
                r && r(n),
                n
              );
            };
          }
          return (
            n && (o.prototype = Object.create(n.prototype)),
            (o.prototype.ngMetadataName = e),
            (o.annotationCls = o),
            o
          );
        });
      }
      function f(e) {
        return function (...t) {
          if (e) {
            const n = e(...t);
            for (const e in n) this[e] = n[e];
          }
        };
      }
      function p(e, t, n) {
        return l(() => {
          const r = f(t);
          function i(...e) {
            if (this instanceof i) return r.apply(this, e), this;
            const t = new i(...e);
            return (n.annotation = t), n;
            function n(e, n, r) {
              const i = e.hasOwnProperty(u)
                ? e[u]
                : Object.defineProperty(e, u, { value: [] })[u];
              for (; i.length <= r; ) i.push(null);
              return (i[r] = i[r] || []).push(t), e;
            }
          }
          return (
            n && (i.prototype = Object.create(n.prototype)),
            (i.prototype.ngMetadataName = e),
            (i.annotationCls = i),
            i
          );
        });
      }
      function m(e, t, n, r) {
        return l(() => {
          const i = f(t);
          function s(...e) {
            if (this instanceof s) return i.apply(this, e), this;
            const t = new s(...e);
            return function (n, i) {
              const s = n.constructor,
                o = s.hasOwnProperty(h)
                  ? s[h]
                  : Object.defineProperty(s, h, { value: {} })[h];
              (o[i] = (o.hasOwnProperty(i) && o[i]) || []),
                o[i].unshift(t),
                r && r(n, i, ...e);
            };
          }
          return (
            n && (s.prototype = Object.create(n.prototype)),
            (s.prototype.ngMetadataName = e),
            (s.annotationCls = s),
            s
          );
        });
      }
      const g = p("Inject", (e) => ({ token: e })),
        _ = p("Optional"),
        y = p("Self"),
        v = p("SkipSelf"),
        b = p("Host"),
        w = p("Attribute", (e) => ({ attributeName: e }));
      var C = (function (e) {
        return (
          (e[(e.Default = 0)] = "Default"),
          (e[(e.Host = 1)] = "Host"),
          (e[(e.Self = 2)] = "Self"),
          (e[(e.SkipSelf = 4)] = "SkipSelf"),
          (e[(e.Optional = 8)] = "Optional"),
          e
        );
      })({});
      function S(e) {
        for (let t in e) if (e[t] === S) return t;
        throw Error("Could not find renamed property on target object.");
      }
      function E(e, t) {
        for (const n in t)
          t.hasOwnProperty(n) && !e.hasOwnProperty(n) && (e[n] = t[n]);
      }
      function x(e) {
        return {
          token: e.token,
          providedIn: e.providedIn || null,
          factory: e.factory,
          value: void 0,
        };
      }
      const D = x;
      function I(e) {
        return {
          factory: e.factory,
          providers: e.providers || [],
          imports: e.imports || [],
        };
      }
      function O(e) {
        return k(e, e[A]) || k(e, e[P]);
      }
      function k(e, t) {
        return t && t.token === e ? t : null;
      }
      function R(e) {
        return e && (e.hasOwnProperty(T) || e.hasOwnProperty(j)) ? e[T] : null;
      }
      const A = S({ ɵprov: S }),
        T = S({ ɵinj: S }),
        F = S({ ɵprovFallback: S }),
        P = S({ ngInjectableDef: S }),
        j = S({ ngInjectorDef: S });
      function N(e) {
        if ("string" == typeof e) return e;
        if (Array.isArray(e)) return "[" + e.map(N).join(", ") + "]";
        if (null == e) return "" + e;
        if (e.overriddenName) return "" + e.overriddenName;
        if (e.name) return "" + e.name;
        const t = e.toString();
        if (null == t) return "" + t;
        const n = t.indexOf("\n");
        return -1 === n ? t : t.substring(0, n);
      }
      function M(e, t) {
        return null == e || "" === e
          ? null === t
            ? ""
            : t
          : null == t || "" === t
          ? e
          : e + " " + t;
      }
      const L = S({ __forward_ref__: S });
      function V(e) {
        return (
          (e.__forward_ref__ = V),
          (e.toString = function () {
            return N(this());
          }),
          e
        );
      }
      function B(e) {
        return z(e) ? e() : e;
      }
      function z(e) {
        return (
          "function" == typeof e &&
          e.hasOwnProperty(L) &&
          e.__forward_ref__ === V
        );
      }
      const U = "undefined" != typeof globalThis && globalThis,
        H = "undefined" != typeof window && window,
        $ =
          "undefined" != typeof self &&
          "undefined" != typeof WorkerGlobalScope &&
          self instanceof WorkerGlobalScope &&
          self,
        q = "undefined" != typeof global && global,
        G = U || q || H || $;
      var W = (function (e) {
        return (
          (e[(e.Token = 0)] = "Token"),
          (e[(e.Attribute = 1)] = "Attribute"),
          (e[(e.ChangeDetectorRef = 2)] = "ChangeDetectorRef"),
          (e[(e.Invalid = 3)] = "Invalid"),
          e
        );
      })({});
      function Q() {
        const e = G.ng;
        if (!e || !e.ɵcompilerFacade)
          throw new Error(
            "Angular JIT compilation failed: '@angular/compiler' not loaded!\n  - JIT compilation is discouraged for production use-cases! Consider AOT mode instead.\n  - Did you bootstrap using '@angular/platform-browser-dynamic' or '@angular/platform-server'?\n  - Alternatively provide the compiler with 'import \"@angular/compiler\";' before bootstrapping."
          );
        return e.ɵcompilerFacade;
      }
      const K = S({ ɵcmp: S }),
        Z = S({ ɵdir: S }),
        Y = S({ ɵpipe: S }),
        X = S({ ɵmod: S }),
        J = S({ ɵloc: S }),
        ee = S({ ɵfac: S }),
        te = S({ __NG_ELEMENT_ID__: S });
      class ne {
        constructor(e, t) {
          (this._desc = e),
            (this.ngMetadataName = "InjectionToken"),
            (this.ɵprov = void 0),
            "number" == typeof t
              ? (this.__NG_ELEMENT_ID__ = t)
              : void 0 !== t &&
                (this.ɵprov = x({
                  token: this,
                  providedIn: t.providedIn || "root",
                  factory: t.factory,
                }));
        }
        toString() {
          return "InjectionToken " + this._desc;
        }
      }
      const re = new ne("INJECTOR", -1),
        ie = {},
        se = /\n/gm,
        oe = S({ provide: String, useValue: S });
      let ae,
        le = void 0;
      function ce(e) {
        const t = le;
        return (le = e), t;
      }
      function ue(e) {
        const t = ae;
        return (ae = e), t;
      }
      function he(e, t = C.Default) {
        if (void 0 === le)
          throw new Error("inject() must be called from an injection context");
        return null === le
          ? me(e, void 0, t)
          : le.get(e, t & C.Optional ? null : void 0, t);
      }
      function de(e, t = C.Default) {
        return (ae || he)(B(e), t);
      }
      function fe(e) {
        throw new Error("invalid");
      }
      const pe = de;
      function me(e, t, n) {
        const r = O(e);
        if (r && "root" == r.providedIn)
          return void 0 === r.value ? (r.value = r.factory()) : r.value;
        if (n & C.Optional) return null;
        if (void 0 !== t) return t;
        throw new Error(`Injector: NOT_FOUND [${N(e)}]`);
      }
      function ge(e) {
        const t = [];
        for (let n = 0; n < e.length; n++) {
          const r = B(e[n]);
          if (Array.isArray(r)) {
            if (0 === r.length)
              throw new Error("Arguments array must have arguments.");
            let e = void 0,
              n = C.Default;
            for (let t = 0; t < r.length; t++) {
              const i = r[t];
              i instanceof _ || "Optional" === i.ngMetadataName || i === _
                ? (n |= C.Optional)
                : i instanceof v || "SkipSelf" === i.ngMetadataName || i === v
                ? (n |= C.SkipSelf)
                : i instanceof y || "Self" === i.ngMetadataName || i === y
                ? (n |= C.Self)
                : (e = i instanceof g || i === g ? i.token : i);
            }
            t.push(de(e, n));
          } else t.push(de(r));
        }
        return t;
      }
      class _e {
        get(e, t = ie) {
          if (t === ie) {
            const t = new Error(`NullInjectorError: No provider for ${N(e)}!`);
            throw ((t.name = "NullInjectorError"), t);
          }
          return t;
        }
      }
      const ye = {
        ɵɵdefineInjectable: x,
        ɵɵdefineInjector: I,
        ɵɵinject: de,
        ɵɵgetFactoryOf: function e(t) {
          const n = t;
          if (z(t))
            return () => {
              const t = e(B(n));
              return t ? t() : null;
            };
          const r = O(n) || R(n);
          return r && void 0 !== r.factory ? r.factory : null;
        },
        ɵɵinvalidFactoryDep: fe,
      };
      class ve {}
      class be {}
      function we(e, t) {
        for (let n = 0; n < e.length; n++) t.push(e[n]);
      }
      function Ce(e, t) {
        void 0 === t && (t = e);
        for (let n = 0; n < e.length; n++) {
          let r = e[n];
          Array.isArray(r)
            ? (t === e && (t = e.slice(0, n)), Ce(r, t))
            : t !== e && t.push(r);
        }
        return t;
      }
      function Se(e, t) {
        e.forEach((e) => (Array.isArray(e) ? Se(e, t) : t(e)));
      }
      function Ee(e, t, n) {
        t >= e.length ? e.push(n) : e.splice(t, 0, n);
      }
      function xe(e, t) {
        return t >= e.length - 1 ? e.pop() : e.splice(t, 1)[0];
      }
      function De(e, t) {
        const n = [];
        for (let r = 0; r < e; r++) n.push(t);
        return n;
      }
      function Ie(e, t, n) {
        let r = ke(e, t);
        return (
          r >= 0
            ? (e[1 | r] = n)
            : ((r = ~r),
              (function (e, t, n, r) {
                let i = e.length;
                if (i == t) e.push(n, r);
                else if (1 === i) e.push(r, e[0]), (e[0] = n);
                else {
                  for (i--, e.push(e[i - 1], e[i]); i > t; )
                    (e[i] = e[i - 2]), i--;
                  (e[t] = n), (e[t + 1] = r);
                }
              })(e, r, t, n)),
          r
        );
      }
      function Oe(e, t) {
        const n = ke(e, t);
        if (n >= 0) return e[1 | n];
      }
      function ke(e, t) {
        return (function (e, t, n) {
          let r = 0,
            i = e.length >> 1;
          for (; i !== r; ) {
            const n = r + ((i - r) >> 1),
              s = e[n << 1];
            if (t === s) return n << 1;
            s > t ? (i = n) : (r = n + 1);
          }
          return ~(i << 1);
        })(e, t);
      }
      const Re = (function () {
          var e = { OnPush: 0, Default: 1 };
          return (e[e.OnPush] = "OnPush"), (e[e.Default] = "Default"), e;
        })(),
        Ae = (function () {
          var e = {
            CheckOnce: 0,
            Checked: 1,
            CheckAlways: 2,
            Detached: 3,
            Errored: 4,
            Destroyed: 5,
          };
          return (
            (e[e.CheckOnce] = "CheckOnce"),
            (e[e.Checked] = "Checked"),
            (e[e.CheckAlways] = "CheckAlways"),
            (e[e.Detached] = "Detached"),
            (e[e.Errored] = "Errored"),
            (e[e.Destroyed] = "Destroyed"),
            e
          );
        })();
      function Te(e) {
        return null == e || e === Re.Default;
      }
      const Fe = (function () {
          var e = { Emulated: 0, Native: 1, None: 2, ShadowDom: 3 };
          return (
            (e[e.Emulated] = "Emulated"),
            (e[e.Native] = "Native"),
            (e[e.None] = "None"),
            (e[e.ShadowDom] = "ShadowDom"),
            e
          );
        })(),
        Pe = {},
        je = [];
      let Ne = 0;
      function Me(e) {
        return l(() => {
          const t = e.type,
            n = t.prototype,
            r = {},
            i = {
              type: t,
              providersResolver: null,
              decls: e.decls,
              vars: e.vars,
              factory: null,
              template: e.template || null,
              consts: e.consts || null,
              ngContentSelectors: e.ngContentSelectors,
              hostBindings: e.hostBindings || null,
              hostVars: e.hostVars || 0,
              hostAttrs: e.hostAttrs || null,
              contentQueries: e.contentQueries || null,
              declaredInputs: r,
              inputs: null,
              outputs: null,
              exportAs: e.exportAs || null,
              onChanges: null,
              onInit: n.ngOnInit || null,
              doCheck: n.ngDoCheck || null,
              afterContentInit: n.ngAfterContentInit || null,
              afterContentChecked: n.ngAfterContentChecked || null,
              afterViewInit: n.ngAfterViewInit || null,
              afterViewChecked: n.ngAfterViewChecked || null,
              onDestroy: n.ngOnDestroy || null,
              onPush: e.changeDetection === Re.OnPush,
              directiveDefs: null,
              pipeDefs: null,
              selectors: e.selectors || je,
              viewQuery: e.viewQuery || null,
              features: e.features || null,
              data: e.data || {},
              encapsulation: e.encapsulation || Fe.Emulated,
              id: "c",
              styles: e.styles || je,
              _: null,
              setInput: null,
              schemas: e.schemas || null,
              tView: null,
            },
            s = e.directives,
            o = e.features,
            a = e.pipes;
          return (
            (i.id += Ne++),
            (i.inputs = $e(e.inputs, r)),
            (i.outputs = $e(e.outputs)),
            o && o.forEach((e) => e(i)),
            (i.directiveDefs = s
              ? () => ("function" == typeof s ? s() : s).map(Ve)
              : null),
            (i.pipeDefs = a
              ? () => ("function" == typeof a ? a() : a).map(Be)
              : null),
            i
          );
        });
      }
      function Le(e, t, n) {
        const r = e.ɵcmp;
        (r.directiveDefs = () => t.map(Ve)), (r.pipeDefs = () => n.map(Be));
      }
      function Ve(e) {
        return We(e) || Qe(e);
      }
      function Be(e) {
        return Ke(e);
      }
      const ze = {};
      function Ue(e) {
        const t = {
          type: e.type,
          bootstrap: e.bootstrap || je,
          declarations: e.declarations || je,
          imports: e.imports || je,
          exports: e.exports || je,
          transitiveCompileScopes: null,
          schemas: e.schemas || null,
          id: e.id || null,
        };
        return (
          null != e.id &&
            l(() => {
              ze[e.id] = e.type;
            }),
          t
        );
      }
      function He(e, t) {
        return l(() => {
          const n = Ye(e, !0);
          (n.declarations = t.declarations || je),
            (n.imports = t.imports || je),
            (n.exports = t.exports || je);
        });
      }
      function $e(e, t) {
        if (null == e) return Pe;
        const n = {};
        for (const r in e)
          if (e.hasOwnProperty(r)) {
            let i = e[r],
              s = i;
            Array.isArray(i) && ((s = i[1]), (i = i[0])),
              (n[i] = r),
              t && (t[i] = s);
          }
        return n;
      }
      const qe = Me;
      function Ge(e) {
        return {
          type: e.type,
          name: e.name,
          factory: null,
          pure: !1 !== e.pure,
          onDestroy: e.type.prototype.ngOnDestroy || null,
        };
      }
      function We(e) {
        return e[K] || null;
      }
      function Qe(e) {
        return e[Z] || null;
      }
      function Ke(e) {
        return e[Y] || null;
      }
      function Ze(e, t) {
        return e.hasOwnProperty(ee) ? e[ee] : null;
      }
      function Ye(e, t) {
        const n = e[X] || null;
        if (!n && !0 === t)
          throw new Error(`Type ${N(e)} does not have '\u0275mod' property.`);
        return n;
      }
      function Xe(e) {
        return Array.isArray(e) && "object" == typeof e[1];
      }
      function Je(e) {
        return Array.isArray(e) && !0 === e[1];
      }
      function et(e) {
        return 0 != (8 & e.flags);
      }
      function tt(e) {
        return 2 == (2 & e.flags);
      }
      function nt(e) {
        return 1 == (1 & e.flags);
      }
      function rt(e) {
        return null !== e.template;
      }
      function it(e) {
        return 0 != (512 & e[2]);
      }
      let st = void 0;
      function ot(e) {
        st = e;
      }
      function at() {
        return void 0 !== st
          ? st
          : "undefined" != typeof document
          ? document
          : void 0;
      }
      function lt(e) {
        return !!e.listen;
      }
      const ct = { createRenderer: (e, t) => at() };
      function ut(e) {
        for (; Array.isArray(e); ) e = e[0];
        return e;
      }
      function ht(e, t) {
        return ut(t[e + 20]);
      }
      function dt(e, t) {
        return ut(t[e.index]);
      }
      function ft(e, t) {
        const n = e.index;
        return -1 !== n ? ut(t[n]) : null;
      }
      function pt(e, t) {
        return e.data[t + 20];
      }
      function mt(e, t) {
        return e[t + 20];
      }
      function gt(e, t) {
        const n = t[e];
        return Xe(n) ? n : n[0];
      }
      function _t(e) {
        return e.__ngContext__ || null;
      }
      function yt(e) {
        const t = _t(e);
        return t ? (Array.isArray(t) ? t : t.lView) : null;
      }
      function vt(e) {
        return 4 == (4 & e[2]);
      }
      function bt(e) {
        return 128 == (128 & e[2]);
      }
      function wt(e, t) {
        return null === e || null == t ? null : e[t];
      }
      function Ct(e) {
        e[18] = 0;
      }
      function St(e, t) {
        e[5] += t;
        let n = e,
          r = e[3];
        for (
          ;
          null !== r && ((1 === t && 1 === n[5]) || (-1 === t && 0 === n[5]));

        )
          (r[5] += t), (n = r), (r = r[3]);
      }
      const Et = {
        lFrame: Zt(null),
        bindingsEnabled: !0,
        checkNoChangesMode: !1,
      };
      function xt() {
        return Et.bindingsEnabled;
      }
      function Dt() {
        Et.bindingsEnabled = !0;
      }
      function It() {
        Et.bindingsEnabled = !1;
      }
      function Ot() {
        return Et.lFrame.lView;
      }
      function kt() {
        return Et.lFrame.tView;
      }
      function Rt(e) {
        Et.lFrame.contextLView = e;
      }
      function At() {
        return Et.lFrame.previousOrParentTNode;
      }
      function Tt(e, t) {
        (Et.lFrame.previousOrParentTNode = e), (Et.lFrame.isParent = t);
      }
      function Ft() {
        return Et.lFrame.isParent;
      }
      function Pt() {
        Et.lFrame.isParent = !1;
      }
      function jt() {
        return Et.checkNoChangesMode;
      }
      function Nt(e) {
        Et.checkNoChangesMode = e;
      }
      function Mt() {
        const e = Et.lFrame;
        let t = e.bindingRootIndex;
        return (
          -1 === t && (t = e.bindingRootIndex = e.tView.bindingStartIndex), t
        );
      }
      function Lt() {
        return Et.lFrame.bindingIndex;
      }
      function Vt(e) {
        return (Et.lFrame.bindingIndex = e);
      }
      function Bt() {
        return Et.lFrame.bindingIndex++;
      }
      function zt(e) {
        const t = Et.lFrame,
          n = t.bindingIndex;
        return (t.bindingIndex = t.bindingIndex + e), n;
      }
      function Ut(e, t) {
        const n = Et.lFrame;
        (n.bindingIndex = n.bindingRootIndex = e), Ht(t);
      }
      function Ht(e) {
        Et.lFrame.currentDirectiveIndex = e;
      }
      function $t(e) {
        const t = Et.lFrame.currentDirectiveIndex;
        return -1 === t ? null : e[t];
      }
      function qt() {
        return Et.lFrame.currentQueryIndex;
      }
      function Gt(e) {
        Et.lFrame.currentQueryIndex = e;
      }
      function Wt(e, t) {
        const n = Kt();
        (Et.lFrame = n), (n.previousOrParentTNode = t), (n.lView = e);
      }
      function Qt(e, t) {
        const n = Kt(),
          r = e[1];
        (Et.lFrame = n),
          (n.previousOrParentTNode = t),
          (n.lView = e),
          (n.tView = r),
          (n.contextLView = e),
          (n.bindingIndex = r.bindingStartIndex);
      }
      function Kt() {
        const e = Et.lFrame,
          t = null === e ? null : e.child;
        return null === t ? Zt(e) : t;
      }
      function Zt(e) {
        const t = {
          previousOrParentTNode: null,
          isParent: !0,
          lView: null,
          tView: null,
          selectedIndex: 0,
          contextLView: null,
          elementDepthCount: 0,
          currentNamespace: null,
          currentSanitizer: null,
          currentDirectiveIndex: -1,
          bindingRootIndex: -1,
          bindingIndex: -1,
          currentQueryIndex: 0,
          parent: e,
          child: null,
        };
        return null !== e && (e.child = t), t;
      }
      function Yt() {
        const e = Et.lFrame;
        return (
          (Et.lFrame = e.parent),
          (e.previousOrParentTNode = null),
          (e.lView = null),
          e
        );
      }
      const Xt = Yt;
      function Jt() {
        const e = Yt();
        (e.isParent = !0),
          (e.tView = null),
          (e.selectedIndex = 0),
          (e.contextLView = null),
          (e.elementDepthCount = 0),
          (e.currentDirectiveIndex = -1),
          (e.currentNamespace = null),
          (e.currentSanitizer = null),
          (e.bindingRootIndex = -1),
          (e.bindingIndex = -1),
          (e.currentQueryIndex = 0);
      }
      function en(e) {
        return (Et.lFrame.contextLView = (function (e, t) {
          for (; e > 0; ) (t = t[15]), e--;
          return t;
        })(e, Et.lFrame.contextLView))[8];
      }
      function tn() {
        return Et.lFrame.selectedIndex;
      }
      function nn(e) {
        Et.lFrame.selectedIndex = e;
      }
      function rn() {
        const e = Et.lFrame;
        return pt(e.tView, e.selectedIndex);
      }
      function sn() {
        Et.lFrame.currentNamespace = "http://www.w3.org/2000/svg";
      }
      function on() {
        Et.lFrame.currentNamespace = "http://www.w3.org/1998/MathML/";
      }
      function an() {
        Et.lFrame.currentNamespace = null;
      }
      function ln(e, t) {
        for (let n = t.directiveStart, r = t.directiveEnd; n < r; n++) {
          const t = e.data[n];
          t.afterContentInit &&
            (e.contentHooks || (e.contentHooks = [])).push(
              -n,
              t.afterContentInit
            ),
            t.afterContentChecked &&
              ((e.contentHooks || (e.contentHooks = [])).push(
                n,
                t.afterContentChecked
              ),
              (e.contentCheckHooks || (e.contentCheckHooks = [])).push(
                n,
                t.afterContentChecked
              )),
            t.afterViewInit &&
              (e.viewHooks || (e.viewHooks = [])).push(-n, t.afterViewInit),
            t.afterViewChecked &&
              ((e.viewHooks || (e.viewHooks = [])).push(n, t.afterViewChecked),
              (e.viewCheckHooks || (e.viewCheckHooks = [])).push(
                n,
                t.afterViewChecked
              )),
            null != t.onDestroy &&
              (e.destroyHooks || (e.destroyHooks = [])).push(n, t.onDestroy);
        }
      }
      function cn(e, t, n) {
        dn(e, t, 3, n);
      }
      function un(e, t, n, r) {
        (3 & e[2]) === n && dn(e, t, n, r);
      }
      function hn(e, t) {
        let n = e[2];
        (3 & n) === t && ((n &= 2047), (n += 1), (e[2] = n));
      }
      function dn(e, t, n, r) {
        const i = null != r ? r : -1;
        let s = 0;
        for (let o = void 0 !== r ? 65535 & e[18] : 0; o < t.length; o++)
          if ("number" == typeof t[o + 1]) {
            if (((s = t[o]), null != r && s >= r)) break;
          } else
            t[o] < 0 && (e[18] += 65536),
              (s < i || -1 == i) &&
                (fn(e, n, t, o), (e[18] = (4294901760 & e[18]) + o + 2)),
              o++;
      }
      function fn(e, t, n, r) {
        const i = n[r] < 0,
          s = n[r + 1],
          o = e[i ? -n[r] : n[r]];
        i
          ? e[2] >> 11 < e[18] >> 16 &&
            (3 & e[2]) === t &&
            ((e[2] += 2048), s.call(o))
          : s.call(o);
      }
      class pn {
        constructor(e, t, n) {
          (this.factory = e),
            (this.resolving = !1),
            (this.canSeeViewProviders = t),
            (this.injectImpl = n);
        }
      }
      function mn(e, t, n) {
        const r = lt(e);
        let i = 0;
        for (; i < n.length; ) {
          const s = n[i];
          if ("number" == typeof s) {
            if (0 !== s) break;
            i++;
            const o = n[i++],
              a = n[i++],
              l = n[i++];
            r ? e.setAttribute(t, a, l, o) : t.setAttributeNS(o, a, l);
          } else {
            const o = s,
              a = n[++i];
            _n(o)
              ? r && e.setProperty(t, o, a)
              : r
              ? e.setAttribute(t, o, a)
              : t.setAttribute(o, a),
              i++;
          }
        }
        return i;
      }
      function gn(e) {
        return 3 === e || 4 === e || 6 === e;
      }
      function _n(e) {
        return 64 === e.charCodeAt(0);
      }
      function yn(e, t) {
        if (null === t || 0 === t.length);
        else if (null === e || 0 === e.length) e = t.slice();
        else {
          let n = -1;
          for (let r = 0; r < t.length; r++) {
            const i = t[r];
            "number" == typeof i
              ? (n = i)
              : 0 === n ||
                vn(e, n, i, null, -1 === n || 2 === n ? t[++r] : null);
          }
        }
        return e;
      }
      function vn(e, t, n, r, i) {
        let s = 0,
          o = e.length;
        if (-1 === t) o = -1;
        else
          for (; s < e.length; ) {
            const n = e[s++];
            if ("number" == typeof n) {
              if (n === t) {
                o = -1;
                break;
              }
              if (n > t) {
                o = s - 1;
                break;
              }
            }
          }
        for (; s < e.length; ) {
          const t = e[s];
          if ("number" == typeof t) break;
          if (t === n) {
            if (null === r) return void (null !== i && (e[s + 1] = i));
            if (r === e[s + 1]) return void (e[s + 2] = i);
          }
          s++, null !== r && s++, null !== i && s++;
        }
        -1 !== o && (e.splice(o, 0, t), (s = o + 1)),
          e.splice(s++, 0, n),
          null !== r && e.splice(s++, 0, r),
          null !== i && e.splice(s++, 0, i);
      }
      function bn(e) {
        return -1 !== e;
      }
      function wn(e) {
        return 32767 & e;
      }
      function Cn(e) {
        return e >> 16;
      }
      function Sn(e, t) {
        let n = Cn(e),
          r = t;
        for (; n > 0; ) (r = r[15]), n--;
        return r;
      }
      function En(e) {
        return "string" == typeof e ? e : null == e ? "" : "" + e;
      }
      function xn(e) {
        return "function" == typeof e
          ? e.name || e.toString()
          : "object" == typeof e && null != e && "function" == typeof e.type
          ? e.type.name || e.type.toString()
          : En(e);
      }
      const Dn = (() =>
        (
          ("undefined" != typeof requestAnimationFrame &&
            requestAnimationFrame) ||
          setTimeout
        ).bind(G))();
      function In(e) {
        return { name: "window", target: e.ownerDocument.defaultView };
      }
      function On(e) {
        return { name: "document", target: e.ownerDocument };
      }
      function kn(e) {
        return { name: "body", target: e.ownerDocument.body };
      }
      function Rn(e) {
        return e instanceof Function ? e() : e;
      }
      let An = !0;
      function Tn(e) {
        const t = An;
        return (An = e), t;
      }
      let Fn = 0;
      function Pn(e, t) {
        const n = Nn(e, t);
        if (-1 !== n) return n;
        const r = t[1];
        r.firstCreatePass &&
          ((e.injectorIndex = t.length),
          jn(r.data, e),
          jn(t, null),
          jn(r.blueprint, null));
        const i = Mn(e, t),
          s = e.injectorIndex;
        if (bn(i)) {
          const e = wn(i),
            n = Sn(i, t),
            r = n[1].data;
          for (let i = 0; i < 8; i++) t[s + i] = n[e + i] | r[e + i];
        }
        return (t[s + 8] = i), s;
      }
      function jn(e, t) {
        e.push(0, 0, 0, 0, 0, 0, 0, 0, t);
      }
      function Nn(e, t) {
        return -1 === e.injectorIndex ||
          (e.parent && e.parent.injectorIndex === e.injectorIndex) ||
          null == t[e.injectorIndex + 8]
          ? -1
          : e.injectorIndex;
      }
      function Mn(e, t) {
        if (e.parent && -1 !== e.parent.injectorIndex)
          return e.parent.injectorIndex;
        let n = t[6],
          r = 1;
        for (; n && -1 === n.injectorIndex; )
          (n = (t = t[15]) ? t[6] : null), r++;
        return n ? n.injectorIndex | (r << 16) : -1;
      }
      function Ln(e, t, n) {
        !(function (e, t, n) {
          let r = "string" != typeof n ? n[te] : n.charCodeAt(0) || 0;
          null == r && (r = n[te] = Fn++);
          const i = 255 & r,
            s = 1 << i,
            o = 64 & i,
            a = 32 & i,
            l = t.data;
          128 & i
            ? o
              ? a
                ? (l[e + 7] |= s)
                : (l[e + 6] |= s)
              : a
              ? (l[e + 5] |= s)
              : (l[e + 4] |= s)
            : o
            ? a
              ? (l[e + 3] |= s)
              : (l[e + 2] |= s)
            : a
            ? (l[e + 1] |= s)
            : (l[e] |= s);
        })(e, t, n);
      }
      function Vn(e, t) {
        if ("class" === t) return e.classes;
        if ("style" === t) return e.styles;
        const n = e.attrs;
        if (n) {
          const e = n.length;
          let r = 0;
          for (; r < e; ) {
            const i = n[r];
            if (gn(i)) break;
            if (0 === i) r += 2;
            else if ("number" == typeof i)
              for (r++; r < e && "string" == typeof n[r]; ) r++;
            else {
              if (i === t) return n[r + 1];
              r += 2;
            }
          }
        }
        return null;
      }
      function Bn(e, t, n, r = C.Default, i) {
        if (null !== e) {
          const i = (function (e) {
            if ("string" == typeof e) return e.charCodeAt(0) || 0;
            const t = e[te];
            return "number" == typeof t && t > 0 ? 255 & t : t;
          })(n);
          if ("function" == typeof i) {
            Wt(t, e);
            try {
              const e = i();
              if (null != e || r & C.Optional) return e;
              throw new Error(`No provider for ${xn(n)}!`);
            } finally {
              Xt();
            }
          } else if ("number" == typeof i) {
            if (-1 === i) return new Wn(e, t);
            let s = null,
              o = Nn(e, t),
              a = -1,
              l = r & C.Host ? t[16][6] : null;
            for (
              (-1 === o || r & C.SkipSelf) &&
              ((a = -1 === o ? Mn(e, t) : t[o + 8]),
              Gn(r, !1) ? ((s = t[1]), (o = wn(a)), (t = Sn(a, t))) : (o = -1));
              -1 !== o;

            ) {
              a = t[o + 8];
              const e = t[1];
              if (qn(i, o, e.data)) {
                const e = Un(o, t, n, s, r, l);
                if (e !== zn) return e;
              }
              Gn(r, t[1].data[o + 8] === l) && qn(i, o, t)
                ? ((s = e), (o = wn(a)), (t = Sn(a, t)))
                : (o = -1);
            }
          }
        }
        if (
          (r & C.Optional && void 0 === i && (i = null),
          0 == (r & (C.Self | C.Host)))
        ) {
          const e = t[9],
            s = ue(void 0);
          try {
            return e ? e.get(n, i, r & C.Optional) : me(n, i, r & C.Optional);
          } finally {
            ue(s);
          }
        }
        if (r & C.Optional) return i;
        throw new Error(`NodeInjector: NOT_FOUND [${xn(n)}]`);
      }
      const zn = {};
      function Un(e, t, n, r, i, s) {
        const o = t[1],
          a = o.data[e + 8],
          l = Hn(
            a,
            o,
            n,
            null == r ? tt(a) && An : r != o && 3 === a.type,
            i & C.Host && s === a
          );
        return null !== l ? $n(t, o, l, a) : zn;
      }
      function Hn(e, t, n, r, i) {
        const s = e.providerIndexes,
          o = t.data,
          a = 65535 & s,
          l = e.directiveStart,
          c = s >> 16,
          u = i ? a + c : e.directiveEnd;
        for (let h = r ? a : a + c; h < u; h++) {
          const e = o[h];
          if ((h < l && n === e) || (h >= l && e.type === n)) return h;
        }
        if (i) {
          const e = o[l];
          if (e && rt(e) && e.type === n) return l;
        }
        return null;
      }
      function $n(e, t, n, r) {
        let i = e[n];
        const s = t.data;
        if (i instanceof pn) {
          const o = i;
          if (o.resolving) throw new Error("Circular dep for " + xn(s[n]));
          const a = Tn(o.canSeeViewProviders);
          let l;
          (o.resolving = !0), o.injectImpl && (l = ue(o.injectImpl)), Wt(e, r);
          try {
            (i = e[n] = o.factory(void 0, s, e, r)),
              t.firstCreatePass &&
                n >= r.directiveStart &&
                (function (e, t, n) {
                  const { onChanges: r, onInit: i, doCheck: s } = t;
                  r &&
                    ((n.preOrderHooks || (n.preOrderHooks = [])).push(e, r),
                    (n.preOrderCheckHooks || (n.preOrderCheckHooks = [])).push(
                      e,
                      r
                    )),
                    i &&
                      (n.preOrderHooks || (n.preOrderHooks = [])).push(-e, i),
                    s &&
                      ((n.preOrderHooks || (n.preOrderHooks = [])).push(e, s),
                      (
                        n.preOrderCheckHooks || (n.preOrderCheckHooks = [])
                      ).push(e, s));
                })(n, s[n], t);
          } finally {
            o.injectImpl && ue(l), Tn(a), (o.resolving = !1), Xt();
          }
        }
        return i;
      }
      function qn(e, t, n) {
        const r = 64 & e,
          i = 32 & e;
        let s;
        return (
          (s =
            128 & e
              ? r
                ? i
                  ? n[t + 7]
                  : n[t + 6]
                : i
                ? n[t + 5]
                : n[t + 4]
              : r
              ? i
                ? n[t + 3]
                : n[t + 2]
              : i
              ? n[t + 1]
              : n[t]),
          !!(s & (1 << e))
        );
      }
      function Gn(e, t) {
        return !(e & C.Self || (e & C.Host && t));
      }
      class Wn {
        constructor(e, t) {
          (this._tNode = e), (this._lView = t);
        }
        get(e, t) {
          return Bn(this._tNode, this._lView, e, void 0, t);
        }
      }
      function Qn(e) {
        const t = e;
        if (z(e))
          return () => {
            const e = Qn(B(t));
            return e ? e() : null;
          };
        let n = Ze(t);
        if (null === n) {
          const e = R(t);
          n = e && e.factory;
        }
        return n || null;
      }
      function Kn(e) {
        return l(() => {
          const t = e.prototype.constructor,
            n = t[ee] || Qn(t),
            r = Object.prototype;
          let i = Object.getPrototypeOf(e.prototype).constructor;
          for (; i && i !== r; ) {
            const e = i[ee] || Qn(i);
            if (e && e !== n) return e;
            i = Object.getPrototypeOf(i);
          }
          return (e) => new e();
        });
      }
      function Zn(e) {
        return e.ngDebugContext;
      }
      function Yn(e) {
        return e.ngOriginalError;
      }
      function Xn(e, ...t) {
        e.error(...t);
      }
      class Jn {
        constructor() {
          this._console = console;
        }
        handleError(e) {
          const t = this._findOriginalError(e),
            n = this._findContext(e),
            r = (function (e) {
              return e.ngErrorLogger || Xn;
            })(e);
          r(this._console, "ERROR", e),
            t && r(this._console, "ORIGINAL ERROR", t),
            n && r(this._console, "ERROR CONTEXT", n);
        }
        _findContext(e) {
          return e ? (Zn(e) ? Zn(e) : this._findContext(Yn(e))) : null;
        }
        _findOriginalError(e) {
          let t = Yn(e);
          for (; t && Yn(t); ) t = Yn(t);
          return t;
        }
      }
      const er = { name: "custom-elements" },
        tr = { name: "no-errors-schema" };
      class nr {
        constructor(e) {
          this.changingThisBreaksApplicationSecurity = e;
        }
        toString() {
          return (
            "SafeValue must use [property]=binding: " +
            this.changingThisBreaksApplicationSecurity +
            " (see http://g.co/ng/security#xss)"
          );
        }
      }
      class rr extends nr {
        getTypeName() {
          return "HTML";
        }
      }
      class ir extends nr {
        getTypeName() {
          return "Style";
        }
      }
      class sr extends nr {
        getTypeName() {
          return "Script";
        }
      }
      class or extends nr {
        getTypeName() {
          return "URL";
        }
      }
      class ar extends nr {
        getTypeName() {
          return "ResourceURL";
        }
      }
      function lr(e) {
        return e instanceof nr ? e.changingThisBreaksApplicationSecurity : e;
      }
      function cr(e, t) {
        const n = ur(e);
        if (null != n && n !== t) {
          if ("ResourceURL" === n && "URL" === t) return !0;
          throw new Error(
            `Required a safe ${t}, got a ${n} (see http://g.co/ng/security#xss)`
          );
        }
        return n === t;
      }
      function ur(e) {
        return (e instanceof nr && e.getTypeName()) || null;
      }
      function hr(e) {
        return new rr(e);
      }
      function dr(e) {
        return new ir(e);
      }
      function fr(e) {
        return new sr(e);
      }
      function pr(e) {
        return new or(e);
      }
      function mr(e) {
        return new ar(e);
      }
      let gr = !0,
        _r = !1;
      function yr() {
        return (_r = !0), gr;
      }
      function vr() {
        if (_r)
          throw new Error("Cannot enable prod mode after platform setup.");
        gr = !1;
      }
      class br {
        constructor(e) {
          (this.defaultDoc = e),
            (this.inertDocument = this.defaultDoc.implementation.createHTMLDocument(
              "sanitization-inert"
            ));
          let t = this.inertDocument.body;
          if (null == t) {
            const e = this.inertDocument.createElement("html");
            this.inertDocument.appendChild(e),
              (t = this.inertDocument.createElement("body")),
              e.appendChild(t);
          }
          (t.innerHTML =
            '<svg><g onload="this.parentNode.remove()"></g></svg>'),
            !t.querySelector || t.querySelector("svg")
              ? ((t.innerHTML =
                  '<svg><p><style><img src="</style><img src=x onerror=alert(1)//">'),
                (this.getInertBodyElement =
                  t.querySelector &&
                  t.querySelector("svg img") &&
                  (function () {
                    try {
                      return !!window.DOMParser;
                    } catch (e) {
                      return !1;
                    }
                  })()
                    ? this.getInertBodyElement_DOMParser
                    : this.getInertBodyElement_InertDocument))
              : (this.getInertBodyElement = this.getInertBodyElement_XHR);
        }
        getInertBodyElement_XHR(e) {
          e = "<body><remove></remove>" + e + "</body>";
          try {
            e = encodeURI(e);
          } catch (r) {
            return null;
          }
          const t = new XMLHttpRequest();
          (t.responseType = "document"),
            t.open("GET", "data:text/html;charset=utf-8," + e, !1),
            t.send(void 0);
          const n = t.response.body;
          return n.removeChild(n.firstChild), n;
        }
        getInertBodyElement_DOMParser(e) {
          e = "<body><remove></remove>" + e + "</body>";
          try {
            const t = new window.DOMParser().parseFromString(e, "text/html")
              .body;
            return t.removeChild(t.firstChild), t;
          } catch (t) {
            return null;
          }
        }
        getInertBodyElement_InertDocument(e) {
          const t = this.inertDocument.createElement("template");
          if ("content" in t) return (t.innerHTML = e), t;
          const n = this.inertDocument.createElement("body");
          return (
            (n.innerHTML = e),
            this.defaultDoc.documentMode && this.stripCustomNsAttrs(n),
            n
          );
        }
        stripCustomNsAttrs(e) {
          const t = e.attributes;
          for (let r = t.length - 1; 0 < r; r--) {
            const n = t.item(r).name;
            ("xmlns:ns1" !== n && 0 !== n.indexOf("ns1:")) ||
              e.removeAttribute(n);
          }
          let n = e.firstChild;
          for (; n; )
            n.nodeType === Node.ELEMENT_NODE && this.stripCustomNsAttrs(n),
              (n = n.nextSibling);
        }
      }
      const wr = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi,
        Cr = /^data:(?:image\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\/(?:mpeg|mp4|ogg|webm)|audio\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\/]+=*$/i;
      function Sr(e) {
        return (e = String(e)).match(wr) || e.match(Cr)
          ? e
          : (yr() &&
              console.warn(
                `WARNING: sanitizing unsafe URL value ${e} (see http://g.co/ng/security#xss)`
              ),
            "unsafe:" + e);
      }
      function Er(e) {
        return (e = String(e))
          .split(",")
          .map((e) => Sr(e.trim()))
          .join(", ");
      }
      function xr(e) {
        const t = {};
        for (const n of e.split(",")) t[n] = !0;
        return t;
      }
      function Dr(...e) {
        const t = {};
        for (const n of e)
          for (const e in n) n.hasOwnProperty(e) && (t[e] = !0);
        return t;
      }
      const Ir = xr("area,br,col,hr,img,wbr"),
        Or = xr("colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr"),
        kr = xr("rp,rt"),
        Rr = Dr(kr, Or),
        Ar = Dr(
          Ir,
          Dr(
            Or,
            xr(
              "address,article,aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul"
            )
          ),
          Dr(
            kr,
            xr(
              "a,abbr,acronym,audio,b,bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video"
            )
          ),
          Rr
        ),
        Tr = xr("background,cite,href,itemtype,longdesc,poster,src,xlink:href"),
        Fr = xr("srcset"),
        Pr = Dr(
          Tr,
          Fr,
          xr(
            "abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,valign,value,vspace,width"
          ),
          xr(
            "aria-activedescendant,aria-atomic,aria-autocomplete,aria-busy,aria-checked,aria-colcount,aria-colindex,aria-colspan,aria-controls,aria-current,aria-describedby,aria-details,aria-disabled,aria-dropeffect,aria-errormessage,aria-expanded,aria-flowto,aria-grabbed,aria-haspopup,aria-hidden,aria-invalid,aria-keyshortcuts,aria-label,aria-labelledby,aria-level,aria-live,aria-modal,aria-multiline,aria-multiselectable,aria-orientation,aria-owns,aria-placeholder,aria-posinset,aria-pressed,aria-readonly,aria-relevant,aria-required,aria-roledescription,aria-rowcount,aria-rowindex,aria-rowspan,aria-selected,aria-setsize,aria-sort,aria-valuemax,aria-valuemin,aria-valuenow,aria-valuetext"
          )
        ),
        jr = xr("script,style,template");
      class Nr {
        constructor() {
          (this.sanitizedSomething = !1), (this.buf = []);
        }
        sanitizeChildren(e) {
          let t = e.firstChild,
            n = !0;
          for (; t; )
            if (
              (t.nodeType === Node.ELEMENT_NODE
                ? (n = this.startElement(t))
                : t.nodeType === Node.TEXT_NODE
                ? this.chars(t.nodeValue)
                : (this.sanitizedSomething = !0),
              n && t.firstChild)
            )
              t = t.firstChild;
            else
              for (; t; ) {
                t.nodeType === Node.ELEMENT_NODE && this.endElement(t);
                let e = this.checkClobberedElement(t, t.nextSibling);
                if (e) {
                  t = e;
                  break;
                }
                t = this.checkClobberedElement(t, t.parentNode);
              }
          return this.buf.join("");
        }
        startElement(e) {
          const t = e.nodeName.toLowerCase();
          if (!Ar.hasOwnProperty(t))
            return (this.sanitizedSomething = !0), !jr.hasOwnProperty(t);
          this.buf.push("<"), this.buf.push(t);
          const n = e.attributes;
          for (let r = 0; r < n.length; r++) {
            const e = n.item(r),
              t = e.name,
              i = t.toLowerCase();
            if (!Pr.hasOwnProperty(i)) {
              this.sanitizedSomething = !0;
              continue;
            }
            let s = e.value;
            Tr[i] && (s = Sr(s)),
              Fr[i] && (s = Er(s)),
              this.buf.push(" ", t, '="', Vr(s), '"');
          }
          return this.buf.push(">"), !0;
        }
        endElement(e) {
          const t = e.nodeName.toLowerCase();
          Ar.hasOwnProperty(t) &&
            !Ir.hasOwnProperty(t) &&
            (this.buf.push("</"), this.buf.push(t), this.buf.push(">"));
        }
        chars(e) {
          this.buf.push(Vr(e));
        }
        checkClobberedElement(e, t) {
          if (
            t &&
            (e.compareDocumentPosition(t) &
              Node.DOCUMENT_POSITION_CONTAINED_BY) ===
              Node.DOCUMENT_POSITION_CONTAINED_BY
          )
            throw new Error(
              "Failed to sanitize html because the element is clobbered: " +
                e.outerHTML
            );
          return t;
        }
      }
      const Mr = /[\uD800-\uDBFF][\uDC00-\uDFFF]/g,
        Lr = /([^\#-~ |!])/g;
      function Vr(e) {
        return e
          .replace(/&/g, "&amp;")
          .replace(Mr, function (e) {
            return (
              "&#" +
              (1024 * (e.charCodeAt(0) - 55296) +
                (e.charCodeAt(1) - 56320) +
                65536) +
              ";"
            );
          })
          .replace(Lr, function (e) {
            return "&#" + e.charCodeAt(0) + ";";
          })
          .replace(/</g, "&lt;")
          .replace(/>/g, "&gt;");
      }
      let Br;
      function zr(e, t) {
        let n = null;
        try {
          Br = Br || new br(e);
          let r = t ? String(t) : "";
          n = Br.getInertBodyElement(r);
          let i = 5,
            s = r;
          do {
            if (0 === i)
              throw new Error(
                "Failed to sanitize html because the input is unstable"
              );
            i--, (r = s), (s = n.innerHTML), (n = Br.getInertBodyElement(r));
          } while (r !== s);
          const o = new Nr(),
            a = o.sanitizeChildren(Ur(n) || n);
          return (
            yr() &&
              o.sanitizedSomething &&
              console.warn(
                "WARNING: sanitizing HTML stripped some content, see http://g.co/ng/security#xss"
              ),
            a
          );
        } finally {
          if (n) {
            const e = Ur(n) || n;
            for (; e.firstChild; ) e.removeChild(e.firstChild);
          }
        }
      }
      function Ur(e) {
        return "content" in e &&
          (function (e) {
            return (
              e.nodeType === Node.ELEMENT_NODE && "TEMPLATE" === e.nodeName
            );
          })(e)
          ? e.content
          : null;
      }
      const Hr = (function () {
          var e = {
            NONE: 0,
            HTML: 1,
            STYLE: 2,
            SCRIPT: 3,
            URL: 4,
            RESOURCE_URL: 5,
          };
          return (
            (e[e.NONE] = "NONE"),
            (e[e.HTML] = "HTML"),
            (e[e.STYLE] = "STYLE"),
            (e[e.SCRIPT] = "SCRIPT"),
            (e[e.URL] = "URL"),
            (e[e.RESOURCE_URL] = "RESOURCE_URL"),
            e
          );
        })(),
        $r = new RegExp(
          "^([-,.\"'%_!# a-zA-Z0-9]+|(?:(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|Z|3d)?|(?:rgb|hsl)a?|(?:repeating-)?(?:linear|radial)-gradient|(?:attr|calc|var))\\([-0-9.%, #a-zA-Z]+\\))$",
          "g"
        ),
        qr = /^url\(([^)]+)\)$/;
      function Gr(e) {
        if (!(e = String(e).trim())) return "";
        const t = e.match(qr);
        return (t && Sr(t[1]) === t[1]) ||
          (e.match($r) &&
            (function (e) {
              let t = !0,
                n = !0;
              for (let r = 0; r < e.length; r++) {
                const i = e.charAt(r);
                "'" === i && n ? (t = !t) : '"' === i && t && (n = !n);
              }
              return t && n;
            })(e))
          ? e
          : (yr() &&
              console.warn(
                `WARNING: sanitizing unsafe style value ${e} (see http://g.co/ng/security#xss).`
              ),
            "unsafe");
      }
      function Wr(e) {
        const t = ni();
        return t
          ? t.sanitize(Hr.HTML, e) || ""
          : cr(e, "HTML")
          ? lr(e)
          : zr(at(), En(e));
      }
      function Qr(e) {
        const t = ni();
        return t
          ? t.sanitize(Hr.STYLE, e) || ""
          : cr(e, "Style")
          ? lr(e)
          : Gr(En(e));
      }
      function Kr(e) {
        const t = ni();
        return t
          ? t.sanitize(Hr.URL, e) || ""
          : cr(e, "URL")
          ? lr(e)
          : Sr(En(e));
      }
      function Zr(e) {
        const t = ni();
        if (t) return t.sanitize(Hr.RESOURCE_URL, e) || "";
        if (cr(e, "ResourceURL")) return lr(e);
        throw new Error(
          "unsafe value used in a resource URL context (see http://g.co/ng/security#xss)"
        );
      }
      function Yr(e) {
        const t = ni();
        if (t) return t.sanitize(Hr.SCRIPT, e) || "";
        if (cr(e, "Script")) return lr(e);
        throw new Error("unsafe value used in a script context");
      }
      function Xr(e, t) {
        return ("src" === t &&
          ("embed" === e ||
            "frame" === e ||
            "iframe" === e ||
            "media" === e ||
            "script" === e)) ||
          ("href" === t && ("base" === e || "link" === e))
          ? Zr
          : Kr;
      }
      function Jr(e, t, n) {
        return Xr(t, n)(e);
      }
      const ei = function (e, t, n) {
        if (void 0 === t && void 0 === n) return Qr(e);
        let r = !0;
        return 1 & (n = n || 3) && (r = ti(e)), 2 & n ? (r ? Qr(t) : lr(t)) : r;
      };
      function ti(e) {
        return (
          "background-image" === e ||
          "backgroundImage" === e ||
          "background" === e ||
          "border-image" === e ||
          "borderImage" === e ||
          "border-image-source" === e ||
          "borderImageSource" === e ||
          "filter" === e ||
          "list-style" === e ||
          "listStyle" === e ||
          "list-style-image" === e ||
          "listStyleImage" === e ||
          "clip-path" === e ||
          "clipPath" === e
        );
      }
      function ni() {
        const e = Ot();
        return e && e[12];
      }
      const ri = /([A-Z])/g;
      function ii(e) {
        try {
          return null != e ? e.toString().slice(0, 30) : e;
        } catch (t) {
          return "[ERROR] Exception while trying to serialize the value";
        }
      }
      function si(e) {
        let t = _t(e);
        if (t) {
          if (Array.isArray(t)) {
            const r = t;
            let i,
              s = void 0,
              o = void 0;
            if ((n = e) && n.constructor && n.constructor.ɵcmp) {
              if (((i = hi(r, e)), -1 == i))
                throw new Error(
                  "The provided component was not found in the application"
                );
              s = e;
            } else if (
              (function (e) {
                return e && e.constructor && e.constructor.ɵdir;
              })(e)
            ) {
              if (
                ((i = (function (e, t) {
                  let n = e[1].firstChild;
                  for (; n; ) {
                    const r = n.directiveEnd;
                    for (let i = n.directiveStart; i < r; i++)
                      if (e[i] === t) return n.index;
                    n = ui(n);
                  }
                  return -1;
                })(r, e)),
                -1 == i)
              )
                throw new Error(
                  "The provided directive was not found in the application"
                );
              o = di(i, r, !1);
            } else if (((i = ci(r, e)), -1 == i)) return null;
            const a = ut(r[i]),
              l = _t(a),
              c = l && !Array.isArray(l) ? l : oi(r, i, a);
            if (
              (s &&
                void 0 === c.component &&
                ((c.component = s), li(c.component, c)),
              o && void 0 === c.directives)
            ) {
              c.directives = o;
              for (let e = 0; e < o.length; e++) li(o[e], c);
            }
            li(c.native, c), (t = c);
          }
        } else {
          const n = e;
          let r = n;
          for (; (r = r.parentNode); ) {
            const e = _t(r);
            if (e) {
              let r;
              if (((r = Array.isArray(e) ? e : e.lView), !r)) return null;
              const i = ci(r, n);
              if (i >= 0) {
                const e = ut(r[i]),
                  n = oi(r, i, e);
                li(e, n), (t = n);
                break;
              }
            }
          }
        }
        var n;
        return t || null;
      }
      function oi(e, t, n) {
        return {
          lView: e,
          nodeIndex: t,
          native: n,
          component: void 0,
          directives: void 0,
          localRefs: void 0,
        };
      }
      function ai(e) {
        let t,
          n = _t(e);
        if (Array.isArray(n)) {
          const r = hi(n, e);
          t = gt(r, n);
          const i = oi(n, r, t[0]);
          (i.component = e), li(e, i), li(i.native, i);
        } else t = gt(n.nodeIndex, n.lView);
        return t;
      }
      function li(e, t) {
        e.__ngContext__ = t;
      }
      function ci(e, t) {
        let n = e[1].firstChild;
        for (; n; ) {
          if (ft(n, e) === t) return n.index;
          n = ui(n);
        }
        return -1;
      }
      function ui(e) {
        if (e.child) return e.child;
        if (e.next) return e.next;
        for (; e.parent && !e.parent.next; ) e = e.parent;
        return e.parent && e.parent.next;
      }
      function hi(e, t) {
        const n = e[1].components;
        if (n)
          for (let r = 0; r < n.length; r++) {
            const i = n[r];
            if (gt(i, e)[8] === t) return i;
          }
        else if (gt(20, e)[8] === t) return 20;
        return -1;
      }
      function di(e, t, n) {
        const r = t[1].data[e];
        let i = r.directiveStart;
        return 0 == i
          ? je
          : (!n && 2 & r.flags && i++, t.slice(i, r.directiveEnd));
      }
      function fi(e) {
        throw new Error(
          "Multiple components match node with tagname " + e.tagName
        );
      }
      function pi() {
        throw new Error("Cannot mix multi providers and regular providers");
      }
      function mi(e, t, n) {
        let r = e.length;
        for (;;) {
          const i = e.indexOf(t, n);
          if (-1 === i) return i;
          if (0 === i || e.charCodeAt(i - 1) <= 32) {
            const n = t.length;
            if (i + n === r || e.charCodeAt(i + n) <= 32) return i;
          }
          n = i + 1;
        }
      }
      function gi(e, t, n) {
        let r = 0;
        for (; r < e.length; ) {
          let i = e[r++];
          if (n && "class" === i) {
            if (((i = e[r]), -1 !== mi(i.toLowerCase(), t, 0))) return !0;
          } else if (1 === i) {
            for (; r < e.length && "string" == typeof (i = e[r++]); )
              if (i.toLowerCase() === t) return !0;
            return !1;
          }
        }
        return !1;
      }
      function _i(e) {
        return 0 === e.type && "ng-template" !== e.tagName;
      }
      function yi(e, t, n) {
        return t === (0 !== e.type || n ? e.tagName : "ng-template");
      }
      function vi(e, t, n) {
        let r = 4;
        const i = e.attrs || [],
          s = (function (e) {
            for (let t = 0; t < e.length; t++) if (gn(e[t])) return t;
            return e.length;
          })(i);
        let o = !1;
        for (let a = 0; a < t.length; a++) {
          const l = t[a];
          if ("number" != typeof l) {
            if (!o)
              if (4 & r) {
                if (
                  ((r = 2 | (1 & r)),
                  ("" !== l && !yi(e, l, n)) || ("" === l && 1 === t.length))
                ) {
                  if (bi(r)) return !1;
                  o = !0;
                }
              } else {
                const c = 8 & r ? l : t[++a];
                if (8 & r && null !== e.attrs) {
                  if (!gi(e.attrs, c, n)) {
                    if (bi(r)) return !1;
                    o = !0;
                  }
                  continue;
                }
                const u = wi(8 & r ? "class" : l, i, _i(e), n);
                if (-1 === u) {
                  if (bi(r)) return !1;
                  o = !0;
                  continue;
                }
                if ("" !== c) {
                  let e;
                  e = u > s ? "" : i[u + 1].toLowerCase();
                  const t = 8 & r ? e : null;
                  if ((t && -1 !== mi(t, c, 0)) || (2 & r && c !== e)) {
                    if (bi(r)) return !1;
                    o = !0;
                  }
                }
              }
          } else {
            if (!o && !bi(r) && !bi(l)) return !1;
            if (o && bi(l)) continue;
            (o = !1), (r = l | (1 & r));
          }
        }
        return bi(r) || o;
      }
      function bi(e) {
        return 0 == (1 & e);
      }
      function wi(e, t, n, r) {
        if (null === t) return -1;
        let i = 0;
        if (r || !n) {
          let n = !1;
          for (; i < t.length; ) {
            const r = t[i];
            if (r === e) return i;
            if (3 === r || 6 === r) n = !0;
            else {
              if (1 === r || 2 === r) {
                let e = t[++i];
                for (; "string" == typeof e; ) e = t[++i];
                continue;
              }
              if (4 === r) break;
              if (0 === r) {
                i += 4;
                continue;
              }
            }
            i += n ? 1 : 2;
          }
          return -1;
        }
        return (function (e, t) {
          let n = e.indexOf(4);
          if (n > -1)
            for (n++; n < e.length; ) {
              const r = e[n];
              if ("number" == typeof r) return -1;
              if (r === t) return n;
              n++;
            }
          return -1;
        })(t, e);
      }
      function Ci(e, t, n = !1) {
        for (let r = 0; r < t.length; r++) if (vi(e, t[r], n)) return !0;
        return !1;
      }
      function Si(e, t) {
        e: for (let n = 0; n < t.length; n++) {
          const r = t[n];
          if (e.length === r.length) {
            for (let t = 0; t < e.length; t++) if (e[t] !== r[t]) continue e;
            return !0;
          }
        }
        return !1;
      }
      function Ei(e, t) {
        return e ? ":not(" + t.trim() + ")" : t;
      }
      function xi(e) {
        let t = e[0],
          n = 1,
          r = 2,
          i = "",
          s = !1;
        for (; n < e.length; ) {
          let o = e[n];
          if ("string" == typeof o)
            if (2 & r) {
              const t = e[++n];
              i += "[" + o + (t.length > 0 ? '="' + t + '"' : "") + "]";
            } else 8 & r ? (i += "." + o) : 4 & r && (i += " " + o);
          else
            "" === i || bi(o) || ((t += Ei(s, i)), (i = "")),
              (r = o),
              (s = s || !bi(r));
          n++;
        }
        return "" !== i && (t += Ei(s, i)), t;
      }
      const Di = {};
      function Ii(e) {
        const t = e[3];
        return Je(t) ? t[3] : t;
      }
      function Oi(e) {
        return (function (e) {
          let t = Xe(e) ? e : yt(e);
          for (; t && !(512 & t[2]); ) t = Ii(t);
          return t;
        })(e)[8];
      }
      function ki(e) {
        return Ai(e[13]);
      }
      function Ri(e) {
        return Ai(e[4]);
      }
      function Ai(e) {
        for (; null !== e && !Je(e); ) e = e[4];
        return e;
      }
      function Ti(e) {
        Pi(kt(), Ot(), tn() + e, jt());
      }
      function Fi(e) {
        Pi(kt(), Ot(), e, jt());
      }
      function Pi(e, t, n, r) {
        if (!r)
          if (3 == (3 & t[2])) {
            const r = e.preOrderCheckHooks;
            null !== r && cn(t, r, n);
          } else {
            const r = e.preOrderHooks;
            null !== r && un(t, r, 0, n);
          }
        nn(n);
      }
      const ji = { marker: "element" },
        Ni = { marker: "comment" };
      function Mi(e, t) {
        return (e << 17) | (t << 2);
      }
      function Li(e) {
        return (e >> 17) & 32767;
      }
      function Vi(e) {
        return 2 | e;
      }
      function Bi(e) {
        return (131068 & e) >> 2;
      }
      function zi(e, t) {
        return (-131069 & e) | (t << 2);
      }
      function Ui(e) {
        return 1 | e;
      }
      const Hi = (() => Promise.resolve(null))();
      function $i(e, t) {
        const n = e.contentQueries;
        if (null !== n)
          for (let r = 0; r < n.length; r += 2) {
            const i = n[r],
              s = n[r + 1];
            if (-1 !== s) {
              const n = e.data[s];
              Gt(i), n.contentQueries(2, t[s], s);
            }
          }
      }
      function qi(e, t, n) {
        return lt(t)
          ? t.createElement(e, n)
          : null === n
          ? t.createElement(e)
          : t.createElementNS(n, e);
      }
      function Gi(e, t, n, r, i, s, o, a, l, c) {
        const u = t.blueprint.slice();
        return (
          (u[0] = i),
          (u[2] = 140 | r),
          Ct(u),
          (u[3] = u[15] = e),
          (u[8] = n),
          (u[10] = o || (e && e[10])),
          (u[11] = a || (e && e[11])),
          (u[12] = l || (e && e[12]) || null),
          (u[9] = c || (e && e[9]) || null),
          (u[6] = s),
          (u[16] = 2 == t.type ? e[16] : u),
          u
        );
      }
      function Wi(e, t, n, r, i, s) {
        const o = n + 20,
          a =
            e.data[o] ||
            (function (e, t, n, r, i, s) {
              const o = At(),
                a = Ft(),
                l = a ? o : o && o.parent,
                c = (e.data[n] = is(0, l && l !== t ? l : null, r, n, i, s));
              return (
                null === e.firstChild && (e.firstChild = c),
                o &&
                  (!a || null != o.child || (null === c.parent && 2 !== o.type)
                    ? a || (o.next = c)
                    : (o.child = c)),
                c
              );
            })(e, t, o, r, i, s);
        return Tt(a, !0), a;
      }
      function Qi(e, t, n) {
        Qt(t, t[6]);
        try {
          const r = e.viewQuery;
          null !== r && Os(1, r, n);
          const i = e.template;
          null !== i && Yi(e, t, i, 1, n),
            e.firstCreatePass && (e.firstCreatePass = !1),
            e.staticContentQueries && $i(e, t),
            e.staticViewQueries && Os(2, e.viewQuery, n);
          const s = e.components;
          null !== s &&
            (function (e, t) {
              for (let n = 0; n < t.length; n++) Cs(e, t[n]);
            })(t, s);
        } catch (r) {
          throw (e.firstCreatePass && (e.incompleteFirstPass = !0), r);
        } finally {
          (t[2] &= -5), Jt();
        }
      }
      function Ki(e, t, n, r) {
        const i = t[2];
        if (256 == (256 & i)) return;
        Qt(t, t[6]);
        const s = jt();
        try {
          Ct(t), Vt(e.bindingStartIndex), null !== n && Yi(e, t, n, 2, r);
          const o = 3 == (3 & i);
          if (!s)
            if (o) {
              const n = e.preOrderCheckHooks;
              null !== n && cn(t, n, null);
            } else {
              const n = e.preOrderHooks;
              null !== n && un(t, n, 0, null), hn(t, 0);
            }
          if (
            ((function (e) {
              for (let t = ki(e); null !== t; t = Ri(t)) {
                if (!t[2]) continue;
                const e = t[9];
                for (let t = 0; t < e.length; t++) {
                  const n = e[t],
                    r = n[3];
                  0 == (1024 & n[2]) && St(r, 1), (n[2] |= 1024);
                }
              }
            })(t),
            (function (e) {
              for (let t = ki(e); null !== t; t = Ri(t))
                for (let e = 10; e < t.length; e++) {
                  const n = t[e],
                    r = n[1];
                  bt(n) && Ki(r, n, r.template, n[8]);
                }
            })(t),
            null !== e.contentQueries && $i(e, t),
            !s)
          )
            if (o) {
              const n = e.contentCheckHooks;
              null !== n && cn(t, n);
            } else {
              const n = e.contentHooks;
              null !== n && un(t, n, 1), hn(t, 1);
            }
          !(function (e, t) {
            try {
              const n = e.expandoInstructions;
              if (null !== n) {
                let r = e.expandoStartIndex,
                  i = -1,
                  s = -1;
                for (let e = 0; e < n.length; e++) {
                  const o = n[e];
                  "number" == typeof o
                    ? o <= 0
                      ? ((s = 0 - o), nn(s), (r += 9 + n[++e]), (i = r))
                      : (r += o)
                    : (null !== o && (Ut(r, i), o(2, t[i])), i++);
                }
              }
            } finally {
              nn(-1);
            }
          })(e, t);
          const a = e.components;
          null !== a &&
            (function (e, t) {
              for (let n = 0; n < t.length; n++) ws(e, t[n]);
            })(t, a);
          const l = e.viewQuery;
          if ((null !== l && Os(2, l, r), !s))
            if (o) {
              const n = e.viewCheckHooks;
              null !== n && cn(t, n);
            } else {
              const n = e.viewHooks;
              null !== n && un(t, n, 2), hn(t, 2);
            }
          !0 === e.firstUpdatePass && (e.firstUpdatePass = !1),
            s || (t[2] &= -73),
            1024 & t[2] && ((t[2] &= -1025), St(t[3], -1));
        } finally {
          Jt();
        }
      }
      function Zi(e, t, n, r) {
        const i = t[10],
          s = !jt(),
          o = vt(t);
        try {
          s && !o && i.begin && i.begin(), o && Qi(e, t, r), Ki(e, t, n, r);
        } finally {
          s && !o && i.end && i.end();
        }
      }
      function Yi(e, t, n, r, i) {
        const s = tn();
        try {
          nn(-1), 2 & r && t.length > 20 && Pi(e, t, 0, jt()), n(r, i);
        } finally {
          nn(s);
        }
      }
      function Xi(e, t, n) {
        if (et(t)) {
          const r = t.directiveEnd;
          for (let i = t.directiveStart; i < r; i++) {
            const t = e.data[i];
            t.contentQueries && t.contentQueries(1, n[i], i);
          }
        }
      }
      function Ji(e, t, n) {
        xt() &&
          ((function (e, t, n, r) {
            const i = n.directiveStart,
              s = n.directiveEnd;
            e.firstCreatePass || Pn(n, t), li(r, t);
            const o = n.initialInputs;
            for (let a = i; a < s; a++) {
              const r = e.data[a],
                s = rt(r);
              s && gs(t, n, r);
              const l = $n(t, e, a, n);
              li(l, t),
                null !== o && ys(0, a - i, l, r, 0, o),
                s && (gt(n.index, t)[8] = l);
            }
          })(e, t, n, dt(n, t)),
          128 == (128 & n.flags) &&
            (function (e, t, n) {
              const r = n.directiveStart,
                i = n.directiveEnd,
                s = e.expandoInstructions,
                o = e.firstCreatePass,
                a = n.index - 20,
                l = Et.lFrame.currentDirectiveIndex;
              try {
                nn(a);
                for (let n = r; n < i; n++) {
                  const r = e.data[n],
                    i = t[n];
                  Ht(n),
                    null !== r.hostBindings ||
                    0 !== r.hostVars ||
                    null !== r.hostAttrs
                      ? us(r, i)
                      : o && s.push(null);
                }
              } finally {
                nn(-1), Ht(l);
              }
            })(e, t, n));
      }
      function es(e, t, n = dt) {
        const r = t.localNames;
        if (null !== r) {
          let i = t.index + 1;
          for (let s = 0; s < r.length; s += 2) {
            const o = r[s + 1],
              a = -1 === o ? n(t, e) : e[o];
            e[i++] = a;
          }
        }
      }
      function ts(e) {
        const t = e.tView;
        return null === t || t.incompleteFirstPass
          ? (e.tView = ns(
              1,
              -1,
              e.template,
              e.decls,
              e.vars,
              e.directiveDefs,
              e.pipeDefs,
              e.viewQuery,
              e.schemas,
              e.consts
            ))
          : t;
      }
      function ns(e, t, n, r, i, s, o, a, l, c) {
        const u = 20 + r,
          h = u + i,
          d = (function (e, t) {
            const n = [];
            for (let r = 0; r < t; r++) n.push(r < e ? null : Di);
            return n;
          })(u, h);
        return (d[1] = {
          type: e,
          id: t,
          blueprint: d,
          template: n,
          queries: null,
          viewQuery: a,
          node: null,
          data: d.slice().fill(null, u),
          bindingStartIndex: u,
          expandoStartIndex: h,
          expandoInstructions: null,
          firstCreatePass: !0,
          firstUpdatePass: !0,
          staticViewQueries: !1,
          staticContentQueries: !1,
          preOrderHooks: null,
          preOrderCheckHooks: null,
          contentHooks: null,
          contentCheckHooks: null,
          viewHooks: null,
          viewCheckHooks: null,
          destroyHooks: null,
          cleanup: null,
          contentQueries: null,
          components: null,
          directiveRegistry: "function" == typeof s ? s() : s,
          pipeRegistry: "function" == typeof o ? o() : o,
          firstChild: null,
          schemas: l,
          consts: c,
          incompleteFirstPass: !1,
        });
      }
      function rs(e, t, n) {
        if (lt(e)) return e.selectRootElement(t, n === Fe.ShadowDom);
        let r = "string" == typeof t ? e.querySelector(t) : t;
        return (r.textContent = ""), r;
      }
      function is(e, t, n, r, i, s) {
        return {
          type: n,
          index: r,
          injectorIndex: t ? t.injectorIndex : -1,
          directiveStart: -1,
          directiveEnd: -1,
          directiveStylingLast: -1,
          propertyBindings: null,
          flags: 0,
          providerIndexes: 0,
          tagName: i,
          attrs: s,
          mergedAttrs: null,
          localNames: null,
          initialInputs: void 0,
          inputs: null,
          outputs: null,
          tViews: null,
          next: null,
          projectionNext: null,
          child: null,
          parent: t,
          projection: null,
          styles: null,
          stylesWithoutHost: null,
          residualStyles: void 0,
          classes: null,
          classesWithoutHost: null,
          residualClasses: void 0,
          classBindings: 0,
          styleBindings: 0,
        };
      }
      function ss(e, t, n) {
        for (let r in e)
          if (e.hasOwnProperty(r)) {
            const i = e[r];
            (n = null === n ? {} : n).hasOwnProperty(r)
              ? n[r].push(t, i)
              : (n[r] = [t, i]);
          }
        return n;
      }
      function os(e, t, n, r, i, s, o, a) {
        const l = dt(t, n);
        let c,
          u = t.inputs;
        var h;
        !a && null != u && (c = u[r])
          ? (Ps(e, n, c, r, i),
            tt(t) &&
              (function (e, t) {
                const n = gt(t, e);
                16 & n[2] || (n[2] |= 64);
              })(n, t.index))
          : 3 === t.type &&
            ((r =
              "class" === (h = r)
                ? "className"
                : "for" === h
                ? "htmlFor"
                : "formaction" === h
                ? "formAction"
                : "innerHtml" === h
                ? "innerHTML"
                : "readonly" === h
                ? "readOnly"
                : "tabindex" === h
                ? "tabIndex"
                : h),
            (i = null != o ? o(i, t.tagName || "", r) : i),
            lt(s)
              ? s.setProperty(l, r, i)
              : _n(r) || (l.setProperty ? l.setProperty(r, i) : (l[r] = i)));
      }
      function as(e, t, n, r) {
        let i = !1;
        if (xt()) {
          const s = (function (e, t, n) {
              const r = e.directiveRegistry;
              let i = null;
              if (r)
                for (let s = 0; s < r.length; s++) {
                  const o = r[s];
                  Ci(n, o.selectors, !1) &&
                    (i || (i = []),
                    Ln(Pn(n, t), e, o.type),
                    rt(o)
                      ? (2 & n.flags && fi(n), ds(e, n), i.unshift(o))
                      : i.push(o));
                }
              return i;
            })(e, t, n),
            o = null === r ? null : { "": -1 };
          if (null !== s) {
            let r = 0;
            (i = !0), ps(n, e.data.length, s.length);
            for (let e = 0; e < s.length; e++) {
              const t = s[e];
              t.providersResolver && t.providersResolver(t);
            }
            hs(e, n, s.length);
            let a = !1,
              l = !1;
            for (let i = 0; i < s.length; i++) {
              const c = s[i];
              (n.mergedAttrs = yn(n.mergedAttrs, c.hostAttrs)),
                ms(e, t, c),
                fs(e.data.length - 1, c, o),
                null !== c.contentQueries && (n.flags |= 8),
                (null === c.hostBindings &&
                  null === c.hostAttrs &&
                  0 === c.hostVars) ||
                  (n.flags |= 128),
                !a &&
                  (c.onChanges || c.onInit || c.doCheck) &&
                  ((e.preOrderHooks || (e.preOrderHooks = [])).push(
                    n.index - 20
                  ),
                  (a = !0)),
                l ||
                  (!c.onChanges && !c.doCheck) ||
                  ((e.preOrderCheckHooks || (e.preOrderCheckHooks = [])).push(
                    n.index - 20
                  ),
                  (l = !0)),
                ls(e, c),
                (r += c.hostVars);
            }
            !(function (e, t) {
              const n = t.directiveEnd,
                r = e.data,
                i = t.attrs,
                s = [];
              let o = null,
                a = null;
              for (let l = t.directiveStart; l < n; l++) {
                const e = r[l],
                  n = e.inputs,
                  c = null === i || _i(t) ? null : vs(n, i);
                s.push(c), (o = ss(n, l, o)), (a = ss(e.outputs, l, a));
              }
              null !== o &&
                (o.hasOwnProperty("class") && (t.flags |= 16),
                o.hasOwnProperty("style") && (t.flags |= 32)),
                (t.initialInputs = s),
                (t.inputs = o),
                (t.outputs = a);
            })(e, n),
              cs(e, t, r);
          }
          o &&
            (function (e, t, n) {
              if (t) {
                const r = (e.localNames = []);
                for (let e = 0; e < t.length; e += 2) {
                  const i = n[t[e + 1]];
                  if (null == i)
                    throw new Error(`Export of name '${t[e + 1]}' not found!`);
                  r.push(t[e], i);
                }
              }
            })(n, r, o);
        }
        return (n.mergedAttrs = yn(n.mergedAttrs, n.attrs)), i;
      }
      function ls(e, t) {
        const n = e.expandoInstructions;
        n.push(t.hostBindings), 0 !== t.hostVars && n.push(t.hostVars);
      }
      function cs(e, t, n) {
        for (let r = 0; r < n; r++)
          t.push(Di), e.blueprint.push(Di), e.data.push(null);
      }
      function us(e, t) {
        null !== e.hostBindings && e.hostBindings(1, t);
      }
      function hs(e, t, n) {
        const r = 20 - t.index,
          i = e.data.length - (65535 & t.providerIndexes);
        (e.expandoInstructions || (e.expandoInstructions = [])).push(r, i, n);
      }
      function ds(e, t) {
        (t.flags |= 2), (e.components || (e.components = [])).push(t.index);
      }
      function fs(e, t, n) {
        if (n) {
          if (t.exportAs)
            for (let r = 0; r < t.exportAs.length; r++) n[t.exportAs[r]] = e;
          rt(t) && (n[""] = e);
        }
      }
      function ps(e, t, n) {
        (e.flags |= 1),
          (e.directiveStart = t),
          (e.directiveEnd = t + n),
          (e.providerIndexes = t);
      }
      function ms(e, t, n) {
        e.data.push(n);
        const r = n.factory || (n.factory = Ze(n.type)),
          i = new pn(r, rt(n), null);
        e.blueprint.push(i), t.push(i);
      }
      function gs(e, t, n) {
        const r = dt(t, e),
          i = ts(n),
          s = e[10],
          o = Ss(
            e,
            Gi(e, i, null, n.onPush ? 64 : 16, r, t, s, s.createRenderer(r, n))
          );
        e[t.index] = o;
      }
      function _s(e, t, n, r, i, s) {
        const o = dt(e, t),
          a = t[11];
        if (null == r)
          lt(a) ? a.removeAttribute(o, n, s) : o.removeAttribute(n);
        else {
          const t = null == i ? En(r) : i(r, e.tagName || "", n);
          lt(a)
            ? a.setAttribute(o, n, t, s)
            : s
            ? o.setAttributeNS(s, n, t)
            : o.setAttribute(n, t);
        }
      }
      function ys(e, t, n, r, i, s) {
        const o = s[t];
        if (null !== o) {
          const e = r.setInput;
          for (let t = 0; t < o.length; ) {
            const i = o[t++],
              s = o[t++],
              a = o[t++];
            null !== e ? r.setInput(n, a, i, s) : (n[s] = a);
          }
        }
      }
      function vs(e, t) {
        let n = null,
          r = 0;
        for (; r < t.length; ) {
          const i = t[r];
          if (0 !== i)
            if (5 !== i) {
              if ("number" == typeof i) break;
              e.hasOwnProperty(i) &&
                (null === n && (n = []), n.push(i, e[i], t[r + 1])),
                (r += 2);
            } else r += 2;
          else r += 4;
        }
        return n;
      }
      function bs(e, t, n, r) {
        return new Array(e, !0, !1, t, null, 0, r, n, null, null);
      }
      function ws(e, t) {
        const n = gt(t, e);
        if (bt(n)) {
          const e = n[1];
          80 & n[2]
            ? Ki(e, n, e.template, n[8])
            : n[5] > 0 &&
              (function e(t) {
                for (let r = ki(t); null !== r; r = Ri(r))
                  for (let t = 10; t < r.length; t++) {
                    const n = r[t];
                    if (1024 & n[2]) {
                      const e = n[1];
                      Ki(e, n, e.template, n[8]);
                    } else n[5] > 0 && e(n);
                  }
                const n = t[1].components;
                if (null !== n)
                  for (let r = 0; r < n.length; r++) {
                    const i = gt(n[r], t);
                    bt(i) && i[5] > 0 && e(i);
                  }
              })(n);
        }
      }
      function Cs(e, t) {
        const n = gt(t, e),
          r = n[1];
        !(function (e, t) {
          for (let n = t.length; n < e.blueprint.length; n++)
            t.push(e.blueprint[n]);
        })(r, n),
          Qi(r, n, n[8]);
      }
      function Ss(e, t) {
        return e[13] ? (e[14][4] = t) : (e[13] = t), (e[14] = t), t;
      }
      function Es(e) {
        for (; e; ) {
          e[2] |= 64;
          const t = Ii(e);
          if (it(e) && !t) return e;
          e = t;
        }
        return null;
      }
      function xs(e) {
        for (let t = 0; t < e.components.length; t++) {
          const n = e.components[t],
            r = yt(n),
            i = r[1];
          Zi(i, r, i.template, n);
        }
      }
      function Ds(e, t, n) {
        const r = t[10];
        r.begin && r.begin();
        try {
          Ki(e, t, e.template, n);
        } catch (i) {
          throw (Fs(t, i), i);
        } finally {
          r.end && r.end();
        }
      }
      function Is(e) {
        xs(e[8]);
      }
      function Os(e, t, n) {
        Gt(0), t(e, n);
      }
      const ks = Hi;
      function Rs(e) {
        return e[7] || (e[7] = []);
      }
      function As(e) {
        return e.cleanup || (e.cleanup = []);
      }
      function Ts(e, t, n) {
        return (
          (null === e || rt(e)) &&
            (n = (function (e) {
              for (; Array.isArray(e); ) {
                if ("object" == typeof e[1]) return e;
                e = e[0];
              }
              return null;
            })(n[t.index])),
          n[11]
        );
      }
      function Fs(e, t) {
        const n = e[9],
          r = n ? n.get(Jn, null) : null;
        r && r.handleError(t);
      }
      function Ps(e, t, n, r, i) {
        for (let s = 0; s < n.length; ) {
          const o = n[s++],
            a = n[s++],
            l = t[o],
            c = e.data[o];
          null !== c.setInput ? c.setInput(l, i, r, a) : (l[a] = i);
        }
      }
      function js(e, t, n) {
        const r = ht(t, e),
          i = e[11];
        lt(i) ? i.setValue(r, n) : (r.textContent = n);
      }
      function Ns(e, t) {
        const n = t[3];
        return -1 === e.index ? (Je(n) ? n : null) : n;
      }
      function Ms(e, t) {
        const n = Ns(e, t);
        return n ? Zs(t[11], n[7]) : null;
      }
      function Ls(e, t, n, r, i) {
        if (null != r) {
          let s,
            o = !1;
          Je(r) ? (s = r) : Xe(r) && ((o = !0), (r = r[0]));
          const a = ut(r);
          0 === e && null !== n
            ? null == i
              ? Qs(t, n, a)
              : Ws(t, n, a, i || null)
            : 1 === e && null !== n
            ? Ws(t, n, a, i || null)
            : 2 === e
            ? eo(t, a, o)
            : 3 === e && t.destroyNode(a),
            null != s &&
              (function (e, t, n, r, i) {
                const s = n[7];
                s !== ut(n) && Ls(t, e, r, s, i);
                for (let o = 10; o < n.length; o++) {
                  const i = n[o];
                  no(i[1], i, e, t, r, s);
                }
              })(t, e, s, n, i);
        }
      }
      function Vs(e, t) {
        return lt(t) ? t.createText(e) : t.createTextNode(e);
      }
      function Bs(e, t, n, r) {
        const i = Ms(e.node, t);
        i && no(e, t, t[11], n ? 1 : 2, i, r);
      }
      function zs(e, t) {
        const n = e[9],
          r = n.indexOf(t);
        1024 & t[2] && St(t[3], -1), n.splice(r, 1);
      }
      function Us(e, t) {
        if (e.length <= 10) return;
        const n = 10 + t,
          r = e[n];
        if (r) {
          const i = r[17];
          null !== i && i !== e && zs(i, r), t > 0 && (e[n - 1][4] = r[4]);
          const s = xe(e, 10 + t);
          Bs(r[1], r, !1, null);
          const o = s[19];
          null !== o && o.detachView(s[1]),
            (r[3] = null),
            (r[4] = null),
            (r[2] &= -129);
        }
        return r;
      }
      function Hs(e, t) {
        if (!(256 & t[2])) {
          const n = t[11];
          lt(n) && n.destroyNode && no(e, t, n, 3, null, null),
            (function (e) {
              let t = e[13];
              if (!t) return qs(e[1], e);
              for (; t; ) {
                let n = null;
                if (Xe(t)) n = t[13];
                else {
                  const e = t[10];
                  e && (n = e);
                }
                if (!n) {
                  for (; t && !t[4] && t !== e; )
                    Xe(t) && qs(t[1], t), (t = $s(t, e));
                  null === t && (t = e), Xe(t) && qs(t[1], t), (n = t && t[4]);
                }
                t = n;
              }
            })(t);
        }
      }
      function $s(e, t) {
        let n;
        return Xe(e) && (n = e[6]) && 2 === n.type
          ? Ns(n, e)
          : e[3] === t
          ? null
          : e[3];
      }
      function qs(e, t) {
        if (!(256 & t[2])) {
          (t[2] &= -129),
            (t[2] |= 256),
            (function (e, t) {
              let n;
              if (null != e && null != (n = e.destroyHooks))
                for (let r = 0; r < n.length; r += 2) {
                  const e = t[n[r]];
                  if (!(e instanceof pn)) {
                    const t = n[r + 1];
                    if (Array.isArray(t))
                      for (let n = 0; n < t.length; n += 2)
                        t[n + 1].call(e[t[n]]);
                    else t.call(e);
                  }
                }
            })(e, t),
            (function (e, t) {
              const n = e.cleanup;
              if (null !== n) {
                const e = t[7];
                for (let r = 0; r < n.length - 1; r += 2)
                  if ("string" == typeof n[r]) {
                    const i = n[r + 1],
                      s = "function" == typeof i ? i(t) : ut(t[i]),
                      o = e[n[r + 2]],
                      a = n[r + 3];
                    "boolean" == typeof a
                      ? s.removeEventListener(n[r], o, a)
                      : a >= 0
                      ? e[a]()
                      : e[-a].unsubscribe(),
                      (r += 2);
                  } else n[r].call(e[n[r + 1]]);
                t[7] = null;
              }
            })(e, t);
          const n = t[6];
          n && 3 === n.type && lt(t[11]) && t[11].destroy();
          const r = t[17];
          if (null !== r && Je(t[3])) {
            r !== t[3] && zs(r, t);
            const n = t[19];
            null !== n && n.detachView(e);
          }
        }
      }
      function Gs(e, t, n) {
        let r = t.parent;
        for (; null != r && (4 === r.type || 5 === r.type); )
          r = (t = r).parent;
        if (null == r) {
          const e = n[6];
          return 2 === e.type ? Ms(e, n) : n[0];
        }
        if (t && 5 === t.type && 4 & t.flags) return dt(t, n).parentNode;
        if (2 & r.flags) {
          const t = e.data,
            n = t[t[r.index].directiveStart].encapsulation;
          if (n !== Fe.ShadowDom && n !== Fe.Native) return null;
        }
        return dt(r, n);
      }
      function Ws(e, t, n, r) {
        lt(e) ? e.insertBefore(t, n, r) : t.insertBefore(n, r, !0);
      }
      function Qs(e, t, n) {
        lt(e) ? e.appendChild(t, n) : t.appendChild(n);
      }
      function Ks(e, t, n, r) {
        null !== r ? Ws(e, t, n, r) : Qs(e, t, n);
      }
      function Zs(e, t) {
        return lt(e) ? e.parentNode(t) : t.parentNode;
      }
      function Ys(e, t) {
        if (2 === e.type) {
          const n = Ns(e, t);
          return null === n ? null : Js(n.indexOf(t, 10) - 10, n);
        }
        return 4 === e.type || 5 === e.type ? dt(e, t) : null;
      }
      function Xs(e, t, n, r) {
        const i = Gs(e, r, t);
        if (null != i) {
          const e = t[11],
            s = Ys(r.parent || t[6], t);
          if (Array.isArray(n))
            for (let t = 0; t < n.length; t++) Ks(e, i, n[t], s);
          else Ks(e, i, n, s);
        }
      }
      function Js(e, t) {
        const n = 10 + e + 1;
        if (n < t.length) {
          const e = t[n],
            r = e[1].firstChild;
          if (null !== r)
            return (function e(t, n) {
              if (null !== n) {
                const r = n.type;
                if (3 === r) return dt(n, t);
                if (0 === r) return Js(-1, t[n.index]);
                if (4 === r || 5 === r) {
                  const r = n.child;
                  if (null !== r) return e(t, r);
                  {
                    const e = t[n.index];
                    return Je(e) ? Js(-1, e) : ut(e);
                  }
                }
                {
                  const r = t[16],
                    i = r[6],
                    s = Ii(r),
                    o = i.projection[n.projection];
                  return null != o ? e(s, o) : e(t, n.next);
                }
              }
              return null;
            })(e, r);
        }
        return t[7];
      }
      function eo(e, t, n) {
        const r = Zs(e, t);
        r &&
          (function (e, t, n, r) {
            lt(e) ? e.removeChild(t, n, r) : t.removeChild(n);
          })(e, r, t, n);
      }
      function to(e, t, n, r, i, s, o) {
        for (; null != n; ) {
          const a = r[n.index],
            l = n.type;
          o && 0 === t && (a && li(ut(a), r), (n.flags |= 4)),
            64 != (64 & n.flags) &&
              (4 === l || 5 === l
                ? (to(e, t, n.child, r, i, s, !1), Ls(t, e, i, a, s))
                : 1 === l
                ? io(e, t, r, n, i, s)
                : Ls(t, e, i, a, s)),
            (n = o ? n.projectionNext : n.next);
        }
      }
      function no(e, t, n, r, i, s) {
        to(n, r, e.node.child, t, i, s, !1);
      }
      function ro(e, t, n) {
        io(t[11], 0, t, n, Gs(e, n, t), Ys(n.parent || t[6], t));
      }
      function io(e, t, n, r, i, s) {
        const o = n[16],
          a = o[6].projection[r.projection];
        if (Array.isArray(a))
          for (let l = 0; l < a.length; l++) Ls(t, e, i, a[l], s);
        else to(e, t, a, o[3], i, s, !0);
      }
      function so(e, t, n) {
        lt(e) ? e.setAttribute(t, "style", n) : (t.style.cssText = n);
      }
      function oo(e, t, n) {
        lt(e)
          ? "" === n
            ? e.removeAttribute(t, "class")
            : e.setAttribute(t, "class", n)
          : (t.className = n);
      }
      class ao {
        constructor(e, t) {
          (this._lView = e),
            (this._cdRefInjectingView = t),
            (this._appRef = null),
            (this._viewContainerRef = null);
        }
        get rootNodes() {
          const e = this._lView;
          return null == e[0]
            ? (function e(t, n, r, i, s = !1) {
                for (; null !== r; ) {
                  const o = n[r.index];
                  if ((null !== o && i.push(ut(o)), Je(o)))
                    for (let t = 10; t < o.length; t++) {
                      const n = o[t],
                        r = n[1].firstChild;
                      null !== r && e(n[1], n, r, i);
                    }
                  const a = r.type;
                  if (4 === a || 5 === a) e(t, n, r.child, i);
                  else if (1 === a) {
                    const t = n[16],
                      s = t[6].projection[r.projection];
                    if (Array.isArray(s)) i.push(...s);
                    else {
                      const n = Ii(t);
                      e(n[1], n, s, i, !0);
                    }
                  }
                  r = s ? r.projectionNext : r.next;
                }
                return i;
              })(e[1], e, e[6].child, [])
            : [];
        }
        get context() {
          return this._lView[8];
        }
        get destroyed() {
          return 256 == (256 & this._lView[2]);
        }
        destroy() {
          if (this._appRef) this._appRef.detachView(this);
          else if (this._viewContainerRef) {
            const e = this._viewContainerRef.indexOf(this);
            e > -1 && this._viewContainerRef.detach(e),
              (this._viewContainerRef = null);
          }
          Hs(this._lView[1], this._lView);
        }
        onDestroy(e) {
          var t, n, r;
          (t = this._lView[1]),
            (r = e),
            Rs((n = this._lView)).push(r),
            t.firstCreatePass && As(t).push(n[7].length - 1, null);
        }
        markForCheck() {
          Es(this._cdRefInjectingView || this._lView);
        }
        detach() {
          this._lView[2] &= -129;
        }
        reattach() {
          this._lView[2] |= 128;
        }
        detectChanges() {
          Ds(this._lView[1], this._lView, this.context);
        }
        checkNoChanges() {
          !(function (e, t, n) {
            Nt(!0);
            try {
              Ds(e, t, n);
            } finally {
              Nt(!1);
            }
          })(this._lView[1], this._lView, this.context);
        }
        attachToViewContainerRef(e) {
          if (this._appRef)
            throw new Error(
              "This view is already attached directly to the ApplicationRef!"
            );
          this._viewContainerRef = e;
        }
        detachFromAppRef() {
          var e;
          (this._appRef = null),
            no(this._lView[1], (e = this._lView), e[11], 2, null, null);
        }
        attachToAppRef(e) {
          if (this._viewContainerRef)
            throw new Error(
              "This view is already attached to a ViewContainer!"
            );
          this._appRef = e;
        }
      }
      class lo extends ao {
        constructor(e) {
          super(e), (this._view = e);
        }
        detectChanges() {
          Is(this._view);
        }
        checkNoChanges() {
          !(function (e) {
            Nt(!0);
            try {
              Is(e);
            } finally {
              Nt(!1);
            }
          })(this._view);
        }
        get context() {
          return null;
        }
      }
      let co, uo, ho;
      function fo(e, t, n) {
        return co || (co = class extends e {}), new co(dt(t, n));
      }
      function po(e, t, n, r) {
        return (
          uo ||
            (uo = class extends e {
              constructor(e, t, n) {
                super(),
                  (this._declarationView = e),
                  (this._declarationTContainer = t),
                  (this.elementRef = n);
              }
              createEmbeddedView(e) {
                const t = this._declarationTContainer.tViews,
                  n = Gi(this._declarationView, t, e, 16, null, t.node);
                n[17] = this._declarationView[
                  this._declarationTContainer.index
                ];
                const r = this._declarationView[19];
                return (
                  null !== r && (n[19] = r.createEmbeddedView(t)),
                  Qi(t, n, e),
                  new ao(n)
                );
              }
            }),
          0 === n.type ? new uo(r, n, fo(t, n, r)) : null
        );
      }
      function mo(e, t, n, r) {
        let i;
        ho ||
          (ho = class extends e {
            constructor(e, t, n) {
              super(),
                (this._lContainer = e),
                (this._hostTNode = t),
                (this._hostView = n);
            }
            get element() {
              return fo(t, this._hostTNode, this._hostView);
            }
            get injector() {
              return new Wn(this._hostTNode, this._hostView);
            }
            get parentInjector() {
              const e = Mn(this._hostTNode, this._hostView),
                t = Sn(e, this._hostView),
                n = (function (e, t, n) {
                  if (n.parent && -1 !== n.parent.injectorIndex) {
                    const e = n.parent.injectorIndex;
                    let t = n.parent;
                    for (; null != t.parent && e == t.parent.injectorIndex; )
                      t = t.parent;
                    return t;
                  }
                  let r = Cn(e),
                    i = t,
                    s = t[6];
                  for (; r > 1; ) (i = i[15]), (s = i[6]), r--;
                  return s;
                })(e, this._hostView, this._hostTNode);
              return bn(e) && null != n
                ? new Wn(n, t)
                : new Wn(null, this._hostView);
            }
            clear() {
              for (; this.length > 0; ) this.remove(this.length - 1);
            }
            get(e) {
              return (
                (null !== this._lContainer[8] && this._lContainer[8][e]) || null
              );
            }
            get length() {
              return this._lContainer.length - 10;
            }
            createEmbeddedView(e, t, n) {
              const r = e.createEmbeddedView(t || {});
              return this.insert(r, n), r;
            }
            createComponent(e, t, n, r, i) {
              const s = n || this.parentInjector;
              if (!i && null == e.ngModule && s) {
                const e = s.get(ve, null);
                e && (i = e);
              }
              const o = e.create(s, r, void 0, i);
              return this.insert(o.hostView, t), o;
            }
            insert(e, t) {
              const n = e._lView,
                r = n[1];
              if (e.destroyed)
                throw new Error(
                  "Cannot insert a destroyed View in a ViewContainer!"
                );
              if ((this.allocateContainerIfNeeded(), Je(n[3]))) {
                const t = this.indexOf(e);
                if (-1 !== t) this.detach(t);
                else {
                  const t = n[3],
                    r = new ho(t, t[6], t[3]);
                  r.detach(r.indexOf(e));
                }
              }
              const i = this._adjustIndex(t);
              return (
                (function (e, t, n, r) {
                  const i = 10 + r,
                    s = n.length;
                  r > 0 && (n[i - 1][4] = t),
                    r < s - 10
                      ? ((t[4] = n[i]), Ee(n, 10 + r, t))
                      : (n.push(t), (t[4] = null)),
                    (t[3] = n);
                  const o = t[17];
                  null !== o &&
                    n !== o &&
                    (function (e, t) {
                      const n = e[9];
                      t[16] !== t[3][3][16] && (e[2] = !0),
                        null === n ? (e[9] = [t]) : n.push(t);
                    })(o, t);
                  const a = t[19];
                  null !== a && a.insertView(e), (t[2] |= 128);
                })(r, n, this._lContainer, i),
                Bs(r, n, !0, Js(i, this._lContainer)),
                e.attachToViewContainerRef(this),
                Ee(this._lContainer[8], i, e),
                e
              );
            }
            move(e, t) {
              if (e.destroyed)
                throw new Error(
                  "Cannot move a destroyed View in a ViewContainer!"
                );
              return this.insert(e, t);
            }
            indexOf(e) {
              const t = this._lContainer[8];
              return null !== t ? t.indexOf(e) : -1;
            }
            remove(e) {
              this.allocateContainerIfNeeded();
              const t = this._adjustIndex(e, -1);
              !(function (e, t) {
                const n = Us(e, t);
                n && Hs(n[1], n);
              })(this._lContainer, t),
                xe(this._lContainer[8], t);
            }
            detach(e) {
              this.allocateContainerIfNeeded();
              const t = this._adjustIndex(e, -1),
                n = Us(this._lContainer, t);
              return n && null != xe(this._lContainer[8], t) ? new ao(n) : null;
            }
            _adjustIndex(e, t = 0) {
              return null == e ? this.length + t : e;
            }
            allocateContainerIfNeeded() {
              null === this._lContainer[8] && (this._lContainer[8] = []);
            }
          });
        const s = r[n.index];
        if (Je(s)) i = s;
        else {
          let e;
          if (4 === n.type) e = ut(s);
          else if (((e = r[11].createComment("")), it(r))) {
            const t = r[11],
              i = dt(n, r);
            Ws(
              t,
              Zs(t, i),
              e,
              (function (e, t) {
                return lt(e) ? e.nextSibling(t) : t.nextSibling;
              })(t, i)
            );
          } else Xs(r[1], r, e, n);
          (r[n.index] = i = bs(s, r, e, n)), Ss(r, i);
        }
        return new ho(i, n, r);
      }
      function go(e = !1) {
        return (function (e, t, n) {
          if (!n && tt(e)) {
            const n = gt(e.index, t);
            return new ao(n, n);
          }
          return 3 === e.type || 0 === e.type || 4 === e.type || 5 === e.type
            ? new ao(t[16], t)
            : null;
        })(At(), Ot(), e);
      }
      let _o = (() => {
        class e {}
        return (e.__NG_ELEMENT_ID__ = () => vo()), e;
      })();
      const yo = go,
        vo = yo,
        bo = Function;
      function wo(e) {
        return "function" == typeof e;
      }
      const Co = /^function\s+\S+\(\)\s*{[\s\S]+\.apply\(this,\s*arguments\)/,
        So = /^class\s+[A-Za-z\d$_]*\s*extends\s+[^{]+{/,
        Eo = /^class\s+[A-Za-z\d$_]*\s*extends\s+[^{]+{[\s\S]*constructor\s*\(/,
        xo = /^class\s+[A-Za-z\d$_]*\s*extends\s+[^{]+{[\s\S]*constructor\s*\(\)\s*{\s*super\(\.\.\.arguments\)/;
      class Do {
        constructor(e) {
          this._reflect = e || G.Reflect;
        }
        isReflectionEnabled() {
          return !0;
        }
        factory(e) {
          return (...t) => new e(...t);
        }
        _zipTypesAndAnnotations(e, t) {
          let n;
          n = De(void 0 === e ? t.length : e.length);
          for (let r = 0; r < n.length; r++)
            (n[r] = void 0 === e ? [] : e[r] && e[r] != Object ? [e[r]] : []),
              t && null != t[r] && (n[r] = n[r].concat(t[r]));
          return n;
        }
        _ownParameters(e, t) {
          if (
            ((n = e.toString()),
            Co.test(n) || xo.test(n) || (So.test(n) && !Eo.test(n)))
          )
            return null;
          var n;
          if (e.parameters && e.parameters !== t.parameters)
            return e.parameters;
          const r = e.ctorParameters;
          if (r && r !== t.ctorParameters) {
            const e = "function" == typeof r ? r() : r,
              t = e.map((e) => e && e.type),
              n = e.map((e) => e && Io(e.decorators));
            return this._zipTypesAndAnnotations(t, n);
          }
          const i = e.hasOwnProperty(u) && e[u],
            s =
              this._reflect &&
              this._reflect.getOwnMetadata &&
              this._reflect.getOwnMetadata("design:paramtypes", e);
          return s || i ? this._zipTypesAndAnnotations(s, i) : De(e.length);
        }
        parameters(e) {
          if (!wo(e)) return [];
          const t = Oo(e);
          let n = this._ownParameters(e, t);
          return n || t === Object || (n = this.parameters(t)), n || [];
        }
        _ownAnnotations(e, t) {
          if (e.annotations && e.annotations !== t.annotations) {
            let t = e.annotations;
            return (
              "function" == typeof t && t.annotations && (t = t.annotations), t
            );
          }
          return e.decorators && e.decorators !== t.decorators
            ? Io(e.decorators)
            : e.hasOwnProperty(c)
            ? e[c]
            : null;
        }
        annotations(e) {
          if (!wo(e)) return [];
          const t = Oo(e),
            n = this._ownAnnotations(e, t) || [];
          return (t !== Object ? this.annotations(t) : []).concat(n);
        }
        _ownPropMetadata(e, t) {
          if (e.propMetadata && e.propMetadata !== t.propMetadata) {
            let t = e.propMetadata;
            return (
              "function" == typeof t && t.propMetadata && (t = t.propMetadata),
              t
            );
          }
          if (e.propDecorators && e.propDecorators !== t.propDecorators) {
            const t = e.propDecorators,
              n = {};
            return (
              Object.keys(t).forEach((e) => {
                n[e] = Io(t[e]);
              }),
              n
            );
          }
          return e.hasOwnProperty(h) ? e[h] : null;
        }
        propMetadata(e) {
          if (!wo(e)) return {};
          const t = Oo(e),
            n = {};
          if (t !== Object) {
            const e = this.propMetadata(t);
            Object.keys(e).forEach((t) => {
              n[t] = e[t];
            });
          }
          const r = this._ownPropMetadata(e, t);
          return (
            r &&
              Object.keys(r).forEach((e) => {
                const t = [];
                n.hasOwnProperty(e) && t.push(...n[e]),
                  t.push(...r[e]),
                  (n[e] = t);
              }),
            n
          );
        }
        ownPropMetadata(e) {
          return (wo(e) && this._ownPropMetadata(e, Oo(e))) || {};
        }
        hasLifecycleHook(e, t) {
          return e instanceof bo && t in e.prototype;
        }
        guards(e) {
          return {};
        }
        getter(e) {
          return new Function("o", "return o." + e + ";");
        }
        setter(e) {
          return new Function("o", "v", "return o." + e + " = v;");
        }
        method(e) {
          return new Function(
            "o",
            "args",
            `if (!o.${e}) throw new Error('"${e}" is undefined');\n        return o.${e}.apply(o, args);`
          );
        }
        importUri(e) {
          return "object" == typeof e && e.filePath ? e.filePath : "./" + N(e);
        }
        resourceUri(e) {
          return "./" + N(e);
        }
        resolveIdentifier(e, t, n, r) {
          return r;
        }
        resolveEnum(e, t) {
          return e[t];
        }
      }
      function Io(e) {
        return e
          ? e.map(
              (e) => new (0, e.type.annotationCls)(...(e.args ? e.args : []))
            )
          : [];
      }
      function Oo(e) {
        const t = e.prototype ? Object.getPrototypeOf(e.prototype) : null;
        return (t ? t.constructor : null) || Object;
      }
      let ko = null;
      function Ro() {
        return (ko = ko || new Do());
      }
      function Ao(e) {
        return To(Ro().parameters(e));
      }
      function To(e) {
        const t = Q();
        return e.map((e) =>
          (function (e, t) {
            const n = {
              token: null,
              host: !1,
              optional: !1,
              resolved: e.R3ResolvedDependencyType.Token,
              self: !1,
              skipSelf: !1,
            };
            function r(t) {
              (n.resolved = e.R3ResolvedDependencyType.Token), (n.token = t);
            }
            if (Array.isArray(t) && t.length > 0)
              for (let i = 0; i < t.length; i++) {
                const s = t[i];
                if (void 0 === s) continue;
                const o = Object.getPrototypeOf(s);
                if (s instanceof _ || "Optional" === o.ngMetadataName)
                  n.optional = !0;
                else if (s instanceof v || "SkipSelf" === o.ngMetadataName)
                  n.skipSelf = !0;
                else if (s instanceof y || "Self" === o.ngMetadataName)
                  n.self = !0;
                else if (s instanceof b || "Host" === o.ngMetadataName)
                  n.host = !0;
                else if (s instanceof g) n.token = s.token;
                else if (s instanceof w) {
                  if (void 0 === s.attributeName)
                    throw new Error("Attribute name must be defined.");
                  (n.token = s.attributeName),
                    (n.resolved = e.R3ResolvedDependencyType.Attribute);
                } else
                  s === _o
                    ? ((n.token = s),
                      (n.resolved =
                        e.R3ResolvedDependencyType.ChangeDetectorRef))
                    : r(s);
              }
            else
              void 0 === t || (Array.isArray(t) && 0 === t.length)
                ? ((n.token = void 0), (n.resolved = W.Invalid))
                : r(t);
            return n;
          })(t, e)
        );
      }
      const Fo = S({ provide: String, useValue: S });
      function Po(e) {
        return void 0 !== e.useClass;
      }
      function jo(e) {
        return void 0 !== e.useFactory;
      }
      function No(e, t) {
        const n = t || { providedIn: null },
          r = {
            name: e.name,
            type: e,
            typeArgumentCount: 0,
            providedIn: n.providedIn,
            userDeps: void 0,
          };
        return (
          (Po(n) || jo(n)) && void 0 !== n.deps && (r.userDeps = To(n.deps)),
          Po(n)
            ? (r.useClass = B(n.useClass))
            : (function (e) {
                return Fo in e;
              })(n)
            ? (r.useValue = B(n.useValue))
            : jo(n)
            ? (r.useFactory = n.useFactory)
            : (function (e) {
                return void 0 !== e.useExisting;
              })(n) && (r.useExisting = B(n.useExisting)),
          r
        );
      }
      const Mo = d("Injectable", void 0, void 0, void 0, (e, t) => Vo(e, t)),
        Lo = function (e, t) {
          let n = null,
            r = null;
          e.hasOwnProperty(A) ||
            (Object.defineProperty(e, A, {
              get: () => (
                null === n &&
                  (n = Q().compileInjectable(
                    ye,
                    `ng:///${e.name}/\u0275prov.js`,
                    No(e, t)
                  )),
                n
              ),
            }),
            e.hasOwnProperty(F) || (e[F] = () => e[A])),
            e.hasOwnProperty(ee) ||
              Object.defineProperty(e, ee, {
                get: () => {
                  if (null === r) {
                    const n = No(e, t),
                      i = Q();
                    r = i.compileFactory(ye, `ng:///${e.name}/\u0275fac.js`, {
                      name: n.name,
                      type: n.type,
                      typeArgumentCount: n.typeArgumentCount,
                      deps: Ao(e),
                      injectFn: "inject",
                      target: i.R3FactoryTarget.Injectable,
                    });
                  }
                  return r;
                },
                configurable: !0,
              });
        },
        Vo = Lo,
        Bo = new ne("Set Injector scope."),
        zo = {},
        Uo = {},
        Ho = [];
      let $o = void 0;
      function qo() {
        return void 0 === $o && ($o = new _e()), $o;
      }
      function Go(e, t = null, n = null, r) {
        const i = Wo(e, t, n, r);
        return i._resolveInjectorDefTypes(), i;
      }
      function Wo(e, t = null, n = null, r) {
        return new Qo(e, n, t || qo(), r);
      }
      class Qo {
        constructor(e, t, n, r = null) {
          (this.parent = n),
            (this.records = new Map()),
            (this.injectorDefTypes = new Set()),
            (this.onDestroy = new Set()),
            (this._destroyed = !1);
          const i = [];
          t && Se(t, (n) => this.processProvider(n, e, t)),
            Se([e], (e) => this.processInjectorType(e, [], i)),
            this.records.set(re, Yo(void 0, this));
          const s = this.records.get(Bo);
          (this.scope = null != s ? s.value : null),
            (this.source = r || ("object" == typeof e ? null : N(e)));
        }
        get destroyed() {
          return this._destroyed;
        }
        destroy() {
          this.assertNotDestroyed(), (this._destroyed = !0);
          try {
            this.onDestroy.forEach((e) => e.ngOnDestroy());
          } finally {
            this.records.clear(),
              this.onDestroy.clear(),
              this.injectorDefTypes.clear();
          }
        }
        get(e, t = ie, n = C.Default) {
          this.assertNotDestroyed();
          const r = ce(this);
          try {
            if (!(n & C.SkipSelf)) {
              let t = this.records.get(e);
              if (void 0 === t) {
                const n =
                  ("function" == typeof (i = e) ||
                    ("object" == typeof i && i instanceof ne)) &&
                  O(e);
                (t = n && this.injectableDefInScope(n) ? Yo(Ko(e), zo) : null),
                  this.records.set(e, t);
              }
              if (null != t) return this.hydrate(e, t);
            }
            return (n & C.Self ? qo() : this.parent).get(
              e,
              (t = n & C.Optional && t === ie ? null : t)
            );
          } catch (s) {
            if ("NullInjectorError" === s.name) {
              if (
                ((s.ngTempTokenPath = s.ngTempTokenPath || []).unshift(N(e)), r)
              )
                throw s;
              return (function (e, t, n, r) {
                const i = e.ngTempTokenPath;
                throw (
                  (t.__source && i.unshift(t.__source),
                  (e.message = (function (e, t, n, r = null) {
                    e =
                      e && "\n" === e.charAt(0) && "\u0275" == e.charAt(1)
                        ? e.substr(2)
                        : e;
                    let i = N(t);
                    if (Array.isArray(t)) i = t.map(N).join(" -> ");
                    else if ("object" == typeof t) {
                      let e = [];
                      for (let n in t)
                        if (t.hasOwnProperty(n)) {
                          let r = t[n];
                          e.push(
                            n +
                              ":" +
                              ("string" == typeof r ? JSON.stringify(r) : N(r))
                          );
                        }
                      i = `{${e.join(", ")}}`;
                    }
                    return `${n}${r ? "(" + r + ")" : ""}[${i}]: ${e.replace(
                      se,
                      "\n  "
                    )}`;
                  })("\n" + e.message, i, n, r)),
                  (e.ngTokenPath = i),
                  (e.ngTempTokenPath = null),
                  e)
                );
              })(s, e, "R3InjectorError", this.source);
            }
            throw s;
          } finally {
            ce(r);
          }
          var i;
        }
        _resolveInjectorDefTypes() {
          this.injectorDefTypes.forEach((e) => this.get(e));
        }
        toString() {
          const e = [];
          return (
            this.records.forEach((t, n) => e.push(N(n))),
            `R3Injector[${e.join(", ")}]`
          );
        }
        assertNotDestroyed() {
          if (this._destroyed)
            throw new Error("Injector has already been destroyed.");
        }
        processInjectorType(e, t, n) {
          if (!(e = B(e))) return !1;
          let r = R(e);
          const i = (null == r && e.ngModule) || void 0,
            s = void 0 === i ? e : i,
            o = -1 !== n.indexOf(s);
          if ((void 0 !== i && (r = R(i)), null == r)) return !1;
          if (null != r.imports && !o) {
            let e;
            n.push(s);
            try {
              Se(r.imports, (r) => {
                this.processInjectorType(r, t, n) &&
                  (void 0 === e && (e = []), e.push(r));
              });
            } finally {
            }
            if (void 0 !== e)
              for (let t = 0; t < e.length; t++) {
                const { ngModule: n, providers: r } = e[t];
                Se(r, (e) => this.processProvider(e, n, r || Ho));
              }
          }
          this.injectorDefTypes.add(s), this.records.set(s, Yo(r.factory, zo));
          const a = r.providers;
          if (null != a && !o) {
            const t = e;
            Se(a, (e) => this.processProvider(e, t, a));
          }
          return void 0 !== i && void 0 !== e.providers;
        }
        processProvider(e, t, n) {
          let r = Jo((e = B(e))) ? e : B(e && e.provide);
          const i = (function (e, t, n) {
            return Xo(e) ? Yo(void 0, e.useValue) : Yo(Zo(e, t, n), zo);
          })(e, t, n);
          if (Jo(e) || !0 !== e.multi) {
            const e = this.records.get(r);
            e && void 0 !== e.multi && pi();
          } else {
            let t = this.records.get(r);
            t
              ? void 0 === t.multi && pi()
              : ((t = Yo(void 0, zo, !0)),
                (t.factory = () => ge(t.multi)),
                this.records.set(r, t)),
              (r = e),
              t.multi.push(e);
          }
          this.records.set(r, i);
        }
        hydrate(e, t) {
          var n;
          return (
            t.value === Uo
              ? (function (e) {
                  throw new Error("Cannot instantiate cyclic dependency! " + e);
                })(N(e))
              : t.value === zo && ((t.value = Uo), (t.value = t.factory())),
            "object" == typeof t.value &&
              t.value &&
              null !== (n = t.value) &&
              "object" == typeof n &&
              "function" == typeof n.ngOnDestroy &&
              this.onDestroy.add(t.value),
            t.value
          );
        }
        injectableDefInScope(e) {
          return (
            !!e.providedIn &&
            ("string" == typeof e.providedIn
              ? "any" === e.providedIn || e.providedIn === this.scope
              : this.injectorDefTypes.has(e.providedIn))
          );
        }
      }
      function Ko(e) {
        const t = O(e),
          n = null !== t ? t.factory : Ze(e);
        if (null !== n) return n;
        const r = R(e);
        if (null !== r) return r.factory;
        if (e instanceof ne)
          throw new Error(`Token ${N(e)} is missing a \u0275prov definition.`);
        if (e instanceof Function)
          return (function (e) {
            const t = e.length;
            if (t > 0) {
              const n = De(t, "?");
              throw new Error(
                `Can't resolve all parameters for ${N(e)}: (${n.join(", ")}).`
              );
            }
            const n = (function (e) {
              const t = e && (e[A] || e[P] || (e[F] && e[F]()));
              if (t) {
                const n = (function (e) {
                  if (e.hasOwnProperty("name")) return e.name;
                  const t = ("" + e).match(/^function\s*([^\s(]+)/);
                  return null === t ? "" : t[1];
                })(e);
                return (
                  console.warn(
                    `DEPRECATED: DI is instantiating a token "${n}" that inherits its @Injectable decorator but does not provide one itself.\nThis will become an error in v10. Please add @Injectable() to the "${n}" class.`
                  ),
                  t
                );
              }
              return null;
            })(e);
            return null !== n ? () => n.factory(e) : () => new e();
          })(e);
        throw new Error("unreachable");
      }
      function Zo(e, t, n) {
        let r = void 0;
        if (Jo(e)) {
          const t = B(e);
          return Ze(t) || Ko(t);
        }
        if (Xo(e)) r = () => B(e.useValue);
        else if ((i = e) && i.useFactory)
          r = () => e.useFactory(...ge(e.deps || []));
        else if (
          (function (e) {
            return !(!e || !e.useExisting);
          })(e)
        )
          r = () => de(B(e.useExisting));
        else {
          const i = B(e && (e.useClass || e.provide));
          if (
            (i ||
              (function (e, t, n) {
                let r = "";
                throw (
                  (e &&
                    t &&
                    (r = ` - only instances of Provider and Type are allowed, got: [${t
                      .map((e) => (e == n ? "?" + n + "?" : "..."))
                      .join(", ")}]`),
                  new Error(`Invalid provider for the NgModule '${N(e)}'` + r))
                );
              })(t, n, e),
            !(function (e) {
              return !!e.deps;
            })(e))
          )
            return Ze(i) || Ko(i);
          r = () => new i(...ge(e.deps));
        }
        var i;
        return r;
      }
      function Yo(e, t, n = !1) {
        return { factory: e, value: t, multi: n ? [] : void 0 };
      }
      function Xo(e) {
        return null !== e && "object" == typeof e && oe in e;
      }
      function Jo(e) {
        return "function" == typeof e;
      }
      function ea(e, t, n) {
        return Go({ name: n }, t, e, n);
      }
      const ta = ea;
      let na = (() => {
        class e {
          static create(e, t) {
            return Array.isArray(e)
              ? ta(e, t, "")
              : ta(e.providers, e.parent, e.name || "");
          }
        }
        return (
          (e.THROW_IF_NOT_FOUND = ie),
          (e.NULL = new _e()),
          (e.ɵprov = x({ token: e, providedIn: "any", factory: () => de(re) })),
          (e.__NG_ELEMENT_ID__ = -1),
          e
        );
      })();
      function ra(e) {
        return e.length > 1
          ? " (" +
              (function (e) {
                const t = [];
                for (let n = 0; n < e.length; ++n) {
                  if (t.indexOf(e[n]) > -1) return t.push(e[n]), t;
                  t.push(e[n]);
                }
                return t;
              })(e.slice().reverse())
                .map((e) => N(e.token))
                .join(" -> ") +
              ")"
          : "";
      }
      function ia(e, t, n, r) {
        const i = [t],
          s = n(i),
          o = r
            ? (function (e, t) {
                const n = `${e} caused by: ${
                    t instanceof Error ? t.message : t
                  }`,
                  r = Error(n);
                return (r.ngOriginalError = t), r;
              })(s, r)
            : Error(s);
        return (
          (o.addKey = sa),
          (o.keys = i),
          (o.injectors = [e]),
          (o.constructResolvingMessage = n),
          (o.ngOriginalError = r),
          o
        );
      }
      function sa(e, t) {
        this.injectors.push(e),
          this.keys.push(t),
          (this.message = this.constructResolvingMessage(this.keys));
      }
      function oa(e, t) {
        const n = [];
        for (let r = 0, i = t.length; r < i; r++) {
          const e = t[r];
          n.push(e && 0 != e.length ? e.map(N).join(" ") : "?");
        }
        return Error(
          "Cannot resolve all parameters for '" +
            N(e) +
            "'(" +
            n.join(", ") +
            "). Make sure that all the parameters are decorated with Inject or have valid type annotations and that '" +
            N(e) +
            "' is decorated with Injectable."
        );
      }
      class aa {
        constructor(e, t) {
          if (((this.token = e), (this.id = t), !e))
            throw new Error("Token must be defined!");
          this.displayName = N(this.token);
        }
        static get(e) {
          return ca.get(B(e));
        }
        static get numberOfKeys() {
          return ca.numberOfKeys;
        }
      }
      class la {
        constructor() {
          this._allKeys = new Map();
        }
        get(e) {
          if (e instanceof aa) return e;
          if (this._allKeys.has(e)) return this._allKeys.get(e);
          const t = new aa(e, aa.numberOfKeys);
          return this._allKeys.set(e, t), t;
        }
        get numberOfKeys() {
          return this._allKeys.size;
        }
      }
      const ca = new la();
      class ua {
        constructor(e) {
          this.reflectionCapabilities = e;
        }
        updateCapabilities(e) {
          this.reflectionCapabilities = e;
        }
        factory(e) {
          return this.reflectionCapabilities.factory(e);
        }
        parameters(e) {
          return this.reflectionCapabilities.parameters(e);
        }
        annotations(e) {
          return this.reflectionCapabilities.annotations(e);
        }
        propMetadata(e) {
          return this.reflectionCapabilities.propMetadata(e);
        }
        hasLifecycleHook(e, t) {
          return this.reflectionCapabilities.hasLifecycleHook(e, t);
        }
        getter(e) {
          return this.reflectionCapabilities.getter(e);
        }
        setter(e) {
          return this.reflectionCapabilities.setter(e);
        }
        method(e) {
          return this.reflectionCapabilities.method(e);
        }
        importUri(e) {
          return this.reflectionCapabilities.importUri(e);
        }
        resourceUri(e) {
          return this.reflectionCapabilities.resourceUri(e);
        }
        resolveIdentifier(e, t, n, r) {
          return this.reflectionCapabilities.resolveIdentifier(e, t, n, r);
        }
        resolveEnum(e, t) {
          return this.reflectionCapabilities.resolveEnum(e, t);
        }
      }
      const ha = new ua(new Do());
      class da {
        constructor(e, t, n) {
          (this.key = e), (this.optional = t), (this.visibility = n);
        }
        static fromKey(e) {
          return new da(e, !1, null);
        }
      }
      const fa = [];
      class pa {
        constructor(e, t, n) {
          (this.key = e),
            (this.resolvedFactories = t),
            (this.multiProvider = n),
            (this.resolvedFactory = this.resolvedFactories[0]);
        }
      }
      class ma {
        constructor(e, t) {
          (this.factory = e), (this.dependencies = t);
        }
      }
      function ga(e) {
        let t, n;
        if (e.useClass) {
          const r = B(e.useClass);
          (t = ha.factory(r)), (n = va(r));
        } else
          e.useExisting
            ? ((t = (e) => e), (n = [da.fromKey(aa.get(e.useExisting))]))
            : e.useFactory
            ? ((t = e.useFactory),
              (n = (function (e, t) {
                if (t) {
                  const n = t.map((e) => [e]);
                  return t.map((t) => ba(e, t, n));
                }
                return va(e);
              })(e.useFactory, e.deps)))
            : ((t = () => e.useValue), (n = fa));
        return new ma(t, n);
      }
      function _a(e) {
        return new pa(aa.get(e.provide), [ga(e)], e.multi || !1);
      }
      function ya(e) {
        const t = (function (e, t) {
          for (let n = 0; n < e.length; n++) {
            const r = e[n],
              i = t.get(r.key.id);
            if (i) {
              if (r.multiProvider !== i.multiProvider)
                throw Error(
                  `Cannot mix multi providers and regular providers, got: ${i} ${r}`
                );
              if (r.multiProvider)
                for (let e = 0; e < r.resolvedFactories.length; e++)
                  i.resolvedFactories.push(r.resolvedFactories[e]);
              else t.set(r.key.id, r);
            } else {
              let e;
              (e = r.multiProvider
                ? new pa(r.key, r.resolvedFactories.slice(), r.multiProvider)
                : r),
                t.set(r.key.id, e);
            }
          }
          return t;
        })(
          (function e(t, n) {
            return (
              t.forEach((t) => {
                if (t instanceof bo) n.push({ provide: t, useClass: t });
                else if (t && "object" == typeof t && void 0 !== t.provide)
                  n.push(t);
                else {
                  if (!Array.isArray(t))
                    throw Error(
                      "Invalid provider - only instances of Provider and Type are allowed, got: " +
                        t
                    );
                  e(t, n);
                }
              }),
              n
            );
          })(e, []).map(_a),
          new Map()
        );
        return Array.from(t.values());
      }
      function va(e) {
        const t = ha.parameters(e);
        if (!t) return [];
        if (t.some((e) => null == e)) throw oa(e, t);
        return t.map((n) => ba(e, n, t));
      }
      function ba(e, t, n) {
        let r = null,
          i = !1;
        if (!Array.isArray(t)) return wa(t instanceof g ? t.token : t, i, null);
        let s = null;
        for (let o = 0; o < t.length; ++o) {
          const e = t[o];
          e instanceof bo
            ? (r = e)
            : e instanceof g
            ? (r = e.token)
            : e instanceof _
            ? (i = !0)
            : e instanceof y || e instanceof v
            ? (s = e)
            : e instanceof ne && (r = e);
        }
        if (((r = B(r)), null != r)) return wa(r, i, s);
        throw oa(e, n);
      }
      function wa(e, t, n) {
        return new da(aa.get(e), t, n);
      }
      const Ca = {};
      class Sa {
        static resolve(e) {
          return ya(e);
        }
        static resolveAndCreate(e, t) {
          const n = Sa.resolve(e);
          return Sa.fromResolvedProviders(n, t);
        }
        static fromResolvedProviders(e, t) {
          return new Ea(e, t);
        }
      }
      let Ea = (() => {
        class e {
          constructor(e, t) {
            (this._constructionCounter = 0),
              (this._providers = e),
              (this.parent = t || null);
            const n = e.length;
            (this.keyIds = []), (this.objs = []);
            for (let r = 0; r < n; r++)
              (this.keyIds[r] = e[r].key.id), (this.objs[r] = Ca);
          }
          get(e, t = ie) {
            return this._getByKey(aa.get(e), null, t);
          }
          resolveAndCreateChild(e) {
            const t = Sa.resolve(e);
            return this.createChildFromResolved(t);
          }
          createChildFromResolved(t) {
            const n = new e(t);
            return (n.parent = this), n;
          }
          resolveAndInstantiate(e) {
            return this.instantiateResolved(Sa.resolve([e])[0]);
          }
          instantiateResolved(e) {
            return this._instantiateProvider(e);
          }
          getProviderAtIndex(e) {
            if (e < 0 || e >= this._providers.length)
              throw (function (e) {
                return Error(`Index ${e} is out-of-bounds.`);
              })(e);
            return this._providers[e];
          }
          _new(e) {
            if (this._constructionCounter++ > this._getMaxNumberOfObjects())
              throw ia(this, e.key, function (e) {
                return "Cannot instantiate cyclic dependency!" + ra(e);
              });
            return this._instantiateProvider(e);
          }
          _getMaxNumberOfObjects() {
            return this.objs.length;
          }
          _instantiateProvider(e) {
            if (e.multiProvider) {
              const t = [];
              for (let n = 0; n < e.resolvedFactories.length; ++n)
                t[n] = this._instantiate(e, e.resolvedFactories[n]);
              return t;
            }
            return this._instantiate(e, e.resolvedFactories[0]);
          }
          _instantiate(e, t) {
            const n = t.factory;
            let r, i;
            try {
              r = t.dependencies.map((e) => this._getByReflectiveDependency(e));
            } catch (o) {
              throw (o.addKey && o.addKey(this, e.key), o);
            }
            try {
              i = n(...r);
            } catch (o) {
              throw ia(
                this,
                e.key,
                function (e) {
                  const t = N(e[0].token);
                  return `${s.message}: Error during instantiation of ${t}!${ra(
                    e
                  )}.`;
                },
                (s = o)
              );
            }
            var s;
            return i;
          }
          _getByReflectiveDependency(e) {
            return this._getByKey(e.key, e.visibility, e.optional ? null : ie);
          }
          _getByKey(t, n, r) {
            return t === e.INJECTOR_KEY
              ? this
              : n instanceof y
              ? this._getByKeySelf(t, r)
              : this._getByKeyDefault(t, r, n);
          }
          _getObjByKeyId(e) {
            for (let t = 0; t < this.keyIds.length; t++)
              if (this.keyIds[t] === e)
                return (
                  this.objs[t] === Ca &&
                    (this.objs[t] = this._new(this._providers[t])),
                  this.objs[t]
                );
            return Ca;
          }
          _throwOrNull(e, t) {
            if (t !== ie) return t;
            throw (function (e, t) {
              return ia(e, t, function (e) {
                return `No provider for ${N(e[0].token)}!${ra(e)}`;
              });
            })(this, e);
          }
          _getByKeySelf(e, t) {
            const n = this._getObjByKeyId(e.id);
            return n !== Ca ? n : this._throwOrNull(e, t);
          }
          _getByKeyDefault(t, n, r) {
            let i;
            for (i = r instanceof v ? this.parent : this; i instanceof e; ) {
              const e = i,
                n = e._getObjByKeyId(t.id);
              if (n !== Ca) return n;
              i = e.parent;
            }
            return null !== i ? i.get(t.token, n) : this._throwOrNull(t, n);
          }
          get displayName() {
            return `ReflectiveInjector(providers: [${(function (e, t) {
              const n = [];
              for (let r = 0; r < e._providers.length; ++r)
                n[r] = ' "' + e.getProviderAtIndex(r).key.displayName + '" ';
              return n;
            })(this).join(", ")}])`;
          }
          toString() {
            return this.displayName;
          }
        }
        return (e.INJECTOR_KEY = aa.get(na)), e;
      })();
      const xa = new ne("AnalyzeForEntryComponents");
      class Da {}
      const Ia = m(
          "ContentChildren",
          (e, t = {}) =>
            Object.assign(
              { selector: e, first: !1, isViewQuery: !1, descendants: !1 },
              t
            ),
          Da
        ),
        Oa = m(
          "ContentChild",
          (e, t = {}) =>
            Object.assign(
              { selector: e, first: !0, isViewQuery: !1, descendants: !0 },
              t
            ),
          Da
        ),
        ka = m(
          "ViewChildren",
          (e, t = {}) =>
            Object.assign(
              { selector: e, first: !1, isViewQuery: !0, descendants: !0 },
              t
            ),
          Da
        ),
        Ra = m(
          "ViewChild",
          (e, t) =>
            Object.assign(
              { selector: e, first: !0, isViewQuery: !0, descendants: !0 },
              t
            ),
          Da
        );
      function Aa(e) {
        const t = [],
          n = new Map();
        function r(t) {
          let r = n.get(t);
          if (!r) {
            const i = e(t);
            n.set(t, (r = i.then(Na)));
          }
          return r;
        }
        return (
          Ta.forEach((e, n) => {
            const i = [];
            e.templateUrl &&
              i.push(
                r(e.templateUrl).then((t) => {
                  e.template = t;
                })
              );
            const s = e.styleUrls,
              o = e.styles || (e.styles = []),
              a = e.styles.length;
            s &&
              s.forEach((t, n) => {
                o.push(""),
                  i.push(
                    r(t).then((r) => {
                      (o[a + n] = r),
                        s.splice(s.indexOf(t), 1),
                        0 == s.length && (e.styleUrls = void 0);
                    })
                  );
              });
            const l = Promise.all(i).then(() =>
              (function (e) {
                Fa.delete(e);
              })(n)
            );
            t.push(l);
          }),
          ja(),
          Promise.all(t).then(() => {})
        );
      }
      let Ta = new Map();
      const Fa = new Set();
      function Pa(e) {
        return !!(
          (e.templateUrl && !e.hasOwnProperty("template")) ||
          (e.styleUrls && e.styleUrls.length)
        );
      }
      function ja() {
        const e = Ta;
        return (Ta = new Map()), e;
      }
      function Na(e) {
        return "string" == typeof e ? e : e.text();
      }
      function Ma(e, t, n) {
        let r = n ? e.styles : null,
          i = n ? e.classes : null,
          s = 0;
        if (null !== t)
          for (let o = 0; o < t.length; o++) {
            const e = t[o];
            "number" == typeof e
              ? (s = e)
              : 1 == s
              ? (i = M(i, e))
              : 2 == s && (r = M(r, e + ": " + t[++o] + ";"));
          }
        n ? (e.styles = r) : (e.stylesWithoutHost = r),
          n ? (e.classes = i) : (e.classesWithoutHost = i);
      }
      let La = null;
      function Va() {
        if (!La) {
          const e = G.Symbol;
          if (e && e.iterator) La = e.iterator;
          else {
            const e = Object.getOwnPropertyNames(Map.prototype);
            for (let t = 0; t < e.length; ++t) {
              const n = e[t];
              "entries" !== n &&
                "size" !== n &&
                Map.prototype[n] === Map.prototype.entries &&
                (La = n);
            }
          }
        }
        return La;
      }
      function Ba(e, t) {
        return (
          e === t ||
          ("number" == typeof e && "number" == typeof t && isNaN(e) && isNaN(t))
        );
      }
      function za(e, t) {
        const n = Ha(e),
          r = Ha(t);
        if (n && r)
          return (function (e, t, n) {
            const r = e[Va()](),
              i = t[Va()]();
            for (;;) {
              const e = r.next(),
                t = i.next();
              if (e.done && t.done) return !0;
              if (e.done || t.done) return !1;
              if (!n(e.value, t.value)) return !1;
            }
          })(e, t, za);
        {
          const i = e && ("object" == typeof e || "function" == typeof e),
            s = t && ("object" == typeof t || "function" == typeof t);
          return !(n || !i || r || !s) || Ba(e, t);
        }
      }
      class Ua {
        constructor(e) {
          this.wrapped = e;
        }
        static wrap(e) {
          return new Ua(e);
        }
        static unwrap(e) {
          return Ua.isWrapped(e) ? e.wrapped : e;
        }
        static isWrapped(e) {
          return e instanceof Ua;
        }
      }
      function Ha(e) {
        return (
          !!$a(e) && (Array.isArray(e) || (!(e instanceof Map) && Va() in e))
        );
      }
      function $a(e) {
        return null !== e && ("function" == typeof e || "object" == typeof e);
      }
      function qa(e, t, n) {
        return (e[t] = n);
      }
      function Ga(e, t) {
        return e[t];
      }
      function Wa(e, t, n) {
        return !Object.is(e[t], n) && ((e[t] = n), !0);
      }
      function Qa(e, t, n, r) {
        const i = Wa(e, t, n);
        return Wa(e, t + 1, r) || i;
      }
      function Ka(e, t, n, r, i) {
        const s = Qa(e, t, n, r);
        return Wa(e, t + 2, i) || s;
      }
      function Za(e, t, n, r, i, s) {
        const o = Qa(e, t, n, r);
        return Qa(e, t + 2, i, s) || o;
      }
      function Ya(e, t, n, r) {
        const i = Ot();
        return Wa(i, Bt(), t) && (kt(), _s(rn(), i, e, t, n, r)), Ya;
      }
      function Xa(e, t) {
        let n = !1,
          r = Lt();
        for (let s = 1; s < t.length; s += 2) n = Wa(e, r++, t[s]) || n;
        if ((Vt(r), !n)) return Di;
        let i = t[0];
        for (let s = 1; s < t.length; s += 2) i += En(t[s]) + t[s + 1];
        return i;
      }
      function Ja(e, t, n, r) {
        return Wa(e, Bt(), n) ? t + En(n) + r : Di;
      }
      function el(e, t, n, r, i, s) {
        const o = Qa(e, Lt(), n, i);
        return zt(2), o ? t + En(n) + r + En(i) + s : Di;
      }
      function tl(e, t, n, r, i, s, o, a) {
        const l = Ka(e, Lt(), n, i, o);
        return zt(3), l ? t + En(n) + r + En(i) + s + En(o) + a : Di;
      }
      function nl(e, t, n, r, i, s, o, a, l, c) {
        const u = Za(e, Lt(), n, i, o, l);
        return (
          zt(4), u ? t + En(n) + r + En(i) + s + En(o) + a + En(l) + c : Di
        );
      }
      function rl(e, t, n, r, i, s, o, a, l, c, u, h) {
        const d = Lt();
        let f = Za(e, d, n, i, o, l);
        return (
          (f = Wa(e, d + 4, u) || f),
          zt(5),
          f ? t + En(n) + r + En(i) + s + En(o) + a + En(l) + c + En(u) + h : Di
        );
      }
      function il(e, t, n, r, i, s, o, a, l, c, u, h, d, f) {
        const p = Lt();
        let m = Za(e, p, n, i, o, l);
        return (
          (m = Qa(e, p + 4, u, d) || m),
          zt(6),
          m
            ? t +
              En(n) +
              r +
              En(i) +
              s +
              En(o) +
              a +
              En(l) +
              c +
              En(u) +
              h +
              En(d) +
              f
            : Di
        );
      }
      function sl(e, t, n, r, i, s, o, a, l, c, u, h, d, f, p, m) {
        const g = Lt();
        let _ = Za(e, g, n, i, o, l);
        return (
          (_ = Ka(e, g + 4, u, d, p) || _),
          zt(7),
          _
            ? t +
              En(n) +
              r +
              En(i) +
              s +
              En(o) +
              a +
              En(l) +
              c +
              En(u) +
              h +
              En(d) +
              f +
              En(p) +
              m
            : Di
        );
      }
      function ol(e, t, n, r, i, s, o, a, l, c, u, h, d, f, p, m, g, _) {
        const y = Lt();
        let v = Za(e, y, n, i, o, l);
        return (
          (v = Za(e, y + 4, u, d, p, g) || v),
          zt(8),
          v
            ? t +
              En(n) +
              r +
              En(i) +
              s +
              En(o) +
              a +
              En(l) +
              c +
              En(u) +
              h +
              En(d) +
              f +
              En(p) +
              m +
              En(g) +
              _
            : Di
        );
      }
      function al(e, t, n, r, i, s) {
        const o = Ot(),
          a = Ja(o, t, n, r);
        return a !== Di && _s(rn(), o, e, a, i, s), al;
      }
      function ll(e, t, n, r, i, s, o, a) {
        const l = Ot(),
          c = el(l, t, n, r, i, s);
        return c !== Di && _s(rn(), l, e, c, o, a), ll;
      }
      function cl(e, t, n, r, i, s, o, a, l, c) {
        const u = Ot(),
          h = tl(u, t, n, r, i, s, o, a);
        return h !== Di && _s(rn(), u, e, h, l, c), cl;
      }
      function ul(e, t, n, r, i, s, o, a, l, c, u, h) {
        const d = Ot(),
          f = nl(d, t, n, r, i, s, o, a, l, c);
        return f !== Di && _s(rn(), d, e, f, u, h), ul;
      }
      function hl(e, t, n, r, i, s, o, a, l, c, u, h, d, f) {
        const p = Ot(),
          m = rl(p, t, n, r, i, s, o, a, l, c, u, h);
        return m !== Di && _s(rn(), p, e, m, d, f), hl;
      }
      function dl(e, t, n, r, i, s, o, a, l, c, u, h, d, f, p, m) {
        const g = Ot(),
          _ = il(g, t, n, r, i, s, o, a, l, c, u, h, d, f);
        return _ !== Di && _s(rn(), g, e, _, p, m), dl;
      }
      function fl(e, t, n, r, i, s, o, a, l, c, u, h, d, f, p, m, g, _) {
        const y = Ot(),
          v = sl(y, t, n, r, i, s, o, a, l, c, u, h, d, f, p, m);
        return v !== Di && _s(rn(), y, e, v, g, _), fl;
      }
      function pl(e, t, n, r, i, s, o, a, l, c, u, h, d, f, p, m, g, _, y, v) {
        const b = Ot(),
          w = ol(b, t, n, r, i, s, o, a, l, c, u, h, d, f, p, m, g, _);
        return w !== Di && _s(rn(), b, e, w, y, v), pl;
      }
      function ml(e, t, n, r) {
        const i = Ot(),
          s = Xa(i, t);
        return s !== Di && _s(rn(), i, e, s, n, r), ml;
      }
      function gl(e) {
        const t = ai(e);
        Ds(t[1], t, e);
      }
      function _l(e) {
        !(function (e, t) {
          const n = 0 === e.flags;
          if (((e.flags |= 1), n && e.clean == Hi)) {
            let t;
            (e.clean = new Promise((e) => (t = e))),
              e.scheduler(() => {
                if ((1 & e.flags && ((e.flags &= -2), xs(e)), 2 & e.flags)) {
                  e.flags &= -3;
                  const t = e.playerHandler;
                  t && t.flushPlayers();
                }
                (e.clean = Hi), t(null);
              });
          }
        })(Es(ai(e))[8]);
      }
      function yl(e, t, n, r, i, s, o, a) {
        const l = Ot(),
          c = kt(),
          u = e + 20,
          h = c.firstCreatePass
            ? (function (e, t, n, r, i, s, o, a, l) {
                const c = t.consts,
                  u = Wi(t, n[6], e, 0, o || null, wt(c, a));
                as(t, n, u, wt(c, l)), ln(t, u);
                const h = (u.tViews = ns(
                    2,
                    -1,
                    r,
                    i,
                    s,
                    t.directiveRegistry,
                    t.pipeRegistry,
                    null,
                    t.schemas,
                    c
                  )),
                  d = is(0, null, 2, -1, null, null);
                return (
                  (d.injectorIndex = u.injectorIndex),
                  (h.node = d),
                  null !== t.queries &&
                    (t.queries.template(t, u),
                    (h.queries = t.queries.embeddedTView(u))),
                  u
                );
              })(e, c, l, t, n, r, i, s, o)
            : c.data[u];
        Tt(h, !1);
        const d = l[11].createComment("");
        Xs(c, l, d, h),
          li(d, l),
          Ss(l, (l[u] = bs(d, l, d, h))),
          nt(h) && Ji(c, l, h),
          null != o && es(l, h, a);
      }
      function vl(e, t, n, r) {
        const i = n + 20;
        i >= e.data.length && ((e.data[i] = null), (e.blueprint[i] = null)),
          (t[i] = r);
      }
      function bl(e) {
        return mt(Et.lFrame.contextLView, e);
      }
      function wl(e, t = C.Default) {
        const n = Ot();
        return null == n ? de(e, t) : Bn(At(), n, B(e), t);
      }
      function Cl(e) {
        return Vn(At(), e);
      }
      function Sl() {
        throw new Error("invalid");
      }
      function El(e, t, n) {
        const r = Ot();
        return Wa(r, Bt(), t) && os(kt(), rn(), r, e, t, r[11], n, !1), El;
      }
      function xl(e, t, n, r, i) {
        const s = i ? "class" : "style";
        Ps(e, n, t.inputs[s], s, r);
      }
      function Dl(e, t, n, r) {
        const i = Ot(),
          s = kt(),
          o = 20 + e,
          a = i[11],
          l = (i[o] = qi(t, a, Et.lFrame.currentNamespace)),
          c = s.firstCreatePass
            ? (function (e, t, n, r, i, s, o) {
                const a = t.consts,
                  l = wt(a, s),
                  c = Wi(t, n[6], e, 3, i, l);
                return (
                  as(t, n, c, wt(a, o)),
                  null !== c.attrs && Ma(c, c.attrs, !1),
                  null !== c.mergedAttrs && Ma(c, c.mergedAttrs, !0),
                  null !== t.queries && t.queries.elementStart(t, c),
                  c
                );
              })(e, s, i, 0, t, n, r)
            : s.data[o];
        Tt(c, !0);
        const u = c.mergedAttrs;
        null !== u && mn(a, l, u);
        const h = c.classes;
        null !== h && oo(a, l, h);
        const d = c.styles;
        null !== d && so(a, l, d),
          Xs(s, i, l, c),
          0 === Et.lFrame.elementDepthCount && li(l, i),
          Et.lFrame.elementDepthCount++,
          nt(c) && (Ji(s, i, c), Xi(s, c, i)),
          null !== r && es(i, c);
      }
      function Il() {
        let e = At();
        Ft() ? Pt() : ((e = e.parent), Tt(e, !1));
        const t = e;
        Et.lFrame.elementDepthCount--;
        const n = kt();
        n.firstCreatePass && (ln(n, e), et(e) && n.queries.elementEnd(e)),
          null != t.classesWithoutHost &&
            (function (e) {
              return 0 != (16 & e.flags);
            })(t) &&
            xl(n, t, Ot(), t.classesWithoutHost, !0),
          null != t.stylesWithoutHost &&
            (function (e) {
              return 0 != (32 & e.flags);
            })(t) &&
            xl(n, t, Ot(), t.stylesWithoutHost, !1);
      }
      function Ol(e, t, n, r) {
        Dl(e, t, n, r), Il();
      }
      function kl(e, t, n) {
        const r = Ot(),
          i = kt(),
          s = e + 20,
          o = i.firstCreatePass
            ? (function (e, t, n, r, i) {
                const s = t.consts,
                  o = wt(s, r),
                  a = Wi(t, n[6], e, 4, "ng-container", o);
                return (
                  null !== o && Ma(a, o, !0),
                  as(t, n, a, wt(s, i)),
                  null !== t.queries && t.queries.elementStart(t, a),
                  a
                );
              })(e, i, r, t, n)
            : i.data[s];
        Tt(o, !0);
        const a = (r[s] = r[11].createComment(""));
        Xs(i, r, a, o),
          li(a, r),
          nt(o) && (Ji(i, r, o), Xi(i, o, r)),
          null != n && es(r, o);
      }
      function Rl() {
        let e = At();
        const t = kt();
        Ft() ? Pt() : ((e = e.parent), Tt(e, !1)),
          t.firstCreatePass && (ln(t, e), et(e) && t.queries.elementEnd(e));
      }
      function Al(e, t, n) {
        kl(e, t, n), Rl();
      }
      function Tl() {
        return Ot();
      }
      function Fl(e) {
        return !!e && "function" == typeof e.then;
      }
      function Pl(e) {
        return !!e && "function" == typeof e.subscribe;
      }
      function jl(e, t, n = !1, r) {
        const i = Ot(),
          s = kt(),
          o = At();
        return Ml(s, i, i[11], o, e, t, n, r), jl;
      }
      function Nl(e, t, n = !1, r) {
        const i = At(),
          s = Ot(),
          o = kt();
        return Ml(o, s, Ts($t(o.data), i, s), i, e, t, n, r), Nl;
      }
      function Ml(e, t, n, r, i, s, o = !1, a) {
        const l = nt(r),
          c = e.firstCreatePass && (e.cleanup || (e.cleanup = [])),
          u = Rs(t);
        let h = !0;
        if (3 === r.type) {
          const d = dt(r, t),
            f = a ? a(d) : Pe,
            p = f.target || d,
            m = u.length,
            g = a ? (e) => a(ut(e[r.index])).target : r.index;
          if (lt(n)) {
            let o = null;
            if (
              (!a &&
                l &&
                (o = (function (e, t, n, r) {
                  const i = e.cleanup;
                  if (null != i)
                    for (let s = 0; s < i.length - 1; s += 2) {
                      const e = i[s];
                      if (e === n && i[s + 1] === r) {
                        const e = t[7],
                          n = i[s + 2];
                        return e.length > n ? e[n] : null;
                      }
                      "string" == typeof e && (s += 2);
                    }
                  return null;
                })(e, t, i, r.index)),
              null !== o)
            )
              ((o.__ngLastListenerFn__ || o).__ngNextListenerFn__ = s),
                (o.__ngLastListenerFn__ = s),
                (h = !1);
            else {
              s = Vl(r, t, s, !1);
              const e = n.listen(f.name || p, i, s);
              u.push(s, e), c && c.push(i, g, m, m + 1);
            }
          } else
            (s = Vl(r, t, s, !0)),
              p.addEventListener(i, s, o),
              u.push(s),
              c && c.push(i, g, m, o);
        }
        const d = r.outputs;
        let f;
        if (h && null !== d && (f = d[i])) {
          const e = f.length;
          if (e)
            for (let n = 0; n < e; n += 2) {
              const e = t[f[n]][f[n + 1]].subscribe(s),
                o = u.length;
              u.push(s, e), c && c.push(i, r.index, o, -(o + 1));
            }
        }
      }
      function Ll(e, t, n) {
        try {
          return !1 !== t(n);
        } catch (r) {
          return Fs(e, r), !1;
        }
      }
      function Vl(e, t, n, r) {
        return function i(s) {
          if (s === Function) return n;
          const o = 2 & e.flags ? gt(e.index, t) : t;
          0 == (32 & t[2]) && Es(o);
          let a = Ll(t, n, s),
            l = i.__ngNextListenerFn__;
          for (; l; ) (a = Ll(t, l, s) && a), (l = l.__ngNextListenerFn__);
          return r && !1 === a && (s.preventDefault(), (s.returnValue = !1)), a;
        };
      }
      function Bl(e = 1) {
        return en(e);
      }
      function zl(e, t) {
        let n = null;
        const r = (function (e) {
          const t = e.attrs;
          if (null != t) {
            const e = t.indexOf(5);
            if (0 == (1 & e)) return t[e + 1];
          }
          return null;
        })(e);
        for (let i = 0; i < t.length; i++) {
          const s = t[i];
          if ("*" !== s) {
            if (null === r ? Ci(e, s, !0) : Si(r, s)) return i;
          } else n = i;
        }
        return n;
      }
      function Ul(e) {
        const t = Ot()[16][6];
        if (!t.projection) {
          const n = (t.projection = De(e ? e.length : 1, null)),
            r = n.slice();
          let i = t.child;
          for (; null !== i; ) {
            const t = e ? zl(i, e) : 0;
            null !== t &&
              (r[t] ? (r[t].projectionNext = i) : (n[t] = i), (r[t] = i)),
              (i = i.next);
          }
        }
      }
      let Hl = !1;
      function $l(e) {
        Hl = e;
      }
      function ql(e, t = 0, n) {
        const r = Ot(),
          i = kt(),
          s = Wi(i, r[6], e, 1, null, n || null);
        null === s.projection && (s.projection = t), Pt(), Hl || ro(i, r, s);
      }
      function Gl(e, t, n) {
        return Wl(e, "", t, "", n), Gl;
      }
      function Wl(e, t, n, r, i) {
        const s = Ot(),
          o = Ja(s, t, n, r);
        return o !== Di && os(kt(), rn(), s, e, o, s[11], i, !1), Wl;
      }
      function Ql(e, t, n, r, i, s, o) {
        const a = Ot(),
          l = el(a, t, n, r, i, s);
        return l !== Di && os(kt(), rn(), a, e, l, a[11], o, !1), Ql;
      }
      function Kl(e, t, n, r, i, s, o, a, l) {
        const c = Ot(),
          u = tl(c, t, n, r, i, s, o, a);
        return u !== Di && os(kt(), rn(), c, e, u, c[11], l, !1), Kl;
      }
      function Zl(e, t, n, r, i, s, o, a, l, c, u) {
        const h = Ot(),
          d = nl(h, t, n, r, i, s, o, a, l, c);
        return d !== Di && os(kt(), rn(), h, e, d, h[11], u, !1), Zl;
      }
      function Yl(e, t, n, r, i, s, o, a, l, c, u, h, d) {
        const f = Ot(),
          p = rl(f, t, n, r, i, s, o, a, l, c, u, h);
        return p !== Di && os(kt(), rn(), f, e, p, f[11], d, !1), Yl;
      }
      function Xl(e, t, n, r, i, s, o, a, l, c, u, h, d, f, p) {
        const m = Ot(),
          g = il(m, t, n, r, i, s, o, a, l, c, u, h, d, f);
        return g !== Di && os(kt(), rn(), m, e, g, m[11], p, !1), Xl;
      }
      function Jl(e, t, n, r, i, s, o, a, l, c, u, h, d, f, p, m, g) {
        const _ = Ot(),
          y = sl(_, t, n, r, i, s, o, a, l, c, u, h, d, f, p, m);
        return y !== Di && os(kt(), rn(), _, e, y, _[11], g, !1), Jl;
      }
      function ec(e, t, n, r, i, s, o, a, l, c, u, h, d, f, p, m, g, _, y) {
        const v = Ot(),
          b = ol(v, t, n, r, i, s, o, a, l, c, u, h, d, f, p, m, g, _);
        return b !== Di && os(kt(), rn(), v, e, b, v[11], y, !1), ec;
      }
      function tc(e, t, n) {
        const r = Ot(),
          i = Xa(r, t);
        return i !== Di && os(kt(), rn(), r, e, i, r[11], n, !1), tc;
      }
      const nc = [];
      function rc(e, t, n, r, i) {
        const s = e[n + 1],
          o = null === t;
        let a = r ? Li(s) : Bi(s),
          l = !1;
        for (; 0 !== a && (!1 === l || o); ) {
          const n = e[a + 1];
          ic(e[a], t) && ((l = !0), (e[a + 1] = r ? Ui(n) : Vi(n))),
            (a = r ? Li(n) : Bi(n));
        }
        l && (e[n + 1] = r ? Vi(s) : Ui(s));
      }
      function ic(e, t) {
        return (
          null === e ||
          null == t ||
          (Array.isArray(e) ? e[1] : e) === t ||
          (!(!Array.isArray(e) || "string" != typeof t) && ke(e, t) >= 0)
        );
      }
      const sc = { textEnd: 0, key: 0, keyEnd: 0, value: 0, valueEnd: 0 };
      function oc(e) {
        return e.substring(sc.key, sc.keyEnd);
      }
      function ac(e) {
        return e.substring(sc.value, sc.valueEnd);
      }
      function lc(e, t) {
        const n = sc.textEnd;
        return n === t
          ? -1
          : ((t = sc.keyEnd = (function (e, t, n) {
              for (; t < n && e.charCodeAt(t) > 32; ) t++;
              return t;
            })(e, (sc.key = t), n)),
            hc(e, t, n));
      }
      function cc(e, t) {
        const n = sc.textEnd;
        let r = (sc.key = hc(e, t, n));
        return n === r
          ? -1
          : ((r = sc.keyEnd = (function (e, t, n) {
              let r;
              for (
                ;
                t < n &&
                (45 === (r = e.charCodeAt(t)) ||
                  95 === r ||
                  ((-33 & r) >= 65 && (-33 & r) <= 90));

              )
                t++;
              return t;
            })(e, r, n)),
            (r = dc(e, r, n)),
            (r = sc.value = hc(e, r, n)),
            (r = sc.valueEnd = (function (e, t, n) {
              let r = -1,
                i = -1,
                s = -1,
                o = t,
                a = o;
              for (; o < n; ) {
                const l = e.charCodeAt(o++);
                if (59 === l) return a;
                34 === l || 39 === l
                  ? (a = o = fc(e, l, o, n))
                  : t === o - 4 && 85 === s && 82 === i && 76 === r && 40 === l
                  ? (a = o = fc(e, 41, o, n))
                  : l > 32 && (a = o),
                  (s = i),
                  (i = r),
                  (r = -33 & l);
              }
              return a;
            })(e, r, n)),
            dc(e, r, n));
      }
      function uc(e) {
        (sc.key = 0),
          (sc.keyEnd = 0),
          (sc.value = 0),
          (sc.valueEnd = 0),
          (sc.textEnd = e.length);
      }
      function hc(e, t, n) {
        for (; t < n && e.charCodeAt(t) <= 32; ) t++;
        return t;
      }
      function dc(e, t, n, r) {
        return (t = hc(e, t, n)) < n && t++, t;
      }
      function fc(e, t, n, r) {
        let i = -1,
          s = n;
        for (; s < r; ) {
          const n = e.charCodeAt(s++);
          if (n == t && 92 !== i) return s;
          i = 92 == n && 92 === i ? 0 : n;
        }
        throw new Error();
      }
      function pc(e) {
        !(function (e) {
          Et.lFrame.currentSanitizer = e;
        })(e);
      }
      function mc(e, t, n) {
        return wc(e, t, n, !1), mc;
      }
      function gc(e, t) {
        return wc(e, t, null, !0), gc;
      }
      function _c(e) {
        Cc(Ic, yc, e, !1);
      }
      function yc(e, t) {
        for (
          let n = (function (e) {
            return uc(e), cc(e, hc(e, 0, sc.textEnd));
          })(t);
          n >= 0;
          n = cc(t, n)
        )
          Ic(e, oc(t), ac(t));
      }
      function vc(e) {
        Cc(Ie, bc, e, !0);
      }
      function bc(e, t) {
        for (
          let n = (function (e) {
            return uc(e), lc(e, hc(e, 0, sc.textEnd));
          })(t);
          n >= 0;
          n = lc(t, n)
        )
          Ie(e, oc(t), !0);
      }
      function wc(e, t, n, r) {
        const i = Ot(),
          s = kt(),
          o = zt(2);
        if ((s.firstUpdatePass && Ec(s, e, o, r), t !== Di && Wa(i, o, t))) {
          let a;
          null == n &&
            (a = (function () {
              const e = Et.lFrame;
              return null === e ? null : e.currentSanitizer;
            })()) &&
            (n = a),
            Oc(
              s,
              s.data[tn() + 20],
              i,
              i[11],
              e,
              (i[o + 1] = (function (e, t) {
                return (
                  null == e ||
                    ("function" == typeof t
                      ? (e = t(e))
                      : "string" == typeof t
                      ? (e += t)
                      : "object" == typeof e && (e = N(lr(e)))),
                  e
                );
              })(t, n)),
              r,
              o
            );
        }
      }
      function Cc(e, t, n, r) {
        const i = kt(),
          s = zt(2);
        i.firstUpdatePass && Ec(i, null, s, r);
        const o = Ot();
        if (n !== Di && Wa(o, s, n)) {
          const a = i.data[tn() + 20];
          if (Ac(a, r) && !Sc(i, s)) {
            let e = r ? a.classesWithoutHost : a.stylesWithoutHost;
            null !== e && (n = M(e, n || "")), xl(i, a, o, n, r);
          } else
            !(function (e, t, n, r, i, s, o, a) {
              i === Di && (i = nc);
              let l = 0,
                c = 0,
                u = 0 < i.length ? i[0] : null,
                h = 0 < s.length ? s[0] : null;
              for (; null !== u || null !== h; ) {
                const d = l < i.length ? i[l + 1] : void 0,
                  f = c < s.length ? s[c + 1] : void 0;
                let p = null,
                  m = void 0;
                u === h
                  ? ((l += 2), (c += 2), d !== f && ((p = h), (m = f)))
                  : null === h || (null !== u && u < h)
                  ? ((l += 2), (p = u))
                  : ((c += 2), (p = h), (m = f)),
                  null !== p && Oc(e, t, n, r, p, m, o, a),
                  (u = l < i.length ? i[l] : null),
                  (h = c < s.length ? s[c] : null);
              }
            })(
              i,
              a,
              o,
              o[11],
              o[s + 1],
              (o[s + 1] = (function (e, t, n) {
                if (null == n || "" === n) return nc;
                const r = [],
                  i = lr(n);
                if (Array.isArray(i))
                  for (let s = 0; s < i.length; s++) e(r, i[s], !0);
                else if ("object" == typeof i)
                  for (const s in i) i.hasOwnProperty(s) && e(r, s, i[s]);
                else "string" == typeof i && t(r, i);
                return r;
              })(e, t, n)),
              r,
              s
            );
        }
      }
      function Sc(e, t) {
        return t >= e.expandoStartIndex;
      }
      function Ec(e, t, n, r) {
        const i = e.data;
        if (null === i[n + 1]) {
          const s = i[tn() + 20],
            o = Sc(e, n);
          Ac(s, r) && null === t && !o && (t = !1),
            (t = (function (e, t, n, r) {
              const i = $t(e);
              let s = r ? t.residualClasses : t.residualStyles;
              if (null === i)
                0 === (r ? t.classBindings : t.styleBindings) &&
                  ((n = Dc((n = xc(null, e, t, n, r)), t.attrs, r)),
                  (s = null));
              else {
                const o = t.directiveStylingLast;
                if (-1 === o || e[o] !== i)
                  if (((n = xc(i, e, t, n, r)), null === s)) {
                    let n = (function (e, t, n) {
                      const r = n ? t.classBindings : t.styleBindings;
                      if (0 !== Bi(r)) return e[Li(r)];
                    })(e, t, r);
                    void 0 !== n &&
                      Array.isArray(n) &&
                      ((n = xc(null, e, t, n[1], r)),
                      (n = Dc(n, t.attrs, r)),
                      (function (e, t, n, r) {
                        e[Li(n ? t.classBindings : t.styleBindings)] = r;
                      })(e, t, r, n));
                  } else
                    s = (function (e, t, n) {
                      let r = void 0;
                      const i = t.directiveEnd;
                      for (let s = 1 + t.directiveStylingLast; s < i; s++)
                        r = Dc(r, e[s].hostAttrs, n);
                      return Dc(r, t.attrs, n);
                    })(e, t, r);
              }
              return (
                void 0 !== s &&
                  (r ? (t.residualClasses = s) : (t.residualStyles = s)),
                n
              );
            })(i, s, t, r)),
            (function (e, t, n, r, i, s) {
              let o = s ? t.classBindings : t.styleBindings,
                a = Li(o),
                l = Bi(o);
              e[r] = n;
              let c,
                u = !1;
              if (Array.isArray(n)) {
                const e = n;
                (c = e[1]), (null === c || ke(e, c) > 0) && (u = !0);
              } else c = n;
              if (i)
                if (0 !== l) {
                  const t = Li(e[a + 1]);
                  (e[r + 1] = Mi(t, a)),
                    0 !== t && (e[t + 1] = zi(e[t + 1], r)),
                    (e[a + 1] = (131071 & e[a + 1]) | (r << 17));
                } else
                  (e[r + 1] = Mi(a, 0)),
                    0 !== a && (e[a + 1] = zi(e[a + 1], r)),
                    (a = r);
              else
                (e[r + 1] = Mi(l, 0)),
                  0 === a ? (a = r) : (e[l + 1] = zi(e[l + 1], r)),
                  (l = r);
              u && (e[r + 1] = Vi(e[r + 1])),
                rc(e, c, r, !0),
                rc(e, c, r, !1),
                (function (e, t, n, r, i) {
                  const s = i ? e.residualClasses : e.residualStyles;
                  null != s &&
                    "string" == typeof t &&
                    ke(s, t) >= 0 &&
                    (n[r + 1] = Ui(n[r + 1]));
                })(t, c, e, r, s),
                (o = Mi(a, l)),
                s ? (t.classBindings = o) : (t.styleBindings = o);
            })(i, s, t, n, o, r);
        }
      }
      function xc(e, t, n, r, i) {
        let s = null;
        const o = n.directiveEnd;
        let a = n.directiveStylingLast;
        for (
          -1 === a ? (a = n.directiveStart) : a++;
          a < o && ((s = t[a]), (r = Dc(r, s.hostAttrs, i)), s !== e);

        )
          a++;
        return null !== e && (n.directiveStylingLast = a), r;
      }
      function Dc(e, t, n) {
        const r = n ? 1 : 2;
        let i = -1;
        if (null !== t)
          for (let s = 0; s < t.length; s++) {
            const o = t[s];
            "number" == typeof o
              ? (i = o)
              : i === r &&
                (Array.isArray(e) || (e = void 0 === e ? [] : ["", e]),
                Ie(e, o, !!n || t[++s]));
          }
        return void 0 === e ? null : e;
      }
      function Ic(e, t, n) {
        ti(t) && (n = Qr(n)), Ie(e, t, n);
      }
      function Oc(e, t, n, r, i, s, o, a) {
        if (3 !== t.type) return;
        const l = e.data,
          c = l[a + 1];
        Rc(1 == (1 & c) ? kc(l, t, n, i, Bi(c), o) : void 0) ||
          (Rc(s) ||
            ((function (e) {
              return 2 == (2 & e);
            })(c) &&
              (s = kc(l, null, n, i, a, o))),
          (function (e, t, n, r, i) {
            const s = lt(e);
            if (t)
              i
                ? s
                  ? e.addClass(n, r)
                  : n.classList.add(r)
                : s
                ? e.removeClass(n, r)
                : n.classList.remove(r);
            else {
              const t = -1 == r.indexOf("-") ? void 0 : 2;
              null == i
                ? s
                  ? e.removeStyle(n, r, t)
                  : n.style.removeProperty(r)
                : s
                ? e.setStyle(n, r, i, t)
                : n.style.setProperty(r, i);
            }
          })(r, o, ht(tn(), n), i, s));
      }
      function kc(e, t, n, r, i, s) {
        const o = null === t;
        let a = void 0;
        for (; i > 0; ) {
          const t = e[i],
            s = Array.isArray(t),
            l = s ? t[1] : t,
            c = null === l;
          let u = n[i + 1];
          u === Di && (u = c ? nc : void 0);
          let h = c ? Oe(u, r) : l === r ? u : void 0;
          if ((s && !Rc(h) && (h = Oe(t, r)), Rc(h) && ((a = h), o))) return a;
          const d = e[i + 1];
          i = o ? Li(d) : Bi(d);
        }
        if (null !== t) {
          let e = s ? t.residualClasses : t.residualStyles;
          null != e && (a = Oe(e, r));
        }
        return a;
      }
      function Rc(e) {
        return void 0 !== e;
      }
      function Ac(e, t) {
        return 0 != (e.flags & (t ? 16 : 32));
      }
      function Tc(e, t = "") {
        const n = Ot(),
          r = kt(),
          i = e + 20,
          s = r.firstCreatePass ? Wi(r, n[6], e, 3, null, null) : r.data[i],
          o = (n[i] = Vs(t, n[11]));
        Xs(r, n, o, s), Tt(s, !1);
      }
      function Fc(e) {
        return Pc("", e, ""), Fc;
      }
      function Pc(e, t, n) {
        const r = Ot(),
          i = Ja(r, e, t, n);
        return i !== Di && js(r, tn(), i), Pc;
      }
      function jc(e, t, n, r, i) {
        const s = Ot(),
          o = el(s, e, t, n, r, i);
        return o !== Di && js(s, tn(), o), jc;
      }
      function Nc(e, t, n, r, i, s, o) {
        const a = Ot(),
          l = tl(a, e, t, n, r, i, s, o);
        return l !== Di && js(a, tn(), l), Nc;
      }
      function Mc(e, t, n, r, i, s, o, a, l) {
        const c = Ot(),
          u = nl(c, e, t, n, r, i, s, o, a, l);
        return u !== Di && js(c, tn(), u), Mc;
      }
      function Lc(e, t, n, r, i, s, o, a, l, c, u) {
        const h = Ot(),
          d = rl(h, e, t, n, r, i, s, o, a, l, c, u);
        return d !== Di && js(h, tn(), d), Lc;
      }
      function Vc(e, t, n, r, i, s, o, a, l, c, u, h, d) {
        const f = Ot(),
          p = il(f, e, t, n, r, i, s, o, a, l, c, u, h, d);
        return p !== Di && js(f, tn(), p), Vc;
      }
      function Bc(e, t, n, r, i, s, o, a, l, c, u, h, d, f, p) {
        const m = Ot(),
          g = sl(m, e, t, n, r, i, s, o, a, l, c, u, h, d, f, p);
        return g !== Di && js(m, tn(), g), Bc;
      }
      function zc(e, t, n, r, i, s, o, a, l, c, u, h, d, f, p, m, g) {
        const _ = Ot(),
          y = ol(_, e, t, n, r, i, s, o, a, l, c, u, h, d, f, p, m, g);
        return y !== Di && js(_, tn(), y), zc;
      }
      function Uc(e) {
        const t = Ot(),
          n = Xa(t, e);
        return n !== Di && js(t, tn(), n), Uc;
      }
      function Hc(e, t, n) {
        Cc(Ie, bc, Ja(Ot(), e, t, n), !0);
      }
      function $c(e, t, n, r, i) {
        Cc(Ie, bc, el(Ot(), e, t, n, r, i), !0);
      }
      function qc(e, t, n, r, i, s, o) {
        Cc(Ie, bc, tl(Ot(), e, t, n, r, i, s, o), !0);
      }
      function Gc(e, t, n, r, i, s, o, a, l) {
        Cc(Ie, bc, nl(Ot(), e, t, n, r, i, s, o, a, l), !0);
      }
      function Wc(e, t, n, r, i, s, o, a, l, c, u) {
        Cc(Ie, bc, rl(Ot(), e, t, n, r, i, s, o, a, l, c, u), !0);
      }
      function Qc(e, t, n, r, i, s, o, a, l, c, u, h, d) {
        Cc(Ie, bc, il(Ot(), e, t, n, r, i, s, o, a, l, c, u, h, d), !0);
      }
      function Kc(e, t, n, r, i, s, o, a, l, c, u, h, d, f, p) {
        Cc(Ie, bc, sl(Ot(), e, t, n, r, i, s, o, a, l, c, u, h, d, f, p), !0);
      }
      function Zc(e, t, n, r, i, s, o, a, l, c, u, h, d, f, p, m, g) {
        Cc(
          Ie,
          bc,
          ol(Ot(), e, t, n, r, i, s, o, a, l, c, u, h, d, f, p, m, g),
          !0
        );
      }
      function Yc(e) {
        Cc(Ie, bc, Xa(Ot(), e), !0);
      }
      function Xc(e, t, n) {
        _c(Ja(Ot(), e, t, n));
      }
      function Jc(e, t, n, r, i) {
        _c(el(Ot(), e, t, n, r, i));
      }
      function eu(e, t, n, r, i, s, o) {
        _c(tl(Ot(), e, t, n, r, i, s, o));
      }
      function tu(e, t, n, r, i, s, o, a, l) {
        _c(nl(Ot(), e, t, n, r, i, s, o, a, l));
      }
      function nu(e, t, n, r, i, s, o, a, l, c, u) {
        _c(rl(Ot(), e, t, n, r, i, s, o, a, l, c, u));
      }
      function ru(e, t, n, r, i, s, o, a, l, c, u, h, d) {
        _c(il(Ot(), e, t, n, r, i, s, o, a, l, c, u, h, d));
      }
      function iu(e, t, n, r, i, s, o, a, l, c, u, h, d, f, p) {
        _c(sl(Ot(), e, t, n, r, i, s, o, a, l, c, u, h, d, f, p));
      }
      function su(e, t, n, r, i, s, o, a, l, c, u, h, d, f, p, m, g) {
        _c(ol(Ot(), e, t, n, r, i, s, o, a, l, c, u, h, d, f, p, m, g));
      }
      function ou(e) {
        _c(Xa(Ot(), e));
      }
      function au(e, t, n, r, i) {
        return wc(e, Ja(Ot(), t, n, r), i, !1), au;
      }
      function lu(e, t, n, r, i, s, o) {
        return wc(e, el(Ot(), t, n, r, i, s), o, !1), lu;
      }
      function cu(e, t, n, r, i, s, o, a, l) {
        return wc(e, tl(Ot(), t, n, r, i, s, o, a), l, !1), cu;
      }
      function uu(e, t, n, r, i, s, o, a, l, c, u) {
        return wc(e, nl(Ot(), t, n, r, i, s, o, a, l, c), u, !1), uu;
      }
      function hu(e, t, n, r, i, s, o, a, l, c, u, h, d) {
        return wc(e, rl(Ot(), t, n, r, i, s, o, a, l, c, u, h), d, !1), hu;
      }
      function du(e, t, n, r, i, s, o, a, l, c, u, h, d, f, p) {
        return (
          wc(e, il(Ot(), t, n, r, i, s, o, a, l, c, u, h, d, f), p, !1), du
        );
      }
      function fu(e, t, n, r, i, s, o, a, l, c, u, h, d, f, p, m, g) {
        return (
          wc(e, sl(Ot(), t, n, r, i, s, o, a, l, c, u, h, d, f, p, m), g, !1),
          fu
        );
      }
      function pu(e, t, n, r, i, s, o, a, l, c, u, h, d, f, p, m, g, _, y) {
        return (
          wc(
            e,
            ol(Ot(), t, n, r, i, s, o, a, l, c, u, h, d, f, p, m, g, _),
            y,
            !1
          ),
          pu
        );
      }
      function mu(e, t, n) {
        return wc(e, Xa(Ot(), t), n, !1), mu;
      }
      function gu(e, t, n) {
        const r = Ot();
        return Wa(r, Bt(), t) && os(kt(), rn(), r, e, t, r[11], n, !0), gu;
      }
      function _u(e, t, n) {
        const r = Ot();
        if (Wa(r, Bt(), t)) {
          const i = kt(),
            s = rn();
          os(i, s, r, e, t, Ts($t(i.data), s, r), n, !0);
        }
        return _u;
      }
      function yu(e) {
        Ou(e);
        const t = Eu(e, !1);
        return null === t
          ? null
          : (void 0 === t.component &&
              (t.component = (function (e, t) {
                const n = t[1].data[e];
                return 2 & n.flags ? t[n.directiveStart] : null;
              })(t.nodeIndex, t.lView)),
            t.component);
      }
      function vu(e) {
        Ou(e);
        const t = Eu(e, !1);
        return null === t ? null : t.lView[8];
      }
      function bu(e) {
        const t = Eu(e, !1);
        if (null === t) return null;
        let n,
          r = t.lView;
        for (; null === r[0] && (n = Ii(r)); ) r = n;
        return 512 & r[2] ? null : r[8];
      }
      function wu(e) {
        return [...Oi(e).components];
      }
      function Cu(e) {
        const t = Eu(e, !1);
        return null === t
          ? na.NULL
          : new Wn(t.lView[1].data[t.nodeIndex], t.lView);
      }
      function Su(e) {
        const t = Eu(e);
        return (
          void 0 === t.directives &&
            (t.directives = di(t.nodeIndex, t.lView, !1)),
          null === t.directives ? [] : [...t.directives]
        );
      }
      function Eu(e, t = !0) {
        const n = si(e);
        if (!n && t) throw new Error("Invalid ng target");
        return n;
      }
      function xu(e) {
        return si(e).native;
      }
      function Du(e) {
        Ou(e);
        const t = Eu(e, !1);
        if (null === t) return [];
        const n = t.lView,
          r = n[7],
          i = n[1].cleanup,
          s = [];
        if (i && r)
          for (let o = 0; o < i.length; ) {
            const t = i[o++],
              a = i[o++];
            if ("string" == typeof t) {
              const l = t,
                c = ut(n[a]),
                u = r[i[o++]],
                h = i[o++],
                d = "boolean" == typeof h || h >= 0 ? "dom" : "output",
                f = "boolean" == typeof h && h;
              e == c &&
                s.push({
                  element: e,
                  name: l,
                  callback: u,
                  useCapture: f,
                  type: d,
                });
            }
          }
        return s.sort(Iu), s;
      }
      function Iu(e, t) {
        return e.name == t.name ? 0 : e.name < t.name ? -1 : 1;
      }
      function Ou(e) {
        if ("undefined" != typeof Element && !(e instanceof Element))
          throw new Error("Expecting instance of DOM Element");
      }
      function ku(e) {
        _l(e), wu(e).forEach((e) => gl(e));
      }
      let Ru = !1;
      function Au() {
        Ru ||
          ((Ru = !0),
          Tu("getComponent", yu),
          Tu("getContext", vu),
          Tu("getListeners", Du),
          Tu("getOwningComponent", bu),
          Tu("getHostElement", xu),
          Tu("getInjector", Cu),
          Tu("getRootComponents", wu),
          Tu("getDirectives", Su),
          Tu("applyChanges", ku));
      }
      function Tu(e, t) {
        if ("undefined" == typeof COMPILED || !COMPILED) {
          const n = G;
          if (n) {
            let r = n.ng;
            r || (r = n.ng = {}), (r[e] = t);
          }
        }
      }
      function Fu(e, t = {}) {
        const n = t.rendererFactory || ct,
          r = t.sanitizer || null,
          i = We(e);
        i.type != e && (i.type = e);
        const s = i.selectors[0][0],
          o = rs(n.createRenderer(null, null), t.host || s, i.encapsulation),
          a = i.onPush ? 576 : 528,
          l = Nu(t.scheduler, t.playerHandler),
          c = n.createRenderer(o, i),
          u = ns(0, -1, null, 1, 0, null, null, null, null, null),
          h = Gi(null, u, l, a, null, null, n, c, void 0, t.injector || null);
        let d;
        Qt(h, null);
        try {
          n.begin && n.begin(),
            (d = ju(Pu(o, i, h, n, c, r), i, h, l, t.hostFeatures || null)),
            Qi(u, h, null),
            Ki(u, h, null, null);
        } finally {
          Jt(), n.end && n.end();
        }
        return d;
      }
      function Pu(e, t, n, r, i, s) {
        const o = n[1];
        n[20] = e;
        const a = Wi(o, null, 0, 3, null, null),
          l = (a.mergedAttrs = t.hostAttrs);
        null !== l &&
          (Ma(a, l, !0),
          null !== e &&
            (mn(i, e, l),
            null !== a.classes && oo(i, e, a.classes),
            null !== a.styles && so(i, e, a.styles)));
        const c = r.createRenderer(e, t),
          u = Gi(n, ts(t), null, t.onPush ? 64 : 16, n[20], a, r, c, s);
        return (
          o.firstCreatePass &&
            (Ln(Pn(a, n), o, t.type), ds(o, a), ps(a, n.length, 1)),
          Ss(n, u),
          (n[20] = u)
        );
      }
      function ju(e, t, n, r, i) {
        const s = n[1],
          o = (function (e, t, n) {
            const r = At();
            e.firstCreatePass &&
              (n.providersResolver && n.providersResolver(n),
              hs(e, r, 1),
              ms(e, t, n));
            const i = $n(t, e, t.length - 1, r);
            li(i, t);
            const s = dt(r, t);
            return s && li(s, t), i;
          })(s, n, t);
        r.components.push(o),
          (e[8] = o),
          i && i.forEach((e) => e(o, t)),
          t.contentQueries && t.contentQueries(1, o, n.length - 1);
        const a = At();
        if (
          s.firstCreatePass &&
          (null !== t.hostBindings || null !== t.hostAttrs)
        ) {
          nn(a.index - 20);
          const e = n[1];
          ls(e, t), cs(e, n, t.hostVars), us(t, o);
        }
        return o;
      }
      function Nu(e, t) {
        return {
          components: [],
          scheduler: e || Dn,
          clean: ks,
          playerHandler: t || null,
          flags: 0,
        };
      }
      function Mu(e, t) {
        const n = yt(e)[1],
          r = n.data.length - 1;
        ln(n, { directiveStart: r, directiveEnd: r + 1 });
      }
      function Lu(e) {
        return Oi(e).clean;
      }
      function Vu(e) {
        return Object.getPrototypeOf(e.prototype).constructor;
      }
      function Bu(e) {
        let t = Vu(e.type),
          n = !0;
        const r = [e];
        for (; t; ) {
          let i = void 0;
          if (rt(e)) i = t.ɵcmp || t.ɵdir;
          else {
            if (t.ɵcmp) throw new Error("Directives cannot inherit Components");
            i = t.ɵdir;
          }
          if (i) {
            if (n) {
              r.push(i);
              const t = e;
              (t.inputs = zu(e.inputs)),
                (t.declaredInputs = zu(e.declaredInputs)),
                (t.outputs = zu(e.outputs));
              const n = i.hostBindings;
              n && $u(e, n);
              const s = i.viewQuery,
                o = i.contentQueries;
              if (
                (s && Uu(e, s),
                o && Hu(e, o),
                E(e.inputs, i.inputs),
                E(e.declaredInputs, i.declaredInputs),
                E(e.outputs, i.outputs),
                rt(i) && i.data.animation)
              ) {
                const t = e.data;
                t.animation = (t.animation || []).concat(i.data.animation);
              }
              (t.afterContentChecked =
                t.afterContentChecked || i.afterContentChecked),
                (t.afterContentInit = e.afterContentInit || i.afterContentInit),
                (t.afterViewChecked = e.afterViewChecked || i.afterViewChecked),
                (t.afterViewInit = e.afterViewInit || i.afterViewInit),
                (t.doCheck = e.doCheck || i.doCheck),
                (t.onDestroy = e.onDestroy || i.onDestroy),
                (t.onInit = e.onInit || i.onInit);
            }
            const t = i.features;
            if (t)
              for (let r = 0; r < t.length; r++) {
                const i = t[r];
                i && i.ngInherit && i(e), i === Bu && (n = !1);
              }
          }
          t = Object.getPrototypeOf(t);
        }
        !(function (e) {
          let t = 0,
            n = null;
          for (let r = e.length - 1; r >= 0; r--) {
            const i = e[r];
            (i.hostVars = t += i.hostVars),
              (i.hostAttrs = yn(i.hostAttrs, (n = yn(n, i.hostAttrs))));
          }
        })(r);
      }
      function zu(e) {
        return e === Pe ? {} : e === je ? [] : e;
      }
      function Uu(e, t) {
        const n = e.viewQuery;
        e.viewQuery = n
          ? (e, r) => {
              t(e, r), n(e, r);
            }
          : t;
      }
      function Hu(e, t) {
        const n = e.contentQueries;
        e.contentQueries = n
          ? (e, r, i) => {
              t(e, r, i), n(e, r, i);
            }
          : t;
      }
      function $u(e, t) {
        const n = e.hostBindings;
        e.hostBindings = n
          ? (e, r) => {
              t(e, r), n(e, r);
            }
          : t;
      }
      const qu = ["providersResolver"],
        Gu = [
          "template",
          "decls",
          "consts",
          "vars",
          "onPush",
          "ngContentSelectors",
          "styles",
          "encapsulation",
          "schemas",
        ];
      function Wu(e) {
        let t = Vu(e.type),
          n = void 0;
        n = rt(e) ? t.ɵcmp : t.ɵdir;
        const r = e;
        for (const i of qu) r[i] = n[i];
        if (rt(n)) for (const i of Gu) r[i] = n[i];
      }
      class Qu {
        constructor(e, t, n) {
          (this.previousValue = e),
            (this.currentValue = t),
            (this.firstChange = n);
        }
        isFirstChange() {
          return this.firstChange;
        }
      }
      function Ku(e) {
        e.type.prototype.ngOnChanges &&
          ((e.setInput = Zu),
          (e.onChanges = function () {
            const e = Yu(this),
              t = e && e.current;
            if (t) {
              const n = e.previous;
              if (n === Pe) e.previous = t;
              else for (let e in t) n[e] = t[e];
              (e.current = null), this.ngOnChanges(t);
            }
          }));
      }
      function Zu(e, t, n, r) {
        const i =
            Yu(e) ||
            (function (e, t) {
              return (e.__ngSimpleChanges__ = t);
            })(e, { previous: Pe, current: null }),
          s = i.current || (i.current = {}),
          o = i.previous,
          a = this.declaredInputs[n],
          l = o[a];
        (s[a] = new Qu(l && l.currentValue, t, o === Pe)), (e[r] = t);
      }
      function Yu(e) {
        return e.__ngSimpleChanges__ || null;
      }
      function Xu(e, t, n, r, i) {
        if (((e = B(e)), Array.isArray(e)))
          for (let s = 0; s < e.length; s++) Xu(e[s], t, n, r, i);
        else {
          const s = kt(),
            o = Ot();
          let a = Jo(e) ? e : B(e.provide),
            l = Zo(e);
          const c = At(),
            u = 65535 & c.providerIndexes,
            h = c.directiveStart,
            d = c.providerIndexes >> 16;
          if (Jo(e) || !e.multi) {
            const r = new pn(l, i, wl),
              f = th(a, t, i ? u : u + d, h);
            -1 === f
              ? (Ln(Pn(c, o), s, a),
                Ju(s, e, t.length),
                t.push(a),
                c.directiveStart++,
                c.directiveEnd++,
                i && (c.providerIndexes += 65536),
                n.push(r),
                o.push(r))
              : ((n[f] = r), (o[f] = r));
          } else {
            const f = th(a, t, u + d, h),
              p = th(a, t, u, u + d),
              m = f >= 0 && n[f],
              g = p >= 0 && n[p];
            if ((i && !g) || (!i && !m)) {
              Ln(Pn(c, o), s, a);
              const u = (function (e, t, n, r, i) {
                const s = new pn(e, n, wl);
                return (
                  (s.multi = []),
                  (s.index = t),
                  (s.componentProviders = 0),
                  eh(s, i, r && !n),
                  s
                );
              })(i ? rh : nh, n.length, i, r, l);
              !i && g && (n[p].providerFactory = u),
                Ju(s, e, t.length, 0),
                t.push(a),
                c.directiveStart++,
                c.directiveEnd++,
                i && (c.providerIndexes += 65536),
                n.push(u),
                o.push(u);
            } else Ju(s, e, f > -1 ? f : p, eh(n[i ? p : f], l, !i && r));
            !i && r && g && n[p].componentProviders++;
          }
        }
      }
      function Ju(e, t, n, r) {
        const i = Jo(t);
        if (i || t.useClass) {
          const s = (t.useClass || t).prototype.ngOnDestroy;
          if (s) {
            const o = e.destroyHooks || (e.destroyHooks = []);
            if (!i && t.multi) {
              const e = o.indexOf(n);
              -1 === e ? o.push(n, [r, s]) : o[e + 1].push(r, s);
            } else o.push(n, s);
          }
        }
      }
      function eh(e, t, n) {
        return n && e.componentProviders++, e.multi.push(t) - 1;
      }
      function th(e, t, n, r) {
        for (let i = n; i < r; i++) if (t[i] === e) return i;
        return -1;
      }
      function nh(e, t, n, r) {
        return ih(this.multi, []);
      }
      function rh(e, t, n, r) {
        const i = this.multi;
        let s;
        if (this.providerFactory) {
          const e = this.providerFactory.componentProviders,
            t = $n(n, n[1], this.providerFactory.index, r);
          (s = t.slice(0, e)), ih(i, s);
          for (let n = e; n < t.length; n++) s.push(t[n]);
        } else (s = []), ih(i, s);
        return s;
      }
      function ih(e, t) {
        for (let n = 0; n < e.length; n++) t.push((0, e[n])());
        return t;
      }
      function sh(e, t = []) {
        return (n) => {
          n.providersResolver = (n, r) =>
            (function (e, t, n) {
              const r = kt();
              if (r.firstCreatePass) {
                const i = rt(e);
                Xu(n, r.data, r.blueprint, i, !0),
                  Xu(t, r.data, r.blueprint, i, !1);
              }
            })(n, r ? r(e) : e, t);
        };
      }
      Ku.ngInherit = !0;
      class oh {}
      class ah {}
      function lh(e) {
        const t = Error(
          `No component factory found for ${N(
            e
          )}. Did you add it to @NgModule.entryComponents?`
        );
        return (t[ch] = e), t;
      }
      const ch = "ngComponent";
      class uh {
        resolveComponentFactory(e) {
          throw lh(e);
        }
      }
      let hh = (() => {
        class e {}
        return (e.NULL = new uh()), e;
      })();
      class dh {
        constructor(e, t, n) {
          (this._parent = t),
            (this._ngModule = n),
            (this._factories = new Map());
          for (let r = 0; r < e.length; r++) {
            const t = e[r];
            this._factories.set(t.componentType, t);
          }
        }
        resolveComponentFactory(e) {
          let t = this._factories.get(e);
          if (
            (!t &&
              this._parent &&
              (t = this._parent.resolveComponentFactory(e)),
            !t)
          )
            throw lh(e);
          return new fh(t, this._ngModule);
        }
      }
      class fh extends ah {
        constructor(e, t) {
          super(),
            (this.factory = e),
            (this.ngModule = t),
            (this.selector = e.selector),
            (this.componentType = e.componentType),
            (this.ngContentSelectors = e.ngContentSelectors),
            (this.inputs = e.inputs),
            (this.outputs = e.outputs);
        }
        create(e, t, n, r) {
          return this.factory.create(e, t, n, r || this.ngModule);
        }
      }
      let ph = (() => {
        class e {
          constructor(e) {
            this.nativeElement = e;
          }
        }
        return (e.__NG_ELEMENT_ID__ = () => gh(e)), e;
      })();
      const mh = function (e) {
          return fo(e, At(), Ot());
        },
        gh = mh;
      class _h {}
      const yh = (function () {
        var e = { Important: 1, DashCase: 2 };
        return (e[e.Important] = "Important"), (e[e.DashCase] = "DashCase"), e;
      })();
      let vh = (() => {
        class e {}
        return (e.__NG_ELEMENT_ID__ = () => wh()), e;
      })();
      const bh = function () {
          const e = Ot(),
            t = gt(At().index, e);
          return (function (e) {
            const t = e[11];
            if (lt(t)) return t;
            throw new Error(
              "Cannot inject Renderer2 when the application uses Renderer3!"
            );
          })(Xe(t) ? t : e);
        },
        wh = bh;
      let Ch = (() => {
        class e {}
        return (
          (e.ɵprov = x({ token: e, providedIn: "root", factory: () => null })),
          e
        );
      })();
      class Sh {
        constructor(e) {
          (this.full = e),
            (this.major = e.split(".")[0]),
            (this.minor = e.split(".")[1]),
            (this.patch = e.split(".").slice(2).join("."));
        }
      }
      const Eh = new Sh("9.1.12");
      class xh {
        constructor() {}
        supports(e) {
          return Ha(e);
        }
        create(e) {
          return new Ih(e);
        }
      }
      const Dh = (e, t) => t;
      class Ih {
        constructor(e) {
          (this.length = 0),
            (this._linkedRecords = null),
            (this._unlinkedRecords = null),
            (this._previousItHead = null),
            (this._itHead = null),
            (this._itTail = null),
            (this._additionsHead = null),
            (this._additionsTail = null),
            (this._movesHead = null),
            (this._movesTail = null),
            (this._removalsHead = null),
            (this._removalsTail = null),
            (this._identityChangesHead = null),
            (this._identityChangesTail = null),
            (this._trackByFn = e || Dh);
        }
        forEachItem(e) {
          let t;
          for (t = this._itHead; null !== t; t = t._next) e(t);
        }
        forEachOperation(e) {
          let t = this._itHead,
            n = this._removalsHead,
            r = 0,
            i = null;
          for (; t || n; ) {
            const s = !n || (t && t.currentIndex < Ah(n, r, i)) ? t : n,
              o = Ah(s, r, i),
              a = s.currentIndex;
            if (s === n) r--, (n = n._nextRemoved);
            else if (((t = t._next), null == s.previousIndex)) r++;
            else {
              i || (i = []);
              const e = o - r,
                t = a - r;
              if (e != t) {
                for (let n = 0; n < e; n++) {
                  const r = n < i.length ? i[n] : (i[n] = 0),
                    s = r + n;
                  t <= s && s < e && (i[n] = r + 1);
                }
                i[s.previousIndex] = t - e;
              }
            }
            o !== a && e(s, o, a);
          }
        }
        forEachPreviousItem(e) {
          let t;
          for (t = this._previousItHead; null !== t; t = t._nextPrevious) e(t);
        }
        forEachAddedItem(e) {
          let t;
          for (t = this._additionsHead; null !== t; t = t._nextAdded) e(t);
        }
        forEachMovedItem(e) {
          let t;
          for (t = this._movesHead; null !== t; t = t._nextMoved) e(t);
        }
        forEachRemovedItem(e) {
          let t;
          for (t = this._removalsHead; null !== t; t = t._nextRemoved) e(t);
        }
        forEachIdentityChange(e) {
          let t;
          for (
            t = this._identityChangesHead;
            null !== t;
            t = t._nextIdentityChange
          )
            e(t);
        }
        diff(e) {
          if ((null == e && (e = []), !Ha(e)))
            throw new Error(
              `Error trying to diff '${N(
                e
              )}'. Only arrays and iterables are allowed`
            );
          return this.check(e) ? this : null;
        }
        onDestroy() {}
        check(e) {
          this._reset();
          let t,
            n,
            r,
            i = this._itHead,
            s = !1;
          if (Array.isArray(e)) {
            this.length = e.length;
            for (let t = 0; t < this.length; t++)
              (n = e[t]),
                (r = this._trackByFn(t, n)),
                null !== i && Ba(i.trackById, r)
                  ? (s && (i = this._verifyReinsertion(i, n, r, t)),
                    Ba(i.item, n) || this._addIdentityChange(i, n))
                  : ((i = this._mismatch(i, n, r, t)), (s = !0)),
                (i = i._next);
          } else
            (t = 0),
              (function (e, t) {
                if (Array.isArray(e))
                  for (let n = 0; n < e.length; n++) t(e[n]);
                else {
                  const n = e[Va()]();
                  let r;
                  for (; !(r = n.next()).done; ) t(r.value);
                }
              })(e, (e) => {
                (r = this._trackByFn(t, e)),
                  null !== i && Ba(i.trackById, r)
                    ? (s && (i = this._verifyReinsertion(i, e, r, t)),
                      Ba(i.item, e) || this._addIdentityChange(i, e))
                    : ((i = this._mismatch(i, e, r, t)), (s = !0)),
                  (i = i._next),
                  t++;
              }),
              (this.length = t);
          return this._truncate(i), (this.collection = e), this.isDirty;
        }
        get isDirty() {
          return (
            null !== this._additionsHead ||
            null !== this._movesHead ||
            null !== this._removalsHead ||
            null !== this._identityChangesHead
          );
        }
        _reset() {
          if (this.isDirty) {
            let e, t;
            for (
              e = this._previousItHead = this._itHead;
              null !== e;
              e = e._next
            )
              e._nextPrevious = e._next;
            for (e = this._additionsHead; null !== e; e = e._nextAdded)
              e.previousIndex = e.currentIndex;
            for (
              this._additionsHead = this._additionsTail = null,
                e = this._movesHead;
              null !== e;
              e = t
            )
              (e.previousIndex = e.currentIndex), (t = e._nextMoved);
            (this._movesHead = this._movesTail = null),
              (this._removalsHead = this._removalsTail = null),
              (this._identityChangesHead = this._identityChangesTail = null);
          }
        }
        _mismatch(e, t, n, r) {
          let i;
          return (
            null === e ? (i = this._itTail) : ((i = e._prev), this._remove(e)),
            null !==
            (e =
              null === this._linkedRecords
                ? null
                : this._linkedRecords.get(n, r))
              ? (Ba(e.item, t) || this._addIdentityChange(e, t),
                this._moveAfter(e, i, r))
              : null !==
                (e =
                  null === this._unlinkedRecords
                    ? null
                    : this._unlinkedRecords.get(n, null))
              ? (Ba(e.item, t) || this._addIdentityChange(e, t),
                this._reinsertAfter(e, i, r))
              : (e = this._addAfter(new Oh(t, n), i, r)),
            e
          );
        }
        _verifyReinsertion(e, t, n, r) {
          let i =
            null === this._unlinkedRecords
              ? null
              : this._unlinkedRecords.get(n, null);
          return (
            null !== i
              ? (e = this._reinsertAfter(i, e._prev, r))
              : e.currentIndex != r &&
                ((e.currentIndex = r), this._addToMoves(e, r)),
            e
          );
        }
        _truncate(e) {
          for (; null !== e; ) {
            const t = e._next;
            this._addToRemovals(this._unlink(e)), (e = t);
          }
          null !== this._unlinkedRecords && this._unlinkedRecords.clear(),
            null !== this._additionsTail &&
              (this._additionsTail._nextAdded = null),
            null !== this._movesTail && (this._movesTail._nextMoved = null),
            null !== this._itTail && (this._itTail._next = null),
            null !== this._removalsTail &&
              (this._removalsTail._nextRemoved = null),
            null !== this._identityChangesTail &&
              (this._identityChangesTail._nextIdentityChange = null);
        }
        _reinsertAfter(e, t, n) {
          null !== this._unlinkedRecords && this._unlinkedRecords.remove(e);
          const r = e._prevRemoved,
            i = e._nextRemoved;
          return (
            null === r ? (this._removalsHead = i) : (r._nextRemoved = i),
            null === i ? (this._removalsTail = r) : (i._prevRemoved = r),
            this._insertAfter(e, t, n),
            this._addToMoves(e, n),
            e
          );
        }
        _moveAfter(e, t, n) {
          return (
            this._unlink(e),
            this._insertAfter(e, t, n),
            this._addToMoves(e, n),
            e
          );
        }
        _addAfter(e, t, n) {
          return (
            this._insertAfter(e, t, n),
            (this._additionsTail =
              null === this._additionsTail
                ? (this._additionsHead = e)
                : (this._additionsTail._nextAdded = e)),
            e
          );
        }
        _insertAfter(e, t, n) {
          const r = null === t ? this._itHead : t._next;
          return (
            (e._next = r),
            (e._prev = t),
            null === r ? (this._itTail = e) : (r._prev = e),
            null === t ? (this._itHead = e) : (t._next = e),
            null === this._linkedRecords && (this._linkedRecords = new Rh()),
            this._linkedRecords.put(e),
            (e.currentIndex = n),
            e
          );
        }
        _remove(e) {
          return this._addToRemovals(this._unlink(e));
        }
        _unlink(e) {
          null !== this._linkedRecords && this._linkedRecords.remove(e);
          const t = e._prev,
            n = e._next;
          return (
            null === t ? (this._itHead = n) : (t._next = n),
            null === n ? (this._itTail = t) : (n._prev = t),
            e
          );
        }
        _addToMoves(e, t) {
          return (
            e.previousIndex === t ||
              (this._movesTail =
                null === this._movesTail
                  ? (this._movesHead = e)
                  : (this._movesTail._nextMoved = e)),
            e
          );
        }
        _addToRemovals(e) {
          return (
            null === this._unlinkedRecords &&
              (this._unlinkedRecords = new Rh()),
            this._unlinkedRecords.put(e),
            (e.currentIndex = null),
            (e._nextRemoved = null),
            null === this._removalsTail
              ? ((this._removalsTail = this._removalsHead = e),
                (e._prevRemoved = null))
              : ((e._prevRemoved = this._removalsTail),
                (this._removalsTail = this._removalsTail._nextRemoved = e)),
            e
          );
        }
        _addIdentityChange(e, t) {
          return (
            (e.item = t),
            (this._identityChangesTail =
              null === this._identityChangesTail
                ? (this._identityChangesHead = e)
                : (this._identityChangesTail._nextIdentityChange = e)),
            e
          );
        }
      }
      class Oh {
        constructor(e, t) {
          (this.item = e),
            (this.trackById = t),
            (this.currentIndex = null),
            (this.previousIndex = null),
            (this._nextPrevious = null),
            (this._prev = null),
            (this._next = null),
            (this._prevDup = null),
            (this._nextDup = null),
            (this._prevRemoved = null),
            (this._nextRemoved = null),
            (this._nextAdded = null),
            (this._nextMoved = null),
            (this._nextIdentityChange = null);
        }
      }
      class kh {
        constructor() {
          (this._head = null), (this._tail = null);
        }
        add(e) {
          null === this._head
            ? ((this._head = this._tail = e),
              (e._nextDup = null),
              (e._prevDup = null))
            : ((this._tail._nextDup = e),
              (e._prevDup = this._tail),
              (e._nextDup = null),
              (this._tail = e));
        }
        get(e, t) {
          let n;
          for (n = this._head; null !== n; n = n._nextDup)
            if ((null === t || t <= n.currentIndex) && Ba(n.trackById, e))
              return n;
          return null;
        }
        remove(e) {
          const t = e._prevDup,
            n = e._nextDup;
          return (
            null === t ? (this._head = n) : (t._nextDup = n),
            null === n ? (this._tail = t) : (n._prevDup = t),
            null === this._head
          );
        }
      }
      class Rh {
        constructor() {
          this.map = new Map();
        }
        put(e) {
          const t = e.trackById;
          let n = this.map.get(t);
          n || ((n = new kh()), this.map.set(t, n)), n.add(e);
        }
        get(e, t) {
          const n = this.map.get(e);
          return n ? n.get(e, t) : null;
        }
        remove(e) {
          const t = e.trackById;
          return this.map.get(t).remove(e) && this.map.delete(t), e;
        }
        get isEmpty() {
          return 0 === this.map.size;
        }
        clear() {
          this.map.clear();
        }
      }
      function Ah(e, t, n) {
        const r = e.previousIndex;
        if (null === r) return r;
        let i = 0;
        return n && r < n.length && (i = n[r]), r + t + i;
      }
      class Th {
        constructor() {}
        supports(e) {
          return e instanceof Map || $a(e);
        }
        create() {
          return new Fh();
        }
      }
      class Fh {
        constructor() {
          (this._records = new Map()),
            (this._mapHead = null),
            (this._appendAfter = null),
            (this._previousMapHead = null),
            (this._changesHead = null),
            (this._changesTail = null),
            (this._additionsHead = null),
            (this._additionsTail = null),
            (this._removalsHead = null),
            (this._removalsTail = null);
        }
        get isDirty() {
          return (
            null !== this._additionsHead ||
            null !== this._changesHead ||
            null !== this._removalsHead
          );
        }
        forEachItem(e) {
          let t;
          for (t = this._mapHead; null !== t; t = t._next) e(t);
        }
        forEachPreviousItem(e) {
          let t;
          for (t = this._previousMapHead; null !== t; t = t._nextPrevious) e(t);
        }
        forEachChangedItem(e) {
          let t;
          for (t = this._changesHead; null !== t; t = t._nextChanged) e(t);
        }
        forEachAddedItem(e) {
          let t;
          for (t = this._additionsHead; null !== t; t = t._nextAdded) e(t);
        }
        forEachRemovedItem(e) {
          let t;
          for (t = this._removalsHead; null !== t; t = t._nextRemoved) e(t);
        }
        diff(e) {
          if (e) {
            if (!(e instanceof Map || $a(e)))
              throw new Error(
                `Error trying to diff '${N(
                  e
                )}'. Only maps and objects are allowed`
              );
          } else e = new Map();
          return this.check(e) ? this : null;
        }
        onDestroy() {}
        check(e) {
          this._reset();
          let t = this._mapHead;
          if (
            ((this._appendAfter = null),
            this._forEach(e, (e, n) => {
              if (t && t.key === n)
                this._maybeAddToChanges(t, e),
                  (this._appendAfter = t),
                  (t = t._next);
              else {
                const r = this._getOrCreateRecordForKey(n, e);
                t = this._insertBeforeOrAppend(t, r);
              }
            }),
            t)
          ) {
            t._prev && (t._prev._next = null), (this._removalsHead = t);
            for (let e = t; null !== e; e = e._nextRemoved)
              e === this._mapHead && (this._mapHead = null),
                this._records.delete(e.key),
                (e._nextRemoved = e._next),
                (e.previousValue = e.currentValue),
                (e.currentValue = null),
                (e._prev = null),
                (e._next = null);
          }
          return (
            this._changesTail && (this._changesTail._nextChanged = null),
            this._additionsTail && (this._additionsTail._nextAdded = null),
            this.isDirty
          );
        }
        _insertBeforeOrAppend(e, t) {
          if (e) {
            const n = e._prev;
            return (
              (t._next = e),
              (t._prev = n),
              (e._prev = t),
              n && (n._next = t),
              e === this._mapHead && (this._mapHead = t),
              (this._appendAfter = e),
              e
            );
          }
          return (
            this._appendAfter
              ? ((this._appendAfter._next = t), (t._prev = this._appendAfter))
              : (this._mapHead = t),
            (this._appendAfter = t),
            null
          );
        }
        _getOrCreateRecordForKey(e, t) {
          if (this._records.has(e)) {
            const n = this._records.get(e);
            this._maybeAddToChanges(n, t);
            const r = n._prev,
              i = n._next;
            return (
              r && (r._next = i),
              i && (i._prev = r),
              (n._next = null),
              (n._prev = null),
              n
            );
          }
          const n = new Ph(e);
          return (
            this._records.set(e, n),
            (n.currentValue = t),
            this._addToAdditions(n),
            n
          );
        }
        _reset() {
          if (this.isDirty) {
            let e;
            for (
              this._previousMapHead = this._mapHead, e = this._previousMapHead;
              null !== e;
              e = e._next
            )
              e._nextPrevious = e._next;
            for (e = this._changesHead; null !== e; e = e._nextChanged)
              e.previousValue = e.currentValue;
            for (e = this._additionsHead; null != e; e = e._nextAdded)
              e.previousValue = e.currentValue;
            (this._changesHead = this._changesTail = null),
              (this._additionsHead = this._additionsTail = null),
              (this._removalsHead = null);
          }
        }
        _maybeAddToChanges(e, t) {
          Ba(t, e.currentValue) ||
            ((e.previousValue = e.currentValue),
            (e.currentValue = t),
            this._addToChanges(e));
        }
        _addToAdditions(e) {
          null === this._additionsHead
            ? (this._additionsHead = this._additionsTail = e)
            : ((this._additionsTail._nextAdded = e), (this._additionsTail = e));
        }
        _addToChanges(e) {
          null === this._changesHead
            ? (this._changesHead = this._changesTail = e)
            : ((this._changesTail._nextChanged = e), (this._changesTail = e));
        }
        _forEach(e, t) {
          e instanceof Map
            ? e.forEach(t)
            : Object.keys(e).forEach((n) => t(e[n], n));
        }
      }
      class Ph {
        constructor(e) {
          (this.key = e),
            (this.previousValue = null),
            (this.currentValue = null),
            (this._nextPrevious = null),
            (this._next = null),
            (this._prev = null),
            (this._nextAdded = null),
            (this._nextRemoved = null),
            (this._nextChanged = null);
        }
      }
      let jh = (() => {
          class e {
            constructor(e) {
              this.factories = e;
            }
            static create(t, n) {
              if (null != n) {
                const e = n.factories.slice();
                t = t.concat(e);
              }
              return new e(t);
            }
            static extend(t) {
              return {
                provide: e,
                useFactory: (n) => {
                  if (!n)
                    throw new Error(
                      "Cannot extend IterableDiffers without a parent injector"
                    );
                  return e.create(t, n);
                },
                deps: [[e, new v(), new _()]],
              };
            }
            find(e) {
              const t = this.factories.find((t) => t.supports(e));
              if (null != t) return t;
              throw new Error(
                `Cannot find a differ supporting object '${e}' of type '${
                  ((n = e), n.name || typeof n)
                }'`
              );
              var n;
            }
          }
          return (
            (e.ɵprov = x({
              token: e,
              providedIn: "root",
              factory: () => new e([new xh()]),
            })),
            e
          );
        })(),
        Nh = (() => {
          class e {
            constructor(e) {
              this.factories = e;
            }
            static create(t, n) {
              if (n) {
                const e = n.factories.slice();
                t = t.concat(e);
              }
              return new e(t);
            }
            static extend(t) {
              return {
                provide: e,
                useFactory: (n) => {
                  if (!n)
                    throw new Error(
                      "Cannot extend KeyValueDiffers without a parent injector"
                    );
                  return e.create(t, n);
                },
                deps: [[e, new v(), new _()]],
              };
            }
            find(e) {
              const t = this.factories.find((t) => t.supports(e));
              if (t) return t;
              throw new Error(`Cannot find a differ supporting object '${e}'`);
            }
          }
          return (
            (e.ɵprov = x({
              token: e,
              providedIn: "root",
              factory: () => new e([new Th()]),
            })),
            e
          );
        })();
      const Mh = [new Th()],
        Lh = new jh([new xh()]),
        Vh = new Nh(Mh);
      let Bh = (() => {
        class e {}
        return (e.__NG_ELEMENT_ID__ = () => Uh(e, ph)), e;
      })();
      const zh = function (e, t) {
          return po(e, t, At(), Ot());
        },
        Uh = zh;
      let Hh = (() => {
        class e {}
        return (e.__NG_ELEMENT_ID__ = () => qh(e, ph)), e;
      })();
      const $h = function (e, t) {
          return mo(e, t, At(), Ot());
        },
        qh = $h;
      function Gh(e, t, n, r) {
        let i = `ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '${t}'. Current value: '${n}'.`;
        return (
          r &&
            (i +=
              " It seems like the view has been created after its parent and its children have been dirty checked. Has it been created in a change detection hook ?"),
          (function (e, t) {
            const n = new Error(e);
            return Wh(n, t), n;
          })(i, e)
        );
      }
      function Wh(e, t) {
        (e.ngDebugContext = t), (e.ngErrorLogger = t.logError.bind(t));
      }
      function Qh(e) {
        return new Error(
          "ViewDestroyedError: Attempt to use a destroyed view: " + e
        );
      }
      function Kh(e, t, n) {
        const r = e.state,
          i = 1792 & r;
        return i === t
          ? ((e.state = (-1793 & r) | n), (e.initIndex = -1), !0)
          : i === n;
      }
      function Zh(e, t, n) {
        return (
          (1792 & e.state) === t &&
          e.initIndex <= n &&
          ((e.initIndex = n + 1), !0)
        );
      }
      function Yh(e, t) {
        return e.nodes[t];
      }
      function Xh(e, t) {
        return e.nodes[t];
      }
      function Jh(e, t) {
        return e.nodes[t];
      }
      function ed(e, t) {
        return e.nodes[t];
      }
      function td(e, t) {
        return e.nodes[t];
      }
      class nd {}
      const rd = {
          setCurrentNode: void 0,
          createRootView: void 0,
          createEmbeddedView: void 0,
          createComponentView: void 0,
          createNgModuleRef: void 0,
          overrideProvider: void 0,
          overrideComponentView: void 0,
          clearOverrides: void 0,
          checkAndUpdateView: void 0,
          checkNoChangesView: void 0,
          destroyView: void 0,
          resolveDep: void 0,
          createDebugContext: void 0,
          handleEvent: void 0,
          updateDirectives: void 0,
          updateRenderer: void 0,
          dirtyParentQueries: void 0,
        },
        id = () => {},
        sd = new Map();
      function od(e) {
        let t = sd.get(e);
        return t || ((t = N(e) + "_" + sd.size), sd.set(e, t)), t;
      }
      function ad(e, t, n, r) {
        if (Ua.isWrapped(r)) {
          r = Ua.unwrap(r);
          const i = e.def.nodes[t].bindingIndex + n,
            s = Ua.unwrap(e.oldValues[i]);
          e.oldValues[i] = new Ua(s);
        }
        return r;
      }
      function ld(e) {
        return {
          id: "$$undefined",
          styles: e.styles,
          encapsulation: e.encapsulation,
          data: e.data,
        };
      }
      let cd = 0;
      function ud(e, t, n, r) {
        return !(!(2 & e.state) && Ba(e.oldValues[t.bindingIndex + n], r));
      }
      function hd(e, t, n, r) {
        return !!ud(e, t, n, r) && ((e.oldValues[t.bindingIndex + n] = r), !0);
      }
      function dd(e, t, n, r) {
        const i = e.oldValues[t.bindingIndex + n];
        if (1 & e.state || !za(i, r)) {
          const s = t.bindings[n].name;
          throw Gh(
            rd.createDebugContext(e, t.nodeIndex),
            `${s}: ${i}`,
            `${s}: ${r}`,
            0 != (1 & e.state)
          );
        }
      }
      function fd(e) {
        let t = e;
        for (; t; )
          2 & t.def.flags && (t.state |= 8),
            (t = t.viewContainerParent || t.parent);
      }
      function pd(e, t) {
        let n = e;
        for (; n && n !== t; )
          (n.state |= 64), (n = n.viewContainerParent || n.parent);
      }
      function md(e, t, n, r) {
        try {
          return (
            fd(33554432 & e.def.nodes[t].flags ? Xh(e, t).componentView : e),
            rd.handleEvent(e, t, n, r)
          );
        } catch (i) {
          e.root.errorHandler.handleError(i);
        }
      }
      function gd(e) {
        return e.parent ? Xh(e.parent, e.parentNodeDef.nodeIndex) : null;
      }
      function _d(e) {
        return e.parent ? e.parentNodeDef.parent : null;
      }
      function yd(e, t) {
        switch (201347067 & t.flags) {
          case 1:
            return Xh(e, t.nodeIndex).renderElement;
          case 2:
            return Yh(e, t.nodeIndex).renderText;
        }
      }
      function vd(e) {
        return !!e.parent && !!(32768 & e.parentNodeDef.flags);
      }
      function bd(e) {
        return !(!e.parent || 32768 & e.parentNodeDef.flags);
      }
      function wd(e) {
        return 1 << e % 32;
      }
      function Cd(e) {
        const t = {};
        let n = 0;
        const r = {};
        return (
          e &&
            e.forEach(([e, i]) => {
              "number" == typeof e ? ((t[e] = i), (n |= wd(e))) : (r[e] = i);
            }),
          { matchedQueries: t, references: r, matchedQueryIds: n }
        );
      }
      function Sd(e, t) {
        return e.map((e) => {
          let n, r;
          return (
            Array.isArray(e) ? ([r, n] = e) : ((r = 0), (n = e)),
            n &&
              ("function" == typeof n || "object" == typeof n) &&
              t &&
              Object.defineProperty(n, "__source", {
                value: t,
                configurable: !0,
              }),
            { flags: r, token: n, tokenKey: od(n) }
          );
        });
      }
      function Ed(e, t, n) {
        let r = n.renderParent;
        return r
          ? 0 == (1 & r.flags) ||
            0 == (33554432 & r.flags) ||
            (r.element.componentRendererType &&
              r.element.componentRendererType.encapsulation === Fe.Native)
            ? Xh(e, n.renderParent.nodeIndex).renderElement
            : void 0
          : t;
      }
      const xd = new WeakMap();
      function Dd(e) {
        let t = xd.get(e);
        return t || ((t = e(() => id)), (t.factory = e), xd.set(e, t)), t;
      }
      function Id(e, t, n, r, i) {
        3 === t && (n = e.renderer.parentNode(yd(e, e.def.lastRenderRootNode))),
          Od(e, t, 0, e.def.nodes.length - 1, n, r, i);
      }
      function Od(e, t, n, r, i, s, o) {
        for (let a = n; a <= r; a++) {
          const n = e.def.nodes[a];
          11 & n.flags && Rd(e, n, t, i, s, o), (a += n.childCount);
        }
      }
      function kd(e, t, n, r, i, s) {
        let o = e;
        for (; o && !vd(o); ) o = o.parent;
        const a = o.parent,
          l = _d(o),
          c = l.nodeIndex + l.childCount;
        for (let u = l.nodeIndex + 1; u <= c; u++) {
          const e = a.def.nodes[u];
          e.ngContentIndex === t && Rd(a, e, n, r, i, s), (u += e.childCount);
        }
        if (!a.parent) {
          const o = e.root.projectableNodes[t];
          if (o) for (let t = 0; t < o.length; t++) Ad(e, o[t], n, r, i, s);
        }
      }
      function Rd(e, t, n, r, i, s) {
        if (8 & t.flags) kd(e, t.ngContent.index, n, r, i, s);
        else {
          const o = yd(e, t);
          if (
            (3 === n && 33554432 & t.flags && 48 & t.bindingFlags
              ? (16 & t.bindingFlags && Ad(e, o, n, r, i, s),
                32 & t.bindingFlags &&
                  Ad(Xh(e, t.nodeIndex).componentView, o, n, r, i, s))
              : Ad(e, o, n, r, i, s),
            16777216 & t.flags)
          ) {
            const o = Xh(e, t.nodeIndex).viewContainer._embeddedViews;
            for (let e = 0; e < o.length; e++) Id(o[e], n, r, i, s);
          }
          1 & t.flags &&
            !t.element.name &&
            Od(e, n, t.nodeIndex + 1, t.nodeIndex + t.childCount, r, i, s);
        }
      }
      function Ad(e, t, n, r, i, s) {
        const o = e.renderer;
        switch (n) {
          case 1:
            o.appendChild(r, t);
            break;
          case 2:
            o.insertBefore(r, t, i);
            break;
          case 3:
            o.removeChild(r, t);
            break;
          case 0:
            s.push(t);
        }
      }
      const Td = /^:([^:]+):(.+)$/;
      function Fd(e) {
        if (":" === e[0]) {
          const t = e.match(Td);
          return [t[1], t[2]];
        }
        return ["", e];
      }
      function Pd(e) {
        let t = 0;
        for (let n = 0; n < e.length; n++) t |= e[n].flags;
        return t;
      }
      function jd(e, t) {
        let n = "";
        for (let r = 0; r < 2 * e; r += 2) n = n + t[r] + Md(t[r + 1]);
        return n + t[2 * e];
      }
      function Nd(e, t, n, r, i, s, o, a, l, c, u, h, d, f, p, m, g, _, y, v) {
        switch (e) {
          case 1:
            return t + Md(n) + r;
          case 2:
            return t + Md(n) + r + Md(i) + s;
          case 3:
            return t + Md(n) + r + Md(i) + s + Md(o) + a;
          case 4:
            return t + Md(n) + r + Md(i) + s + Md(o) + a + Md(l) + c;
          case 5:
            return (
              t + Md(n) + r + Md(i) + s + Md(o) + a + Md(l) + c + Md(u) + h
            );
          case 6:
            return (
              t +
              Md(n) +
              r +
              Md(i) +
              s +
              Md(o) +
              a +
              Md(l) +
              c +
              Md(u) +
              h +
              Md(d) +
              f
            );
          case 7:
            return (
              t +
              Md(n) +
              r +
              Md(i) +
              s +
              Md(o) +
              a +
              Md(l) +
              c +
              Md(u) +
              h +
              Md(d) +
              f +
              Md(p) +
              m
            );
          case 8:
            return (
              t +
              Md(n) +
              r +
              Md(i) +
              s +
              Md(o) +
              a +
              Md(l) +
              c +
              Md(u) +
              h +
              Md(d) +
              f +
              Md(p) +
              m +
              Md(g) +
              _
            );
          case 9:
            return (
              t +
              Md(n) +
              r +
              Md(i) +
              s +
              Md(o) +
              a +
              Md(l) +
              c +
              Md(u) +
              h +
              Md(d) +
              f +
              Md(p) +
              m +
              Md(g) +
              _ +
              Md(y) +
              v
            );
          default:
            throw new Error("Does not support more than 9 expressions");
        }
      }
      function Md(e) {
        return null != e ? e.toString() : "";
      }
      const Ld = [],
        Vd = {},
        Bd = {},
        zd = od(na),
        Ud = od(re),
        Hd = od(ve);
      function $d(e, t, n, r) {
        return (
          (n = B(n)),
          { index: -1, deps: Sd(r, N(t)), flags: e, token: t, value: n }
        );
      }
      function qd(e) {
        const t = {},
          n = [];
        let r = null;
        for (let i = 0; i < e.length; i++) {
          const s = e[i];
          s.token === Bo && (r = s.value),
            1073741824 & s.flags && n.push(s.token),
            (s.index = i),
            (t[od(s.token)] = s);
        }
        return {
          factory: null,
          providersByKey: t,
          providers: e,
          modules: n,
          scope: r,
        };
      }
      function Gd(e, t, n = na.THROW_IF_NOT_FOUND) {
        const r = ce(e);
        try {
          if (8 & t.flags) return t.token;
          if ((2 & t.flags && (n = null), 1 & t.flags))
            return e._parent.get(t.token, n);
          const i = t.tokenKey;
          switch (i) {
            case zd:
            case Ud:
            case Hd:
              return e;
          }
          const s = e._def.providersByKey[i];
          let o;
          if (s) {
            let t = e._providers[s.index];
            return (
              void 0 === t && (t = e._providers[s.index] = Wd(e, s)),
              t === Bd ? void 0 : t
            );
          }
          if (
            (o = O(t.token)) &&
            (function (e, t) {
              const n = t.providedIn;
              return (
                null != n &&
                ("any" === n ||
                  n === e._def.scope ||
                  (function (e, t) {
                    return e._def.modules.indexOf(t) > -1;
                  })(e, n))
              );
            })(e, o)
          ) {
            const n = e._providers.length;
            return (
              (e._def.providers[n] = e._def.providersByKey[t.tokenKey] = {
                flags: 5120,
                value: o.factory,
                deps: [],
                index: n,
                token: t.token,
              }),
              (e._providers[n] = Bd),
              (e._providers[n] = Wd(e, e._def.providersByKey[t.tokenKey]))
            );
          }
          return 4 & t.flags ? n : e._parent.get(t.token, n);
        } finally {
          ce(r);
        }
      }
      function Wd(e, t) {
        let n;
        switch (201347067 & t.flags) {
          case 512:
            n = (function (e, t, n) {
              const r = n.length;
              switch (r) {
                case 0:
                  return new t();
                case 1:
                  return new t(Gd(e, n[0]));
                case 2:
                  return new t(Gd(e, n[0]), Gd(e, n[1]));
                case 3:
                  return new t(Gd(e, n[0]), Gd(e, n[1]), Gd(e, n[2]));
                default:
                  const i = [];
                  for (let t = 0; t < r; t++) i[t] = Gd(e, n[t]);
                  return new t(...i);
              }
            })(e, t.value, t.deps);
            break;
          case 1024:
            n = (function (e, t, n) {
              const r = n.length;
              switch (r) {
                case 0:
                  return t();
                case 1:
                  return t(Gd(e, n[0]));
                case 2:
                  return t(Gd(e, n[0]), Gd(e, n[1]));
                case 3:
                  return t(Gd(e, n[0]), Gd(e, n[1]), Gd(e, n[2]));
                default:
                  const i = [];
                  for (let t = 0; t < r; t++) i[t] = Gd(e, n[t]);
                  return t(...i);
              }
            })(e, t.value, t.deps);
            break;
          case 2048:
            n = Gd(e, t.deps[0]);
            break;
          case 256:
            n = t.value;
        }
        return (
          n === Bd ||
            null === n ||
            "object" != typeof n ||
            131072 & t.flags ||
            "function" != typeof n.ngOnDestroy ||
            (t.flags |= 131072),
          void 0 === n ? Bd : n
        );
      }
      function Qd(e, t) {
        const n = e.viewContainer._embeddedViews;
        if (((null == t || t >= n.length) && (t = n.length - 1), t < 0))
          return null;
        const r = n[t];
        return (
          (r.viewContainerParent = null),
          xe(n, t),
          rd.dirtyParentQueries(r),
          Zd(r),
          r
        );
      }
      function Kd(e, t, n) {
        const r = t ? yd(t, t.def.lastRenderRootNode) : e.renderElement,
          i = n.renderer.parentNode(r),
          s = n.renderer.nextSibling(r);
        Id(n, 2, i, s, void 0);
      }
      function Zd(e) {
        Id(e, 3, null, null, void 0);
      }
      const Yd = {};
      function Xd(e, t, n, r, i, s) {
        return new ef(e, t, n, r, i, s);
      }
      function Jd(e) {
        return e.viewDefFactory;
      }
      class ef extends ah {
        constructor(e, t, n, r, i, s) {
          super(),
            (this.selector = e),
            (this.componentType = t),
            (this._inputs = r),
            (this._outputs = i),
            (this.ngContentSelectors = s),
            (this.viewDefFactory = n);
        }
        get inputs() {
          const e = [],
            t = this._inputs;
          for (let n in t) e.push({ propName: n, templateName: t[n] });
          return e;
        }
        get outputs() {
          const e = [];
          for (let t in this._outputs)
            e.push({ propName: t, templateName: this._outputs[t] });
          return e;
        }
        create(e, t, n, r) {
          if (!r) throw new Error("ngModule should be provided");
          const i = Dd(this.viewDefFactory),
            s = i.nodes[0].element.componentProvider.nodeIndex,
            o = rd.createRootView(e, t || [], n, i, r, Yd),
            a = Jh(o, s).instance;
          return (
            n &&
              o.renderer.setAttribute(
                Xh(o, 0).renderElement,
                "ng-version",
                Eh.full
              ),
            new tf(o, new of(o), a)
          );
        }
      }
      class tf extends oh {
        constructor(e, t, n) {
          super(),
            (this._view = e),
            (this._viewRef = t),
            (this._component = n),
            (this._elDef = this._view.def.nodes[0]),
            (this.hostView = t),
            (this.changeDetectorRef = t),
            (this.instance = n);
        }
        get location() {
          return new ph(Xh(this._view, this._elDef.nodeIndex).renderElement);
        }
        get injector() {
          return new uf(this._view, this._elDef);
        }
        get componentType() {
          return this._component.constructor;
        }
        destroy() {
          this._viewRef.destroy();
        }
        onDestroy(e) {
          this._viewRef.onDestroy(e);
        }
      }
      function nf(e, t, n) {
        return new rf(e, t, n);
      }
      class rf {
        constructor(e, t, n) {
          (this._view = e),
            (this._elDef = t),
            (this._data = n),
            (this._embeddedViews = []);
        }
        get element() {
          return new ph(this._data.renderElement);
        }
        get injector() {
          return new uf(this._view, this._elDef);
        }
        get parentInjector() {
          let e = this._view,
            t = this._elDef.parent;
          for (; !t && e; ) (t = _d(e)), (e = e.parent);
          return e ? new uf(e, t) : new uf(this._view, null);
        }
        clear() {
          for (let e = this._embeddedViews.length - 1; e >= 0; e--) {
            const t = Qd(this._data, e);
            rd.destroyView(t);
          }
        }
        get(e) {
          const t = this._embeddedViews[e];
          if (t) {
            const e = new of(t);
            return e.attachToViewContainerRef(this), e;
          }
          return null;
        }
        get length() {
          return this._embeddedViews.length;
        }
        createEmbeddedView(e, t, n) {
          const r = e.createEmbeddedView(t || {});
          return this.insert(r, n), r;
        }
        createComponent(e, t, n, r, i) {
          const s = n || this.parentInjector;
          i || e instanceof fh || (i = s.get(ve));
          const o = e.create(s, r, void 0, i);
          return this.insert(o.hostView, t), o;
        }
        insert(e, t) {
          if (e.destroyed)
            throw new Error(
              "Cannot insert a destroyed View in a ViewContainer!"
            );
          const n = e;
          return (
            (function (e, t, n, r) {
              let i = t.viewContainer._embeddedViews;
              null == n && (n = i.length),
                (r.viewContainerParent = e),
                Ee(i, n, r),
                (function (e, t) {
                  const n = gd(t);
                  if (!n || n === e || 16 & t.state) return;
                  t.state |= 16;
                  let r = n.template._projectedViews;
                  r || (r = n.template._projectedViews = []),
                    r.push(t),
                    (function (e, t) {
                      if (4 & t.flags) return;
                      (e.nodeFlags |= 4), (t.flags |= 4);
                      let n = t.parent;
                      for (; n; ) (n.childFlags |= 4), (n = n.parent);
                    })(t.parent.def, t.parentNodeDef);
                })(t, r),
                rd.dirtyParentQueries(r),
                Kd(t, n > 0 ? i[n - 1] : null, r);
            })(this._view, this._data, t, n._view),
            n.attachToViewContainerRef(this),
            e
          );
        }
        move(e, t) {
          if (e.destroyed)
            throw new Error("Cannot move a destroyed View in a ViewContainer!");
          const n = this._embeddedViews.indexOf(e._view);
          return (
            (function (e, t, n) {
              const r = e.viewContainer._embeddedViews,
                i = r[t];
              xe(r, t),
                null == n && (n = r.length),
                Ee(r, n, i),
                rd.dirtyParentQueries(i),
                Zd(i),
                Kd(e, n > 0 ? r[n - 1] : null, i);
            })(this._data, n, t),
            e
          );
        }
        indexOf(e) {
          return this._embeddedViews.indexOf(e._view);
        }
        remove(e) {
          const t = Qd(this._data, e);
          t && rd.destroyView(t);
        }
        detach(e) {
          const t = Qd(this._data, e);
          return t ? new of(t) : null;
        }
      }
      function sf(e) {
        return new of(e);
      }
      class of {
        constructor(e) {
          (this._view = e),
            (this._viewContainerRef = null),
            (this._appRef = null);
        }
        get rootNodes() {
          return (function (e) {
            const t = [];
            return Id(e, 0, void 0, void 0, t), t;
          })(this._view);
        }
        get context() {
          return this._view.context;
        }
        get destroyed() {
          return 0 != (128 & this._view.state);
        }
        markForCheck() {
          fd(this._view);
        }
        detach() {
          this._view.state &= -5;
        }
        detectChanges() {
          const e = this._view.root.rendererFactory;
          e.begin && e.begin();
          try {
            rd.checkAndUpdateView(this._view);
          } finally {
            e.end && e.end();
          }
        }
        checkNoChanges() {
          rd.checkNoChangesView(this._view);
        }
        reattach() {
          this._view.state |= 4;
        }
        onDestroy(e) {
          this._view.disposables || (this._view.disposables = []),
            this._view.disposables.push(e);
        }
        destroy() {
          this._appRef
            ? this._appRef.detachView(this)
            : this._viewContainerRef &&
              this._viewContainerRef.detach(
                this._viewContainerRef.indexOf(this)
              ),
            rd.destroyView(this._view);
        }
        detachFromAppRef() {
          (this._appRef = null),
            Zd(this._view),
            rd.dirtyParentQueries(this._view);
        }
        attachToAppRef(e) {
          if (this._viewContainerRef)
            throw new Error(
              "This view is already attached to a ViewContainer!"
            );
          this._appRef = e;
        }
        attachToViewContainerRef(e) {
          if (this._appRef)
            throw new Error(
              "This view is already attached directly to the ApplicationRef!"
            );
          this._viewContainerRef = e;
        }
      }
      function af(e, t) {
        return new lf(e, t);
      }
      class lf extends Bh {
        constructor(e, t) {
          super(), (this._parentView = e), (this._def = t);
        }
        createEmbeddedView(e) {
          return new of(
            rd.createEmbeddedView(
              this._parentView,
              this._def,
              this._def.element.template,
              e
            )
          );
        }
        get elementRef() {
          return new ph(
            Xh(this._parentView, this._def.nodeIndex).renderElement
          );
        }
      }
      function cf(e, t) {
        return new uf(e, t);
      }
      class uf {
        constructor(e, t) {
          (this.view = e), (this.elDef = t);
        }
        get(e, t = na.THROW_IF_NOT_FOUND) {
          return rd.resolveDep(
            this.view,
            this.elDef,
            !!this.elDef && 0 != (33554432 & this.elDef.flags),
            { flags: 0, token: e, tokenKey: od(e) },
            t
          );
        }
      }
      function hf(e, t) {
        const n = e.def.nodes[t];
        if (1 & n.flags) {
          const t = Xh(e, n.nodeIndex);
          return n.element.template ? t.template : t.renderElement;
        }
        if (2 & n.flags) return Yh(e, n.nodeIndex).renderText;
        if (20240 & n.flags) return Jh(e, n.nodeIndex).instance;
        throw new Error("Illegal state: read nodeValue for node index " + t);
      }
      function df(e, t, n, r) {
        return new ff(e, t, n, r);
      }
      class ff {
        constructor(e, t, n, r) {
          (this._moduleType = e),
            (this._parent = t),
            (this._bootstrapComponents = n),
            (this._def = r),
            (this._destroyListeners = []),
            (this._destroyed = !1),
            (this.injector = this),
            (function (e) {
              const t = e._def,
                n = (e._providers = De(t.providers.length));
              for (let r = 0; r < t.providers.length; r++) {
                const i = t.providers[r];
                4096 & i.flags || (void 0 === n[r] && (n[r] = Wd(e, i)));
              }
            })(this);
        }
        get(e, t = na.THROW_IF_NOT_FOUND, n = C.Default) {
          let r = 0;
          return (
            n & C.SkipSelf ? (r |= 1) : n & C.Self && (r |= 4),
            Gd(this, { token: e, tokenKey: od(e), flags: r }, t)
          );
        }
        get instance() {
          return this.get(this._moduleType);
        }
        get componentFactoryResolver() {
          return this.get(hh);
        }
        destroy() {
          if (this._destroyed)
            throw new Error(
              `The ng module ${N(
                this.instance.constructor
              )} has already been destroyed.`
            );
          (this._destroyed = !0),
            (function (e, t) {
              const n = e._def,
                r = new Set();
              for (let i = 0; i < n.providers.length; i++)
                if (131072 & n.providers[i].flags) {
                  const t = e._providers[i];
                  if (t && t !== Bd) {
                    const e = t.ngOnDestroy;
                    "function" != typeof e ||
                      r.has(t) ||
                      (e.apply(t), r.add(t));
                  }
                }
            })(this),
            this._destroyListeners.forEach((e) => e());
        }
        onDestroy(e) {
          this._destroyListeners.push(e);
        }
      }
      const pf = od(vh),
        mf = od(ph),
        gf = od(Hh),
        _f = od(Bh),
        yf = od(_o),
        vf = od(na),
        bf = od(re);
      function wf(e, t, n, r, i, s, o, a) {
        const l = [];
        if (o)
          for (let u in o) {
            const [e, t] = o[u];
            l[e] = {
              flags: 8,
              name: u,
              nonMinifiedName: t,
              ns: null,
              securityContext: null,
              suffix: null,
            };
          }
        const c = [];
        if (a)
          for (let u in a)
            c.push({ type: 1, propName: u, target: null, eventName: a[u] });
        return Ef(e, (t |= 16384), n, r, i, i, s, l, c);
      }
      function Cf(e, t, n) {
        return Ef(-1, (e |= 16), null, 0, t, t, n);
      }
      function Sf(e, t, n, r, i) {
        return Ef(-1, e, t, 0, n, r, i);
      }
      function Ef(e, t, n, r, i, s, o, a, l) {
        const { matchedQueries: c, references: u, matchedQueryIds: h } = Cd(n);
        l || (l = []), a || (a = []), (s = B(s));
        const d = Sd(o, N(i));
        return {
          nodeIndex: -1,
          parent: null,
          renderParent: null,
          bindingIndex: -1,
          outputIndex: -1,
          checkIndex: e,
          flags: t,
          childFlags: 0,
          directChildFlags: 0,
          childMatchedQueries: 0,
          matchedQueries: c,
          matchedQueryIds: h,
          references: u,
          ngContentIndex: -1,
          childCount: r,
          bindings: a,
          bindingFlags: Pd(a),
          outputs: l,
          element: null,
          provider: { token: i, value: s, deps: d },
          text: null,
          query: null,
          ngContent: null,
        };
      }
      function xf(e, t) {
        return kf(e, t);
      }
      function Df(e, t) {
        let n = e;
        for (; n.parent && !vd(n); ) n = n.parent;
        return Rf(n.parent, _d(n), !0, t.provider.value, t.provider.deps);
      }
      function If(e, t) {
        const n = Rf(
          e,
          t.parent,
          (32768 & t.flags) > 0,
          t.provider.value,
          t.provider.deps
        );
        if (t.outputs.length)
          for (let r = 0; r < t.outputs.length; r++) {
            const i = t.outputs[r],
              s = n[i.propName];
            if (!Pl(s))
              throw new Error(
                `@Output ${i.propName} not initialized in '${n.constructor.name}'.`
              );
            {
              const n = s.subscribe(Of(e, t.parent.nodeIndex, i.eventName));
              e.disposables[t.outputIndex + r] = n.unsubscribe.bind(n);
            }
          }
        return n;
      }
      function Of(e, t, n) {
        return (r) => md(e, t, n, r);
      }
      function kf(e, t) {
        const n = (8192 & t.flags) > 0,
          r = t.provider;
        switch (201347067 & t.flags) {
          case 512:
            return Rf(e, t.parent, n, r.value, r.deps);
          case 1024:
            return (function (e, t, n, r, i) {
              const s = i.length;
              switch (s) {
                case 0:
                  return r();
                case 1:
                  return r(Tf(e, t, n, i[0]));
                case 2:
                  return r(Tf(e, t, n, i[0]), Tf(e, t, n, i[1]));
                case 3:
                  return r(
                    Tf(e, t, n, i[0]),
                    Tf(e, t, n, i[1]),
                    Tf(e, t, n, i[2])
                  );
                default:
                  const o = [];
                  for (let r = 0; r < s; r++) o.push(Tf(e, t, n, i[r]));
                  return r(...o);
              }
            })(e, t.parent, n, r.value, r.deps);
          case 2048:
            return Tf(e, t.parent, n, r.deps[0]);
          case 256:
            return r.value;
        }
      }
      function Rf(e, t, n, r, i) {
        const s = i.length;
        switch (s) {
          case 0:
            return new r();
          case 1:
            return new r(Tf(e, t, n, i[0]));
          case 2:
            return new r(Tf(e, t, n, i[0]), Tf(e, t, n, i[1]));
          case 3:
            return new r(
              Tf(e, t, n, i[0]),
              Tf(e, t, n, i[1]),
              Tf(e, t, n, i[2])
            );
          default:
            const o = [];
            for (let r = 0; r < s; r++) o.push(Tf(e, t, n, i[r]));
            return new r(...o);
        }
      }
      const Af = {};
      function Tf(e, t, n, r, i = na.THROW_IF_NOT_FOUND) {
        if (8 & r.flags) return r.token;
        const s = e;
        2 & r.flags && (i = null);
        const o = r.tokenKey;
        o === yf && (n = !(!t || !t.element.componentView)),
          t && 1 & r.flags && ((n = !1), (t = t.parent));
        let a = e;
        for (; a; ) {
          if (t)
            switch (o) {
              case pf:
                return Ff(a, t, n).renderer;
              case mf:
                return new ph(Xh(a, t.nodeIndex).renderElement);
              case gf:
                return Xh(a, t.nodeIndex).viewContainer;
              case _f:
                if (t.element.template) return Xh(a, t.nodeIndex).template;
                break;
              case yf:
                return sf(Ff(a, t, n));
              case vf:
              case bf:
                return cf(a, t);
              default:
                const e = (n
                  ? t.element.allProviders
                  : t.element.publicProviders)[o];
                if (e) {
                  let t = Jh(a, e.nodeIndex);
                  return (
                    t ||
                      ((t = { instance: kf(a, e) }),
                      (a.nodes[e.nodeIndex] = t)),
                    t.instance
                  );
                }
            }
          (n = vd(a)), (t = _d(a)), (a = a.parent), 4 & r.flags && (a = null);
        }
        const l = s.root.injector.get(r.token, Af);
        return l !== Af || i === Af
          ? l
          : s.root.ngModule.injector.get(r.token, i);
      }
      function Ff(e, t, n) {
        let r;
        if (n) r = Xh(e, t.nodeIndex).componentView;
        else for (r = e; r.parent && !vd(r); ) r = r.parent;
        return r;
      }
      function Pf(e, t, n, r, i, s) {
        if (32768 & n.flags) {
          const t = Xh(e, n.parent.nodeIndex).componentView;
          2 & t.def.flags && (t.state |= 8);
        }
        if (((t.instance[n.bindings[r].name] = i), 524288 & n.flags)) {
          s = s || {};
          const t = Ua.unwrap(e.oldValues[n.bindingIndex + r]);
          s[n.bindings[r].nonMinifiedName] = new Qu(t, i, 0 != (2 & e.state));
        }
        return (e.oldValues[n.bindingIndex + r] = i), s;
      }
      function jf(e, t) {
        if (!(e.def.nodeFlags & t)) return;
        const n = e.def.nodes;
        let r = 0;
        for (let i = 0; i < n.length; i++) {
          const s = n[i];
          let o = s.parent;
          for (
            !o && s.flags & t && Mf(e, i, s.flags & t, r++),
              0 == (s.childFlags & t) && (i += s.childCount);
            o && 1 & o.flags && i === o.nodeIndex + o.childCount;

          )
            o.directChildFlags & t && (r = Nf(e, o, t, r)), (o = o.parent);
        }
      }
      function Nf(e, t, n, r) {
        for (let i = t.nodeIndex + 1; i <= t.nodeIndex + t.childCount; i++) {
          const t = e.def.nodes[i];
          t.flags & n && Mf(e, i, t.flags & n, r++), (i += t.childCount);
        }
        return r;
      }
      function Mf(e, t, n, r) {
        const i = Jh(e, t);
        if (!i) return;
        const s = i.instance;
        s &&
          (rd.setCurrentNode(e, t),
          1048576 & n && Zh(e, 512, r) && s.ngAfterContentInit(),
          2097152 & n && s.ngAfterContentChecked(),
          4194304 & n && Zh(e, 768, r) && s.ngAfterViewInit(),
          8388608 & n && s.ngAfterViewChecked(),
          131072 & n && s.ngOnDestroy());
      }
      class Lf extends hh {
        constructor(e) {
          super(), (this.ngModule = e);
        }
        resolveComponentFactory(e) {
          const t = We(e);
          return new zf(t, this.ngModule);
        }
      }
      function Vf(e) {
        const t = [];
        for (let n in e)
          e.hasOwnProperty(n) && t.push({ propName: e[n], templateName: n });
        return t;
      }
      const Bf = new ne("SCHEDULER_TOKEN", {
        providedIn: "root",
        factory: () => Dn,
      });
      class zf extends ah {
        constructor(e, t) {
          super(),
            (this.componentDef = e),
            (this.ngModule = t),
            (this.componentType = e.type),
            (this.selector = e.selectors.map(xi).join(",")),
            (this.ngContentSelectors = e.ngContentSelectors
              ? e.ngContentSelectors
              : []),
            (this.isBoundToModule = !!t);
        }
        get inputs() {
          return Vf(this.componentDef.inputs);
        }
        get outputs() {
          return Vf(this.componentDef.outputs);
        }
        create(e, t, n, r) {
          const i = (r = r || this.ngModule)
              ? (function (e, t) {
                  return {
                    get: (n, r, i) => {
                      const s = e.get(n, Af, i);
                      return s !== Af || r === Af ? s : t.get(n, r, i);
                    },
                  };
                })(e, r.injector)
              : e,
            s = i.get(_h, ct),
            o = i.get(Ch, null),
            a = s.createRenderer(null, this.componentDef),
            l = this.componentDef.selectors[0][0] || "div",
            c = n
              ? rs(a, n, this.componentDef.encapsulation)
              : qi(
                  l,
                  s.createRenderer(null, this.componentDef),
                  (function (e) {
                    const t = e.toLowerCase();
                    return "svg" === t
                      ? "http://www.w3.org/2000/svg"
                      : "math" === t
                      ? "http://www.w3.org/1998/MathML/"
                      : null;
                  })(l)
                ),
            u = this.componentDef.onPush ? 576 : 528,
            h =
              "string" == typeof n && /^#root-ng-internal-isolated-\d+/.test(n),
            d = Nu(),
            f = ns(0, -1, null, 1, 0, null, null, null, null, null),
            p = Gi(null, f, d, u, null, null, s, a, o, i);
          let m, g;
          Qt(p, null);
          try {
            const e = Pu(c, this.componentDef, p, s, a);
            if (c)
              if (n) mn(a, c, ["ng-version", Eh.full]);
              else {
                const { attrs: e, classes: t } = (function (e) {
                  const t = [],
                    n = [];
                  let r = 1,
                    i = 2;
                  for (; r < e.length; ) {
                    let s = e[r];
                    if ("string" == typeof s)
                      2 === i
                        ? "" !== s && t.push(s, e[++r])
                        : 8 === i && n.push(s);
                    else {
                      if (!bi(i)) break;
                      i = s;
                    }
                    r++;
                  }
                  return { attrs: t, classes: n };
                })(this.componentDef.selectors[0]);
                e && mn(a, c, e), t && t.length > 0 && oo(a, c, t.join(" "));
              }
            if (((g = pt(f, 0)), void 0 !== t)) {
              const e = (g.projection = []);
              for (let n = 0; n < this.ngContentSelectors.length; n++) {
                const r = t[n];
                e.push(null != r ? Array.from(r) : null);
              }
            }
            (m = ju(e, this.componentDef, p, d, [Mu])), Qi(f, p, null);
          } finally {
            Jt();
          }
          const _ = new Uf(this.componentType, m, fo(ph, g, p), p, g);
          return (n && !h) || (f.node.child = g), _;
        }
      }
      class Uf extends oh {
        constructor(e, t, n, r, i) {
          super(),
            (this.location = n),
            (this._rootLView = r),
            (this._tNode = i),
            (this.destroyCbs = []),
            (this.instance = t),
            (this.hostView = this.changeDetectorRef = new lo(r)),
            (function (e, t, n, r) {
              let i = e.node;
              null == i && (e.node = i = is(0, null, 2, -1, null, null)),
                (r[6] = i);
            })(r[1], 0, 0, r),
            (this.componentType = e);
        }
        get injector() {
          return new Wn(this._tNode, this._rootLView);
        }
        destroy() {
          this.destroyCbs &&
            (this.destroyCbs.forEach((e) => e()),
            (this.destroyCbs = null),
            !this.hostView.destroyed && this.hostView.destroy());
        }
        onDestroy(e) {
          this.destroyCbs && this.destroyCbs.push(e);
        }
      }
      const Hf = void 0;
      var $f = [
        "en",
        [["a", "p"], ["AM", "PM"], Hf],
        [["AM", "PM"], Hf, Hf],
        [
          ["S", "M", "T", "W", "T", "F", "S"],
          ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
          [
            "Sunday",
            "Monday",
            "Tuesday",
            "Wednesday",
            "Thursday",
            "Friday",
            "Saturday",
          ],
          ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"],
        ],
        Hf,
        [
          ["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"],
          [
            "Jan",
            "Feb",
            "Mar",
            "Apr",
            "May",
            "Jun",
            "Jul",
            "Aug",
            "Sep",
            "Oct",
            "Nov",
            "Dec",
          ],
          [
            "January",
            "February",
            "March",
            "April",
            "May",
            "June",
            "July",
            "August",
            "September",
            "October",
            "November",
            "December",
          ],
        ],
        Hf,
        [
          ["B", "A"],
          ["BC", "AD"],
          ["Before Christ", "Anno Domini"],
        ],
        0,
        [6, 0],
        ["M/d/yy", "MMM d, y", "MMMM d, y", "EEEE, MMMM d, y"],
        ["h:mm a", "h:mm:ss a", "h:mm:ss a z", "h:mm:ss a zzzz"],
        ["{1}, {0}", Hf, "{1} 'at' {0}", Hf],
        [
          ".",
          ",",
          ";",
          "%",
          "+",
          "-",
          "E",
          "\xd7",
          "\u2030",
          "\u221e",
          "NaN",
          ":",
        ],
        ["#,##0.###", "#,##0%", "\xa4#,##0.00", "#E0"],
        "USD",
        "$",
        "US Dollar",
        {},
        "ltr",
        function (e) {
          let t = Math.floor(Math.abs(e)),
            n = e.toString().replace(/^[^.]*\.?/, "").length;
          return 1 === t && 0 === n ? 1 : 5;
        },
      ];
      let qf = {};
      function Gf(e, t, n) {
        "string" != typeof t && ((n = t), (t = e[Xf.LocaleId])),
          (t = t.toLowerCase().replace(/_/g, "-")),
          (qf[t] = e),
          n && (qf[t][Xf.ExtraData] = n);
      }
      function Wf(e) {
        const t = (function (e) {
          return e.toLowerCase().replace(/_/g, "-");
        })(e);
        let n = Zf(t);
        if (n) return n;
        const r = t.split("-")[0];
        if (((n = Zf(r)), n)) return n;
        if ("en" === r) return $f;
        throw new Error(`Missing locale data for the locale "${e}".`);
      }
      function Qf(e) {
        return Wf(e)[Xf.CurrencyCode] || null;
      }
      function Kf(e) {
        return Wf(e)[Xf.PluralCase];
      }
      function Zf(e) {
        return (
          e in qf ||
            (qf[e] =
              G.ng &&
              G.ng.common &&
              G.ng.common.locales &&
              G.ng.common.locales[e]),
          qf[e]
        );
      }
      function Yf() {
        qf = {};
      }
      const Xf = (function () {
          var e = {
            LocaleId: 0,
            DayPeriodsFormat: 1,
            DayPeriodsStandalone: 2,
            DaysFormat: 3,
            DaysStandalone: 4,
            MonthsFormat: 5,
            MonthsStandalone: 6,
            Eras: 7,
            FirstDayOfWeek: 8,
            WeekendRange: 9,
            DateFormat: 10,
            TimeFormat: 11,
            DateTimeFormat: 12,
            NumberSymbols: 13,
            NumberFormats: 14,
            CurrencyCode: 15,
            CurrencySymbol: 16,
            CurrencyName: 17,
            Currencies: 18,
            Directionality: 19,
            PluralCase: 20,
            ExtraData: 21,
          };
          return (
            (e[e.LocaleId] = "LocaleId"),
            (e[e.DayPeriodsFormat] = "DayPeriodsFormat"),
            (e[e.DayPeriodsStandalone] = "DayPeriodsStandalone"),
            (e[e.DaysFormat] = "DaysFormat"),
            (e[e.DaysStandalone] = "DaysStandalone"),
            (e[e.MonthsFormat] = "MonthsFormat"),
            (e[e.MonthsStandalone] = "MonthsStandalone"),
            (e[e.Eras] = "Eras"),
            (e[e.FirstDayOfWeek] = "FirstDayOfWeek"),
            (e[e.WeekendRange] = "WeekendRange"),
            (e[e.DateFormat] = "DateFormat"),
            (e[e.TimeFormat] = "TimeFormat"),
            (e[e.DateTimeFormat] = "DateTimeFormat"),
            (e[e.NumberSymbols] = "NumberSymbols"),
            (e[e.NumberFormats] = "NumberFormats"),
            (e[e.CurrencyCode] = "CurrencyCode"),
            (e[e.CurrencySymbol] = "CurrencySymbol"),
            (e[e.CurrencyName] = "CurrencyName"),
            (e[e.Currencies] = "Currencies"),
            (e[e.Directionality] = "Directionality"),
            (e[e.PluralCase] = "PluralCase"),
            (e[e.ExtraData] = "ExtraData"),
            e
          );
        })(),
        Jf = ["zero", "one", "two", "few", "many"],
        ep = "en-US",
        tp = "USD",
        np = /^\s*(\ufffd\d+:?\d*\ufffd)\s*,\s*(select|plural)\s*,/,
        rp = /\ufffd\/?\*(\d+:\d+)\ufffd/gi,
        ip = /\ufffd(\/?[#*!]\d+):?\d*\ufffd/gi,
        sp = /\ufffd(\d+):?\d*\ufffd/gi,
        op = /({\s*\ufffd\d+:?\d*\ufffd\s*,\s*\S{6}\s*,[\s\S]*})/gi,
        ap = /\[(\ufffd.+?\ufffd?)\]/,
        lp = /\[(\ufffd.+?\ufffd?)\]|(\ufffd\/?\*\d+:\d+\ufffd)/g,
        cp = /({\s*)(VAR_(PLURAL|SELECT)(_\d+)?)(\s*,)/g,
        up = /{([A-Z0-9_]+)}/g,
        hp = /\ufffdI18N_EXP_(ICU(_\d+)?)\ufffd/g,
        dp = /\/\*/,
        fp = /\d+\:(\d+)/;
      function pp(e) {
        if (!e) return [];
        let t = 0;
        const n = [],
          r = [],
          i = /[{}]/g;
        let s;
        for (i.lastIndex = 0; (s = i.exec(e)); ) {
          const i = s.index;
          if ("}" == s[0]) {
            if ((n.pop(), 0 == n.length)) {
              const n = e.substring(t, i);
              np.test(n) ? r.push(mp(n)) : r.push(n), (t = i + 1);
            }
          } else {
            if (0 == n.length) {
              const n = e.substring(t, i);
              r.push(n), (t = i + 1);
            }
            n.push("{");
          }
        }
        const o = e.substring(t);
        return r.push(o), r;
      }
      function mp(e) {
        const t = [],
          n = [];
        let r = 1,
          i = 0;
        const s = pp(
          (e = e.replace(np, function (e, t, n) {
            return (
              (r = "select" === n ? 0 : 1), (i = parseInt(t.substr(1), 10)), ""
            );
          }))
        );
        for (let o = 0; o < s.length; ) {
          let e = s[o++].trim();
          1 === r && (e = e.replace(/\s*(?:=)?(\w+)\s*/, "$1")),
            e.length && t.push(e);
          const i = pp(s[o++]);
          t.length > n.length && n.push(i);
        }
        return { type: r, mainBinding: i, cases: t, values: n };
      }
      function gp(e) {
        let t,
          n,
          r = "",
          i = 0,
          s = !1;
        for (; null !== (t = rp.exec(e)); )
          s
            ? t[0] === `\ufffd/*${n}\ufffd` && ((i = t.index), (s = !1))
            : ((r += e.substring(i, t.index + t[0].length)),
              (n = t[1]),
              (s = !0));
        return (r += e.substr(i)), r;
      }
      function _p(e, t, n, r = null) {
        const i = [null, null],
          s = e.split(sp);
        let o = 0;
        for (let a = 0; a < s.length; a++) {
          const e = s[a];
          if (1 & a) {
            const t = parseInt(e, 10);
            i.push(-1 - t), (o |= wp(t));
          } else "" !== e && i.push(e);
        }
        return (
          i.push((t << 2) | (n ? 1 : 0)),
          n && i.push(n, r),
          (i[0] = o),
          (i[1] = i.length - 2),
          i
        );
      }
      function yp(e, t = 0) {
        let n;
        t |= wp(e.mainBinding);
        for (let r = 0; r < e.values.length; r++) {
          const i = e.values[r];
          for (let e = 0; e < i.length; e++) {
            const r = i[e];
            if ("string" == typeof r)
              for (; (n = sp.exec(r)); ) t |= wp(parseInt(n[1], 10));
            else t = yp(r, t);
          }
        }
        return t;
      }
      const vp = [];
      let bp = -1;
      function wp(e) {
        return 1 << Math.min(e, 31);
      }
      const Cp = [];
      function Sp(e, t, n) {
        const r = kt();
        (vp[++bp] = e),
          $l(!0),
          r.firstCreatePass &&
            null === r.data[e + 20] &&
            (function (e, t, n, r, i) {
              const s = t.blueprint.length - 20;
              Ep = 0;
              const o = At(),
                a = Ft() ? o : o && o.parent;
              let l = a && a !== e[6] ? a.index - 20 : n,
                c = 0;
              Cp[c] = l;
              const u = [];
              if (n > 0 && o !== a) {
                let e = o.index - 20;
                Ft() || (e = ~e), u.push((e << 3) | 0);
              }
              const h = [],
                d = [];
              if ("" === r && Ip(i)) u.push(r, xp(s), (l << 17) | 1);
              else {
                const e = (function (e, t) {
                    if (Ip(t)) return gp(e);
                    {
                      const n =
                          e.indexOf(`:${t}\ufffd`) + 2 + t.toString().length,
                        r = e.search(new RegExp(`\ufffd\\/\\*\\d+:${t}\ufffd`));
                      return gp(e.substring(n, r));
                    }
                  })(r, i),
                  t = ((f = e), f.replace(Hp, " ")).split(ip);
                for (let n = 0; n < t.length; n++) {
                  let r = t[n];
                  if (1 & n)
                    if ("/" === r.charAt(0)) {
                      if ("#" === r.charAt(1)) {
                        const e = parseInt(r.substr(2), 10);
                        (l = Cp[--c]), u.push((e << 3) | 5);
                      }
                    } else {
                      const e = parseInt(r.substr(1), 10),
                        t = "#" === r.charAt(0);
                      u.push(((t ? e : ~e) << 3) | 0, (l << 17) | 1),
                        t && (Cp[++c] = l = e);
                    }
                  else {
                    const t = pp(r);
                    for (let n = 0; n < t.length; n++)
                      if (1 & n) {
                        const r = t[n];
                        if ("object" != typeof r)
                          throw new Error(
                            `Unable to parse ICU expression in "${e}" message.`
                          );
                        const i = xp(s);
                        u.push(Ni, "", i, (l << 17) | 1);
                        const o = yp(r);
                        Bp(d, r, i, i);
                        const a = d.length - 1;
                        h.push(
                          wp(r.mainBinding),
                          3,
                          -1 - r.mainBinding,
                          (i << 2) | 2,
                          a,
                          o,
                          2,
                          (i << 2) | 3,
                          a
                        );
                      } else if ("" !== t[n]) {
                        const e = t[n],
                          r = e.match(sp),
                          i = xp(s);
                        u.push(r ? "" : e, i, (l << 17) | 1),
                          r && we(_p(e, i), h);
                      }
                  }
                }
              }
              var f;
              Ep > 0 &&
                (function (e, t, n) {
                  if (n > 0 && e.firstCreatePass) {
                    for (let r = 0; r < n; r++)
                      e.blueprint.push(null), e.data.push(null), t.push(null);
                    e.expandoInstructions
                      ? e.expandoInstructions.push(n)
                      : (e.expandoStartIndex += n);
                  }
                })(t, e, Ep),
                (t.data[n + 20] = {
                  vars: Ep,
                  create: u,
                  update: h,
                  icus: d.length ? d : null,
                });
            })(Ot(), r, e, t, n);
      }
      let Ep;
      function xp(e) {
        return e + Ep++;
      }
      function Dp(e, t, n, r, i) {
        const s = t.next;
        r || (r = n),
          r === n && t !== n.child
            ? ((t.next = n.child), (n.child = t))
            : r !== n && t !== r.next
            ? ((t.next = r.next), (r.next = t))
            : (t.next = null),
          n !== i[6] && (t.parent = n);
        let o = t.next;
        for (; o; ) o.next === t && (o.next = s), (o = o.next);
        if (1 === t.type) return ro(e, i, t), t;
        Xs(e, i, dt(t, i), t);
        const a = i[t.index];
        return 0 !== t.type && Je(a) && Xs(e, i, a[7], t), t;
      }
      function Ip(e) {
        return void 0 === e;
      }
      function Op(e, t = {}) {
        let n = e;
        if (ap.test(e)) {
          const e = {},
            t = [0];
          n = n.replace(lp, (n, r, i) => {
            const s = r || i,
              o = e[s] || [];
            if (
              (o.length ||
                (s.split("|").forEach((e) => {
                  const t = e.match(fp),
                    n = t ? parseInt(t[1], 10) : 0,
                    r = dp.test(e);
                  o.push([n, r, e]);
                }),
                (e[s] = o)),
              !o.length)
            )
              throw new Error("i18n postprocess: unmatched placeholder - " + s);
            const a = t[t.length - 1];
            let l = 0;
            for (let e = 0; e < o.length; e++)
              if (o[e][0] === a) {
                l = e;
                break;
              }
            const [c, u, h] = o[l];
            return u ? t.pop() : a !== c && t.push(c), o.splice(l, 1), h;
          });
        }
        return Object.keys(t).length
          ? ((n = n.replace(cp, (e, n, r, i, s, o) =>
              t.hasOwnProperty(r) ? `${n}${t[r]}${o}` : e
            )),
            (n = n.replace(up, (e, n) => (t.hasOwnProperty(n) ? t[n] : e))),
            (n = n.replace(hp, (e, n) => {
              if (t.hasOwnProperty(n)) {
                const r = t[n];
                if (!r.length)
                  throw new Error(
                    `i18n postprocess: unmatched ICU - ${e} with key: ${n}`
                  );
                return r.shift();
              }
              return e;
            })),
            n)
          : n;
      }
      function kp() {
        const e = Ot();
        !(function (e, t) {
          const n = vp[bp--],
            r = e.data[n + 20],
            i = At(),
            s = Ap(n, r.create, e, t);
          let o = n + 1;
          for (; o <= i.index - 20; ) {
            -1 === s.indexOf(o) && Tp(e, t, o, !0);
            const n = pt(e, o);
            !n ||
              (0 !== n.type && 3 !== n.type && 4 !== n.type) ||
              null === n.localNames ||
              (o += n.localNames.length >> 1),
              o++;
          }
        })(kt(), e),
          $l(!1);
      }
      function Rp(e, t, n, r, i, s) {
        const o = At();
        t[n + 20] = i;
        const a = Wi(e, t[6], n, r, s, null);
        return o && o.next === a && (o.next = null), a;
      }
      function Ap(e, t, n, r) {
        const i = r[11];
        let s = null,
          o = null;
        const a = [];
        for (let l = 0; l < t.length; l++) {
          const c = t[l];
          if ("string" == typeof c) {
            const e = Vs(c, i),
              u = t[++l];
            (o = s), (s = Rp(n, r, u, 3, e, null)), a.push(u), Pt();
          } else if ("number" == typeof c)
            switch (7 & c) {
              case 1:
                const i = c >>> 17;
                let u;
                (u = i === e ? r[6] : pt(n, i)), (o = Dp(n, s, u, o, r));
                break;
              case 0:
                const h = c >= 0,
                  d = (h ? c : ~c) >>> 3;
                a.push(d), (o = s), (s = pt(n, d)), s && Tt(s, h);
                break;
              case 5:
                (o = s = pt(n, c >>> 3)), Tt(s, !1);
                break;
              case 4:
                const f = t[++l],
                  p = t[++l];
                _s(pt(n, c >>> 3), r, f, p, null, null);
                break;
              default:
                throw new Error(
                  `Unable to determine the type of mutate operation for "${c}"`
                );
            }
          else
            switch (c) {
              case Ni:
                const e = t[++l],
                  u = t[++l],
                  h = i.createComment(e);
                (o = s),
                  (s = Rp(n, r, u, 5, h, null)),
                  a.push(u),
                  li(h, r),
                  (s.activeCaseIndex = null),
                  Pt();
                break;
              case ji:
                const d = t[++l],
                  f = t[++l];
                (o = s), (s = Rp(n, r, f, 3, i.createElement(d), d)), a.push(f);
                break;
              default:
                throw new Error(
                  `Unable to determine the type of mutate operation for "${c}"`
                );
            }
        }
        return Pt(), a;
      }
      function Tp(e, t, n, r) {
        const i = pt(e, n),
          s = ht(n, t);
        s && eo(t[11], s);
        const o = mt(t, n);
        if (Je(o)) {
          const e = o;
          0 !== i.type && eo(t[11], e[7]);
        }
        r && (i.flags |= 64);
      }
      function Fp(e, t, n) {
        Sp(e, t, n), kp();
      }
      function Pp(e, t) {
        !(function (e, t, n, r) {
          const i = At().index - 20,
            s = [];
          for (let o = 0; o < r.length; o += 2) {
            const a = r[o],
              l = r[o + 1].split(op);
            for (let r = 0; r < l.length; r++) {
              const o = l[r];
              if (1 & r)
                throw new Error(
                  "ICU expressions are not yet supported in attributes"
                );
              if ("" !== o)
                if (o.match(sp))
                  t.firstCreatePass &&
                    null === t.data[n + 20] &&
                    we(_p(o, i, a), s);
                else {
                  const n = pt(t, i);
                  3 === n.type && _s(n, e, a, o, null, null);
                  const r = null !== n.inputs && n.inputs[a];
                  r && Ps(t, e, r, a, o);
                }
            }
          }
          t.firstCreatePass && null === t.data[n + 20] && (t.data[n + 20] = s);
        })(Ot(), kt(), e, t);
      }
      let jp = 0,
        Np = 0;
      function Mp(e) {
        return Wa(Ot(), Bt(), e) && (jp |= 1 << Np), Np++, Mp;
      }
      function Lp(e) {
        if (Np) {
          const t = kt(),
            n = t.data[e + 20];
          let r,
            i = null;
          Array.isArray(n) ? (r = n) : ((r = n.update), (i = n.icus));
          const s = Lt() - Np - 1,
            o = Ot();
          !(function e(t, n, r, i, s, o, a = !1) {
            let l = !1;
            for (let c = 0; c < t.length; c++) {
              const u = t[c],
                h = t[++c];
              if (a || u & i) {
                let a = "";
                for (let u = c + 1; u <= c + h; u++) {
                  const c = t[u];
                  if ("string" == typeof c) a += c;
                  else if ("number" == typeof c)
                    if (c < 0) a += En(o[r - c]);
                    else {
                      const h = c >>> 2;
                      let d, f, p;
                      switch (3 & c) {
                        case 1:
                          const c = t[++u],
                            m = t[++u];
                          os(s, pt(s, h), o, c, a, o[11], m, !1);
                          break;
                        case 0:
                          js(o, h, a);
                          break;
                        case 2:
                          if (
                            ((d = t[++u]),
                            (f = n[d]),
                            (p = pt(s, h)),
                            null !== p.activeCaseIndex)
                          ) {
                            const e = f.remove[p.activeCaseIndex];
                            for (let t = 0; t < e.length; t++) {
                              const r = e[t];
                              switch (7 & r) {
                                case 3:
                                  Tp(s, o, r >>> 3, !1);
                                  break;
                                case 6:
                                  const i = pt(s, e[t + 1] >>> 3)
                                    .activeCaseIndex;
                                  null !== i && we(n[r >>> 3].remove[i], e);
                              }
                            }
                          }
                          const g = Vp(f, a);
                          (p.activeCaseIndex = -1 !== g ? g : null),
                            g > -1 && (Ap(-1, f.create[g], s, o), (l = !0));
                          break;
                        case 3:
                          (d = t[++u]),
                            (f = n[d]),
                            (p = pt(s, h)),
                            null !== p.activeCaseIndex &&
                              e(f.update[p.activeCaseIndex], n, r, i, s, o, l);
                      }
                    }
                }
              }
              c += h;
            }
          })(r, i, s, jp, t, o),
            (jp = 0),
            (Np = 0);
        }
      }
      function Vp(e, t) {
        let n = e.cases.indexOf(t);
        if (-1 === n)
          switch (e.type) {
            case 1: {
              const r = (function (e, t) {
                const n = Kf(t)(parseInt(e, 10)),
                  r = Jf[n];
                return void 0 !== r ? r : "other";
              })(t, $p);
              (n = e.cases.indexOf(r)),
                -1 === n && "other" !== r && (n = e.cases.indexOf("other"));
              break;
            }
            case 0:
              n = e.cases.indexOf("other");
          }
        return n;
      }
      function Bp(e, t, n, r) {
        const i = [],
          s = [],
          o = [],
          a = [],
          l = [];
        for (let c = 0; c < t.values.length; c++) {
          const u = t.values[c],
            h = [];
          for (let e = 0; e < u.length; e++) {
            const t = u[e];
            if ("string" != typeof t) {
              const n = h.push(t) - 1;
              u[e] = `\x3c!--\ufffd${n}\ufffd--\x3e`;
            }
          }
          const d = zp(u.join(""), n, h, e, r);
          i.push(d.create),
            s.push(d.remove),
            o.push(d.update),
            a.push(d.vars),
            l.push(d.childIcus);
        }
        e.push({
          type: t.type,
          vars: a,
          childIcus: l,
          cases: t.cases,
          create: i,
          remove: s,
          update: o,
        }),
          (Ep += Math.max(...a));
      }
      function zp(e, t, n, r, i) {
        const s = new br(at()).getInertBodyElement(e);
        if (!s) throw new Error("Unable to generate inert body element");
        const o = {
          vars: 0,
          childIcus: [],
          create: [],
          remove: [],
          update: [],
        };
        return (
          (function e(t, n, r, i, s, o) {
            if (t) {
              const a = [];
              for (; t; ) {
                const l = t.nextSibling,
                  c = o + ++n.vars;
                switch (t.nodeType) {
                  case Node.ELEMENT_NODE:
                    const l = t,
                      u = l.tagName.toLowerCase();
                    if (Ar.hasOwnProperty(u)) {
                      n.create.push(ji, u, c, (r << 17) | 1);
                      const a = l.attributes;
                      for (let e = 0; e < a.length; e++) {
                        const t = a.item(e),
                          r = t.name.toLowerCase();
                        t.value.match(sp)
                          ? Pr.hasOwnProperty(r) &&
                            we(
                              Tr[r]
                                ? _p(t.value, c, t.name, Sr)
                                : Fr[r]
                                ? _p(t.value, c, t.name, Er)
                                : _p(t.value, c, t.name),
                              n.update
                            )
                          : n.create.push((c << 3) | 4, t.name, t.value);
                      }
                      e(t.firstChild, n, c, i, s, o),
                        n.remove.push((c << 3) | 3);
                    } else n.vars--;
                    break;
                  case Node.TEXT_NODE:
                    const h = t.textContent || "",
                      d = h.match(sp);
                    n.create.push(d ? "" : h, c, (r << 17) | 1),
                      n.remove.push((c << 3) | 3),
                      d && we(_p(h, c), n.update);
                    break;
                  case Node.COMMENT_NODE:
                    const f = Up.exec(t.textContent || "");
                    if (f) {
                      const e = parseInt(f[1], 10);
                      n.create.push(Ni, "", c, (r << 17) | 1),
                        a.push([i[e], c]);
                    } else n.vars--;
                    break;
                  default:
                    n.vars--;
                }
                t = l;
              }
              for (let e = 0; e < a.length; e++) {
                const t = a[e][0],
                  r = a[e][1];
                Bp(s, t, r, o + n.vars);
                const i = s.length - 1;
                (n.vars += Math.max(...s[i].vars)), n.childIcus.push(i);
                const l = yp(t);
                n.update.push(
                  wp(t.mainBinding),
                  3,
                  -1 - t.mainBinding,
                  (r << 2) | 2,
                  i,
                  l,
                  2,
                  (r << 2) | 3,
                  i
                ),
                  n.remove.push((i << 3) | 6, (r << 3) | 3);
              }
            }
          })((Ur(s) || s).firstChild, o, t, n, r, i),
          o
        );
      }
      const Up = /\ufffd(\d+)\ufffd/,
        Hp = /\uE500/g;
      let $p = ep;
      function qp(e) {
        var t, n;
        (n = "Expected localeId to be defined"),
          null == (t = e) &&
            (function (e, t, n, r) {
              throw new Error(
                "ASSERTION ERROR: " + e + ` [Expected=> null != ${t} <=Actual]`
              );
            })(n, t),
          "string" == typeof e && ($p = e.toLowerCase().replace(/_/g, "-"));
      }
      function Gp(e, t, n, r) {
        return l(() => {
          const i = e,
            s = i.prototype ? Object.getPrototypeOf(i.prototype) : null,
            o = s && s.constructor;
          null !== t &&
            (void 0 === i.decorators || (o && o.decorators === i.decorators)
              ? (i.decorators = t)
              : i.decorators.push(...t)),
            null !== n && (i.ctorParameters = n),
            null !== r &&
              (i.propDecorators =
                void 0 === i.propDecorators ||
                (o && o.propDecorators === i.propDecorators)
                  ? r
                  : Object.assign(Object.assign({}, i.propDecorators), r));
        });
      }
      const Wp = new Map();
      function Qp(e, t) {
        const n = Wp.get(e);
        Kp(e, n && n.moduleType, t.moduleType), Wp.set(e, t);
      }
      function Kp(e, t, n) {
        if (t && t !== n)
          throw new Error(
            `Duplicate module registered for ${e} - ${N(t)} vs ${N(t.name)}`
          );
      }
      function Zp(e) {
        if (null !== e.ɵmod.id) {
          const t = e.ɵmod.id;
          Kp(t, Wp.get(t), e), Wp.set(t, e);
        }
        let t = e.ɵmod.imports;
        t instanceof Function && (t = t()), t && t.forEach((e) => Zp(e));
      }
      function Yp(e) {
        return Wp.get(e) || ze[e];
      }
      class Xp extends ve {
        constructor(e, t) {
          super(),
            (this._parent = t),
            (this._bootstrapComponents = []),
            (this.injector = this),
            (this.destroyCbs = []),
            (this.componentFactoryResolver = new Lf(this));
          const n = Ye(e),
            r = e[J] || null;
          r && qp(r),
            (this._bootstrapComponents = Rn(n.bootstrap)),
            (this._r3Injector = Wo(
              e,
              t,
              [
                { provide: ve, useValue: this },
                { provide: hh, useValue: this.componentFactoryResolver },
              ],
              N(e)
            )),
            this._r3Injector._resolveInjectorDefTypes(),
            (this.instance = this.get(e));
        }
        get(e, t = na.THROW_IF_NOT_FOUND, n = C.Default) {
          return e === na || e === ve || e === re
            ? this
            : this._r3Injector.get(e, t, n);
        }
        destroy() {
          const e = this._r3Injector;
          !e.destroyed && e.destroy(),
            this.destroyCbs.forEach((e) => e()),
            (this.destroyCbs = null);
        }
        onDestroy(e) {
          this.destroyCbs.push(e);
        }
      }
      class Jp extends be {
        constructor(e) {
          super(), (this.moduleType = e), null !== Ye(e) && Zp(e);
        }
        create(e) {
          return new Xp(this.moduleType, e);
        }
      }
      function em(e, t, n) {
        const r = Mt() + e,
          i = Ot();
        return i[r] === Di ? qa(i, r, n ? t.call(n) : t()) : Ga(i, r);
      }
      function tm(e, t, n, r) {
        return hm(Ot(), Mt(), e, t, n, r);
      }
      function nm(e, t, n, r, i) {
        return dm(Ot(), Mt(), e, t, n, r, i);
      }
      function rm(e, t, n, r, i, s) {
        return fm(Ot(), Mt(), e, t, n, r, i, s);
      }
      function im(e, t, n, r, i, s, o) {
        return pm(Ot(), Mt(), e, t, n, r, i, s, o);
      }
      function sm(e, t, n, r, i, s, o, a) {
        const l = Mt() + e,
          c = Ot(),
          u = Za(c, l, n, r, i, s);
        return Wa(c, l + 4, o) || u
          ? qa(c, l + 5, a ? t.call(a, n, r, i, s, o) : t(n, r, i, s, o))
          : Ga(c, l + 5);
      }
      function om(e, t, n, r, i, s, o, a, l) {
        const c = Mt() + e,
          u = Ot(),
          h = Za(u, c, n, r, i, s);
        return Qa(u, c + 4, o, a) || h
          ? qa(u, c + 6, l ? t.call(l, n, r, i, s, o, a) : t(n, r, i, s, o, a))
          : Ga(u, c + 6);
      }
      function am(e, t, n, r, i, s, o, a, l, c) {
        const u = Mt() + e,
          h = Ot();
        let d = Za(h, u, n, r, i, s);
        return Ka(h, u + 4, o, a, l) || d
          ? qa(
              h,
              u + 7,
              c ? t.call(c, n, r, i, s, o, a, l) : t(n, r, i, s, o, a, l)
            )
          : Ga(h, u + 7);
      }
      function lm(e, t, n, r, i, s, o, a, l, c, u) {
        const h = Mt() + e,
          d = Ot(),
          f = Za(d, h, n, r, i, s);
        return Za(d, h + 4, o, a, l, c) || f
          ? qa(
              d,
              h + 8,
              u ? t.call(u, n, r, i, s, o, a, l, c) : t(n, r, i, s, o, a, l, c)
            )
          : Ga(d, h + 8);
      }
      function cm(e, t, n, r) {
        return mm(Ot(), Mt(), e, t, n, r);
      }
      function um(e, t) {
        const n = e[t];
        return n === Di ? void 0 : n;
      }
      function hm(e, t, n, r, i, s) {
        const o = t + n;
        return Wa(e, o, i)
          ? qa(e, o + 1, s ? r.call(s, i) : r(i))
          : um(e, o + 1);
      }
      function dm(e, t, n, r, i, s, o) {
        const a = t + n;
        return Qa(e, a, i, s)
          ? qa(e, a + 2, o ? r.call(o, i, s) : r(i, s))
          : um(e, a + 2);
      }
      function fm(e, t, n, r, i, s, o, a) {
        const l = t + n;
        return Ka(e, l, i, s, o)
          ? qa(e, l + 3, a ? r.call(a, i, s, o) : r(i, s, o))
          : um(e, l + 3);
      }
      function pm(e, t, n, r, i, s, o, a, l) {
        const c = t + n;
        return Za(e, c, i, s, o, a)
          ? qa(e, c + 4, l ? r.call(l, i, s, o, a) : r(i, s, o, a))
          : um(e, c + 4);
      }
      function mm(e, t, n, r, i, s) {
        let o = t + n,
          a = !1;
        for (let l = 0; l < i.length; l++) Wa(e, o++, i[l]) && (a = !0);
        return a ? qa(e, o, r.apply(s, i)) : um(e, o);
      }
      function gm(e, t) {
        const n = kt();
        let r;
        const i = e + 20;
        n.firstCreatePass
          ? ((r = (function (e, t) {
              if (t)
                for (let n = t.length - 1; n >= 0; n--) {
                  const r = t[n];
                  if (e === r.name) return r;
                }
              throw new Error(`The pipe '${e}' could not be found!`);
            })(t, n.pipeRegistry)),
            (n.data[i] = r),
            r.onDestroy &&
              (n.destroyHooks || (n.destroyHooks = [])).push(i, r.onDestroy))
          : (r = n.data[i]);
        const s = r.factory || (r.factory = Ze(r.type)),
          o = ue(wl),
          a = Tn(!1),
          l = s();
        return Tn(a), ue(o), vl(n, Ot(), e, l), l;
      }
      function _m(e, t, n) {
        const r = Ot(),
          i = mt(r, e);
        return Sm(
          r,
          Cm(r, e) ? hm(r, Mt(), t, i.transform, n, i) : i.transform(n)
        );
      }
      function ym(e, t, n, r) {
        const i = Ot(),
          s = mt(i, e);
        return Sm(
          i,
          Cm(i, e) ? dm(i, Mt(), t, s.transform, n, r, s) : s.transform(n, r)
        );
      }
      function vm(e, t, n, r, i) {
        const s = Ot(),
          o = mt(s, e);
        return Sm(
          s,
          Cm(s, e)
            ? fm(s, Mt(), t, o.transform, n, r, i, o)
            : o.transform(n, r, i)
        );
      }
      function bm(e, t, n, r, i, s) {
        const o = Ot(),
          a = mt(o, e);
        return Sm(
          o,
          Cm(o, e)
            ? pm(o, Mt(), t, a.transform, n, r, i, s, a)
            : a.transform(n, r, i, s)
        );
      }
      function wm(e, t, n) {
        const r = Ot(),
          i = mt(r, e);
        return Sm(
          r,
          Cm(r, e) ? mm(r, Mt(), t, i.transform, n, i) : i.transform.apply(i, n)
        );
      }
      function Cm(e, t) {
        return e[1].data[t + 20].pure;
      }
      function Sm(e, t) {
        return Ua.isWrapped(t) && ((t = Ua.unwrap(t)), (e[Lt()] = Di)), t;
      }
      class Em extends r.a {
        constructor(e = !1) {
          super(), (this.__isAsync = e);
        }
        emit(e) {
          super.next(e);
        }
        subscribe(e, t, n) {
          let r,
            s = (e) => null,
            o = () => null;
          e && "object" == typeof e
            ? ((r = this.__isAsync
                ? (t) => {
                    setTimeout(() => e.next(t));
                  }
                : (t) => {
                    e.next(t);
                  }),
              e.error &&
                (s = this.__isAsync
                  ? (t) => {
                      setTimeout(() => e.error(t));
                    }
                  : (t) => {
                      e.error(t);
                    }),
              e.complete &&
                (o = this.__isAsync
                  ? () => {
                      setTimeout(() => e.complete());
                    }
                  : () => {
                      e.complete();
                    }))
            : ((r = this.__isAsync
                ? (t) => {
                    setTimeout(() => e(t));
                  }
                : (t) => {
                    e(t);
                  }),
              t &&
                (s = this.__isAsync
                  ? (e) => {
                      setTimeout(() => t(e));
                    }
                  : (e) => {
                      t(e);
                    }),
              n &&
                (o = this.__isAsync
                  ? () => {
                      setTimeout(() => n());
                    }
                  : () => {
                      n();
                    }));
          const a = super.subscribe(r, s, o);
          return e instanceof i.a && e.add(a), a;
        }
      }
      function xm() {
        return this._results[Va()]();
      }
      class Dm {
        constructor() {
          (this.dirty = !0),
            (this._results = []),
            (this.changes = new Em()),
            (this.length = 0);
          const e = Va(),
            t = Dm.prototype;
          t[e] || (t[e] = xm);
        }
        map(e) {
          return this._results.map(e);
        }
        filter(e) {
          return this._results.filter(e);
        }
        find(e) {
          return this._results.find(e);
        }
        reduce(e, t) {
          return this._results.reduce(e, t);
        }
        forEach(e) {
          this._results.forEach(e);
        }
        some(e) {
          return this._results.some(e);
        }
        toArray() {
          return this._results.slice();
        }
        toString() {
          return this._results.toString();
        }
        reset(e) {
          (this._results = Ce(e)),
            (this.dirty = !1),
            (this.length = this._results.length),
            (this.last = this._results[this.length - 1]),
            (this.first = this._results[0]);
        }
        notifyOnChanges() {
          this.changes.emit(this);
        }
        setDirty() {
          this.dirty = !0;
        }
        destroy() {
          this.changes.complete(), this.changes.unsubscribe();
        }
      }
      class Im {
        constructor(e) {
          (this.queryList = e), (this.matches = null);
        }
        clone() {
          return new Im(this.queryList);
        }
        setDirty() {
          this.queryList.setDirty();
        }
      }
      class Om {
        constructor(e = []) {
          this.queries = e;
        }
        createEmbeddedView(e) {
          const t = e.queries;
          if (null !== t) {
            const n =
                null !== e.contentQueries ? e.contentQueries[0] : t.length,
              r = [];
            for (let e = 0; e < n; e++) {
              const n = t.getByIndex(e);
              r.push(this.queries[n.indexInDeclarationView].clone());
            }
            return new Om(r);
          }
          return null;
        }
        insertView(e) {
          this.dirtyQueriesWithMatches(e);
        }
        detachView(e) {
          this.dirtyQueriesWithMatches(e);
        }
        dirtyQueriesWithMatches(e) {
          for (let t = 0; t < this.queries.length; t++)
            null !== qm(e, t).matches && this.queries[t].setDirty();
        }
      }
      class km {
        constructor(e, t, n, r = null) {
          (this.predicate = e),
            (this.descendants = t),
            (this.isStatic = n),
            (this.read = r);
        }
      }
      class Rm {
        constructor(e = []) {
          this.queries = e;
        }
        elementStart(e, t) {
          for (let n = 0; n < this.queries.length; n++)
            this.queries[n].elementStart(e, t);
        }
        elementEnd(e) {
          for (let t = 0; t < this.queries.length; t++)
            this.queries[t].elementEnd(e);
        }
        embeddedTView(e) {
          let t = null;
          for (let n = 0; n < this.length; n++) {
            const r = null !== t ? t.length : 0,
              i = this.getByIndex(n).embeddedTView(e, r);
            i &&
              ((i.indexInDeclarationView = n),
              null !== t ? t.push(i) : (t = [i]));
          }
          return null !== t ? new Rm(t) : null;
        }
        template(e, t) {
          for (let n = 0; n < this.queries.length; n++)
            this.queries[n].template(e, t);
        }
        getByIndex(e) {
          return this.queries[e];
        }
        get length() {
          return this.queries.length;
        }
        track(e) {
          this.queries.push(e);
        }
      }
      class Am {
        constructor(e, t = -1) {
          (this.metadata = e),
            (this.matches = null),
            (this.indexInDeclarationView = -1),
            (this.crossesNgTemplate = !1),
            (this._appliesToNextNode = !0),
            (this._declarationNodeIndex = t);
        }
        elementStart(e, t) {
          this.isApplyingToNode(t) && this.matchTNode(e, t);
        }
        elementEnd(e) {
          this._declarationNodeIndex === e.index &&
            (this._appliesToNextNode = !1);
        }
        template(e, t) {
          this.elementStart(e, t);
        }
        embeddedTView(e, t) {
          return this.isApplyingToNode(e)
            ? ((this.crossesNgTemplate = !0),
              this.addMatch(-e.index, t),
              new Am(this.metadata))
            : null;
        }
        isApplyingToNode(e) {
          if (this._appliesToNextNode && !1 === this.metadata.descendants) {
            const t = this._declarationNodeIndex;
            let n = e.parent;
            for (; null !== n && 4 === n.type && n.index !== t; ) n = n.parent;
            return t === (null !== n ? n.index : -1);
          }
          return this._appliesToNextNode;
        }
        matchTNode(e, t) {
          if (Array.isArray(this.metadata.predicate)) {
            const n = this.metadata.predicate;
            for (let r = 0; r < n.length; r++)
              this.matchTNodeWithReadOption(e, t, Tm(t, n[r]));
          } else {
            const n = this.metadata.predicate;
            n === Bh
              ? 0 === t.type && this.matchTNodeWithReadOption(e, t, -1)
              : this.matchTNodeWithReadOption(e, t, Hn(t, e, n, !1, !1));
          }
        }
        matchTNodeWithReadOption(e, t, n) {
          if (null !== n) {
            const r = this.metadata.read;
            if (null !== r)
              if (r === ph || r === Hh || (r === Bh && 0 === t.type))
                this.addMatch(t.index, -2);
              else {
                const n = Hn(t, e, r, !1, !1);
                null !== n && this.addMatch(t.index, n);
              }
            else this.addMatch(t.index, n);
          }
        }
        addMatch(e, t) {
          null === this.matches
            ? (this.matches = [e, t])
            : this.matches.push(e, t);
        }
      }
      function Tm(e, t) {
        const n = e.localNames;
        if (null !== n)
          for (let r = 0; r < n.length; r += 2) if (n[r] === t) return n[r + 1];
        return null;
      }
      function Fm(e, t, n, r) {
        return -1 === n
          ? (function (e, t) {
              return 3 === e.type || 4 === e.type
                ? fo(ph, e, t)
                : 0 === e.type
                ? po(Bh, ph, e, t)
                : null;
            })(t, e)
          : -2 === n
          ? (function (e, t, n) {
              return n === ph
                ? fo(ph, t, e)
                : n === Bh
                ? po(Bh, ph, t, e)
                : n === Hh
                ? mo(Hh, ph, t, e)
                : void 0;
            })(e, t, r)
          : $n(e, e[1], n, t);
      }
      function Pm(e, t, n, r) {
        const i = t[19].queries[r];
        if (null === i.matches) {
          const r = e.data,
            s = n.matches,
            o = [];
          for (let e = 0; e < s.length; e += 2) {
            const i = s[e];
            o.push(i < 0 ? null : Fm(t, r[i], s[e + 1], n.metadata.read));
          }
          i.matches = o;
        }
        return i.matches;
      }
      function jm(e) {
        const t = Ot(),
          n = kt(),
          r = qt();
        Gt(r + 1);
        const i = qm(n, r);
        if (e.dirty && vt(t) === i.metadata.isStatic) {
          if (null === i.matches) e.reset([]);
          else {
            const s = i.crossesNgTemplate
              ? (function e(t, n, r, i) {
                  const s = t.queries.getByIndex(r),
                    o = s.matches;
                  if (null !== o) {
                    const a = Pm(t, n, s, r);
                    for (let t = 0; t < o.length; t += 2) {
                      const r = o[t];
                      if (r > 0) i.push(a[t / 2]);
                      else {
                        const s = o[t + 1],
                          a = n[-r];
                        for (let t = 10; t < a.length; t++) {
                          const n = a[t];
                          n[17] === n[3] && e(n[1], n, s, i);
                        }
                        if (null !== a[9]) {
                          const t = a[9];
                          for (let n = 0; n < t.length; n++) {
                            const r = t[n];
                            e(r[1], r, s, i);
                          }
                        }
                      }
                    }
                  }
                  return i;
                })(n, t, r, [])
              : Pm(n, t, i, r);
            e.reset(s), e.notifyOnChanges();
          }
          return !0;
        }
        return !1;
      }
      function Nm(e, t, n) {
        Lm(kt(), Ot(), e, t, n, !0);
      }
      function Mm(e, t, n) {
        Lm(kt(), Ot(), e, t, n, !1);
      }
      function Lm(e, t, n, r, i, s) {
        e.firstCreatePass &&
          ($m(e, new km(n, r, s, i), -1), s && (e.staticViewQueries = !0)),
          Hm(e, t);
      }
      function Vm(e, t, n, r) {
        zm(kt(), Ot(), t, n, r, !1, At(), e);
      }
      function Bm(e, t, n, r) {
        zm(kt(), Ot(), t, n, r, !0, At(), e);
      }
      function zm(e, t, n, r, i, s, o, a) {
        e.firstCreatePass &&
          ($m(e, new km(n, r, s, i), o.index),
          (function (e, t) {
            const n = e.contentQueries || (e.contentQueries = []);
            t !== (e.contentQueries.length ? n[n.length - 1] : -1) &&
              n.push(e.queries.length - 1, t);
          })(e, a),
          s && (e.staticContentQueries = !0)),
          Hm(e, t);
      }
      function Um() {
        return (e = Ot()), (t = qt()), e[19].queries[t].queryList;
        var e, t;
      }
      function Hm(e, t) {
        const n = new Dm();
        !(function (e, t, n, r) {
          const i = Rs(t);
          i.push(n), e.firstCreatePass && As(e).push(r, i.length - 1);
        })(e, t, n, n.destroy),
          null === t[19] && (t[19] = new Om()),
          t[19].queries.push(new Im(n));
      }
      function $m(e, t, n) {
        null === e.queries && (e.queries = new Rm()),
          e.queries.track(new Am(t, n));
      }
      function qm(e, t) {
        return e.queries.getByIndex(t);
      }
      function Gm(e, t) {
        return po(Bh, ph, e, t);
      }
      function Wm(e = C.Default) {
        const t = go(!0);
        if (null != t || e & C.Optional) return t;
        throw new Error("No provider for ChangeDetectorRef!");
      }
      const Qm = (() => ({
        ɵɵattribute: Ya,
        ɵɵattributeInterpolate1: al,
        ɵɵattributeInterpolate2: ll,
        ɵɵattributeInterpolate3: cl,
        ɵɵattributeInterpolate4: ul,
        ɵɵattributeInterpolate5: hl,
        ɵɵattributeInterpolate6: dl,
        ɵɵattributeInterpolate7: fl,
        ɵɵattributeInterpolate8: pl,
        ɵɵattributeInterpolateV: ml,
        ɵɵdefineComponent: Me,
        ɵɵdefineDirective: qe,
        ɵɵdefineInjectable: x,
        ɵɵdefineInjector: I,
        ɵɵdefineNgModule: Ue,
        ɵɵdefinePipe: Ge,
        ɵɵdirectiveInject: wl,
        ɵɵgetFactoryOf: Qn,
        ɵɵgetInheritedFactory: Kn,
        ɵɵinject: de,
        ɵɵinjectAttribute: Cl,
        ɵɵinvalidFactory: Sl,
        ɵɵinvalidFactoryDep: fe,
        ɵɵinjectPipeChangeDetectorRef: Wm,
        ɵɵtemplateRefExtractor: Gm,
        ɵɵNgOnChangesFeature: Ku,
        ɵɵProvidersFeature: sh,
        ɵɵCopyDefinitionFeature: Wu,
        ɵɵInheritDefinitionFeature: Bu,
        ɵɵnextContext: Bl,
        ɵɵnamespaceHTML: an,
        ɵɵnamespaceMathML: on,
        ɵɵnamespaceSVG: sn,
        ɵɵenableBindings: Dt,
        ɵɵdisableBindings: It,
        ɵɵelementStart: Dl,
        ɵɵelementEnd: Il,
        ɵɵelement: Ol,
        ɵɵelementContainerStart: kl,
        ɵɵelementContainerEnd: Rl,
        ɵɵelementContainer: Al,
        ɵɵpureFunction0: em,
        ɵɵpureFunction1: tm,
        ɵɵpureFunction2: nm,
        ɵɵpureFunction3: rm,
        ɵɵpureFunction4: im,
        ɵɵpureFunction5: sm,
        ɵɵpureFunction6: om,
        ɵɵpureFunction7: am,
        ɵɵpureFunction8: lm,
        ɵɵpureFunctionV: cm,
        ɵɵgetCurrentView: Tl,
        ɵɵrestoreView: Rt,
        ɵɵlistener: jl,
        ɵɵprojection: ql,
        ɵɵupdateSyntheticHostBinding: _u,
        ɵɵcomponentHostSyntheticListener: Nl,
        ɵɵpipeBind1: _m,
        ɵɵpipeBind2: ym,
        ɵɵpipeBind3: vm,
        ɵɵpipeBind4: bm,
        ɵɵpipeBindV: wm,
        ɵɵprojectionDef: Ul,
        ɵɵhostProperty: gu,
        ɵɵproperty: El,
        ɵɵpropertyInterpolate: Gl,
        ɵɵpropertyInterpolate1: Wl,
        ɵɵpropertyInterpolate2: Ql,
        ɵɵpropertyInterpolate3: Kl,
        ɵɵpropertyInterpolate4: Zl,
        ɵɵpropertyInterpolate5: Yl,
        ɵɵpropertyInterpolate6: Xl,
        ɵɵpropertyInterpolate7: Jl,
        ɵɵpropertyInterpolate8: ec,
        ɵɵpropertyInterpolateV: tc,
        ɵɵpipe: gm,
        ɵɵqueryRefresh: jm,
        ɵɵviewQuery: Mm,
        ɵɵstaticViewQuery: Nm,
        ɵɵstaticContentQuery: Bm,
        ɵɵloadQuery: Um,
        ɵɵcontentQuery: Vm,
        ɵɵreference: bl,
        ɵɵclassMap: vc,
        ɵɵclassMapInterpolate1: Hc,
        ɵɵclassMapInterpolate2: $c,
        ɵɵclassMapInterpolate3: qc,
        ɵɵclassMapInterpolate4: Gc,
        ɵɵclassMapInterpolate5: Wc,
        ɵɵclassMapInterpolate6: Qc,
        ɵɵclassMapInterpolate7: Kc,
        ɵɵclassMapInterpolate8: Zc,
        ɵɵclassMapInterpolateV: Yc,
        ɵɵstyleMap: _c,
        ɵɵstyleMapInterpolate1: Xc,
        ɵɵstyleMapInterpolate2: Jc,
        ɵɵstyleMapInterpolate3: eu,
        ɵɵstyleMapInterpolate4: tu,
        ɵɵstyleMapInterpolate5: nu,
        ɵɵstyleMapInterpolate6: ru,
        ɵɵstyleMapInterpolate7: iu,
        ɵɵstyleMapInterpolate8: su,
        ɵɵstyleMapInterpolateV: ou,
        ɵɵstyleProp: mc,
        ɵɵstylePropInterpolate1: au,
        ɵɵstylePropInterpolate2: lu,
        ɵɵstylePropInterpolate3: cu,
        ɵɵstylePropInterpolate4: uu,
        ɵɵstylePropInterpolate5: hu,
        ɵɵstylePropInterpolate6: du,
        ɵɵstylePropInterpolate7: fu,
        ɵɵstylePropInterpolate8: pu,
        ɵɵstylePropInterpolateV: mu,
        ɵɵstyleSanitizer: pc,
        ɵɵclassProp: gc,
        ɵɵselect: Fi,
        ɵɵadvance: Ti,
        ɵɵtemplate: yl,
        ɵɵtext: Tc,
        ɵɵtextInterpolate: Fc,
        ɵɵtextInterpolate1: Pc,
        ɵɵtextInterpolate2: jc,
        ɵɵtextInterpolate3: Nc,
        ɵɵtextInterpolate4: Mc,
        ɵɵtextInterpolate5: Lc,
        ɵɵtextInterpolate6: Vc,
        ɵɵtextInterpolate7: Bc,
        ɵɵtextInterpolate8: zc,
        ɵɵtextInterpolateV: Uc,
        ɵɵi18n: Fp,
        ɵɵi18nAttributes: Pp,
        ɵɵi18nExp: Mp,
        ɵɵi18nStart: Sp,
        ɵɵi18nEnd: kp,
        ɵɵi18nApply: Lp,
        ɵɵi18nPostprocess: Op,
        ɵɵresolveWindow: In,
        ɵɵresolveDocument: On,
        ɵɵresolveBody: kn,
        ɵɵsetComponentScope: Le,
        ɵɵsetNgModuleScope: He,
        ɵɵsanitizeHtml: Wr,
        ɵɵsanitizeStyle: Qr,
        ɵɵdefaultStyleSanitizer: ei,
        ɵɵsanitizeResourceUrl: Zr,
        ɵɵsanitizeScript: Yr,
        ɵɵsanitizeUrl: Kr,
        ɵɵsanitizeUrlOrResourceUrl: Jr,
      }))();
      let Km = null;
      function Zm() {
        Km = null;
      }
      const Ym = [],
        Xm = [];
      let Jm = !1;
      function eg() {
        if (!Jm) {
          Jm = !0;
          try {
            for (let e = Xm.length - 1; e >= 0; e--) {
              const { moduleType: t, ngModule: n } = Xm[e];
              n.declarations &&
                n.declarations.every(tg) &&
                (Xm.splice(e, 1), ag(t, n));
            }
          } finally {
            Jm = !1;
          }
        }
      }
      function tg(e) {
        return Array.isArray(e) ? e.every(tg) : !!B(e);
      }
      function ng(e, t = {}) {
        rg(e, t),
          (function (e, t) {
            Xm.push({ moduleType: e, ngModule: t });
          })(e, t);
      }
      function rg(e, t, n = !1) {
        const r = Ce(t.declarations || Ym);
        let i = null;
        Object.defineProperty(e, X, {
          configurable: !0,
          get: () => (
            null === i &&
              ((i = Q().compileNgModule(Qm, `ng:///${e.name}/\u0275mod.js`, {
                type: e,
                bootstrap: Ce(t.bootstrap || Ym).map(B),
                declarations: r.map(B),
                imports: Ce(t.imports || Ym)
                  .map(B)
                  .map(ug),
                exports: Ce(t.exports || Ym)
                  .map(B)
                  .map(ug),
                schemas: t.schemas ? Ce(t.schemas) : null,
                id: t.id || null,
              })),
              i.schemas || (i.schemas = [])),
            i
          ),
        });
        let s = null;
        Object.defineProperty(e, T, {
          get: () => {
            if (null === s) {
              const n = {
                name: e.name,
                type: e,
                deps: Ao(e),
                providers: t.providers || Ym,
                imports: [(t.imports || Ym).map(B), (t.exports || Ym).map(B)],
              };
              s = Q().compileInjector(Qm, `ng:///${e.name}/\u0275inj.js`, n);
            }
            return s;
          },
          configurable: !1,
        });
      }
      let ig = new Map(),
        sg = new Map();
      function og() {
        (ig = new Map()), (sg = new Map()), (Xm.length = 0);
      }
      function ag(e, t) {
        const n = Ce(t.declarations || Ym),
          r = cg(e);
        n.forEach((t) => {
          t.hasOwnProperty(K)
            ? lg(We(t), r)
            : t.hasOwnProperty(Z) ||
              t.hasOwnProperty(Y) ||
              (t.ngSelectorScope = e);
        });
      }
      function lg(e, t) {
        (e.directiveDefs = () =>
          Array.from(t.compilation.directives)
            .map((e) => (e.hasOwnProperty(K) ? We(e) : Qe(e)))
            .filter((e) => !!e)),
          (e.pipeDefs = () =>
            Array.from(t.compilation.pipes).map((e) => Ke(e))),
          (e.schemas = t.schemas),
          (e.tView = null);
      }
      function cg(e) {
        if (!hg(e))
          throw new Error(
            e.name + " does not have a module def (\u0275mod property)"
          );
        const t = Ye(e);
        if (null !== t.transitiveCompileScopes)
          return t.transitiveCompileScopes;
        const n = {
          schemas: t.schemas || null,
          compilation: { directives: new Set(), pipes: new Set() },
          exported: { directives: new Set(), pipes: new Set() },
        };
        return (
          Rn(t.imports).forEach((e) => {
            const t = e;
            if (!hg(t))
              throw new Error(
                `Importing ${t.name} which does not have a \u0275mod property`
              );
            const r = cg(t);
            r.exported.directives.forEach((e) =>
              n.compilation.directives.add(e)
            ),
              r.exported.pipes.forEach((e) => n.compilation.pipes.add(e));
          }),
          Rn(t.declarations).forEach((e) => {
            Ke(e)
              ? n.compilation.pipes.add(e)
              : n.compilation.directives.add(e);
          }),
          Rn(t.exports).forEach((e) => {
            const t = e;
            if (hg(t)) {
              const e = cg(t);
              e.exported.directives.forEach((e) => {
                n.compilation.directives.add(e), n.exported.directives.add(e);
              }),
                e.exported.pipes.forEach((e) => {
                  n.compilation.pipes.add(e), n.exported.pipes.add(e);
                });
            } else
              Ke(t) ? n.exported.pipes.add(t) : n.exported.directives.add(t);
          }),
          (t.transitiveCompileScopes = n),
          n
        );
      }
      function ug(e) {
        return (function (e) {
          return void 0 !== e.ngModule;
        })(e)
          ? e.ngModule
          : e;
      }
      function hg(e) {
        return !!Ye(e);
      }
      function dg(e, t) {
        let n = null;
        !(function (e, t) {
          Pa(t) && (Ta.set(e, t), Fa.add(e));
        })(e, t),
          mg(e, t),
          Object.defineProperty(e, K, {
            get: () => {
              if (null === n) {
                const r = Q();
                if (Pa(t)) {
                  const n = [`Component '${e.name}' is not resolved:`];
                  throw (
                    (t.templateUrl &&
                      n.push(" - templateUrl: " + t.templateUrl),
                    t.styleUrls &&
                      t.styleUrls.length &&
                      n.push(" - styleUrls: " + JSON.stringify(t.styleUrls)),
                    n.push(
                      "Did you run and wait for 'resolveComponentResources()'?"
                    ),
                    new Error(n.join("\n")))
                  );
                }
                const i = Km;
                let s = t.preserveWhitespaces;
                void 0 === s &&
                  (s =
                    null !== i &&
                    void 0 !== i.preserveWhitespaces &&
                    i.preserveWhitespaces);
                let o = t.encapsulation;
                void 0 === o &&
                  (o =
                    null !== i && void 0 !== i.defaultEncapsulation
                      ? i.defaultEncapsulation
                      : Fe.Emulated);
                const a = t.templateUrl || `ng:///${e.name}/template.html`,
                  l = Object.assign(Object.assign({}, _g(e, t)), {
                    typeSourceSpan: r.createParseSourceSpan(
                      "Component",
                      e.name,
                      a
                    ),
                    template: t.template || "",
                    preserveWhitespaces: s,
                    styles: t.styles || je,
                    animations: t.animations,
                    directives: [],
                    changeDetection: t.changeDetection,
                    pipes: new Map(),
                    encapsulation: o,
                    interpolation: t.interpolation,
                    viewProviders: t.viewProviders || null,
                  });
                if (
                  (l.usesInheritance && yg(e),
                  (n = r.compileComponent(Qm, a, l)),
                  eg(),
                  void 0 !== e.ngSelectorScope)
                ) {
                  const t = cg(e.ngSelectorScope);
                  lg(n, t);
                }
              }
              return n;
            },
            configurable: !1,
          });
      }
      function fg(e, t) {
        let n = null;
        mg(e, t || {}),
          Object.defineProperty(e, Z, {
            get: () => {
              if (null === n) {
                const r = pg(e, t || {});
                n = Q().compileDirective(Qm, r.sourceMapUrl, r.metadata);
              }
              return n;
            },
            configurable: !1,
          });
      }
      function pg(e, t) {
        const n = e && e.name,
          r = `ng:///${n}/\u0275dir.js`,
          i = Q(),
          s = _g(e, t);
        return (
          (s.typeSourceSpan = i.createParseSourceSpan("Directive", n, r)),
          s.usesInheritance && yg(e),
          { metadata: s, sourceMapUrl: r }
        );
      }
      function mg(e, t) {
        let n = null;
        Object.defineProperty(e, ee, {
          get: () => {
            if (null === n) {
              const r = pg(e, t),
                i = Q();
              n = i.compileFactory(
                Qm,
                `ng:///${e.name}/\u0275fac.js`,
                Object.assign(Object.assign({}, r.metadata), {
                  injectFn: "directiveInject",
                  target: i.R3FactoryTarget.Directive,
                })
              );
            }
            return n;
          },
          configurable: !1,
        });
      }
      function gg(e) {
        return Object.getPrototypeOf(e.prototype) === Object.prototype;
      }
      function _g(e, t) {
        const n = Ro(),
          r = n.ownPropMetadata(e);
        return {
          name: e.name,
          type: e,
          typeArgumentCount: 0,
          selector: void 0 !== t.selector ? t.selector : null,
          deps: Ao(e),
          host: t.host || Pe,
          propMetadata: r,
          inputs: t.inputs || je,
          outputs: t.outputs || je,
          queries: bg(e, r, wg),
          lifecycle: { usesOnChanges: n.hasLifecycleHook(e, "ngOnChanges") },
          typeSourceSpan: null,
          usesInheritance: !gg(e),
          exportAs: ((i = t.exportAs), void 0 === i ? null : Eg(i)),
          providers: t.providers || null,
          viewQueries: bg(e, r, Cg),
        };
        var i;
      }
      function yg(e) {
        const t = Object.prototype;
        let n = Object.getPrototypeOf(e.prototype).constructor;
        for (; n && n !== t; )
          Qe(n) || We(n) || !Dg(n) || fg(n, null),
            (n = Object.getPrototypeOf(n));
      }
      function vg(e, t) {
        return {
          propertyName: e,
          predicate: ((n = t.selector), "string" == typeof n ? Eg(n) : B(n)),
          descendants: t.descendants,
          first: t.first,
          read: t.read ? t.read : null,
          static: !!t.static,
        };
        var n;
      }
      function bg(e, t, n) {
        const r = [];
        for (const i in t)
          if (t.hasOwnProperty(i)) {
            const s = t[i];
            s.forEach((t) => {
              if (n(t)) {
                if (!t.selector)
                  throw new Error(
                    `Can't construct a query for the property "${i}" of "${xn(
                      e
                    )}" since the query selector wasn't defined.`
                  );
                if (s.some(Sg))
                  throw new Error(
                    "Cannot combine @Input decorators with query decorators"
                  );
                r.push(vg(i, t));
              }
            });
          }
        return r;
      }
      function wg(e) {
        const t = e.ngMetadataName;
        return "ContentChild" === t || "ContentChildren" === t;
      }
      function Cg(e) {
        const t = e.ngMetadataName;
        return "ViewChild" === t || "ViewChildren" === t;
      }
      function Sg(e) {
        return "Input" === e.ngMetadataName;
      }
      function Eg(e) {
        return e.split(",").map((e) => e.trim());
      }
      const xg = [
        "ngOnChanges",
        "ngOnInit",
        "ngOnDestroy",
        "ngDoCheck",
        "ngAfterViewInit",
        "ngAfterViewChecked",
        "ngAfterContentInit",
        "ngAfterContentChecked",
      ];
      function Dg(e) {
        const t = Ro();
        if (xg.some((n) => t.hasLifecycleHook(e, n))) return !0;
        const n = t.propMetadata(e);
        for (const r in n) {
          const e = n[r];
          for (let t = 0; t < e.length; t++) {
            const n = e[t],
              r = n.ngMetadataName;
            if (
              Sg(n) ||
              wg(n) ||
              Cg(n) ||
              "Output" === r ||
              "HostBinding" === r ||
              "HostListener" === r
            )
              return !0;
          }
        }
        return !1;
      }
      function Ig(e, t) {
        let n = null,
          r = null;
        Object.defineProperty(e, ee, {
          get: () => {
            if (null === r) {
              const n = Og(e, t),
                i = Q();
              r = i.compileFactory(
                Qm,
                `ng:///${n.name}/\u0275fac.js`,
                Object.assign(Object.assign({}, n), {
                  injectFn: "directiveInject",
                  target: i.R3FactoryTarget.Pipe,
                })
              );
            }
            return r;
          },
          configurable: !1,
        }),
          Object.defineProperty(e, Y, {
            get: () => {
              if (null === n) {
                const r = Og(e, t);
                n = Q().compilePipe(Qm, `ng:///${r.name}/\u0275pipe.js`, r);
              }
              return n;
            },
            configurable: !1,
          });
      }
      function Og(e, t) {
        return {
          type: e,
          typeArgumentCount: 0,
          name: e.name,
          deps: Ao(e),
          pipeName: t.name,
          pure: void 0 === t.pure || t.pure,
        };
      }
      const kg = d(
          "Directive",
          (e = {}) => e,
          void 0,
          void 0,
          (e, t) => Bg(e, t)
        ),
        Rg = d(
          "Component",
          (e = {}) => Object.assign({ changeDetection: Re.Default }, e),
          kg,
          void 0,
          (e, t) => Vg(e, t)
        ),
        Ag = d(
          "Pipe",
          (e) => Object.assign({ pure: !0 }, e),
          void 0,
          void 0,
          (e, t) => zg(e, t)
        ),
        Tg = m("Input", (e) => ({ bindingPropertyName: e })),
        Fg = m("Output", (e) => ({ bindingPropertyName: e })),
        Pg = m("HostBinding", (e) => ({ hostPropertyName: e })),
        jg = m("HostListener", (e, t) => ({ eventName: e, args: t })),
        Ng = dg,
        Mg = fg,
        Lg = Ig,
        Vg = Ng,
        Bg = Mg,
        zg = Lg,
        Ug = d(
          "NgModule",
          (e) => e,
          void 0,
          void 0,
          (e, t) => $g(e, t)
        ),
        Hg = ng,
        $g = Hg,
        qg = new ne("Application Initializer");
      let Gg = (() => {
        class e {
          constructor(e) {
            (this.appInits = e),
              (this.initialized = !1),
              (this.done = !1),
              (this.donePromise = new Promise((e, t) => {
                (this.resolve = e), (this.reject = t);
              }));
          }
          runInitializers() {
            if (this.initialized) return;
            const e = [],
              t = () => {
                (this.done = !0), this.resolve();
              };
            if (this.appInits)
              for (let n = 0; n < this.appInits.length; n++) {
                const t = this.appInits[n]();
                Fl(t) && e.push(t);
              }
            Promise.all(e)
              .then(() => {
                t();
              })
              .catch((e) => {
                this.reject(e);
              }),
              0 === e.length && t(),
              (this.initialized = !0);
          }
        }
        return (
          (e.ɵfac = function (t) {
            return new (t || e)(de(qg, 8));
          }),
          (e.ɵprov = x({ token: e, factory: e.ɵfac })),
          e
        );
      })();
      const Wg = new ne("AppId");
      function Qg() {
        return `${Zg()}${Zg()}${Zg()}`;
      }
      const Kg = { provide: Wg, useFactory: Qg, deps: [] };
      function Zg() {
        return String.fromCharCode(97 + Math.floor(25 * Math.random()));
      }
      const Yg = new ne("Platform Initializer"),
        Xg = new ne("Platform ID"),
        Jg = new ne("appBootstrapListener"),
        e_ = new ne("Application Packages Root URL");
      let t_ = (() => {
        class e {
          log(e) {
            console.log(e);
          }
          warn(e) {
            console.warn(e);
          }
        }
        return (
          (e.ɵfac = function (t) {
            return new (t || e)();
          }),
          (e.ɵprov = x({ token: e, factory: e.ɵfac })),
          e
        );
      })();
      const n_ = new ne("LocaleId"),
        r_ = new ne("DefaultCurrencyCode"),
        i_ = new ne("Translations"),
        s_ = new ne("TranslationsFormat"),
        o_ = (function () {
          var e = { Error: 0, Warning: 1, Ignore: 2 };
          return (
            (e[e.Error] = "Error"),
            (e[e.Warning] = "Warning"),
            (e[e.Ignore] = "Ignore"),
            e
          );
        })(),
        a_ = !0,
        l_ = a_;
      class c_ {
        constructor(e, t) {
          (this.ngModuleFactory = e), (this.componentFactories = t);
        }
      }
      const u_ = function (e) {
          return new Jp(e);
        },
        h_ = u_,
        d_ = function (e) {
          return Promise.resolve(u_(e));
        },
        f_ = d_,
        p_ = function (e) {
          const t = u_(e),
            n = Rn(Ye(e).declarations).reduce((e, t) => {
              const n = We(t);
              return n && e.push(new zf(n)), e;
            }, []);
          return new c_(t, n);
        },
        m_ = p_,
        g_ = function (e) {
          return Promise.resolve(p_(e));
        },
        __ = g_;
      let y_ = (() => {
        class e {
          constructor() {
            (this.compileModuleSync = h_),
              (this.compileModuleAsync = f_),
              (this.compileModuleAndAllComponentsSync = m_),
              (this.compileModuleAndAllComponentsAsync = __);
          }
          clearCache() {}
          clearCacheFor(e) {}
          getModuleId(e) {}
        }
        return (
          (e.ɵfac = function (t) {
            return new (t || e)();
          }),
          (e.ɵprov = x({ token: e, factory: e.ɵfac })),
          e
        );
      })();
      const v_ = new ne("compilerOptions");
      class b_ {}
      const w_ = (() => Promise.resolve(0))();
      function C_(e) {
        "undefined" == typeof Zone
          ? w_.then(() => {
              e && e.apply(null, null);
            })
          : Zone.current.scheduleMicroTask("scheduleMicrotask", e);
      }
      class S_ {
        constructor({
          enableLongStackTrace: e = !1,
          shouldCoalesceEventChangeDetection: t = !1,
        }) {
          if (
            ((this.hasPendingMacrotasks = !1),
            (this.hasPendingMicrotasks = !1),
            (this.isStable = !0),
            (this.onUnstable = new Em(!1)),
            (this.onMicrotaskEmpty = new Em(!1)),
            (this.onStable = new Em(!1)),
            (this.onError = new Em(!1)),
            "undefined" == typeof Zone)
          )
            throw new Error("In this configuration Angular requires Zone.js");
          Zone.assertZonePatched(),
            (this._nesting = 0),
            (this._outer = this._inner = Zone.current),
            Zone.wtfZoneSpec &&
              (this._inner = this._inner.fork(Zone.wtfZoneSpec)),
            Zone.TaskTrackingZoneSpec &&
              (this._inner = this._inner.fork(new Zone.TaskTrackingZoneSpec())),
            e &&
              Zone.longStackTraceZoneSpec &&
              (this._inner = this._inner.fork(Zone.longStackTraceZoneSpec)),
            (this.shouldCoalesceEventChangeDetection = t),
            (this.lastRequestAnimationFrameId = -1),
            (this.nativeRequestAnimationFrame = (function () {
              let e = G.requestAnimationFrame,
                t = G.cancelAnimationFrame;
              if ("undefined" != typeof Zone && e && t) {
                const n = e[Zone.__symbol__("OriginalDelegate")];
                n && (e = n);
                const r = t[Zone.__symbol__("OriginalDelegate")];
                r && (t = r);
              }
              return {
                nativeRequestAnimationFrame: e,
                nativeCancelAnimationFrame: t,
              };
            })().nativeRequestAnimationFrame),
            (function (e) {
              const t =
                !!e.shouldCoalesceEventChangeDetection &&
                e.nativeRequestAnimationFrame &&
                (() => {
                  !(function (e) {
                    -1 === e.lastRequestAnimationFrameId &&
                      ((e.lastRequestAnimationFrameId = e.nativeRequestAnimationFrame.call(
                        G,
                        () => {
                          (e.lastRequestAnimationFrameId = -1), I_(e), D_(e);
                        }
                      )),
                      I_(e));
                  })(e);
                });
              e._inner = e._inner.fork({
                name: "angular",
                properties: { isAngularZone: !0, maybeDelayChangeDetection: t },
                onInvokeTask: (n, r, i, s, o, a) => {
                  try {
                    return O_(e), n.invokeTask(i, s, o, a);
                  } finally {
                    t && "eventTask" === s.type && t(), k_(e);
                  }
                },
                onInvoke: (t, n, r, i, s, o, a) => {
                  try {
                    return O_(e), t.invoke(r, i, s, o, a);
                  } finally {
                    k_(e);
                  }
                },
                onHasTask: (t, n, r, i) => {
                  t.hasTask(r, i),
                    n === r &&
                      ("microTask" == i.change
                        ? ((e._hasPendingMicrotasks = i.microTask),
                          I_(e),
                          D_(e))
                        : "macroTask" == i.change &&
                          (e.hasPendingMacrotasks = i.macroTask));
                },
                onHandleError: (t, n, r, i) => (
                  t.handleError(r, i),
                  e.runOutsideAngular(() => e.onError.emit(i)),
                  !1
                ),
              });
            })(this);
        }
        static isInAngularZone() {
          return !0 === Zone.current.get("isAngularZone");
        }
        static assertInAngularZone() {
          if (!S_.isInAngularZone())
            throw new Error("Expected to be in Angular Zone, but it is not!");
        }
        static assertNotInAngularZone() {
          if (S_.isInAngularZone())
            throw new Error("Expected to not be in Angular Zone, but it is!");
        }
        run(e, t, n) {
          return this._inner.run(e, t, n);
        }
        runTask(e, t, n, r) {
          const i = this._inner,
            s = i.scheduleEventTask("NgZoneEvent: " + r, e, x_, E_, E_);
          try {
            return i.runTask(s, t, n);
          } finally {
            i.cancelTask(s);
          }
        }
        runGuarded(e, t, n) {
          return this._inner.runGuarded(e, t, n);
        }
        runOutsideAngular(e) {
          return this._outer.run(e);
        }
      }
      function E_() {}
      const x_ = {};
      function D_(e) {
        if (0 == e._nesting && !e.hasPendingMicrotasks && !e.isStable)
          try {
            e._nesting++, e.onMicrotaskEmpty.emit(null);
          } finally {
            if ((e._nesting--, !e.hasPendingMicrotasks))
              try {
                e.runOutsideAngular(() => e.onStable.emit(null));
              } finally {
                e.isStable = !0;
              }
          }
      }
      function I_(e) {
        e.hasPendingMicrotasks = !!(
          e._hasPendingMicrotasks ||
          (e.shouldCoalesceEventChangeDetection &&
            -1 !== e.lastRequestAnimationFrameId)
        );
      }
      function O_(e) {
        e._nesting++,
          e.isStable && ((e.isStable = !1), e.onUnstable.emit(null));
      }
      function k_(e) {
        e._nesting--, D_(e);
      }
      class R_ {
        constructor() {
          (this.hasPendingMicrotasks = !1),
            (this.hasPendingMacrotasks = !1),
            (this.isStable = !0),
            (this.onUnstable = new Em()),
            (this.onMicrotaskEmpty = new Em()),
            (this.onStable = new Em()),
            (this.onError = new Em());
        }
        run(e, t, n) {
          return e.apply(t, n);
        }
        runGuarded(e, t, n) {
          return e.apply(t, n);
        }
        runOutsideAngular(e) {
          return e();
        }
        runTask(e, t, n, r) {
          return e.apply(t, n);
        }
      }
      let A_ = (() => {
          class e {
            constructor(e) {
              (this._ngZone = e),
                (this._pendingCount = 0),
                (this._isZoneStable = !0),
                (this._didWork = !1),
                (this._callbacks = []),
                (this.taskTrackingZone = null),
                this._watchAngularEvents(),
                e.run(() => {
                  this.taskTrackingZone =
                    "undefined" == typeof Zone
                      ? null
                      : Zone.current.get("TaskTrackingZone");
                });
            }
            _watchAngularEvents() {
              this._ngZone.onUnstable.subscribe({
                next: () => {
                  (this._didWork = !0), (this._isZoneStable = !1);
                },
              }),
                this._ngZone.runOutsideAngular(() => {
                  this._ngZone.onStable.subscribe({
                    next: () => {
                      S_.assertNotInAngularZone(),
                        C_(() => {
                          (this._isZoneStable = !0),
                            this._runCallbacksIfReady();
                        });
                    },
                  });
                });
            }
            increasePendingRequestCount() {
              return (
                (this._pendingCount += 1),
                (this._didWork = !0),
                this._pendingCount
              );
            }
            decreasePendingRequestCount() {
              if (((this._pendingCount -= 1), this._pendingCount < 0))
                throw new Error("pending async requests below zero");
              return this._runCallbacksIfReady(), this._pendingCount;
            }
            isStable() {
              return (
                this._isZoneStable &&
                0 === this._pendingCount &&
                !this._ngZone.hasPendingMacrotasks
              );
            }
            _runCallbacksIfReady() {
              if (this.isStable())
                C_(() => {
                  for (; 0 !== this._callbacks.length; ) {
                    let e = this._callbacks.pop();
                    clearTimeout(e.timeoutId), e.doneCb(this._didWork);
                  }
                  this._didWork = !1;
                });
              else {
                let e = this.getPendingTasks();
                (this._callbacks = this._callbacks.filter(
                  (t) =>
                    !t.updateCb ||
                    !t.updateCb(e) ||
                    (clearTimeout(t.timeoutId), !1)
                )),
                  (this._didWork = !0);
              }
            }
            getPendingTasks() {
              return this.taskTrackingZone
                ? this.taskTrackingZone.macroTasks.map((e) => ({
                    source: e.source,
                    creationLocation: e.creationLocation,
                    data: e.data,
                  }))
                : [];
            }
            addCallback(e, t, n) {
              let r = -1;
              t &&
                t > 0 &&
                (r = setTimeout(() => {
                  (this._callbacks = this._callbacks.filter(
                    (e) => e.timeoutId !== r
                  )),
                    e(this._didWork, this.getPendingTasks());
                }, t)),
                this._callbacks.push({ doneCb: e, timeoutId: r, updateCb: n });
            }
            whenStable(e, t, n) {
              if (n && !this.taskTrackingZone)
                throw new Error(
                  'Task tracking zone is required when passing an update callback to whenStable(). Is "zone.js/dist/task-tracking.js" loaded?'
                );
              this.addCallback(e, t, n), this._runCallbacksIfReady();
            }
            getPendingRequestCount() {
              return this._pendingCount;
            }
            findProviders(e, t, n) {
              return [];
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(de(S_));
            }),
            (e.ɵprov = x({ token: e, factory: e.ɵfac })),
            e
          );
        })(),
        T_ = (() => {
          class e {
            constructor() {
              (this._applications = new Map()), N_.addToWindow(this);
            }
            registerApplication(e, t) {
              this._applications.set(e, t);
            }
            unregisterApplication(e) {
              this._applications.delete(e);
            }
            unregisterAllApplications() {
              this._applications.clear();
            }
            getTestability(e) {
              return this._applications.get(e) || null;
            }
            getAllTestabilities() {
              return Array.from(this._applications.values());
            }
            getAllRootElements() {
              return Array.from(this._applications.keys());
            }
            findTestabilityInTree(e, t = !0) {
              return N_.findTestabilityInTree(this, e, t);
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)();
            }),
            (e.ɵprov = x({ token: e, factory: e.ɵfac })),
            e
          );
        })();
      class F_ {
        addToWindow(e) {}
        findTestabilityInTree(e, t, n) {
          return null;
        }
      }
      function P_(e) {
        N_ = e;
      }
      let j_,
        N_ = new F_(),
        M_ = L_;
      function L_(e, t, n) {
        const r = e.get(v_, []).concat(t),
          i = new Jp(n);
        if (0 === Ta.size) return Promise.resolve(i);
        const s = (function (e) {
          const t = [];
          return e.forEach((e) => e && t.push(...e)), t;
        })(r.map((e) => e.providers));
        if (0 === s.length) return Promise.resolve(i);
        const o = Q(),
          a = na.create({ providers: s }).get(o.ResourceLoader);
        return Aa((e) => Promise.resolve(a.get(e))).then(() => i);
      }
      let V_ = B_;
      function B_(e) {
        return e.isBoundToModule;
      }
      const z_ = new ne("AllowMultipleToken");
      class U_ {
        constructor(e, t) {
          (this.name = e), (this.token = t);
        }
      }
      function H_(e) {
        if (j_ && !j_.destroyed && !j_.injector.get(z_, !1))
          throw new Error(
            "There can be only one platform. Destroy the previous one to create a new one."
          );
        j_ = e.get(Q_);
        const t = e.get(Yg, null);
        return t && t.forEach((e) => e()), j_;
      }
      function $_(e, t, n = []) {
        const r = "Platform: " + t,
          i = new ne(r);
        return (t = []) => {
          let s = W_();
          if (!s || s.injector.get(z_, !1))
            if (e) e(n.concat(t).concat({ provide: i, useValue: !0 }));
            else {
              const e = n
                .concat(t)
                .concat(
                  { provide: i, useValue: !0 },
                  { provide: Bo, useValue: "platform" }
                );
              H_(na.create({ providers: e, name: r }));
            }
          return q_(i);
        };
      }
      function q_(e) {
        const t = W_();
        if (!t) throw new Error("No platform exists!");
        if (!t.injector.get(e, null))
          throw new Error(
            "A platform with a different configuration has been created. Please destroy it first."
          );
        return t;
      }
      function G_() {
        j_ && !j_.destroyed && j_.destroy();
      }
      function W_() {
        return j_ && !j_.destroyed ? j_ : null;
      }
      let Q_ = (() => {
        class e {
          constructor(e) {
            (this._injector = e),
              (this._modules = []),
              (this._destroyListeners = []),
              (this._destroyed = !1);
          }
          bootstrapModuleFactory(e, t) {
            const n = (function (e, t) {
                let n;
                return (
                  (n =
                    "noop" === e
                      ? new R_()
                      : ("zone.js" === e ? void 0 : e) ||
                        new S_({
                          enableLongStackTrace: yr(),
                          shouldCoalesceEventChangeDetection: t,
                        })),
                  n
                );
              })(t ? t.ngZone : void 0, (t && t.ngZoneEventCoalescing) || !1),
              r = [{ provide: S_, useValue: n }];
            return n.run(() => {
              const t = na.create({
                  providers: r,
                  parent: this.injector,
                  name: e.moduleType.name,
                }),
                i = e.create(t),
                s = i.injector.get(Jn, null);
              if (!s)
                throw new Error(
                  "No ErrorHandler. Is platform module (BrowserModule) included?"
                );
              return (
                i.onDestroy(() => Y_(this._modules, i)),
                n.runOutsideAngular(() =>
                  n.onError.subscribe({
                    next: (e) => {
                      s.handleError(e);
                    },
                  })
                ),
                (function (e, t, n) {
                  try {
                    const r = n();
                    return Fl(r)
                      ? r.catch((n) => {
                          throw (
                            (t.runOutsideAngular(() => e.handleError(n)), n)
                          );
                        })
                      : r;
                  } catch (r) {
                    throw (t.runOutsideAngular(() => e.handleError(r)), r);
                  }
                })(s, n, () => {
                  const e = i.injector.get(Gg);
                  return (
                    e.runInitializers(),
                    e.donePromise.then(
                      () => (
                        l_ && qp(i.injector.get(n_, ep) || ep),
                        this._moduleDoBootstrap(i),
                        i
                      )
                    )
                  );
                })
              );
            });
          }
          bootstrapModule(e, t = []) {
            const n = K_({}, t);
            return M_(this.injector, n, e).then((e) =>
              this.bootstrapModuleFactory(e, n)
            );
          }
          _moduleDoBootstrap(e) {
            const t = e.injector.get(Z_);
            if (e._bootstrapComponents.length > 0)
              e._bootstrapComponents.forEach((e) => t.bootstrap(e));
            else {
              if (!e.instance.ngDoBootstrap)
                throw new Error(
                  `The module ${N(
                    e.instance.constructor
                  )} was bootstrapped, but it does not declare "@NgModule.bootstrap" components nor a "ngDoBootstrap" method. Please define one of these.`
                );
              e.instance.ngDoBootstrap(t);
            }
            this._modules.push(e);
          }
          onDestroy(e) {
            this._destroyListeners.push(e);
          }
          get injector() {
            return this._injector;
          }
          destroy() {
            if (this._destroyed)
              throw new Error("The platform has already been destroyed!");
            this._modules.slice().forEach((e) => e.destroy()),
              this._destroyListeners.forEach((e) => e()),
              (this._destroyed = !0);
          }
          get destroyed() {
            return this._destroyed;
          }
        }
        return (
          (e.ɵfac = function (t) {
            return new (t || e)(de(na));
          }),
          (e.ɵprov = x({ token: e, factory: e.ɵfac })),
          e
        );
      })();
      function K_(e, t) {
        return Array.isArray(t)
          ? t.reduce(K_, e)
          : Object.assign(Object.assign({}, e), t);
      }
      let Z_ = (() => {
        class e {
          constructor(e, t, n, r, i, l) {
            (this._zone = e),
              (this._console = t),
              (this._injector = n),
              (this._exceptionHandler = r),
              (this._componentFactoryResolver = i),
              (this._initStatus = l),
              (this._bootstrapListeners = []),
              (this._views = []),
              (this._runningTick = !1),
              (this._enforceNoNewChanges = !1),
              (this._stable = !0),
              (this.componentTypes = []),
              (this.components = []),
              (this._enforceNoNewChanges = yr()),
              this._zone.onMicrotaskEmpty.subscribe({
                next: () => {
                  this._zone.run(() => {
                    this.tick();
                  });
                },
              });
            const c = new s.a((e) => {
                (this._stable =
                  this._zone.isStable &&
                  !this._zone.hasPendingMacrotasks &&
                  !this._zone.hasPendingMicrotasks),
                  this._zone.runOutsideAngular(() => {
                    e.next(this._stable), e.complete();
                  });
              }),
              u = new s.a((e) => {
                let t;
                this._zone.runOutsideAngular(() => {
                  t = this._zone.onStable.subscribe(() => {
                    S_.assertNotInAngularZone(),
                      C_(() => {
                        this._stable ||
                          this._zone.hasPendingMacrotasks ||
                          this._zone.hasPendingMicrotasks ||
                          ((this._stable = !0), e.next(!0));
                      });
                  });
                });
                const n = this._zone.onUnstable.subscribe(() => {
                  S_.assertInAngularZone(),
                    this._stable &&
                      ((this._stable = !1),
                      this._zone.runOutsideAngular(() => {
                        e.next(!1);
                      }));
                });
                return () => {
                  t.unsubscribe(), n.unsubscribe();
                };
              });
            this.isStable = Object(o.a)(c, u.pipe(Object(a.a)()));
          }
          bootstrap(e, t) {
            if (!this._initStatus.done)
              throw new Error(
                "Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module."
              );
            let n;
            (n =
              e instanceof ah
                ? e
                : this._componentFactoryResolver.resolveComponentFactory(e)),
              this.componentTypes.push(n.componentType);
            const r = V_(n) ? void 0 : this._injector.get(ve),
              i = n.create(na.NULL, [], t || n.selector, r);
            i.onDestroy(() => {
              this._unloadComponent(i);
            });
            const s = i.injector.get(A_, null);
            return (
              s &&
                i.injector
                  .get(T_)
                  .registerApplication(i.location.nativeElement, s),
              this._loadComponent(i),
              yr() &&
                this._console.log(
                  "Angular is running in the development mode. Call enableProdMode() to enable the production mode."
                ),
              i
            );
          }
          tick() {
            if (this._runningTick)
              throw new Error("ApplicationRef.tick is called recursively");
            try {
              this._runningTick = !0;
              for (let e of this._views) e.detectChanges();
              if (this._enforceNoNewChanges)
                for (let e of this._views) e.checkNoChanges();
            } catch (e) {
              this._zone.runOutsideAngular(() =>
                this._exceptionHandler.handleError(e)
              );
            } finally {
              this._runningTick = !1;
            }
          }
          attachView(e) {
            const t = e;
            this._views.push(t), t.attachToAppRef(this);
          }
          detachView(e) {
            const t = e;
            Y_(this._views, t), t.detachFromAppRef();
          }
          _loadComponent(e) {
            this.attachView(e.hostView),
              this.tick(),
              this.components.push(e),
              this._injector
                .get(Jg, [])
                .concat(this._bootstrapListeners)
                .forEach((t) => t(e));
          }
          _unloadComponent(e) {
            this.detachView(e.hostView), Y_(this.components, e);
          }
          ngOnDestroy() {
            this._views.slice().forEach((e) => e.destroy());
          }
          get viewCount() {
            return this._views.length;
          }
        }
        return (
          (e.ɵfac = function (t) {
            return new (t || e)(de(S_), de(t_), de(na), de(Jn), de(hh), de(Gg));
          }),
          (e.ɵprov = x({ token: e, factory: e.ɵfac })),
          e
        );
      })();
      function Y_(e, t) {
        const n = e.indexOf(t);
        n > -1 && e.splice(n, 1);
      }
      class X_ {}
      function J_(e) {
        const t = Yp(e);
        if (!t) throw ny(e);
        return t;
      }
      function ey(e) {
        const t = Yp(e);
        if (!t) throw ny(e);
        return new Jp(t);
      }
      const ty = ey;
      function ny(e) {
        return new Error(`No module with ID ${e} loaded`);
      }
      class ry {}
      const iy = { factoryPathPrefix: "", factoryPathSuffix: ".ngfactory" };
      let sy = (() => {
        class e {
          constructor(e, t) {
            (this._compiler = e), (this._config = t || iy);
          }
          load(e) {
            return !l_ && this._compiler instanceof y_
              ? this.loadFactory(e)
              : this.loadAndCompile(e);
          }
          loadAndCompile(e) {
            let [t, r] = e.split("#");
            return (
              void 0 === r && (r = "default"),
              n("zn8P")(t)
                .then((e) => e[r])
                .then((e) => oy(e, t, r))
                .then((e) => this._compiler.compileModuleAsync(e))
            );
          }
          loadFactory(e) {
            let [t, r] = e.split("#"),
              i = "NgFactory";
            return (
              void 0 === r && ((r = "default"), (i = "")),
              n("zn8P")(
                this._config.factoryPathPrefix +
                  t +
                  this._config.factoryPathSuffix
              )
                .then((e) => e[r + i])
                .then((e) => oy(e, t, r))
            );
          }
        }
        return (
          (e.ɵfac = function (t) {
            return new (t || e)(de(y_), de(ry, 8));
          }),
          (e.ɵprov = x({ token: e, factory: e.ɵfac })),
          e
        );
      })();
      function oy(e, t, n) {
        if (!e) throw new Error(`Cannot find '${n}' in '${t}'`);
        return e;
      }
      class ay extends _o {}
      class ly extends ay {}
      class cy {
        constructor(e, t) {
          (this.name = e), (this.callback = t);
        }
      }
      class uy {
        constructor(e, t, n) {
          (this.listeners = []),
            (this.parent = null),
            (this._debugContext = n),
            (this.nativeNode = e),
            t && t instanceof hy && t.addChild(this);
        }
        get injector() {
          return this._debugContext.injector;
        }
        get componentInstance() {
          return this._debugContext.component;
        }
        get context() {
          return this._debugContext.context;
        }
        get references() {
          return this._debugContext.references;
        }
        get providerTokens() {
          return this._debugContext.providerTokens;
        }
      }
      class hy extends uy {
        constructor(e, t, n) {
          super(e, t, n),
            (this.properties = {}),
            (this.attributes = {}),
            (this.classes = {}),
            (this.styles = {}),
            (this.childNodes = []),
            (this.nativeElement = e);
        }
        addChild(e) {
          e && (this.childNodes.push(e), (e.parent = this));
        }
        removeChild(e) {
          const t = this.childNodes.indexOf(e);
          -1 !== t && ((e.parent = null), this.childNodes.splice(t, 1));
        }
        insertChildrenAfter(e, t) {
          const n = this.childNodes.indexOf(e);
          -1 !== n &&
            (this.childNodes.splice(n + 1, 0, ...t),
            t.forEach((t) => {
              t.parent && t.parent.removeChild(t), (e.parent = this);
            }));
        }
        insertBefore(e, t) {
          const n = this.childNodes.indexOf(e);
          -1 === n
            ? this.addChild(t)
            : (t.parent && t.parent.removeChild(t),
              (t.parent = this),
              this.childNodes.splice(n, 0, t));
        }
        query(e) {
          return this.queryAll(e)[0] || null;
        }
        queryAll(e) {
          const t = [];
          return (
            (function e(t, n, r) {
              t.childNodes.forEach((t) => {
                t instanceof hy && (n(t) && r.push(t), e(t, n, r));
              });
            })(this, e, t),
            t
          );
        }
        queryAllNodes(e) {
          const t = [];
          return (
            (function e(t, n, r) {
              t instanceof hy &&
                t.childNodes.forEach((t) => {
                  n(t) && r.push(t), t instanceof hy && e(t, n, r);
                });
            })(this, e, t),
            t
          );
        }
        get children() {
          return this.childNodes.filter((e) => e instanceof hy);
        }
        triggerEventHandler(e, t) {
          this.listeners.forEach((n) => {
            n.name == e && n.callback(t);
          });
        }
      }
      function dy(e) {
        return e.map((e) => e.nativeElement);
      }
      class fy {
        constructor(e) {
          this.nativeNode = e;
        }
        get parent() {
          const e = this.nativeNode.parentNode;
          return e ? new py(e) : null;
        }
        get injector() {
          return Cu(this.nativeNode);
        }
        get componentInstance() {
          const e = this.nativeNode;
          return e && (yu(e) || bu(e));
        }
        get context() {
          return yu(this.nativeNode) || vu(this.nativeNode);
        }
        get listeners() {
          return Du(this.nativeNode).filter((e) => "dom" === e.type);
        }
        get references() {
          return (function (e) {
            const t = Eu(e, !1);
            return null === t
              ? {}
              : (void 0 === t.localRefs &&
                  (t.localRefs = (function (e, t) {
                    const n = e[1].data[t];
                    if (n && n.localNames) {
                      const t = {};
                      let r = n.index + 1;
                      for (let i = 0; i < n.localNames.length; i += 2)
                        (t[n.localNames[i]] = e[r]), r++;
                      return t;
                    }
                    return null;
                  })(t.lView, t.nodeIndex)),
                t.localRefs || {});
          })(this.nativeNode);
        }
        get providerTokens() {
          return (function (e) {
            const t = Eu(e, !1);
            if (null === t) return [];
            const n = t.lView[1],
              r = n.data[t.nodeIndex],
              i = [],
              s = r.directiveEnd;
            for (let a = 65535 & r.providerIndexes; a < s; a++) {
              let e = n.data[a];
              void 0 !== (o = e).type &&
                void 0 !== o.template &&
                void 0 !== o.declaredInputs &&
                (e = e.type),
                i.push(e);
            }
            var o;
            return i;
          })(this.nativeNode);
        }
      }
      class py extends fy {
        constructor(e) {
          super(e);
        }
        get nativeElement() {
          return this.nativeNode.nodeType == Node.ELEMENT_NODE
            ? this.nativeNode
            : null;
        }
        get name() {
          try {
            const e = Eu(this.nativeNode);
            return e.lView[1].data[e.nodeIndex].tagName;
          } catch (e) {
            return this.nativeNode.nodeName;
          }
        }
        get properties() {
          const e = Eu(this.nativeNode, !1);
          if (null == e) return {};
          const t = e.lView,
            n = t[1].data,
            r = n[e.nodeIndex],
            i = {};
          return (
            (function (e, t) {
              if (e) {
                let n = Object.getPrototypeOf(e);
                const r = Node.prototype;
                for (; null !== n && n !== r; ) {
                  const r = Object.getOwnPropertyDescriptors(n);
                  for (let n in r)
                    if (!n.startsWith("__") && !n.startsWith("on")) {
                      const r = e[n];
                      my(r) && (t[n] = r);
                    }
                  n = Object.getPrototypeOf(n);
                }
              }
            })(this.nativeElement, i),
            (function (e, t, n, r) {
              let i = t.propertyBindings;
              if (null !== i)
                for (let s = 0; s < i.length; s++) {
                  const t = i[s],
                    o = r[t].split("\ufffd"),
                    a = o[0];
                  if (o.length > 1) {
                    let r = o[1];
                    for (let e = 1; e < o.length - 1; e++)
                      r += En(n[t + e - 1]) + o[e + 1];
                    e[a] = r;
                  } else e[a] = n[t];
                }
            })(i, r, t, n),
            i
          );
        }
        get attributes() {
          const e = {},
            t = this.nativeElement;
          if (!t) return e;
          const n = Eu(t, !1);
          if (null == n) return {};
          const r = n.lView[1].data[n.nodeIndex].attrs,
            i = [];
          if (r) {
            let t = 0;
            for (; t < r.length; ) {
              const n = r[t];
              if ("string" != typeof n) break;
              (e[n] = r[t + 1]), i.push(n.toLowerCase()), (t += 2);
            }
          }
          const s = t.attributes;
          for (let o = 0; o < s.length; o++) {
            const t = s[o],
              n = t.name.toLowerCase();
            -1 === i.indexOf(n) && (e[n] = t.value);
          }
          return e;
        }
        get styles() {
          return this.nativeElement && this.nativeElement.style
            ? this.nativeElement.style
            : {};
        }
        get classes() {
          const e = {},
            t = this.nativeElement.className;
          return (
            (t && "string" != typeof t
              ? t.baseVal.split(" ")
              : t.split(" ")
            ).forEach((t) => (e[t] = !0)),
            e
          );
        }
        get childNodes() {
          const e = this.nativeNode.childNodes,
            t = [];
          for (let n = 0; n < e.length; n++) t.push(Cy(e[n]));
          return t;
        }
        get children() {
          const e = this.nativeElement;
          if (!e) return [];
          const t = e.children,
            n = [];
          for (let r = 0; r < t.length; r++) n.push(Cy(t[r]));
          return n;
        }
        query(e) {
          return this.queryAll(e)[0] || null;
        }
        queryAll(e) {
          const t = [];
          return gy(this, e, t, !0), t;
        }
        queryAllNodes(e) {
          const t = [];
          return gy(this, e, t, !1), t;
        }
        triggerEventHandler(e, t) {
          const n = this.nativeNode,
            r = [];
          this.listeners.forEach((i) => {
            if (i.name === e) {
              const e = i.callback;
              e.call(n, t), r.push(e);
            }
          }),
            "function" == typeof n.eventListeners &&
              n.eventListeners(e).forEach((e) => {
                if (-1 !== e.toString().indexOf("__ngUnwrap__")) {
                  const i = e("__ngUnwrap__");
                  return -1 === r.indexOf(i) && i.call(n, t);
                }
              });
        }
      }
      function my(e) {
        return (
          "string" == typeof e ||
          "boolean" == typeof e ||
          "number" == typeof e ||
          null === e
        );
      }
      function gy(e, t, n, r) {
        const i = Eu(e.nativeNode, !1);
        null !== i
          ? _y(i.lView[1].data[i.nodeIndex], i.lView, t, n, r, e.nativeNode)
          : by(e.nativeNode, t, n, r);
      }
      function _y(e, t, n, r, i, s) {
        const o = ft(e, t);
        if (3 === e.type || 4 === e.type) {
          if ((vy(o, n, r, i, s), tt(e))) {
            const o = gt(e.index, t);
            o && o[1].firstChild && _y(o[1].firstChild, o, n, r, i, s);
          } else e.child && _y(e.child, t, n, r, i, s), o && by(o, n, r, i);
          const a = t[e.index];
          Je(a) && yy(a, n, r, i, s);
        } else if (0 === e.type) {
          const o = t[e.index];
          vy(o[7], n, r, i, s), yy(o, n, r, i, s);
        } else if (1 === e.type) {
          const o = t[16],
            a = o[6].projection[e.projection];
          if (Array.isArray(a)) for (let e of a) vy(e, n, r, i, s);
          else if (a) {
            const e = o[3];
            _y(e[1].data[a.index], e, n, r, i, s);
          }
        } else e.child && _y(e.child, t, n, r, i, s);
        if (s !== o) {
          const o = 4 & e.flags ? e.projectionNext : e.next;
          o && _y(o, t, n, r, i, s);
        }
      }
      function yy(e, t, n, r, i) {
        for (let s = 10; s < e.length; s++) {
          const o = e[s];
          _y(o[1].node, o, t, n, r, i);
        }
      }
      function vy(e, t, n, r, i) {
        if (i !== e) {
          const i = Sy(e);
          if (!i) return;
          ((r && i instanceof py && t(i) && -1 === n.indexOf(i)) ||
            (!r && t(i) && -1 === n.indexOf(i))) &&
            n.push(i);
        }
      }
      function by(e, t, n, r) {
        const i = e.childNodes,
          s = i.length;
        for (let o = 0; o < s; o++) {
          const e = i[o],
            s = Sy(e);
          s &&
            (((r && s instanceof py && t(s) && -1 === n.indexOf(s)) ||
              (!r && t(s) && -1 === n.indexOf(s))) &&
              n.push(s),
            by(e, t, n, r));
        }
      }
      const wy = new Map();
      function Cy(e) {
        return e instanceof Node
          ? (e.hasOwnProperty("__ng_debug__") ||
              (e.__ng_debug__ =
                e.nodeType == Node.ELEMENT_NODE ? new py(e) : new fy(e)),
            e.__ng_debug__)
          : null;
      }
      const Sy = Cy;
      function Ey(e) {
        return (function (e) {
          return wy.get(e) || null;
        })(e);
      }
      const xy = function (e) {
        return null;
      };
      function Dy(e) {
        wy.set(e.nativeNode, e);
      }
      const Iy = fy,
        Oy = py,
        ky = $_(null, "core", [
          { provide: Xg, useValue: "unknown" },
          { provide: Q_, deps: [na] },
          { provide: T_, deps: [] },
          { provide: t_, deps: [] },
        ]);
      function Ry() {
        return Lh;
      }
      function Ay() {
        return Vh;
      }
      function Ty(e) {
        return (
          (e =
            e ||
            (l_ && "undefined" != typeof $localize && $localize.locale) ||
            ep),
          l_ && qp(e),
          e
        );
      }
      const Fy = tp,
        Py = [
          { provide: Z_, useClass: Z_, deps: [S_, t_, na, Jn, hh, Gg] },
          { provide: Bf, deps: [S_], useFactory: jy },
          { provide: Gg, useClass: Gg, deps: [[new _(), qg]] },
          { provide: y_, useClass: y_, deps: [] },
          Kg,
          { provide: jh, useFactory: Ry, deps: [] },
          { provide: Nh, useFactory: Ay, deps: [] },
          {
            provide: n_,
            useFactory: Ty,
            deps: [[new g(n_), new _(), new v()]],
          },
          { provide: r_, useValue: Fy },
        ];
      function jy(e) {
        let t = [];
        return (
          e.onStable.subscribe(() => {
            for (; t.length; ) t.pop()();
          }),
          function (e) {
            t.push(e);
          }
        );
      }
      let Ny = (() => {
        class e {
          constructor(e) {}
        }
        return (
          (e.ɵmod = Ue({ type: e })),
          (e.ɵinj = I({
            factory: function (t) {
              return new (t || e)(de(Z_));
            },
            providers: Py,
          })),
          e
        );
      })();
      function My(e, t, n, r, i, s) {
        e |= 1;
        const { matchedQueries: o, references: a, matchedQueryIds: l } = Cd(t);
        return {
          nodeIndex: -1,
          parent: null,
          renderParent: null,
          bindingIndex: -1,
          outputIndex: -1,
          flags: e,
          checkIndex: -1,
          childFlags: 0,
          directChildFlags: 0,
          childMatchedQueries: 0,
          matchedQueries: o,
          matchedQueryIds: l,
          references: a,
          ngContentIndex: n,
          childCount: r,
          bindings: [],
          bindingFlags: 0,
          outputs: [],
          element: {
            ns: null,
            name: null,
            attrs: null,
            template: s ? Dd(s) : null,
            componentProvider: null,
            componentView: null,
            componentRendererType: null,
            publicProviders: null,
            allProviders: null,
            handleEvent: i || id,
          },
          provider: null,
          text: null,
          query: null,
          ngContent: null,
        };
      }
      function Ly(e, t, n, r, i, s, o = [], a, l, c, u, h) {
        c || (c = id);
        const { matchedQueries: d, references: f, matchedQueryIds: p } = Cd(n);
        let m = null,
          g = null;
        s && ([m, g] = Fd(s)), (a = a || []);
        const _ = [];
        for (let b = 0; b < a.length; b++) {
          const [e, t, n] = a[b],
            [r, i] = Fd(t);
          let s = void 0,
            o = void 0;
          switch (15 & e) {
            case 4:
              o = n;
              break;
            case 1:
            case 8:
              s = n;
          }
          _[b] = {
            flags: e,
            ns: r,
            name: i,
            nonMinifiedName: i,
            securityContext: s,
            suffix: o,
          };
        }
        l = l || [];
        const y = [];
        for (let b = 0; b < l.length; b++) {
          const [e, t] = l[b];
          y[b] = { type: 0, target: e, eventName: t, propName: null };
        }
        const v = (o = o || []).map(([e, t]) => {
          const [n, r] = Fd(e);
          return [n, r, t];
        });
        return (
          (h = (function (e) {
            if (e && "$$undefined" === e.id) {
              const t =
                (null != e.encapsulation && e.encapsulation !== Fe.None) ||
                e.styles.length ||
                Object.keys(e.data).length;
              e.id = t ? "c" + cd++ : "$$empty";
            }
            return e && "$$empty" === e.id && (e = null), e || null;
          })(h)),
          u && (t |= 33554432),
          {
            nodeIndex: -1,
            parent: null,
            renderParent: null,
            bindingIndex: -1,
            outputIndex: -1,
            checkIndex: e,
            flags: (t |= 1),
            childFlags: 0,
            directChildFlags: 0,
            childMatchedQueries: 0,
            matchedQueries: d,
            matchedQueryIds: p,
            references: f,
            ngContentIndex: r,
            childCount: i,
            bindings: _,
            bindingFlags: Pd(_),
            outputs: y,
            element: {
              ns: m,
              name: g,
              attrs: v,
              template: null,
              componentProvider: null,
              componentView: u || null,
              componentRendererType: h,
              publicProviders: null,
              allProviders: null,
              handleEvent: c || id,
            },
            provider: null,
            text: null,
            query: null,
            ngContent: null,
          }
        );
      }
      function Vy(e, t, n) {
        const r = n.element,
          i = e.root.selectorOrNode,
          s = e.renderer;
        let o;
        if (e.parent || !i) {
          o = r.name ? s.createElement(r.name, r.ns) : s.createComment("");
          const i = Ed(e, t, n);
          i && s.appendChild(i, o);
        } else
          o = s.selectRootElement(
            i,
            !!r.componentRendererType &&
              r.componentRendererType.encapsulation === Fe.ShadowDom
          );
        if (r.attrs)
          for (let a = 0; a < r.attrs.length; a++) {
            const [e, t, n] = r.attrs[a];
            s.setAttribute(o, t, n, e);
          }
        return o;
      }
      function By(e, t, n, r) {
        for (let o = 0; o < n.outputs.length; o++) {
          const a = n.outputs[o],
            l = zy(
              e,
              n.nodeIndex,
              ((s = a.eventName), (i = a.target) ? `${i}:${s}` : s)
            );
          let c = a.target,
            u = e;
          "component" === a.target && ((c = null), (u = t));
          const h = u.renderer.listen(c || r, a.eventName, l);
          e.disposables[n.outputIndex + o] = h;
        }
        var i, s;
      }
      function zy(e, t, n) {
        return (r) => md(e, t, n, r);
      }
      function Uy(e, t, n, r) {
        if (!hd(e, t, n, r)) return !1;
        const i = t.bindings[n],
          s = Xh(e, t.nodeIndex),
          o = s.renderElement,
          a = i.name;
        switch (15 & i.flags) {
          case 1:
            !(function (e, t, n, r, i, s) {
              const o = t.securityContext;
              let a = o ? e.root.sanitizer.sanitize(o, s) : s;
              a = null != a ? a.toString() : null;
              const l = e.renderer;
              null != s
                ? l.setAttribute(n, i, a, r)
                : l.removeAttribute(n, i, r);
            })(e, i, o, i.ns, a, r);
            break;
          case 2:
            !(function (e, t, n, r) {
              const i = e.renderer;
              r ? i.addClass(t, n) : i.removeClass(t, n);
            })(e, o, a, r);
            break;
          case 4:
            !(function (e, t, n, r, i) {
              let s = e.root.sanitizer.sanitize(Hr.STYLE, i);
              if (null != s) {
                s = s.toString();
                const e = t.suffix;
                null != e && (s += e);
              } else s = null;
              const o = e.renderer;
              null != s ? o.setStyle(n, r, s) : o.removeStyle(n, r);
            })(e, i, o, a, r);
            break;
          case 8:
            !(function (e, t, n, r, i) {
              const s = t.securityContext;
              let o = s ? e.root.sanitizer.sanitize(s, i) : i;
              e.renderer.setProperty(n, r, o);
            })(
              33554432 & t.flags && 32 & i.flags ? s.componentView : e,
              i,
              o,
              a,
              r
            );
        }
        return !0;
      }
      function Hy(e, t, n) {
        let r = [];
        for (let i in n) r.push({ propName: i, bindingType: n[i] });
        return {
          nodeIndex: -1,
          parent: null,
          renderParent: null,
          bindingIndex: -1,
          outputIndex: -1,
          checkIndex: -1,
          flags: e,
          childFlags: 0,
          directChildFlags: 0,
          childMatchedQueries: 0,
          ngContentIndex: -1,
          matchedQueries: {},
          matchedQueryIds: 0,
          references: {},
          childCount: 0,
          bindings: [],
          bindingFlags: 0,
          outputs: [],
          element: null,
          provider: null,
          text: null,
          query: { id: t, filterId: wd(t), bindings: r },
          ngContent: null,
        };
      }
      function $y(e) {
        const t = e.def.nodeMatchedQueries;
        for (; e.parent && bd(e); ) {
          let n = e.parentNodeDef;
          e = e.parent;
          const r = n.nodeIndex + n.childCount;
          for (let i = 0; i <= r; i++) {
            const r = e.def.nodes[i];
            67108864 & r.flags &&
              536870912 & r.flags &&
              (r.query.filterId & t) === r.query.filterId &&
              td(e, i).setDirty(),
              (!(1 & r.flags && i + r.childCount < n.nodeIndex) &&
                67108864 & r.childFlags &&
                536870912 & r.childFlags) ||
                (i += r.childCount);
          }
        }
        if (134217728 & e.def.nodeFlags)
          for (let n = 0; n < e.def.nodes.length; n++) {
            const t = e.def.nodes[n];
            134217728 & t.flags && 536870912 & t.flags && td(e, n).setDirty(),
              (n += t.childCount);
          }
      }
      function qy(e, t) {
        const n = td(e, t.nodeIndex);
        if (!n.dirty) return;
        let r,
          i = void 0;
        if (67108864 & t.flags) {
          const n = t.parent.parent;
          (i = Gy(e, n.nodeIndex, n.nodeIndex + n.childCount, t.query, [])),
            (r = Jh(e, t.parent.nodeIndex).instance);
        } else
          134217728 & t.flags &&
            ((i = Gy(e, 0, e.def.nodes.length - 1, t.query, [])),
            (r = e.component));
        n.reset(i);
        const s = t.query.bindings;
        let o = !1;
        for (let a = 0; a < s.length; a++) {
          const e = s[a];
          let t;
          switch (e.bindingType) {
            case 0:
              t = n.first;
              break;
            case 1:
              (t = n), (o = !0);
          }
          r[e.propName] = t;
        }
        o && n.notifyOnChanges();
      }
      function Gy(e, t, n, r, i) {
        for (let s = t; s <= n; s++) {
          const t = e.def.nodes[s],
            n = t.matchedQueries[r.id];
          if (
            (null != n && i.push(Wy(e, t, n)),
            1 & t.flags &&
              t.element.template &&
              (t.element.template.nodeMatchedQueries & r.filterId) ===
                r.filterId)
          ) {
            const n = Xh(e, s);
            if (
              ((t.childMatchedQueries & r.filterId) === r.filterId &&
                (Gy(e, s + 1, s + t.childCount, r, i), (s += t.childCount)),
              16777216 & t.flags)
            ) {
              const e = n.viewContainer._embeddedViews;
              for (let t = 0; t < e.length; t++) {
                const s = e[t],
                  o = gd(s);
                o && o === n && Gy(s, 0, s.def.nodes.length - 1, r, i);
              }
            }
            const o = n.template._projectedViews;
            if (o)
              for (let e = 0; e < o.length; e++) {
                const t = o[e];
                Gy(t, 0, t.def.nodes.length - 1, r, i);
              }
          }
          (t.childMatchedQueries & r.filterId) !== r.filterId &&
            (s += t.childCount);
        }
        return i;
      }
      function Wy(e, t, n) {
        if (null != n)
          switch (n) {
            case 1:
              return Xh(e, t.nodeIndex).renderElement;
            case 0:
              return new ph(Xh(e, t.nodeIndex).renderElement);
            case 2:
              return Xh(e, t.nodeIndex).template;
            case 3:
              return Xh(e, t.nodeIndex).viewContainer;
            case 4:
              return Jh(e, t.nodeIndex).instance;
          }
      }
      function Qy(e, t) {
        return {
          nodeIndex: -1,
          parent: null,
          renderParent: null,
          bindingIndex: -1,
          outputIndex: -1,
          checkIndex: -1,
          flags: 8,
          childFlags: 0,
          directChildFlags: 0,
          childMatchedQueries: 0,
          matchedQueries: {},
          matchedQueryIds: 0,
          references: {},
          ngContentIndex: e,
          childCount: 0,
          bindings: [],
          bindingFlags: 0,
          outputs: [],
          element: null,
          provider: null,
          text: null,
          query: null,
          ngContent: { index: t },
        };
      }
      function Ky(e, t, n) {
        const r = Ed(e, t, n);
        r && kd(e, n.ngContent.index, 1, r, null, void 0);
      }
      function Zy(e, t) {
        return Jy(128, e, De(t + 1));
      }
      function Yy(e, t) {
        return Jy(32, e, De(t));
      }
      function Xy(e, t) {
        const n = Object.keys(t),
          r = n.length,
          i = [];
        for (let s = 0; s < r; s++) i.push(n[s]);
        return Jy(64, e, i);
      }
      function Jy(e, t, n) {
        const r = [];
        for (let i = 0; i < n.length; i++) {
          const e = n[i];
          r.push({
            flags: 8,
            name: e,
            ns: null,
            nonMinifiedName: e,
            securityContext: null,
            suffix: null,
          });
        }
        return {
          nodeIndex: -1,
          parent: null,
          renderParent: null,
          bindingIndex: -1,
          outputIndex: -1,
          checkIndex: t,
          flags: e,
          childFlags: 0,
          directChildFlags: 0,
          childMatchedQueries: 0,
          matchedQueries: {},
          matchedQueryIds: 0,
          references: {},
          ngContentIndex: -1,
          childCount: 0,
          bindings: r,
          bindingFlags: Pd(r),
          outputs: [],
          element: null,
          provider: null,
          text: null,
          query: null,
          ngContent: null,
        };
      }
      function ev(e, t, n) {
        const r = [];
        for (let i = 1; i < n.length; i++)
          r[i - 1] = {
            flags: 8,
            name: null,
            ns: null,
            nonMinifiedName: null,
            securityContext: null,
            suffix: n[i],
          };
        return {
          nodeIndex: -1,
          parent: null,
          renderParent: null,
          bindingIndex: -1,
          outputIndex: -1,
          checkIndex: e,
          flags: 2,
          childFlags: 0,
          directChildFlags: 0,
          childMatchedQueries: 0,
          matchedQueries: {},
          matchedQueryIds: 0,
          references: {},
          ngContentIndex: t,
          childCount: 0,
          bindings: r,
          bindingFlags: 8,
          outputs: [],
          element: null,
          provider: null,
          text: { prefix: n[0] },
          query: null,
          ngContent: null,
        };
      }
      function tv(e, t, n) {
        let r;
        const i = e.renderer;
        r = i.createText(n.text.prefix);
        const s = Ed(e, t, n);
        return s && i.appendChild(s, r), { renderText: r };
      }
      function nv(e, t) {
        return (null != e ? e.toString() : "") + t.suffix;
      }
      function rv(e, t, n, r) {
        let i = 0,
          s = 0,
          o = 0,
          a = 0,
          l = 0,
          c = null,
          u = null,
          h = !1,
          d = !1,
          f = null;
        for (let p = 0; p < t.length; p++) {
          const e = t[p];
          if (
            ((e.nodeIndex = p),
            (e.parent = c),
            (e.bindingIndex = i),
            (e.outputIndex = s),
            (e.renderParent = u),
            (o |= e.flags),
            (l |= e.matchedQueryIds),
            e.element)
          ) {
            const t = e.element;
            (t.publicProviders = c
              ? c.element.publicProviders
              : Object.create(null)),
              (t.allProviders = t.publicProviders),
              (h = !1),
              (d = !1),
              e.element.template &&
                (l |= e.element.template.nodeMatchedQueries);
          }
          if (
            (sv(c, e, t.length),
            (i += e.bindings.length),
            (s += e.outputs.length),
            !u && 3 & e.flags && (f = e),
            20224 & e.flags)
          ) {
            h ||
              ((h = !0),
              (c.element.publicProviders = Object.create(
                c.element.publicProviders
              )),
              (c.element.allProviders = c.element.publicProviders));
            const t = 0 != (32768 & e.flags);
            0 == (8192 & e.flags) || t
              ? (c.element.publicProviders[od(e.provider.token)] = e)
              : (d ||
                  ((d = !0),
                  (c.element.allProviders = Object.create(
                    c.element.publicProviders
                  ))),
                (c.element.allProviders[od(e.provider.token)] = e)),
              t && (c.element.componentProvider = e);
          }
          if (
            (c
              ? ((c.childFlags |= e.flags),
                (c.directChildFlags |= e.flags),
                (c.childMatchedQueries |= e.matchedQueryIds),
                e.element &&
                  e.element.template &&
                  (c.childMatchedQueries |=
                    e.element.template.nodeMatchedQueries))
              : (a |= e.flags),
            e.childCount > 0)
          )
            (c = e), iv(e) || (u = e);
          else
            for (; c && p === c.nodeIndex + c.childCount; ) {
              const e = c.parent;
              e &&
                ((e.childFlags |= c.childFlags),
                (e.childMatchedQueries |= c.childMatchedQueries)),
                (c = e),
                (u = c && iv(c) ? c.renderParent : c);
            }
        }
        return {
          factory: null,
          nodeFlags: o,
          rootNodeFlags: a,
          nodeMatchedQueries: l,
          flags: e,
          nodes: t,
          updateDirectives: n || id,
          updateRenderer: r || id,
          handleEvent: (e, n, r, i) => t[n].element.handleEvent(e, r, i),
          bindingCount: i,
          outputCount: s,
          lastRenderRootNode: f,
        };
      }
      function iv(e) {
        return 0 != (1 & e.flags) && null === e.element.name;
      }
      function sv(e, t, n) {
        const r = t.element && t.element.template;
        if (r) {
          if (!r.lastRenderRootNode)
            throw new Error(
              "Illegal State: Embedded templates without nodes are not allowed!"
            );
          if (r.lastRenderRootNode && 16777216 & r.lastRenderRootNode.flags)
            throw new Error(
              `Illegal State: Last root node of a template can't have embedded views, at index ${t.nodeIndex}!`
            );
        }
        if (20224 & t.flags && 0 == (1 & (e ? e.flags : 0)))
          throw new Error(
            `Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index ${t.nodeIndex}!`
          );
        if (t.query) {
          if (67108864 & t.flags && (!e || 0 == (16384 & e.flags)))
            throw new Error(
              `Illegal State: Content Query nodes need to be children of directives, at index ${t.nodeIndex}!`
            );
          if (134217728 & t.flags && e)
            throw new Error(
              `Illegal State: View Query nodes have to be top level nodes, at index ${t.nodeIndex}!`
            );
        }
        if (t.childCount) {
          const r = e ? e.nodeIndex + e.childCount : n - 1;
          if (t.nodeIndex <= r && t.nodeIndex + t.childCount > r)
            throw new Error(
              `Illegal State: childCount of node leads outside of parent, at index ${t.nodeIndex}!`
            );
        }
      }
      function ov(e, t, n, r) {
        const i = cv(e.root, e.renderer, e, t, n);
        return uv(i, e.component, r), hv(i), i;
      }
      function av(e, t, n) {
        const r = cv(e, e.renderer, null, null, t);
        return uv(r, n, n), hv(r), r;
      }
      function lv(e, t, n, r) {
        const i = t.element.componentRendererType;
        let s;
        return (
          (s = i
            ? e.root.rendererFactory.createRenderer(r, i)
            : e.root.renderer),
          cv(e.root, s, e, t.element.componentProvider, n)
        );
      }
      function cv(e, t, n, r, i) {
        const s = new Array(i.nodes.length),
          o = i.outputCount ? new Array(i.outputCount) : null;
        return {
          def: i,
          parent: n,
          viewContainerParent: null,
          parentNodeDef: r,
          context: null,
          component: null,
          nodes: s,
          state: 13,
          root: e,
          renderer: t,
          oldValues: new Array(i.bindingCount),
          disposables: o,
          initIndex: -1,
        };
      }
      function uv(e, t, n) {
        (e.component = t), (e.context = n);
      }
      function hv(e) {
        let t;
        vd(e) &&
          (t = Xh(e.parent, e.parentNodeDef.parent.nodeIndex).renderElement);
        const n = e.def,
          r = e.nodes;
        for (let i = 0; i < n.nodes.length; i++) {
          const s = n.nodes[i];
          let o;
          switch ((rd.setCurrentNode(e, i), 201347067 & s.flags)) {
            case 1:
              const n = Vy(e, t, s);
              let a = void 0;
              if (33554432 & s.flags) {
                const t = Dd(s.element.componentView);
                a = rd.createComponentView(e, s, t, n);
              }
              By(e, a, s, n),
                (o = {
                  renderElement: n,
                  componentView: a,
                  viewContainer: null,
                  template: s.element.template ? af(e, s) : void 0,
                }),
                16777216 & s.flags && (o.viewContainer = nf(e, s, o));
              break;
            case 2:
              o = tv(e, t, s);
              break;
            case 512:
            case 1024:
            case 2048:
            case 256:
              (o = r[i]), o || 4096 & s.flags || (o = { instance: xf(e, s) });
              break;
            case 16:
              o = { instance: Df(e, s) };
              break;
            case 16384:
              (o = r[i]),
                o || (o = { instance: If(e, s) }),
                32768 & s.flags &&
                  uv(
                    Xh(e, s.parent.nodeIndex).componentView,
                    o.instance,
                    o.instance
                  );
              break;
            case 32:
            case 64:
            case 128:
              o = { value: void 0 };
              break;
            case 67108864:
            case 134217728:
              o = new Dm();
              break;
            case 8:
              Ky(e, t, s), (o = void 0);
          }
          r[i] = o;
        }
        bv(e, vv.CreateViewNodes), Ev(e, 201326592, 268435456, 0);
      }
      function dv(e) {
        mv(e),
          rd.updateDirectives(e, 1),
          wv(e, vv.CheckNoChanges),
          rd.updateRenderer(e, 1),
          bv(e, vv.CheckNoChanges),
          (e.state &= -97);
      }
      function fv(e) {
        1 & e.state ? ((e.state &= -2), (e.state |= 2)) : (e.state &= -3),
          Kh(e, 0, 256),
          mv(e),
          rd.updateDirectives(e, 0),
          wv(e, vv.CheckAndUpdate),
          Ev(e, 67108864, 536870912, 0);
        let t = Kh(e, 256, 512);
        jf(e, 2097152 | (t ? 1048576 : 0)),
          rd.updateRenderer(e, 0),
          bv(e, vv.CheckAndUpdate),
          Ev(e, 134217728, 536870912, 0),
          (t = Kh(e, 512, 768)),
          jf(e, 8388608 | (t ? 4194304 : 0)),
          2 & e.def.flags && (e.state &= -9),
          (e.state &= -97),
          Kh(e, 768, 1024);
      }
      function pv(e, t, n, r, i, s, o, a, l, c, u, h, d) {
        return 0 === n
          ? (function (e, t, n, r, i, s, o, a, l, c, u, h) {
              switch (201347067 & t.flags) {
                case 1:
                  return (function (e, t, n, r, i, s, o, a, l, c, u, h) {
                    const d = t.bindings.length;
                    let f = !1;
                    return (
                      d > 0 && Uy(e, t, 0, n) && (f = !0),
                      d > 1 && Uy(e, t, 1, r) && (f = !0),
                      d > 2 && Uy(e, t, 2, i) && (f = !0),
                      d > 3 && Uy(e, t, 3, s) && (f = !0),
                      d > 4 && Uy(e, t, 4, o) && (f = !0),
                      d > 5 && Uy(e, t, 5, a) && (f = !0),
                      d > 6 && Uy(e, t, 6, l) && (f = !0),
                      d > 7 && Uy(e, t, 7, c) && (f = !0),
                      d > 8 && Uy(e, t, 8, u) && (f = !0),
                      d > 9 && Uy(e, t, 9, h) && (f = !0),
                      f
                    );
                  })(e, t, n, r, i, s, o, a, l, c, u, h);
                case 2:
                  return (function (e, t, n, r, i, s, o, a, l, c, u, h) {
                    let d = !1;
                    const f = t.bindings,
                      p = f.length;
                    if (
                      (p > 0 && hd(e, t, 0, n) && (d = !0),
                      p > 1 && hd(e, t, 1, r) && (d = !0),
                      p > 2 && hd(e, t, 2, i) && (d = !0),
                      p > 3 && hd(e, t, 3, s) && (d = !0),
                      p > 4 && hd(e, t, 4, o) && (d = !0),
                      p > 5 && hd(e, t, 5, a) && (d = !0),
                      p > 6 && hd(e, t, 6, l) && (d = !0),
                      p > 7 && hd(e, t, 7, c) && (d = !0),
                      p > 8 && hd(e, t, 8, u) && (d = !0),
                      p > 9 && hd(e, t, 9, h) && (d = !0),
                      d)
                    ) {
                      let d = t.text.prefix;
                      p > 0 && (d += nv(n, f[0])),
                        p > 1 && (d += nv(r, f[1])),
                        p > 2 && (d += nv(i, f[2])),
                        p > 3 && (d += nv(s, f[3])),
                        p > 4 && (d += nv(o, f[4])),
                        p > 5 && (d += nv(a, f[5])),
                        p > 6 && (d += nv(l, f[6])),
                        p > 7 && (d += nv(c, f[7])),
                        p > 8 && (d += nv(u, f[8])),
                        p > 9 && (d += nv(h, f[9]));
                      const m = Yh(e, t.nodeIndex).renderText;
                      e.renderer.setValue(m, d);
                    }
                    return d;
                  })(e, t, n, r, i, s, o, a, l, c, u, h);
                case 16384:
                  return (function (e, t, n, r, i, s, o, a, l, c, u, h) {
                    const d = Jh(e, t.nodeIndex),
                      f = d.instance;
                    let p = !1,
                      m = void 0;
                    const g = t.bindings.length;
                    return (
                      g > 0 &&
                        ud(e, t, 0, n) &&
                        ((p = !0), (m = Pf(e, d, t, 0, n, m))),
                      g > 1 &&
                        ud(e, t, 1, r) &&
                        ((p = !0), (m = Pf(e, d, t, 1, r, m))),
                      g > 2 &&
                        ud(e, t, 2, i) &&
                        ((p = !0), (m = Pf(e, d, t, 2, i, m))),
                      g > 3 &&
                        ud(e, t, 3, s) &&
                        ((p = !0), (m = Pf(e, d, t, 3, s, m))),
                      g > 4 &&
                        ud(e, t, 4, o) &&
                        ((p = !0), (m = Pf(e, d, t, 4, o, m))),
                      g > 5 &&
                        ud(e, t, 5, a) &&
                        ((p = !0), (m = Pf(e, d, t, 5, a, m))),
                      g > 6 &&
                        ud(e, t, 6, l) &&
                        ((p = !0), (m = Pf(e, d, t, 6, l, m))),
                      g > 7 &&
                        ud(e, t, 7, c) &&
                        ((p = !0), (m = Pf(e, d, t, 7, c, m))),
                      g > 8 &&
                        ud(e, t, 8, u) &&
                        ((p = !0), (m = Pf(e, d, t, 8, u, m))),
                      g > 9 &&
                        ud(e, t, 9, h) &&
                        ((p = !0), (m = Pf(e, d, t, 9, h, m))),
                      m && f.ngOnChanges(m),
                      65536 & t.flags &&
                        Zh(e, 256, t.nodeIndex) &&
                        f.ngOnInit(),
                      262144 & t.flags && f.ngDoCheck(),
                      p
                    );
                  })(e, t, n, r, i, s, o, a, l, c, u, h);
                case 32:
                case 64:
                case 128:
                  return (function (e, t, n, r, i, s, o, a, l, c, u, h) {
                    const d = t.bindings;
                    let f = !1;
                    const p = d.length;
                    if (
                      (p > 0 && hd(e, t, 0, n) && (f = !0),
                      p > 1 && hd(e, t, 1, r) && (f = !0),
                      p > 2 && hd(e, t, 2, i) && (f = !0),
                      p > 3 && hd(e, t, 3, s) && (f = !0),
                      p > 4 && hd(e, t, 4, o) && (f = !0),
                      p > 5 && hd(e, t, 5, a) && (f = !0),
                      p > 6 && hd(e, t, 6, l) && (f = !0),
                      p > 7 && hd(e, t, 7, c) && (f = !0),
                      p > 8 && hd(e, t, 8, u) && (f = !0),
                      p > 9 && hd(e, t, 9, h) && (f = !0),
                      f)
                    ) {
                      const f = ed(e, t.nodeIndex);
                      let m;
                      switch (201347067 & t.flags) {
                        case 32:
                          (m = []),
                            p > 0 && m.push(n),
                            p > 1 && m.push(r),
                            p > 2 && m.push(i),
                            p > 3 && m.push(s),
                            p > 4 && m.push(o),
                            p > 5 && m.push(a),
                            p > 6 && m.push(l),
                            p > 7 && m.push(c),
                            p > 8 && m.push(u),
                            p > 9 && m.push(h);
                          break;
                        case 64:
                          (m = {}),
                            p > 0 && (m[d[0].name] = n),
                            p > 1 && (m[d[1].name] = r),
                            p > 2 && (m[d[2].name] = i),
                            p > 3 && (m[d[3].name] = s),
                            p > 4 && (m[d[4].name] = o),
                            p > 5 && (m[d[5].name] = a),
                            p > 6 && (m[d[6].name] = l),
                            p > 7 && (m[d[7].name] = c),
                            p > 8 && (m[d[8].name] = u),
                            p > 9 && (m[d[9].name] = h);
                          break;
                        case 128:
                          const e = n;
                          switch (p) {
                            case 1:
                              m = e.transform(n);
                              break;
                            case 2:
                              m = e.transform(r);
                              break;
                            case 3:
                              m = e.transform(r, i);
                              break;
                            case 4:
                              m = e.transform(r, i, s);
                              break;
                            case 5:
                              m = e.transform(r, i, s, o);
                              break;
                            case 6:
                              m = e.transform(r, i, s, o, a);
                              break;
                            case 7:
                              m = e.transform(r, i, s, o, a, l);
                              break;
                            case 8:
                              m = e.transform(r, i, s, o, a, l, c);
                              break;
                            case 9:
                              m = e.transform(r, i, s, o, a, l, c, u);
                              break;
                            case 10:
                              m = e.transform(r, i, s, o, a, l, c, u, h);
                          }
                      }
                      f.value = m;
                    }
                    return f;
                  })(e, t, n, r, i, s, o, a, l, c, u, h);
                default:
                  throw "unreachable";
              }
            })(e, t, r, i, s, o, a, l, c, u, h, d)
          : (function (e, t, n) {
              switch (201347067 & t.flags) {
                case 1:
                  return (function (e, t, n) {
                    let r = !1;
                    for (let i = 0; i < n.length; i++)
                      Uy(e, t, i, n[i]) && (r = !0);
                    return r;
                  })(e, t, n);
                case 2:
                  return (function (e, t, n) {
                    const r = t.bindings;
                    let i = !1;
                    for (let s = 0; s < n.length; s++)
                      hd(e, t, s, n[s]) && (i = !0);
                    if (i) {
                      let i = "";
                      for (let e = 0; e < n.length; e++) i += nv(n[e], r[e]);
                      i = t.text.prefix + i;
                      const s = Yh(e, t.nodeIndex).renderText;
                      e.renderer.setValue(s, i);
                    }
                    return i;
                  })(e, t, n);
                case 16384:
                  return (function (e, t, n) {
                    const r = Jh(e, t.nodeIndex),
                      i = r.instance;
                    let s = !1,
                      o = void 0;
                    for (let a = 0; a < n.length; a++)
                      ud(e, t, a, n[a]) &&
                        ((s = !0), (o = Pf(e, r, t, a, n[a], o)));
                    return (
                      o && i.ngOnChanges(o),
                      65536 & t.flags &&
                        Zh(e, 256, t.nodeIndex) &&
                        i.ngOnInit(),
                      262144 & t.flags && i.ngDoCheck(),
                      s
                    );
                  })(e, t, n);
                case 32:
                case 64:
                case 128:
                  return (function (e, t, n) {
                    const r = t.bindings;
                    let i = !1;
                    for (let s = 0; s < n.length; s++)
                      hd(e, t, s, n[s]) && (i = !0);
                    if (i) {
                      const i = ed(e, t.nodeIndex);
                      let s;
                      switch (201347067 & t.flags) {
                        case 32:
                          s = n;
                          break;
                        case 64:
                          s = {};
                          for (let i = 0; i < n.length; i++)
                            s[r[i].name] = n[i];
                          break;
                        case 128:
                          const e = n[0],
                            t = n.slice(1);
                          s = e.transform(...t);
                      }
                      i.value = s;
                    }
                    return i;
                  })(e, t, n);
                default:
                  throw "unreachable";
              }
            })(e, t, r);
      }
      function mv(e) {
        const t = e.def;
        if (4 & t.nodeFlags)
          for (let n = 0; n < t.nodes.length; n++) {
            const r = t.nodes[n];
            if (4 & r.flags) {
              const t = Xh(e, n).template._projectedViews;
              if (t)
                for (let n = 0; n < t.length; n++) {
                  const r = t[n];
                  (r.state |= 32), pd(r, e);
                }
            } else 0 == (4 & r.childFlags) && (n += r.childCount);
          }
      }
      function gv(e, t, n, r, i, s, o, a, l, c, u, h, d) {
        return (
          0 === n
            ? (function (e, t, n, r, i, s, o, a, l, c, u, h) {
                const d = t.bindings.length;
                d > 0 && dd(e, t, 0, n),
                  d > 1 && dd(e, t, 1, r),
                  d > 2 && dd(e, t, 2, i),
                  d > 3 && dd(e, t, 3, s),
                  d > 4 && dd(e, t, 4, o),
                  d > 5 && dd(e, t, 5, a),
                  d > 6 && dd(e, t, 6, l),
                  d > 7 && dd(e, t, 7, c),
                  d > 8 && dd(e, t, 8, u),
                  d > 9 && dd(e, t, 9, h);
              })(e, t, r, i, s, o, a, l, c, u, h, d)
            : (function (e, t, n) {
                for (let r = 0; r < n.length; r++) dd(e, t, r, n[r]);
              })(e, t, r),
          !1
        );
      }
      function _v(e, t) {
        if (td(e, t.nodeIndex).dirty)
          throw Gh(
            rd.createDebugContext(e, t.nodeIndex),
            `Query ${t.query.id} not dirty`,
            `Query ${t.query.id} dirty`,
            0 != (1 & e.state)
          );
      }
      function yv(e) {
        if (!(128 & e.state)) {
          if (
            (wv(e, vv.Destroy), bv(e, vv.Destroy), jf(e, 131072), e.disposables)
          )
            for (let t = 0; t < e.disposables.length; t++) e.disposables[t]();
          !(function (e) {
            if (!(16 & e.state)) return;
            const t = gd(e);
            if (t) {
              const n = t.template._projectedViews;
              n && (xe(n, n.indexOf(e)), rd.dirtyParentQueries(e));
            }
          })(e),
            e.renderer.destroyNode &&
              (function (e) {
                const t = e.def.nodes.length;
                for (let n = 0; n < t; n++) {
                  const t = e.def.nodes[n];
                  1 & t.flags
                    ? e.renderer.destroyNode(Xh(e, n).renderElement)
                    : 2 & t.flags
                    ? e.renderer.destroyNode(Yh(e, n).renderText)
                    : (67108864 & t.flags || 134217728 & t.flags) &&
                      td(e, n).destroy();
                }
              })(e),
            vd(e) && e.renderer.destroy(),
            (e.state |= 128);
        }
      }
      const vv = (function () {
        var e = {
          CreateViewNodes: 0,
          CheckNoChanges: 1,
          CheckNoChangesProjectedViews: 2,
          CheckAndUpdate: 3,
          CheckAndUpdateProjectedViews: 4,
          Destroy: 5,
        };
        return (
          (e[e.CreateViewNodes] = "CreateViewNodes"),
          (e[e.CheckNoChanges] = "CheckNoChanges"),
          (e[e.CheckNoChangesProjectedViews] = "CheckNoChangesProjectedViews"),
          (e[e.CheckAndUpdate] = "CheckAndUpdate"),
          (e[e.CheckAndUpdateProjectedViews] = "CheckAndUpdateProjectedViews"),
          (e[e.Destroy] = "Destroy"),
          e
        );
      })();
      function bv(e, t) {
        const n = e.def;
        if (33554432 & n.nodeFlags)
          for (let r = 0; r < n.nodes.length; r++) {
            const i = n.nodes[r];
            33554432 & i.flags
              ? Cv(Xh(e, r).componentView, t)
              : 0 == (33554432 & i.childFlags) && (r += i.childCount);
          }
      }
      function wv(e, t) {
        const n = e.def;
        if (16777216 & n.nodeFlags)
          for (let r = 0; r < n.nodes.length; r++) {
            const i = n.nodes[r];
            if (16777216 & i.flags) {
              const n = Xh(e, r).viewContainer._embeddedViews;
              for (let e = 0; e < n.length; e++) Cv(n[e], t);
            } else 0 == (16777216 & i.childFlags) && (r += i.childCount);
          }
      }
      function Cv(e, t) {
        const n = e.state;
        switch (t) {
          case vv.CheckNoChanges:
            0 == (128 & n) &&
              (12 == (12 & n)
                ? dv(e)
                : 64 & n && Sv(e, vv.CheckNoChangesProjectedViews));
            break;
          case vv.CheckNoChangesProjectedViews:
            0 == (128 & n) && (32 & n ? dv(e) : 64 & n && Sv(e, t));
            break;
          case vv.CheckAndUpdate:
            0 == (128 & n) &&
              (12 == (12 & n)
                ? fv(e)
                : 64 & n && Sv(e, vv.CheckAndUpdateProjectedViews));
            break;
          case vv.CheckAndUpdateProjectedViews:
            0 == (128 & n) && (32 & n ? fv(e) : 64 & n && Sv(e, t));
            break;
          case vv.Destroy:
            yv(e);
            break;
          case vv.CreateViewNodes:
            hv(e);
        }
      }
      function Sv(e, t) {
        wv(e, t), bv(e, t);
      }
      function Ev(e, t, n, r) {
        if (!(e.def.nodeFlags & t && e.def.nodeFlags & n)) return;
        const i = e.def.nodes.length;
        for (let s = 0; s < i; s++) {
          const i = e.def.nodes[s];
          if (i.flags & t && i.flags & n)
            switch ((rd.setCurrentNode(e, i.nodeIndex), r)) {
              case 0:
                qy(e, i);
                break;
              case 1:
                _v(e, i);
            }
          (i.childFlags & t && i.childFlags & n) || (s += i.childCount);
        }
      }
      let xv = !1;
      function Dv() {
        if (xv) return;
        xv = !0;
        const e = yr()
          ? {
              setCurrentNode: Kv,
              createRootView: Ov,
              createEmbeddedView: Rv,
              createComponentView: Av,
              createNgModuleRef: Tv,
              overrideProvider: Nv,
              overrideComponentView: Mv,
              clearOverrides: Lv,
              checkAndUpdateView: Uv,
              checkNoChangesView: Hv,
              destroyView: $v,
              createDebugContext: (e, t) => new rb(e, t),
              handleEvent: Zv,
              updateDirectives: Yv,
              updateRenderer: Xv,
            }
          : {
              setCurrentNode: () => {},
              createRootView: Iv,
              createEmbeddedView: ov,
              createComponentView: lv,
              createNgModuleRef: df,
              overrideProvider: id,
              overrideComponentView: id,
              clearOverrides: id,
              checkAndUpdateView: fv,
              checkNoChangesView: dv,
              destroyView: yv,
              createDebugContext: (e, t) => new rb(e, t),
              handleEvent: (e, t, n, r) => e.def.handleEvent(e, t, n, r),
              updateDirectives: (e, t) =>
                e.def.updateDirectives(0 === t ? Bv : zv, e),
              updateRenderer: (e, t) =>
                e.def.updateRenderer(0 === t ? Bv : zv, e),
            };
        (rd.setCurrentNode = e.setCurrentNode),
          (rd.createRootView = e.createRootView),
          (rd.createEmbeddedView = e.createEmbeddedView),
          (rd.createComponentView = e.createComponentView),
          (rd.createNgModuleRef = e.createNgModuleRef),
          (rd.overrideProvider = e.overrideProvider),
          (rd.overrideComponentView = e.overrideComponentView),
          (rd.clearOverrides = e.clearOverrides),
          (rd.checkAndUpdateView = e.checkAndUpdateView),
          (rd.checkNoChangesView = e.checkNoChangesView),
          (rd.destroyView = e.destroyView),
          (rd.resolveDep = Tf),
          (rd.createDebugContext = e.createDebugContext),
          (rd.handleEvent = e.handleEvent),
          (rd.updateDirectives = e.updateDirectives),
          (rd.updateRenderer = e.updateRenderer),
          (rd.dirtyParentQueries = $y);
      }
      function Iv(e, t, n, r, i, s) {
        const o = i.injector.get(_h);
        return av(kv(e, i, o, t, n), r, s);
      }
      function Ov(e, t, n, r, i, s) {
        const o = i.injector.get(_h),
          a = kv(e, i, new ab(o), t, n),
          l = Vv(r);
        return sb(qv.create, av, null, [a, l, s]);
      }
      function kv(e, t, n, r, i) {
        const s = t.injector.get(Ch),
          o = t.injector.get(Jn),
          a = n.createRenderer(null, null);
        return {
          ngModule: t,
          injector: e,
          projectableNodes: r,
          selectorOrNode: i,
          sanitizer: s,
          rendererFactory: n,
          renderer: a,
          errorHandler: o,
        };
      }
      function Rv(e, t, n, r) {
        const i = Vv(n);
        return sb(qv.create, ov, null, [e, t, i, r]);
      }
      function Av(e, t, n, r) {
        return (
          (n = jv.get(t.element.componentProvider.provider.token) || Vv(n)),
          sb(qv.create, lv, null, [e, t, n, r])
        );
      }
      function Tv(e, t, n, r) {
        return df(
          e,
          t,
          n,
          (function (e) {
            const { hasOverrides: t, hasDeprecatedOverrides: n } = (function (
              e
            ) {
              let t = !1,
                n = !1;
              return (
                0 === Fv.size ||
                  (e.providers.forEach((e) => {
                    const r = Fv.get(e.token);
                    3840 & e.flags &&
                      r &&
                      ((t = !0), (n = n || r.deprecatedBehavior));
                  }),
                  e.modules.forEach((e) => {
                    Pv.forEach((r, i) => {
                      O(i).providedIn === e &&
                        ((t = !0), (n = n || r.deprecatedBehavior));
                    });
                  })),
                { hasOverrides: t, hasDeprecatedOverrides: n }
              );
            })(e);
            return t
              ? ((function (e) {
                  for (let t = 0; t < e.providers.length; t++) {
                    const r = e.providers[t];
                    n && (r.flags |= 4096);
                    const i = Fv.get(r.token);
                    i &&
                      ((r.flags = (-3841 & r.flags) | i.flags),
                      (r.deps = Sd(i.deps)),
                      (r.value = i.value));
                  }
                  if (Pv.size > 0) {
                    let t = new Set(e.modules);
                    Pv.forEach((r, i) => {
                      if (t.has(O(i).providedIn)) {
                        let t = {
                          token: i,
                          flags: r.flags | (n ? 4096 : 0),
                          deps: Sd(r.deps),
                          value: r.value,
                          index: e.providers.length,
                        };
                        e.providers.push(t), (e.providersByKey[od(i)] = t);
                      }
                    });
                  }
                })((e = e.factory(() => id))),
                e)
              : e;
          })(r)
        );
      }
      const Fv = new Map(),
        Pv = new Map(),
        jv = new Map();
      function Nv(e) {
        let t;
        Fv.set(e.token, e),
          "function" == typeof e.token &&
            (t = O(e.token)) &&
            "function" == typeof t.providedIn &&
            Pv.set(e.token, e);
      }
      function Mv(e, t) {
        const n = Dd(Jd(t)),
          r = Dd(n.nodes[0].element.componentView);
        jv.set(e, r);
      }
      function Lv() {
        Fv.clear(), Pv.clear(), jv.clear();
      }
      function Vv(e) {
        if (0 === Fv.size) return e;
        const t = (function (e) {
          const t = [];
          let n = null;
          for (let r = 0; r < e.nodes.length; r++) {
            const i = e.nodes[r];
            1 & i.flags && (n = i),
              n &&
                3840 & i.flags &&
                Fv.has(i.provider.token) &&
                (t.push(n.nodeIndex), (n = null));
          }
          return t;
        })(e);
        if (0 === t.length) return e;
        e = e.factory(() => id);
        for (let r = 0; r < t.length; r++) n(e, t[r]);
        return e;
        function n(e, t) {
          for (let n = t + 1; n < e.nodes.length; n++) {
            const t = e.nodes[n];
            if (1 & t.flags) return;
            if (3840 & t.flags) {
              const e = t.provider,
                n = Fv.get(e.token);
              n &&
                ((t.flags = (-3841 & t.flags) | n.flags),
                (e.deps = Sd(n.deps)),
                (e.value = n.value));
            }
          }
        }
      }
      function Bv(e, t, n, r, i, s, o, a, l, c, u, h, d) {
        const f = e.def.nodes[t];
        return (
          pv(e, f, n, r, i, s, o, a, l, c, u, h, d),
          224 & f.flags ? ed(e, t).value : void 0
        );
      }
      function zv(e, t, n, r, i, s, o, a, l, c, u, h, d) {
        const f = e.def.nodes[t];
        return (
          gv(e, f, n, r, i, s, o, a, l, c, u, h, d),
          224 & f.flags ? ed(e, t).value : void 0
        );
      }
      function Uv(e) {
        return sb(qv.detectChanges, fv, null, [e]);
      }
      function Hv(e) {
        return sb(qv.checkNoChanges, dv, null, [e]);
      }
      function $v(e) {
        return sb(qv.destroy, yv, null, [e]);
      }
      const qv = (function () {
        var e = {
          create: 0,
          detectChanges: 1,
          checkNoChanges: 2,
          destroy: 3,
          handleEvent: 4,
        };
        return (
          (e[e.create] = "create"),
          (e[e.detectChanges] = "detectChanges"),
          (e[e.checkNoChanges] = "checkNoChanges"),
          (e[e.destroy] = "destroy"),
          (e[e.handleEvent] = "handleEvent"),
          e
        );
      })();
      let Gv, Wv, Qv;
      function Kv(e, t) {
        (Wv = e), (Qv = t);
      }
      function Zv(e, t, n, r) {
        return (
          Kv(e, t), sb(qv.handleEvent, e.def.handleEvent, null, [e, t, n, r])
        );
      }
      function Yv(e, t) {
        if (128 & e.state) throw Qh(qv[Gv]);
        return (
          Kv(e, tb(e, 0)),
          e.def.updateDirectives(function (e, n, r, ...i) {
            const s = e.def.nodes[n];
            return (
              0 === t ? Jv(e, s, r, i) : eb(e, s, r, i),
              16384 & s.flags && Kv(e, tb(e, n)),
              224 & s.flags ? ed(e, s.nodeIndex).value : void 0
            );
          }, e)
        );
      }
      function Xv(e, t) {
        if (128 & e.state) throw Qh(qv[Gv]);
        return (
          Kv(e, nb(e, 0)),
          e.def.updateRenderer(function (e, n, r, ...i) {
            const s = e.def.nodes[n];
            return (
              0 === t ? Jv(e, s, r, i) : eb(e, s, r, i),
              3 & s.flags && Kv(e, nb(e, n)),
              224 & s.flags ? ed(e, s.nodeIndex).value : void 0
            );
          }, e)
        );
      }
      function Jv(e, t, n, r) {
        if (pv(e, t, n, ...r)) {
          const s = 1 === n ? r[0] : r;
          if (16384 & t.flags) {
            const n = {};
            for (let e = 0; e < t.bindings.length; e++) {
              const r = t.bindings[e],
                o = s[e];
              8 & r.flags &&
                (n[
                  ((i = r.nonMinifiedName),
                  "ng-reflect-" +
                    i
                      .replace(/[$@]/g, "_")
                      .replace(ri, (...e) => "-" + e[1].toLowerCase()))
                ] = ii(o));
            }
            const r = t.parent,
              o = Xh(e, r.nodeIndex).renderElement;
            if (r.element.name)
              for (let t in n) {
                const r = n[t];
                null != r
                  ? e.renderer.setAttribute(o, t, r)
                  : e.renderer.removeAttribute(o, t);
              }
            else
              e.renderer.setValue(o, "bindings=" + JSON.stringify(n, null, 2));
          }
        }
        var i;
      }
      function eb(e, t, n, r) {
        gv(e, t, n, ...r);
      }
      function tb(e, t) {
        for (let n = t; n < e.def.nodes.length; n++) {
          const t = e.def.nodes[n];
          if (16384 & t.flags && t.bindings && t.bindings.length) return n;
        }
        return null;
      }
      function nb(e, t) {
        for (let n = t; n < e.def.nodes.length; n++) {
          const t = e.def.nodes[n];
          if (3 & t.flags && t.bindings && t.bindings.length) return n;
        }
        return null;
      }
      class rb {
        constructor(e, t) {
          (this.view = e),
            (this.nodeIndex = t),
            null == t && (this.nodeIndex = t = 0),
            (this.nodeDef = e.def.nodes[t]);
          let n = this.nodeDef,
            r = e;
          for (; n && 0 == (1 & n.flags); ) n = n.parent;
          if (!n) for (; !n && r; ) (n = _d(r)), (r = r.parent);
          (this.elDef = n), (this.elView = r);
        }
        get elOrCompView() {
          return (
            Xh(this.elView, this.elDef.nodeIndex).componentView || this.view
          );
        }
        get injector() {
          return cf(this.elView, this.elDef);
        }
        get component() {
          return this.elOrCompView.component;
        }
        get context() {
          return this.elOrCompView.context;
        }
        get providerTokens() {
          const e = [];
          if (this.elDef)
            for (
              let t = this.elDef.nodeIndex + 1;
              t <= this.elDef.nodeIndex + this.elDef.childCount;
              t++
            ) {
              const n = this.elView.def.nodes[t];
              20224 & n.flags && e.push(n.provider.token), (t += n.childCount);
            }
          return e;
        }
        get references() {
          const e = {};
          if (this.elDef) {
            ib(this.elView, this.elDef, e);
            for (
              let t = this.elDef.nodeIndex + 1;
              t <= this.elDef.nodeIndex + this.elDef.childCount;
              t++
            ) {
              const n = this.elView.def.nodes[t];
              20224 & n.flags && ib(this.elView, n, e), (t += n.childCount);
            }
          }
          return e;
        }
        get componentRenderElement() {
          const e = (function (e) {
            for (; e && !vd(e); ) e = e.parent;
            return e.parent ? Xh(e.parent, _d(e).nodeIndex) : null;
          })(this.elOrCompView);
          return e ? e.renderElement : void 0;
        }
        get renderNode() {
          return 2 & this.nodeDef.flags
            ? yd(this.view, this.nodeDef)
            : yd(this.elView, this.elDef);
        }
        logError(e, ...t) {
          let n, r;
          2 & this.nodeDef.flags
            ? ((n = this.view.def), (r = this.nodeDef.nodeIndex))
            : ((n = this.elView.def), (r = this.elDef.nodeIndex));
          const i = (function (e, t) {
            let n = -1;
            for (let r = 0; r <= t; r++) 3 & e.nodes[r].flags && n++;
            return n;
          })(n, r);
          let s = -1;
          n.factory(() => (s++, s === i ? e.error.bind(e, ...t) : id)),
            s < i &&
              (e.error(
                "Illegal state: the ViewDefinitionFactory did not call the logger!"
              ),
              e.error(...t));
        }
      }
      function ib(e, t, n) {
        for (let r in t.references) n[r] = Wy(e, t, t.references[r]);
      }
      function sb(e, t, n, r) {
        const i = Gv,
          s = Wv,
          o = Qv;
        try {
          Gv = e;
          const a = t.apply(n, r);
          return (Wv = s), (Qv = o), (Gv = i), a;
        } catch (a) {
          if (Zn(a) || !Wv) throw a;
          throw (function (e, t) {
            return (
              e instanceof Error || (e = new Error(e.toString())), Wh(e, t), e
            );
          })(a, ob());
        }
      }
      function ob() {
        return Wv ? new rb(Wv, Qv) : null;
      }
      class ab {
        constructor(e) {
          this.delegate = e;
        }
        createRenderer(e, t) {
          return new lb(this.delegate.createRenderer(e, t));
        }
        begin() {
          this.delegate.begin && this.delegate.begin();
        }
        end() {
          this.delegate.end && this.delegate.end();
        }
        whenRenderingDone() {
          return this.delegate.whenRenderingDone
            ? this.delegate.whenRenderingDone()
            : Promise.resolve(null);
        }
      }
      class lb {
        constructor(e) {
          (this.delegate = e),
            (this.debugContextFactory = ob),
            (this.data = this.delegate.data);
        }
        createDebugContext(e) {
          return this.debugContextFactory(e);
        }
        destroyNode(e) {
          const t = Sy(e);
          !(function (e) {
            wy.delete(e.nativeNode);
          })(t),
            t instanceof uy && (t.listeners.length = 0),
            this.delegate.destroyNode && this.delegate.destroyNode(e);
        }
        destroy() {
          this.delegate.destroy();
        }
        createElement(e, t) {
          const n = this.delegate.createElement(e, t),
            r = this.createDebugContext(n);
          if (r) {
            const t = new hy(n, null, r);
            (t.name = e), Dy(t);
          }
          return n;
        }
        createComment(e) {
          const t = this.delegate.createComment(e),
            n = this.createDebugContext(t);
          return n && Dy(new uy(t, null, n)), t;
        }
        createText(e) {
          const t = this.delegate.createText(e),
            n = this.createDebugContext(t);
          return n && Dy(new uy(t, null, n)), t;
        }
        appendChild(e, t) {
          const n = Sy(e),
            r = Sy(t);
          n && r && n instanceof hy && n.addChild(r),
            this.delegate.appendChild(e, t);
        }
        insertBefore(e, t, n) {
          const r = Sy(e),
            i = Sy(t),
            s = Sy(n);
          r && i && r instanceof hy && r.insertBefore(s, i),
            this.delegate.insertBefore(e, t, n);
        }
        removeChild(e, t) {
          const n = Sy(e),
            r = Sy(t);
          n && r && n instanceof hy && n.removeChild(r),
            this.delegate.removeChild(e, t);
        }
        selectRootElement(e, t) {
          const n = this.delegate.selectRootElement(e, t),
            r = ob();
          return r && Dy(new hy(n, null, r)), n;
        }
        setAttribute(e, t, n, r) {
          const i = Sy(e);
          i && i instanceof hy && (i.attributes[r ? r + ":" + t : t] = n),
            this.delegate.setAttribute(e, t, n, r);
        }
        removeAttribute(e, t, n) {
          const r = Sy(e);
          r && r instanceof hy && (r.attributes[n ? n + ":" + t : t] = null),
            this.delegate.removeAttribute(e, t, n);
        }
        addClass(e, t) {
          const n = Sy(e);
          n && n instanceof hy && (n.classes[t] = !0),
            this.delegate.addClass(e, t);
        }
        removeClass(e, t) {
          const n = Sy(e);
          n && n instanceof hy && (n.classes[t] = !1),
            this.delegate.removeClass(e, t);
        }
        setStyle(e, t, n, r) {
          const i = Sy(e);
          i && i instanceof hy && (i.styles[t] = n),
            this.delegate.setStyle(e, t, n, r);
        }
        removeStyle(e, t, n) {
          const r = Sy(e);
          r && r instanceof hy && (r.styles[t] = null),
            this.delegate.removeStyle(e, t, n);
        }
        setProperty(e, t, n) {
          const r = Sy(e);
          r && r instanceof hy && (r.properties[t] = n),
            this.delegate.setProperty(e, t, n);
        }
        listen(e, t, n) {
          if ("string" != typeof e) {
            const r = Sy(e);
            r && r.listeners.push(new cy(t, n));
          }
          return this.delegate.listen(e, t, n);
        }
        parentNode(e) {
          return this.delegate.parentNode(e);
        }
        nextSibling(e) {
          return this.delegate.nextSibling(e);
        }
        setValue(e, t) {
          return this.delegate.setValue(e, t);
        }
      }
      function cb(e) {
        return Dv(), rd.overrideProvider(e);
      }
      function ub(e, t) {
        return Dv(), rd.overrideComponentView(e, t);
      }
      function hb() {
        return Dv(), rd.clearOverrides();
      }
      function db(e, t, n) {
        return new fb(e, t, n);
      }
      class fb extends be {
        constructor(e, t, n) {
          super(),
            (this.moduleType = e),
            (this._bootstrapComponents = t),
            (this._ngModuleDefFactory = n);
        }
        create(e) {
          Dv();
          const t = (function (e) {
            const t = Array.from(e.providers),
              n = Array.from(e.modules),
              r = {};
            for (const i in e.providersByKey) r[i] = e.providersByKey[i];
            return {
              factory: e.factory,
              scope: e.scope,
              providers: t,
              modules: n,
              providersByKey: r,
            };
          })(Dd(this._ngModuleDefFactory));
          return rd.createNgModuleRef(
            this.moduleType,
            e || na.NULL,
            this._bootstrapComponents,
            t
          );
        }
      }
    },
    gRHU: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return s;
      });
      var r = n("2fFW"),
        i = n("NJ4a");
      const s = {
        closed: !0,
        next(e) {},
        error(e) {
          if (r.a.useDeprecatedSynchronousErrorHandling) throw e;
          Object(i.a)(e);
        },
        complete() {},
      };
    },
    hI8m: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }), n("fXoL");
      var r = n("ofXK"),
        i = (n("mJn+"), n("bnWe")),
        s = n("fXoL"),
        o =
          (n("mJn+"),
          n("ofXK"),
          (function () {
            function e() {}
            return (
              (e.forRoot = function () {
                return { ngModule: e, providers: [i.FlashMessagesService] };
              }),
              (e.ɵmod = s.ɵɵdefineNgModule({ type: e })),
              (e.ɵinj = s.ɵɵdefineInjector({
                factory: function (t) {
                  return new (t || e)();
                },
                providers: [],
                imports: [[r.CommonModule]],
              })),
              e
            );
          })());
      t.FlashMessagesModule = o;
    },
    jZKg: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return s;
      });
      var r = n("HDdC"),
        i = n("quSY");
      function s(e, t) {
        return new r.a((n) => {
          const r = new i.a();
          let s = 0;
          return (
            r.add(
              t.schedule(function () {
                s !== e.length
                  ? (n.next(e[s++]), n.closed || r.add(this.schedule()))
                  : n.complete();
              })
            ),
            r
          );
        });
      }
    },
    kJWO: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return r;
      });
      const r = (() =>
        ("function" == typeof Symbol && Symbol.observable) || "@@observable")();
    },
    l7GE: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return i;
      });
      var r = n("7o/Q");
      class i extends r.a {
        notifyNext(e, t, n, r, i) {
          this.destination.next(t);
        }
        notifyError(e, t) {
          this.destination.error(e);
        }
        notifyComplete(e) {
          this.destination.complete();
        }
      }
    },
    lJxs: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return i;
      });
      var r = n("7o/Q");
      function i(e, t) {
        return function (n) {
          if ("function" != typeof e)
            throw new TypeError(
              "argument is not a function. Are you looking for `mapTo()`?"
            );
          return n.lift(new s(e, t));
        };
      }
      class s {
        constructor(e, t) {
          (this.project = e), (this.thisArg = t);
        }
        call(e, t) {
          return t.subscribe(new o(e, this.project, this.thisArg));
        }
      }
      class o extends r.a {
        constructor(e, t, n) {
          super(e),
            (this.project = t),
            (this.count = 0),
            (this.thisArg = n || this);
        }
        _next(e) {
          let t;
          try {
            t = this.project.call(this.thisArg, e, this.count++);
          } catch (n) {
            return void this.destination.error(n);
          }
          this.destination.next(t);
        }
      }
    },
    mCNh: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return i;
      }),
        n.d(t, "b", function () {
          return s;
        });
      var r = n("SpAZ");
      function i(...e) {
        return s(e);
      }
      function s(e) {
        return 0 === e.length
          ? r.a
          : 1 === e.length
          ? e[0]
          : function (t) {
              return e.reduce((e, t) => t(e), t);
            };
      }
    },
    "mJn+": function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 });
      var r = n("fXoL"),
        i = n("nRU1"),
        s = n("bnWe"),
        o = n("fXoL"),
        a = n("ofXK");
      function l(e, t) {
        1 & e && o.ɵɵelement(0, "div", 3);
      }
      function c(e, t) {
        if (1 & e) {
          var n = o.ɵɵgetCurrentView();
          o.ɵɵelementStart(0, "button", 7),
            o.ɵɵlistener("click", function () {
              o.ɵɵrestoreView(n);
              var e = o.ɵɵnextContext().$implicit;
              return o.ɵɵnextContext().close(e);
            }),
            o.ɵɵelementStart(1, "span", 8),
            o.ɵɵtext(2, "\xd7"),
            o.ɵɵelementEnd(),
            o.ɵɵelementEnd();
        }
      }
      var u = function (e) {
        return { "alert-dismissible": e };
      };
      function h(e, t) {
        if (1 & e) {
          var n = o.ɵɵgetCurrentView();
          o.ɵɵelementStart(0, "div", 4),
            o.ɵɵlistener("click", function () {
              o.ɵɵrestoreView(n);
              var e = t.$implicit;
              return o.ɵɵnextContext().alertClicked(e);
            }),
            o.ɵɵtemplate(1, c, 3, 0, "button", 5),
            o.ɵɵelement(2, "div", 6),
            o.ɵɵelementEnd();
        }
        if (2 & e) {
          var r = t.$implicit;
          o.ɵɵclassMapInterpolate1("alert flash-message ", r.cssClass, ""),
            o.ɵɵstyleProp("cursor", r.closeOnClick ? "pointer" : "inherit"),
            o.ɵɵproperty("ngClass", o.ɵɵpureFunction1(8, u, r.showCloseBtn)),
            o.ɵɵadvance(1),
            o.ɵɵproperty("ngIf", r.showCloseBtn),
            o.ɵɵadvance(1),
            o.ɵɵproperty("innerHTML", r.text, o.ɵɵsanitizeHtml);
        }
      }
      var d = (function () {
        function e(e, t) {
          (this._flashMessagesService = e),
            (this._cdRef = t),
            (this._defaults = {
              text: "default message",
              closeOnClick: !1,
              showCloseBtn: !1,
              cssClass: "",
            }),
            (this.messages = []),
            (this.classes = ""),
            (this._grayOut = !1),
            (this._flashMessagesService.show = this.show.bind(this)),
            (this._flashMessagesService.grayOut = this.grayOut.bind(this));
        }
        return (
          (e.prototype.ngOnInit = function () {}),
          (e.prototype.show = function (e, t) {
            var n = this;
            void 0 === t && (t = {});
            var r = {
              timeout: 2500,
              closeOnClick: !1,
              showCloseBtn: !1,
              cssClass: "",
              text: "default message",
            };
            for (var s in t) r[s] = t[s];
            var o = new i.FlashMessage(
              e,
              r.cssClass,
              r.closeOnClick,
              r.showCloseBtn
            );
            (o.timer = window.setTimeout(function () {
              n._remove(o), n._cdRef.detectChanges();
            }, r.timeout)),
              this.messages.push(o),
              this._cdRef.detectChanges();
          }),
          (e.prototype.close = function (e) {
            clearTimeout(e.timer), this._remove(e), this._cdRef.detectChanges();
          }),
          (e.prototype.alertClicked = function (e) {
            e.closeOnClick && this.close(e);
          }),
          (e.prototype.grayOut = function (e) {
            void 0 === e && (e = !1), (this._grayOut = e);
          }),
          (e.prototype._remove = function (e) {
            this.messages = this.messages.filter(function (t) {
              return t.id !== e.id;
            });
          }),
          (e.ctorParameters = function () {
            return [
              { type: s.FlashMessagesService },
              { type: r.ChangeDetectorRef },
            ];
          }),
          (e.ɵfac = function (t) {
            return new (t || e)(
              o.ɵɵdirectiveInject(s.FlashMessagesService),
              o.ɵɵdirectiveInject(o.ChangeDetectorRef)
            );
          }),
          (e.ɵcmp = o.ɵɵdefineComponent({
            type: e,
            selectors: [["flash-messages"]],
            decls: 3,
            vars: 2,
            consts: [
              ["id", "flashMessages", 1, "flash-messages"],
              ["id", "grayOutDiv", 4, "ngIf"],
              [3, "class", "ngClass", "cursor", "click", 4, "ngFor", "ngForOf"],
              ["id", "grayOutDiv"],
              [3, "ngClass", "click"],
              [
                "type",
                "button",
                "class",
                "close",
                "data-dismiss",
                "alert",
                "aria-label",
                "Close",
                3,
                "click",
                4,
                "ngIf",
              ],
              [3, "innerHTML"],
              [
                "type",
                "button",
                "data-dismiss",
                "alert",
                "aria-label",
                "Close",
                1,
                "close",
                3,
                "click",
              ],
              ["aria-hidden", "true"],
            ],
            template: function (e, t) {
              1 & e &&
                (o.ɵɵelementStart(0, "div", 0),
                o.ɵɵtemplate(1, l, 1, 0, "div", 1),
                o.ɵɵtemplate(2, h, 3, 10, "div", 2),
                o.ɵɵelementEnd()),
                2 & e &&
                  (o.ɵɵadvance(1),
                  o.ɵɵproperty("ngIf", t._grayOut && t.messages.length),
                  o.ɵɵadvance(1),
                  o.ɵɵproperty("ngForOf", t.messages));
            },
            directives: [a.NgIf, a.NgForOf, a.NgClass],
            encapsulation: 2,
          })),
          e
        );
      })();
      t.FlashMessagesComponent = d;
    },
    n6bG: function (e, t, n) {
      "use strict";
      function r(e) {
        return "function" == typeof e;
      }
      n.d(t, "a", function () {
        return r;
      });
    },
    nRU1: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 });
      var r = (function () {
        function e(t, n, r, i) {
          (this.id = e.nextId++),
            (this.text = "default text"),
            (this.cssClass = ""),
            (this.closeOnClick = !1),
            (this.showCloseBtn = !1),
            t && (this.text = t),
            n && (this.cssClass = n),
            r && (this.closeOnClick = r),
            i && (this.showCloseBtn = i);
        }
        return (e.nextId = 0), e;
      })();
      t.FlashMessage = r;
    },
    ngJS: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return r;
      });
      const r = (e) => (t) => {
        for (let n = 0, r = e.length; n < r && !t.closed; n++) t.next(e[n]);
        t.complete();
      };
    },
    ofXK: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, "APP_BASE_HREF", function () {
          return b;
        }),
        n.d(t, "AsyncPipe", function () {
          return et;
        }),
        n.d(t, "CommonModule", function () {
          return vt;
        }),
        n.d(t, "CurrencyPipe", function () {
          return pt;
        }),
        n.d(t, "DOCUMENT", function () {
          return l;
        }),
        n.d(t, "DatePipe", function () {
          return st;
        }),
        n.d(t, "DecimalPipe", function () {
          return dt;
        }),
        n.d(t, "FormStyle", function () {
          return k;
        }),
        n.d(t, "FormatWidth", function () {
          return A;
        }),
        n.d(t, "HashLocationStrategy", function () {
          return C;
        }),
        n.d(t, "I18nPluralPipe", function () {
          return at;
        }),
        n.d(t, "I18nSelectPipe", function () {
          return lt;
        }),
        n.d(t, "JsonPipe", function () {
          return ct;
        }),
        n.d(t, "KeyValuePipe", function () {
          return ut;
        }),
        n.d(t, "LOCATION_INITIALIZED", function () {
          return h;
        }),
        n.d(t, "Location", function () {
          return S;
        }),
        n.d(t, "LocationStrategy", function () {
          return y;
        }),
        n.d(t, "LowerCasePipe", function () {
          return tt;
        }),
        n.d(t, "NgClass", function () {
          return Te;
        }),
        n.d(t, "NgComponentOutlet", function () {
          return Fe;
        }),
        n.d(t, "NgForOf", function () {
          return je;
        }),
        n.d(t, "NgForOfContext", function () {
          return Pe;
        }),
        n.d(t, "NgIf", function () {
          return Me;
        }),
        n.d(t, "NgIfContext", function () {
          return Le;
        }),
        n.d(t, "NgLocaleLocalization", function () {
          return ke;
        }),
        n.d(t, "NgLocalization", function () {
          return Ie;
        }),
        n.d(t, "NgPlural", function () {
          return $e;
        }),
        n.d(t, "NgPluralCase", function () {
          return qe;
        }),
        n.d(t, "NgStyle", function () {
          return Ge;
        }),
        n.d(t, "NgSwitch", function () {
          return ze;
        }),
        n.d(t, "NgSwitchCase", function () {
          return Ue;
        }),
        n.d(t, "NgSwitchDefault", function () {
          return He;
        }),
        n.d(t, "NgTemplateOutlet", function () {
          return We;
        }),
        n.d(t, "NumberFormatStyle", function () {
          return I;
        }),
        n.d(t, "NumberSymbol", function () {
          return T;
        }),
        n.d(t, "PathLocationStrategy", function () {
          return w;
        }),
        n.d(t, "PercentPipe", function () {
          return ft;
        }),
        n.d(t, "PlatformLocation", function () {
          return c;
        }),
        n.d(t, "Plural", function () {
          return O;
        }),
        n.d(t, "SlicePipe", function () {
          return _t;
        }),
        n.d(t, "TitleCasePipe", function () {
          return rt;
        }),
        n.d(t, "TranslationWidth", function () {
          return R;
        }),
        n.d(t, "UpperCasePipe", function () {
          return it;
        }),
        n.d(t, "VERSION", function () {
          return Ot;
        }),
        n.d(t, "ViewportScroller", function () {
          return kt;
        }),
        n.d(t, "WeekDay", function () {
          return F;
        }),
        n.d(t, "formatCurrency", function () {
          return Ce;
        }),
        n.d(t, "formatDate", function () {
          return ue;
        }),
        n.d(t, "formatNumber", function () {
          return Ee;
        }),
        n.d(t, "formatPercent", function () {
          return Se;
        }),
        n.d(t, "getCurrencySymbol", function () {
          return ne;
        }),
        n.d(t, "getLocaleCurrencyCode", function () {
          return Q;
        }),
        n.d(t, "getLocaleCurrencyName", function () {
          return W;
        }),
        n.d(t, "getLocaleCurrencySymbol", function () {
          return G;
        }),
        n.d(t, "getLocaleDateFormat", function () {
          return z;
        }),
        n.d(t, "getLocaleDateTimeFormat", function () {
          return H;
        }),
        n.d(t, "getLocaleDayNames", function () {
          return N;
        }),
        n.d(t, "getLocaleDayPeriods", function () {
          return j;
        }),
        n.d(t, "getLocaleDirection", function () {
          return J;
        }),
        n.d(t, "getLocaleEraNames", function () {
          return L;
        }),
        n.d(t, "getLocaleExtraDayPeriodRules", function () {
          return Y;
        }),
        n.d(t, "getLocaleExtraDayPeriods", function () {
          return X;
        }),
        n.d(t, "getLocaleFirstDayOfWeek", function () {
          return V;
        }),
        n.d(t, "getLocaleId", function () {
          return P;
        }),
        n.d(t, "getLocaleMonthNames", function () {
          return M;
        }),
        n.d(t, "getLocaleNumberFormat", function () {
          return q;
        }),
        n.d(t, "getLocaleNumberSymbol", function () {
          return $;
        }),
        n.d(t, "getLocalePluralCase", function () {
          return K;
        }),
        n.d(t, "getLocaleTimeFormat", function () {
          return U;
        }),
        n.d(t, "getLocaleWeekEndRange", function () {
          return B;
        }),
        n.d(t, "getNumberOfCurrencyDigits", function () {
          return re;
        }),
        n.d(t, "isPlatformBrowser", function () {
          return Et;
        }),
        n.d(t, "isPlatformServer", function () {
          return xt;
        }),
        n.d(t, "isPlatformWorkerApp", function () {
          return Dt;
        }),
        n.d(t, "isPlatformWorkerUi", function () {
          return It;
        }),
        n.d(t, "registerLocaleData", function () {
          return Re;
        }),
        n.d(t, "\u0275BrowserPlatformLocation", function () {
          return d;
        }),
        n.d(t, "\u0275DomAdapter", function () {
          return a;
        }),
        n.d(t, "\u0275NullViewportScroller", function () {
          return At;
        }),
        n.d(t, "\u0275PLATFORM_BROWSER_ID", function () {
          return bt;
        }),
        n.d(t, "\u0275PLATFORM_SERVER_ID", function () {
          return wt;
        }),
        n.d(t, "\u0275PLATFORM_WORKER_APP_ID", function () {
          return Ct;
        }),
        n.d(t, "\u0275PLATFORM_WORKER_UI_ID", function () {
          return St;
        }),
        n.d(t, "\u0275angular_packages_common_common_a", function () {
          return u;
        }),
        n.d(t, "\u0275angular_packages_common_common_b", function () {
          return p;
        }),
        n.d(t, "\u0275angular_packages_common_common_c", function () {
          return E;
        }),
        n.d(t, "\u0275angular_packages_common_common_d", function () {
          return v;
        }),
        n.d(t, "\u0275angular_packages_common_common_e", function () {
          return Qe;
        }),
        n.d(t, "\u0275angular_packages_common_common_f", function () {
          return yt;
        }),
        n.d(t, "\u0275getDOM", function () {
          return s;
        }),
        n.d(t, "\u0275parseCookieValue", function () {
          return Ae;
        }),
        n.d(t, "\u0275setRootDomAdapter", function () {
          return o;
        });
      var r = n("fXoL");
      let i = null;
      function s() {
        return i;
      }
      function o(e) {
        i || (i = e);
      }
      class a {}
      const l = new r.InjectionToken("DocumentToken");
      let c = (() => {
        class e {}
        return (
          (e.ɵfac = function (t) {
            return new (t || e)();
          }),
          (e.ɵprov = Object(r["\u0275\u0275defineInjectable"])({
            factory: u,
            token: e,
            providedIn: "platform",
          })),
          e
        );
      })();
      function u() {
        return Object(r["\u0275\u0275inject"])(d);
      }
      const h = new r.InjectionToken("Location Initialized");
      let d = (() => {
        class e extends c {
          constructor(e) {
            super(), (this._doc = e), this._init();
          }
          _init() {
            (this.location = s().getLocation()),
              (this._history = s().getHistory());
          }
          getBaseHrefFromDOM() {
            return s().getBaseHref(this._doc);
          }
          onPopState(e) {
            s()
              .getGlobalEventTarget(this._doc, "window")
              .addEventListener("popstate", e, !1);
          }
          onHashChange(e) {
            s()
              .getGlobalEventTarget(this._doc, "window")
              .addEventListener("hashchange", e, !1);
          }
          get href() {
            return this.location.href;
          }
          get protocol() {
            return this.location.protocol;
          }
          get hostname() {
            return this.location.hostname;
          }
          get port() {
            return this.location.port;
          }
          get pathname() {
            return this.location.pathname;
          }
          get search() {
            return this.location.search;
          }
          get hash() {
            return this.location.hash;
          }
          set pathname(e) {
            this.location.pathname = e;
          }
          pushState(e, t, n) {
            f() ? this._history.pushState(e, t, n) : (this.location.hash = n);
          }
          replaceState(e, t, n) {
            f()
              ? this._history.replaceState(e, t, n)
              : (this.location.hash = n);
          }
          forward() {
            this._history.forward();
          }
          back() {
            this._history.back();
          }
          getState() {
            return this._history.state;
          }
        }
        return (
          (e.ɵfac = function (t) {
            return new (t || e)(r["\u0275\u0275inject"](l));
          }),
          (e.ɵprov = Object(r["\u0275\u0275defineInjectable"])({
            factory: p,
            token: e,
            providedIn: "platform",
          })),
          e
        );
      })();
      function f() {
        return !!window.history.pushState;
      }
      function p() {
        return new d(Object(r["\u0275\u0275inject"])(l));
      }
      function m(e, t) {
        if (0 == e.length) return t;
        if (0 == t.length) return e;
        let n = 0;
        return (
          e.endsWith("/") && n++,
          t.startsWith("/") && n++,
          2 == n ? e + t.substring(1) : 1 == n ? e + t : e + "/" + t
        );
      }
      function g(e) {
        const t = e.match(/#|\?|$/),
          n = (t && t.index) || e.length;
        return e.slice(0, n - ("/" === e[n - 1] ? 1 : 0)) + e.slice(n);
      }
      function _(e) {
        return e && "?" !== e[0] ? "?" + e : e;
      }
      let y = (() => {
        class e {}
        return (
          (e.ɵfac = function (t) {
            return new (t || e)();
          }),
          (e.ɵprov = Object(r["\u0275\u0275defineInjectable"])({
            factory: v,
            token: e,
            providedIn: "root",
          })),
          e
        );
      })();
      function v(e) {
        const t = Object(r["\u0275\u0275inject"])(l).location;
        return new w(Object(r["\u0275\u0275inject"])(c), (t && t.origin) || "");
      }
      const b = new r.InjectionToken("appBaseHref");
      let w = (() => {
          class e extends y {
            constructor(e, t) {
              if (
                (super(),
                (this._platformLocation = e),
                null == t && (t = this._platformLocation.getBaseHrefFromDOM()),
                null == t)
              )
                throw new Error(
                  "No base href set. Please provide a value for the APP_BASE_HREF token or add a base element to the document."
                );
              this._baseHref = t;
            }
            onPopState(e) {
              this._platformLocation.onPopState(e),
                this._platformLocation.onHashChange(e);
            }
            getBaseHref() {
              return this._baseHref;
            }
            prepareExternalUrl(e) {
              return m(this._baseHref, e);
            }
            path(e = !1) {
              const t =
                  this._platformLocation.pathname +
                  _(this._platformLocation.search),
                n = this._platformLocation.hash;
              return n && e ? `${t}${n}` : t;
            }
            pushState(e, t, n, r) {
              const i = this.prepareExternalUrl(n + _(r));
              this._platformLocation.pushState(e, t, i);
            }
            replaceState(e, t, n, r) {
              const i = this.prepareExternalUrl(n + _(r));
              this._platformLocation.replaceState(e, t, i);
            }
            forward() {
              this._platformLocation.forward();
            }
            back() {
              this._platformLocation.back();
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(
                r["\u0275\u0275inject"](c),
                r["\u0275\u0275inject"](b, 8)
              );
            }),
            (e.ɵprov = r["\u0275\u0275defineInjectable"]({
              token: e,
              factory: e.ɵfac,
            })),
            e
          );
        })(),
        C = (() => {
          class e extends y {
            constructor(e, t) {
              super(),
                (this._platformLocation = e),
                (this._baseHref = ""),
                null != t && (this._baseHref = t);
            }
            onPopState(e) {
              this._platformLocation.onPopState(e),
                this._platformLocation.onHashChange(e);
            }
            getBaseHref() {
              return this._baseHref;
            }
            path(e = !1) {
              let t = this._platformLocation.hash;
              return null == t && (t = "#"), t.length > 0 ? t.substring(1) : t;
            }
            prepareExternalUrl(e) {
              const t = m(this._baseHref, e);
              return t.length > 0 ? "#" + t : t;
            }
            pushState(e, t, n, r) {
              let i = this.prepareExternalUrl(n + _(r));
              0 == i.length && (i = this._platformLocation.pathname),
                this._platformLocation.pushState(e, t, i);
            }
            replaceState(e, t, n, r) {
              let i = this.prepareExternalUrl(n + _(r));
              0 == i.length && (i = this._platformLocation.pathname),
                this._platformLocation.replaceState(e, t, i);
            }
            forward() {
              this._platformLocation.forward();
            }
            back() {
              this._platformLocation.back();
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(
                r["\u0275\u0275inject"](c),
                r["\u0275\u0275inject"](b, 8)
              );
            }),
            (e.ɵprov = r["\u0275\u0275defineInjectable"]({
              token: e,
              factory: e.ɵfac,
            })),
            e
          );
        })(),
        S = (() => {
          class e {
            constructor(e, t) {
              (this._subject = new r.EventEmitter()),
                (this._urlChangeListeners = []),
                (this._platformStrategy = e);
              const n = this._platformStrategy.getBaseHref();
              (this._platformLocation = t),
                (this._baseHref = g(x(n))),
                this._platformStrategy.onPopState((e) => {
                  this._subject.emit({
                    url: this.path(!0),
                    pop: !0,
                    state: e.state,
                    type: e.type,
                  });
                });
            }
            path(e = !1) {
              return this.normalize(this._platformStrategy.path(e));
            }
            getState() {
              return this._platformLocation.getState();
            }
            isCurrentPathEqualTo(e, t = "") {
              return this.path() == this.normalize(e + _(t));
            }
            normalize(t) {
              return e.stripTrailingSlash(
                (function (e, t) {
                  return e && t.startsWith(e) ? t.substring(e.length) : t;
                })(this._baseHref, x(t))
              );
            }
            prepareExternalUrl(e) {
              return (
                e && "/" !== e[0] && (e = "/" + e),
                this._platformStrategy.prepareExternalUrl(e)
              );
            }
            go(e, t = "", n = null) {
              this._platformStrategy.pushState(n, "", e, t),
                this._notifyUrlChangeListeners(
                  this.prepareExternalUrl(e + _(t)),
                  n
                );
            }
            replaceState(e, t = "", n = null) {
              this._platformStrategy.replaceState(n, "", e, t),
                this._notifyUrlChangeListeners(
                  this.prepareExternalUrl(e + _(t)),
                  n
                );
            }
            forward() {
              this._platformStrategy.forward();
            }
            back() {
              this._platformStrategy.back();
            }
            onUrlChange(e) {
              this._urlChangeListeners.push(e),
                this.subscribe((e) => {
                  this._notifyUrlChangeListeners(e.url, e.state);
                });
            }
            _notifyUrlChangeListeners(e = "", t) {
              this._urlChangeListeners.forEach((n) => n(e, t));
            }
            subscribe(e, t, n) {
              return this._subject.subscribe({
                next: e,
                error: t,
                complete: n,
              });
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(
                r["\u0275\u0275inject"](y),
                r["\u0275\u0275inject"](c)
              );
            }),
            (e.normalizeQueryParams = _),
            (e.joinWithSlash = m),
            (e.stripTrailingSlash = g),
            (e.ɵprov = Object(r["\u0275\u0275defineInjectable"])({
              factory: E,
              token: e,
              providedIn: "root",
            })),
            e
          );
        })();
      function E() {
        return new S(
          Object(r["\u0275\u0275inject"])(y),
          Object(r["\u0275\u0275inject"])(c)
        );
      }
      function x(e) {
        return e.replace(/\/index.html$/, "");
      }
      const D = {
          ADP: [void 0, void 0, 0],
          AFN: [void 0, void 0, 0],
          ALL: [void 0, void 0, 0],
          AMD: [void 0, void 0, 2],
          AOA: [void 0, "Kz"],
          ARS: [void 0, "$"],
          AUD: ["A$", "$"],
          BAM: [void 0, "KM"],
          BBD: [void 0, "$"],
          BDT: [void 0, "\u09f3"],
          BHD: [void 0, void 0, 3],
          BIF: [void 0, void 0, 0],
          BMD: [void 0, "$"],
          BND: [void 0, "$"],
          BOB: [void 0, "Bs"],
          BRL: ["R$"],
          BSD: [void 0, "$"],
          BWP: [void 0, "P"],
          BYN: [void 0, "\u0440.", 2],
          BYR: [void 0, void 0, 0],
          BZD: [void 0, "$"],
          CAD: ["CA$", "$", 2],
          CHF: [void 0, void 0, 2],
          CLF: [void 0, void 0, 4],
          CLP: [void 0, "$", 0],
          CNY: ["CN\xa5", "\xa5"],
          COP: [void 0, "$", 2],
          CRC: [void 0, "\u20a1", 2],
          CUC: [void 0, "$"],
          CUP: [void 0, "$"],
          CZK: [void 0, "K\u010d", 2],
          DJF: [void 0, void 0, 0],
          DKK: [void 0, "kr", 2],
          DOP: [void 0, "$"],
          EGP: [void 0, "E\xa3"],
          ESP: [void 0, "\u20a7", 0],
          EUR: ["\u20ac"],
          FJD: [void 0, "$"],
          FKP: [void 0, "\xa3"],
          GBP: ["\xa3"],
          GEL: [void 0, "\u20be"],
          GIP: [void 0, "\xa3"],
          GNF: [void 0, "FG", 0],
          GTQ: [void 0, "Q"],
          GYD: [void 0, "$", 2],
          HKD: ["HK$", "$"],
          HNL: [void 0, "L"],
          HRK: [void 0, "kn"],
          HUF: [void 0, "Ft", 2],
          IDR: [void 0, "Rp", 2],
          ILS: ["\u20aa"],
          INR: ["\u20b9"],
          IQD: [void 0, void 0, 0],
          IRR: [void 0, void 0, 0],
          ISK: [void 0, "kr", 0],
          ITL: [void 0, void 0, 0],
          JMD: [void 0, "$"],
          JOD: [void 0, void 0, 3],
          JPY: ["\xa5", void 0, 0],
          KHR: [void 0, "\u17db"],
          KMF: [void 0, "CF", 0],
          KPW: [void 0, "\u20a9", 0],
          KRW: ["\u20a9", void 0, 0],
          KWD: [void 0, void 0, 3],
          KYD: [void 0, "$"],
          KZT: [void 0, "\u20b8"],
          LAK: [void 0, "\u20ad", 0],
          LBP: [void 0, "L\xa3", 0],
          LKR: [void 0, "Rs"],
          LRD: [void 0, "$"],
          LTL: [void 0, "Lt"],
          LUF: [void 0, void 0, 0],
          LVL: [void 0, "Ls"],
          LYD: [void 0, void 0, 3],
          MGA: [void 0, "Ar", 0],
          MGF: [void 0, void 0, 0],
          MMK: [void 0, "K", 0],
          MNT: [void 0, "\u20ae", 2],
          MRO: [void 0, void 0, 0],
          MUR: [void 0, "Rs", 2],
          MXN: ["MX$", "$"],
          MYR: [void 0, "RM"],
          NAD: [void 0, "$"],
          NGN: [void 0, "\u20a6"],
          NIO: [void 0, "C$"],
          NOK: [void 0, "kr", 2],
          NPR: [void 0, "Rs"],
          NZD: ["NZ$", "$"],
          OMR: [void 0, void 0, 3],
          PHP: [void 0, "\u20b1"],
          PKR: [void 0, "Rs", 2],
          PLN: [void 0, "z\u0142"],
          PYG: [void 0, "\u20b2", 0],
          RON: [void 0, "lei"],
          RSD: [void 0, void 0, 0],
          RUB: [void 0, "\u20bd"],
          RUR: [void 0, "\u0440."],
          RWF: [void 0, "RF", 0],
          SBD: [void 0, "$"],
          SEK: [void 0, "kr", 2],
          SGD: [void 0, "$"],
          SHP: [void 0, "\xa3"],
          SLL: [void 0, void 0, 0],
          SOS: [void 0, void 0, 0],
          SRD: [void 0, "$"],
          SSP: [void 0, "\xa3"],
          STD: [void 0, void 0, 0],
          STN: [void 0, "Db"],
          SYP: [void 0, "\xa3", 0],
          THB: [void 0, "\u0e3f"],
          TMM: [void 0, void 0, 0],
          TND: [void 0, void 0, 3],
          TOP: [void 0, "T$"],
          TRL: [void 0, void 0, 0],
          TRY: [void 0, "\u20ba"],
          TTD: [void 0, "$"],
          TWD: ["NT$", "$", 2],
          TZS: [void 0, void 0, 2],
          UAH: [void 0, "\u20b4"],
          UGX: [void 0, void 0, 0],
          USD: ["$"],
          UYI: [void 0, void 0, 0],
          UYU: [void 0, "$"],
          UYW: [void 0, void 0, 4],
          UZS: [void 0, void 0, 2],
          VEF: [void 0, "Bs", 2],
          VND: ["\u20ab", void 0, 0],
          VUV: [void 0, void 0, 0],
          XAF: ["FCFA", void 0, 0],
          XCD: ["EC$", "$"],
          XOF: ["CFA", void 0, 0],
          XPF: ["CFPF", void 0, 0],
          XXX: ["\xa4"],
          YER: [void 0, void 0, 0],
          ZAR: [void 0, "R"],
          ZMK: [void 0, void 0, 0],
          ZMW: [void 0, "ZK"],
          ZWD: [void 0, void 0, 0],
        },
        I = (function () {
          var e = { Decimal: 0, Percent: 1, Currency: 2, Scientific: 3 };
          return (
            (e[e.Decimal] = "Decimal"),
            (e[e.Percent] = "Percent"),
            (e[e.Currency] = "Currency"),
            (e[e.Scientific] = "Scientific"),
            e
          );
        })(),
        O = (function () {
          var e = { Zero: 0, One: 1, Two: 2, Few: 3, Many: 4, Other: 5 };
          return (
            (e[e.Zero] = "Zero"),
            (e[e.One] = "One"),
            (e[e.Two] = "Two"),
            (e[e.Few] = "Few"),
            (e[e.Many] = "Many"),
            (e[e.Other] = "Other"),
            e
          );
        })(),
        k = (function () {
          var e = { Format: 0, Standalone: 1 };
          return (e[e.Format] = "Format"), (e[e.Standalone] = "Standalone"), e;
        })(),
        R = (function () {
          var e = { Narrow: 0, Abbreviated: 1, Wide: 2, Short: 3 };
          return (
            (e[e.Narrow] = "Narrow"),
            (e[e.Abbreviated] = "Abbreviated"),
            (e[e.Wide] = "Wide"),
            (e[e.Short] = "Short"),
            e
          );
        })(),
        A = (function () {
          var e = { Short: 0, Medium: 1, Long: 2, Full: 3 };
          return (
            (e[e.Short] = "Short"),
            (e[e.Medium] = "Medium"),
            (e[e.Long] = "Long"),
            (e[e.Full] = "Full"),
            e
          );
        })(),
        T = (function () {
          var e = {
            Decimal: 0,
            Group: 1,
            List: 2,
            PercentSign: 3,
            PlusSign: 4,
            MinusSign: 5,
            Exponential: 6,
            SuperscriptingExponent: 7,
            PerMille: 8,
            Infinity: 9,
            NaN: 10,
            TimeSeparator: 11,
            CurrencyDecimal: 12,
            CurrencyGroup: 13,
          };
          return (
            (e[e.Decimal] = "Decimal"),
            (e[e.Group] = "Group"),
            (e[e.List] = "List"),
            (e[e.PercentSign] = "PercentSign"),
            (e[e.PlusSign] = "PlusSign"),
            (e[e.MinusSign] = "MinusSign"),
            (e[e.Exponential] = "Exponential"),
            (e[e.SuperscriptingExponent] = "SuperscriptingExponent"),
            (e[e.PerMille] = "PerMille"),
            (e[e.Infinity] = "Infinity"),
            (e[e.NaN] = "NaN"),
            (e[e.TimeSeparator] = "TimeSeparator"),
            (e[e.CurrencyDecimal] = "CurrencyDecimal"),
            (e[e.CurrencyGroup] = "CurrencyGroup"),
            e
          );
        })(),
        F = (function () {
          var e = {
            Sunday: 0,
            Monday: 1,
            Tuesday: 2,
            Wednesday: 3,
            Thursday: 4,
            Friday: 5,
            Saturday: 6,
          };
          return (
            (e[e.Sunday] = "Sunday"),
            (e[e.Monday] = "Monday"),
            (e[e.Tuesday] = "Tuesday"),
            (e[e.Wednesday] = "Wednesday"),
            (e[e.Thursday] = "Thursday"),
            (e[e.Friday] = "Friday"),
            (e[e.Saturday] = "Saturday"),
            e
          );
        })();
      function P(e) {
        return Object(r["\u0275findLocaleData"])(e)[
          r["\u0275LocaleDataIndex"].LocaleId
        ];
      }
      function j(e, t, n) {
        const i = Object(r["\u0275findLocaleData"])(e),
          s = ee(
            [
              i[r["\u0275LocaleDataIndex"].DayPeriodsFormat],
              i[r["\u0275LocaleDataIndex"].DayPeriodsStandalone],
            ],
            t
          );
        return ee(s, n);
      }
      function N(e, t, n) {
        const i = Object(r["\u0275findLocaleData"])(e),
          s = ee(
            [
              i[r["\u0275LocaleDataIndex"].DaysFormat],
              i[r["\u0275LocaleDataIndex"].DaysStandalone],
            ],
            t
          );
        return ee(s, n);
      }
      function M(e, t, n) {
        const i = Object(r["\u0275findLocaleData"])(e),
          s = ee(
            [
              i[r["\u0275LocaleDataIndex"].MonthsFormat],
              i[r["\u0275LocaleDataIndex"].MonthsStandalone],
            ],
            t
          );
        return ee(s, n);
      }
      function L(e, t) {
        return ee(
          Object(r["\u0275findLocaleData"])(e)[r["\u0275LocaleDataIndex"].Eras],
          t
        );
      }
      function V(e) {
        return Object(r["\u0275findLocaleData"])(e)[
          r["\u0275LocaleDataIndex"].FirstDayOfWeek
        ];
      }
      function B(e) {
        return Object(r["\u0275findLocaleData"])(e)[
          r["\u0275LocaleDataIndex"].WeekendRange
        ];
      }
      function z(e, t) {
        return ee(
          Object(r["\u0275findLocaleData"])(e)[
            r["\u0275LocaleDataIndex"].DateFormat
          ],
          t
        );
      }
      function U(e, t) {
        return ee(
          Object(r["\u0275findLocaleData"])(e)[
            r["\u0275LocaleDataIndex"].TimeFormat
          ],
          t
        );
      }
      function H(e, t) {
        return ee(
          Object(r["\u0275findLocaleData"])(e)[
            r["\u0275LocaleDataIndex"].DateTimeFormat
          ],
          t
        );
      }
      function $(e, t) {
        const n = Object(r["\u0275findLocaleData"])(e),
          i = n[r["\u0275LocaleDataIndex"].NumberSymbols][t];
        if (void 0 === i) {
          if (t === T.CurrencyDecimal)
            return n[r["\u0275LocaleDataIndex"].NumberSymbols][T.Decimal];
          if (t === T.CurrencyGroup)
            return n[r["\u0275LocaleDataIndex"].NumberSymbols][T.Group];
        }
        return i;
      }
      function q(e, t) {
        return Object(r["\u0275findLocaleData"])(e)[
          r["\u0275LocaleDataIndex"].NumberFormats
        ][t];
      }
      function G(e) {
        return (
          Object(r["\u0275findLocaleData"])(e)[
            r["\u0275LocaleDataIndex"].CurrencySymbol
          ] || null
        );
      }
      function W(e) {
        return (
          Object(r["\u0275findLocaleData"])(e)[
            r["\u0275LocaleDataIndex"].CurrencyName
          ] || null
        );
      }
      function Q(e) {
        return Object(r["\u0275getLocaleCurrencyCode"])(e);
      }
      const K = r["\u0275getLocalePluralCase"];
      function Z(e) {
        if (!e[r["\u0275LocaleDataIndex"].ExtraData])
          throw new Error(
            `Missing extra locale data for the locale "${
              e[r["\u0275LocaleDataIndex"].LocaleId]
            }". Use "registerLocaleData" to load new data. See the "I18n guide" on angular.io to know more.`
          );
      }
      function Y(e) {
        const t = Object(r["\u0275findLocaleData"])(e);
        return (
          Z(t),
          (t[r["\u0275LocaleDataIndex"].ExtraData][2] || []).map((e) =>
            "string" == typeof e ? te(e) : [te(e[0]), te(e[1])]
          )
        );
      }
      function X(e, t, n) {
        const i = Object(r["\u0275findLocaleData"])(e);
        Z(i);
        const s =
          ee(
            [
              i[r["\u0275LocaleDataIndex"].ExtraData][0],
              i[r["\u0275LocaleDataIndex"].ExtraData][1],
            ],
            t
          ) || [];
        return ee(s, n) || [];
      }
      function J(e) {
        return Object(r["\u0275findLocaleData"])(e)[
          r["\u0275LocaleDataIndex"].Directionality
        ];
      }
      function ee(e, t) {
        for (let n = t; n > -1; n--) if (void 0 !== e[n]) return e[n];
        throw new Error("Locale data API: locale data undefined");
      }
      function te(e) {
        const [t, n] = e.split(":");
        return { hours: +t, minutes: +n };
      }
      function ne(e, t, n = "en") {
        const i =
            (function (e) {
              return Object(r["\u0275findLocaleData"])(e)[
                r["\u0275LocaleDataIndex"].Currencies
              ];
            })(n)[e] ||
            D[e] ||
            [],
          s = i[1];
        return "narrow" === t && "string" == typeof s ? s : i[0] || e;
      }
      function re(e) {
        let t;
        const n = D[e];
        return n && (t = n[2]), "number" == typeof t ? t : 2;
      }
      const ie = /^(\d{4})-?(\d\d)-?(\d\d)(?:T(\d\d)(?::?(\d\d)(?::?(\d\d)(?:\.(\d+))?)?)?(Z|([+-])(\d\d):?(\d\d))?)?$/,
        se = {},
        oe = /((?:[^GyMLwWdEabBhHmsSzZO']+)|(?:'(?:[^']|'')*')|(?:G{1,5}|y{1,4}|M{1,5}|L{1,5}|w{1,2}|W{1}|d{1,2}|E{1,6}|a{1,5}|b{1,5}|B{1,5}|h{1,2}|H{1,2}|m{1,2}|s{1,2}|S{1,3}|z{1,4}|Z{1,5}|O{1,4}))([\s\S]*)/,
        ae = (function () {
          var e = { Short: 0, ShortGMT: 1, Long: 2, Extended: 3 };
          return (
            (e[e.Short] = "Short"),
            (e[e.ShortGMT] = "ShortGMT"),
            (e[e.Long] = "Long"),
            (e[e.Extended] = "Extended"),
            e
          );
        })(),
        le = (function () {
          var e = {
            FullYear: 0,
            Month: 1,
            Date: 2,
            Hours: 3,
            Minutes: 4,
            Seconds: 5,
            FractionalSeconds: 6,
            Day: 7,
          };
          return (
            (e[e.FullYear] = "FullYear"),
            (e[e.Month] = "Month"),
            (e[e.Date] = "Date"),
            (e[e.Hours] = "Hours"),
            (e[e.Minutes] = "Minutes"),
            (e[e.Seconds] = "Seconds"),
            (e[e.FractionalSeconds] = "FractionalSeconds"),
            (e[e.Day] = "Day"),
            e
          );
        })(),
        ce = (function () {
          var e = { DayPeriods: 0, Days: 1, Months: 2, Eras: 3 };
          return (
            (e[e.DayPeriods] = "DayPeriods"),
            (e[e.Days] = "Days"),
            (e[e.Months] = "Months"),
            (e[e.Eras] = "Eras"),
            e
          );
        })();
      function ue(e, t, n, r) {
        let i = (function (e) {
          if (ve(e)) return e;
          if ("number" == typeof e && !isNaN(e)) return new Date(e);
          if ("string" == typeof e) {
            e = e.trim();
            const t = parseFloat(e);
            if (!isNaN(e - t)) return new Date(t);
            if (/^(\d{4}-\d{1,2}-\d{1,2})$/.test(e)) {
              const [t, n, r] = e.split("-").map((e) => +e);
              return new Date(t, n - 1, r);
            }
            let n;
            if ((n = e.match(ie)))
              return (function (e) {
                const t = new Date(0);
                let n = 0,
                  r = 0;
                const i = e[8] ? t.setUTCFullYear : t.setFullYear,
                  s = e[8] ? t.setUTCHours : t.setHours;
                e[9] &&
                  ((n = Number(e[9] + e[10])), (r = Number(e[9] + e[11]))),
                  i.call(t, Number(e[1]), Number(e[2]) - 1, Number(e[3]));
                const o = Number(e[4] || 0) - n,
                  a = Number(e[5] || 0) - r,
                  l = Number(e[6] || 0),
                  c = Math.round(1e3 * parseFloat("0." + (e[7] || 0)));
                return s.call(t, o, a, l, c), t;
              })(n);
          }
          const t = new Date(e);
          if (!ve(t)) throw new Error(`Unable to convert "${e}" into a date`);
          return t;
        })(e);
        t =
          (function e(t, n) {
            const r = P(t);
            if (((se[r] = se[r] || {}), se[r][n])) return se[r][n];
            let i = "";
            switch (n) {
              case "shortDate":
                i = z(t, A.Short);
                break;
              case "mediumDate":
                i = z(t, A.Medium);
                break;
              case "longDate":
                i = z(t, A.Long);
                break;
              case "fullDate":
                i = z(t, A.Full);
                break;
              case "shortTime":
                i = U(t, A.Short);
                break;
              case "mediumTime":
                i = U(t, A.Medium);
                break;
              case "longTime":
                i = U(t, A.Long);
                break;
              case "fullTime":
                i = U(t, A.Full);
                break;
              case "short":
                const n = e(t, "shortTime"),
                  r = e(t, "shortDate");
                i = he(H(t, A.Short), [n, r]);
                break;
              case "medium":
                const s = e(t, "mediumTime"),
                  o = e(t, "mediumDate");
                i = he(H(t, A.Medium), [s, o]);
                break;
              case "long":
                const a = e(t, "longTime"),
                  l = e(t, "longDate");
                i = he(H(t, A.Long), [a, l]);
                break;
              case "full":
                const c = e(t, "fullTime"),
                  u = e(t, "fullDate");
                i = he(H(t, A.Full), [c, u]);
            }
            return i && (se[r][n] = i), i;
          })(n, t) || t;
        let s,
          o = [];
        for (; t; ) {
          if (((s = oe.exec(t)), !s)) {
            o.push(t);
            break;
          }
          {
            o = o.concat(s.slice(1));
            const e = o.pop();
            if (!e) break;
            t = e;
          }
        }
        let a = i.getTimezoneOffset();
        r &&
          ((a = ye(r, a)),
          (i = (function (e, t, n) {
            const r = e.getTimezoneOffset();
            return (function (e, t) {
              return (
                (e = new Date(e.getTime())).setMinutes(e.getMinutes() + t), e
              );
            })(e, -1 * (ye(t, r) - r));
          })(i, r)));
        let l = "";
        return (
          o.forEach((e) => {
            const t = (function (e) {
              if (_e[e]) return _e[e];
              let t;
              switch (e) {
                case "G":
                case "GG":
                case "GGG":
                  t = pe(ce.Eras, R.Abbreviated);
                  break;
                case "GGGG":
                  t = pe(ce.Eras, R.Wide);
                  break;
                case "GGGGG":
                  t = pe(ce.Eras, R.Narrow);
                  break;
                case "y":
                  t = fe(le.FullYear, 1, 0, !1, !0);
                  break;
                case "yy":
                  t = fe(le.FullYear, 2, 0, !0, !0);
                  break;
                case "yyy":
                  t = fe(le.FullYear, 3, 0, !1, !0);
                  break;
                case "yyyy":
                  t = fe(le.FullYear, 4, 0, !1, !0);
                  break;
                case "M":
                case "L":
                  t = fe(le.Month, 1, 1);
                  break;
                case "MM":
                case "LL":
                  t = fe(le.Month, 2, 1);
                  break;
                case "MMM":
                  t = pe(ce.Months, R.Abbreviated);
                  break;
                case "MMMM":
                  t = pe(ce.Months, R.Wide);
                  break;
                case "MMMMM":
                  t = pe(ce.Months, R.Narrow);
                  break;
                case "LLL":
                  t = pe(ce.Months, R.Abbreviated, k.Standalone);
                  break;
                case "LLLL":
                  t = pe(ce.Months, R.Wide, k.Standalone);
                  break;
                case "LLLLL":
                  t = pe(ce.Months, R.Narrow, k.Standalone);
                  break;
                case "w":
                  t = ge(1);
                  break;
                case "ww":
                  t = ge(2);
                  break;
                case "W":
                  t = ge(1, !0);
                  break;
                case "d":
                  t = fe(le.Date, 1);
                  break;
                case "dd":
                  t = fe(le.Date, 2);
                  break;
                case "E":
                case "EE":
                case "EEE":
                  t = pe(ce.Days, R.Abbreviated);
                  break;
                case "EEEE":
                  t = pe(ce.Days, R.Wide);
                  break;
                case "EEEEE":
                  t = pe(ce.Days, R.Narrow);
                  break;
                case "EEEEEE":
                  t = pe(ce.Days, R.Short);
                  break;
                case "a":
                case "aa":
                case "aaa":
                  t = pe(ce.DayPeriods, R.Abbreviated);
                  break;
                case "aaaa":
                  t = pe(ce.DayPeriods, R.Wide);
                  break;
                case "aaaaa":
                  t = pe(ce.DayPeriods, R.Narrow);
                  break;
                case "b":
                case "bb":
                case "bbb":
                  t = pe(ce.DayPeriods, R.Abbreviated, k.Standalone, !0);
                  break;
                case "bbbb":
                  t = pe(ce.DayPeriods, R.Wide, k.Standalone, !0);
                  break;
                case "bbbbb":
                  t = pe(ce.DayPeriods, R.Narrow, k.Standalone, !0);
                  break;
                case "B":
                case "BB":
                case "BBB":
                  t = pe(ce.DayPeriods, R.Abbreviated, k.Format, !0);
                  break;
                case "BBBB":
                  t = pe(ce.DayPeriods, R.Wide, k.Format, !0);
                  break;
                case "BBBBB":
                  t = pe(ce.DayPeriods, R.Narrow, k.Format, !0);
                  break;
                case "h":
                  t = fe(le.Hours, 1, -12);
                  break;
                case "hh":
                  t = fe(le.Hours, 2, -12);
                  break;
                case "H":
                  t = fe(le.Hours, 1);
                  break;
                case "HH":
                  t = fe(le.Hours, 2);
                  break;
                case "m":
                  t = fe(le.Minutes, 1);
                  break;
                case "mm":
                  t = fe(le.Minutes, 2);
                  break;
                case "s":
                  t = fe(le.Seconds, 1);
                  break;
                case "ss":
                  t = fe(le.Seconds, 2);
                  break;
                case "S":
                  t = fe(le.FractionalSeconds, 1);
                  break;
                case "SS":
                  t = fe(le.FractionalSeconds, 2);
                  break;
                case "SSS":
                  t = fe(le.FractionalSeconds, 3);
                  break;
                case "Z":
                case "ZZ":
                case "ZZZ":
                  t = me(ae.Short);
                  break;
                case "ZZZZZ":
                  t = me(ae.Extended);
                  break;
                case "O":
                case "OO":
                case "OOO":
                case "z":
                case "zz":
                case "zzz":
                  t = me(ae.ShortGMT);
                  break;
                case "OOOO":
                case "ZZZZ":
                case "zzzz":
                  t = me(ae.Long);
                  break;
                default:
                  return null;
              }
              return (_e[e] = t), t;
            })(e);
            l += t
              ? t(i, n, a)
              : "''" === e
              ? "'"
              : e.replace(/(^'|'$)/g, "").replace(/''/g, "'");
          }),
          l
        );
      }
      function he(e, t) {
        return (
          t &&
            (e = e.replace(/\{([^}]+)}/g, function (e, n) {
              return null != t && n in t ? t[n] : e;
            })),
          e
        );
      }
      function de(e, t, n = "-", r, i) {
        let s = "";
        (e < 0 || (i && e <= 0)) && (i ? (e = 1 - e) : ((e = -e), (s = n)));
        let o = String(e);
        for (; o.length < t; ) o = "0" + o;
        return r && (o = o.substr(o.length - t)), s + o;
      }
      function fe(e, t, n = 0, r = !1, i = !1) {
        return function (s, o) {
          let a = (function (e, t) {
            switch (e) {
              case le.FullYear:
                return t.getFullYear();
              case le.Month:
                return t.getMonth();
              case le.Date:
                return t.getDate();
              case le.Hours:
                return t.getHours();
              case le.Minutes:
                return t.getMinutes();
              case le.Seconds:
                return t.getSeconds();
              case le.FractionalSeconds:
                return t.getMilliseconds();
              case le.Day:
                return t.getDay();
              default:
                throw new Error(`Unknown DateType value "${e}".`);
            }
          })(e, s);
          if (((n > 0 || a > -n) && (a += n), e === le.Hours))
            0 === a && -12 === n && (a = 12);
          else if (e === le.FractionalSeconds)
            return (l = t), de(a, 3).substr(0, l);
          var l;
          const c = $(o, T.MinusSign);
          return de(a, t, c, r, i);
        };
      }
      function pe(e, t, n = k.Format, r = !1) {
        return function (i, s) {
          return (function (e, t, n, r, i, s) {
            switch (n) {
              case ce.Months:
                return M(t, i, r)[e.getMonth()];
              case ce.Days:
                return N(t, i, r)[e.getDay()];
              case ce.DayPeriods:
                const o = e.getHours(),
                  a = e.getMinutes();
                if (s) {
                  const e = Y(t),
                    n = X(t, i, r);
                  let s;
                  if (
                    (e.forEach((e, t) => {
                      if (Array.isArray(e)) {
                        const { hours: r, minutes: i } = e[0],
                          { hours: l, minutes: c } = e[1];
                        o >= r &&
                          a >= i &&
                          (o < l || (o === l && a < c)) &&
                          (s = n[t]);
                      } else {
                        const { hours: r, minutes: i } = e;
                        r === o && i === a && (s = n[t]);
                      }
                    }),
                    s)
                  )
                    return s;
                }
                return j(t, i, r)[o < 12 ? 0 : 1];
              case ce.Eras:
                return L(t, r)[e.getFullYear() <= 0 ? 0 : 1];
              default:
                throw new Error("unexpected translation type " + n);
            }
          })(i, s, e, t, n, r);
        };
      }
      function me(e) {
        return function (t, n, r) {
          const i = -1 * r,
            s = $(n, T.MinusSign),
            o = i > 0 ? Math.floor(i / 60) : Math.ceil(i / 60);
          switch (e) {
            case ae.Short:
              return (
                (i >= 0 ? "+" : "") + de(o, 2, s) + de(Math.abs(i % 60), 2, s)
              );
            case ae.ShortGMT:
              return "GMT" + (i >= 0 ? "+" : "") + de(o, 1, s);
            case ae.Long:
              return (
                "GMT" +
                (i >= 0 ? "+" : "") +
                de(o, 2, s) +
                ":" +
                de(Math.abs(i % 60), 2, s)
              );
            case ae.Extended:
              return 0 === r
                ? "Z"
                : (i >= 0 ? "+" : "") +
                    de(o, 2, s) +
                    ":" +
                    de(Math.abs(i % 60), 2, s);
            default:
              throw new Error(`Unknown zone width "${e}"`);
          }
        };
      }
      function ge(e, t = !1) {
        return function (n, r) {
          let i;
          if (t) {
            const e = new Date(n.getFullYear(), n.getMonth(), 1).getDay() - 1,
              t = n.getDate();
            i = 1 + Math.floor((t + e) / 7);
          } else {
            const e = (function (e) {
                const t = new Date(e, 0, 1).getDay();
                return new Date(e, 0, 1 + (t <= 4 ? 4 : 11) - t);
              })(n.getFullYear()),
              t =
                ((s = n),
                new Date(
                  s.getFullYear(),
                  s.getMonth(),
                  s.getDate() + (4 - s.getDay())
                )).getTime() - e.getTime();
            i = 1 + Math.round(t / 6048e5);
          }
          var s;
          return de(i, e, $(r, T.MinusSign));
        };
      }
      const _e = {};
      function ye(e, t) {
        e = e.replace(/:/g, "");
        const n = Date.parse("Jan 01, 1970 00:00:00 " + e) / 6e4;
        return isNaN(n) ? t : n;
      }
      function ve(e) {
        return e instanceof Date && !isNaN(e.valueOf());
      }
      const be = /^(\d+)?\.((\d+)(-(\d+))?)?$/;
      function we(e, t, n, r, i, s, o = !1) {
        let a = "",
          l = !1;
        if (isFinite(e)) {
          let c = (function (e) {
            let t,
              n,
              r,
              i,
              s,
              o = Math.abs(e) + "",
              a = 0;
            for (
              (n = o.indexOf(".")) > -1 && (o = o.replace(".", "")),
                (r = o.search(/e/i)) > 0
                  ? (n < 0 && (n = r),
                    (n += +o.slice(r + 1)),
                    (o = o.substring(0, r)))
                  : n < 0 && (n = o.length),
                r = 0;
              "0" === o.charAt(r);
              r++
            );
            if (r === (s = o.length)) (t = [0]), (n = 1);
            else {
              for (s--; "0" === o.charAt(s); ) s--;
              for (n -= r, t = [], i = 0; r <= s; r++, i++)
                t[i] = Number(o.charAt(r));
            }
            return (
              n > 22 && ((t = t.splice(0, 21)), (a = n - 1), (n = 1)),
              { digits: t, exponent: a, integerLen: n }
            );
          })(e);
          o &&
            (c = (function (e) {
              if (0 === e.digits[0]) return e;
              const t = e.digits.length - e.integerLen;
              return (
                e.exponent
                  ? (e.exponent += 2)
                  : (0 === t
                      ? e.digits.push(0, 0)
                      : 1 === t && e.digits.push(0),
                    (e.integerLen += 2)),
                e
              );
            })(c));
          let u = t.minInt,
            h = t.minFrac,
            d = t.maxFrac;
          if (s) {
            const e = s.match(be);
            if (null === e) throw new Error(s + " is not a valid digit info");
            const t = e[1],
              n = e[3],
              r = e[5];
            null != t && (u = De(t)),
              null != n && (h = De(n)),
              null != r ? (d = De(r)) : null != n && h > d && (d = h);
          }
          !(function (e, t, n) {
            if (t > n)
              throw new Error(
                `The minimum number of digits after fraction (${t}) is higher than the maximum (${n}).`
              );
            let r = e.digits,
              i = r.length - e.integerLen;
            const s = Math.min(Math.max(t, i), n);
            let o = s + e.integerLen,
              a = r[o];
            if (o > 0) {
              r.splice(Math.max(e.integerLen, o));
              for (let e = o; e < r.length; e++) r[e] = 0;
            } else {
              (i = Math.max(0, i)),
                (e.integerLen = 1),
                (r.length = Math.max(1, (o = s + 1))),
                (r[0] = 0);
              for (let e = 1; e < o; e++) r[e] = 0;
            }
            if (a >= 5)
              if (o - 1 < 0) {
                for (let t = 0; t > o; t--) r.unshift(0), e.integerLen++;
                r.unshift(1), e.integerLen++;
              } else r[o - 1]++;
            for (; i < Math.max(0, s); i++) r.push(0);
            let l = 0 !== s;
            const c = t + e.integerLen,
              u = r.reduceRight(function (e, t, n, r) {
                return (
                  (r[n] = (t += e) < 10 ? t : t - 10),
                  l && (0 === r[n] && n >= c ? r.pop() : (l = !1)),
                  t >= 10 ? 1 : 0
                );
              }, 0);
            u && (r.unshift(u), e.integerLen++);
          })(c, h, d);
          let f = c.digits,
            p = c.integerLen;
          const m = c.exponent;
          let g = [];
          for (l = f.every((e) => !e); p < u; p++) f.unshift(0);
          for (; p < 0; p++) f.unshift(0);
          p > 0 ? (g = f.splice(p, f.length)) : ((g = f), (f = [0]));
          const _ = [];
          for (
            f.length >= t.lgSize &&
            _.unshift(f.splice(-t.lgSize, f.length).join(""));
            f.length > t.gSize;

          )
            _.unshift(f.splice(-t.gSize, f.length).join(""));
          f.length && _.unshift(f.join("")),
            (a = _.join($(n, r))),
            g.length && (a += $(n, i) + g.join("")),
            m && (a += $(n, T.Exponential) + "+" + m);
        } else a = $(n, T.Infinity);
        return (
          (a = e < 0 && !l ? t.negPre + a + t.negSuf : t.posPre + a + t.posSuf),
          a
        );
      }
      function Ce(e, t, n, r, i) {
        const s = xe(q(t, I.Currency), $(t, T.MinusSign));
        return (
          (s.minFrac = re(r)),
          (s.maxFrac = s.minFrac),
          we(e, s, t, T.CurrencyGroup, T.CurrencyDecimal, i)
            .replace("\xa4", n)
            .replace("\xa4", "")
            .trim()
        );
      }
      function Se(e, t, n) {
        return we(
          e,
          xe(q(t, I.Percent), $(t, T.MinusSign)),
          t,
          T.Group,
          T.Decimal,
          n,
          !0
        ).replace(new RegExp("%", "g"), $(t, T.PercentSign));
      }
      function Ee(e, t, n) {
        return we(
          e,
          xe(q(t, I.Decimal), $(t, T.MinusSign)),
          t,
          T.Group,
          T.Decimal,
          n
        );
      }
      function xe(e, t = "-") {
        const n = {
            minInt: 1,
            minFrac: 0,
            maxFrac: 0,
            posPre: "",
            posSuf: "",
            negPre: "",
            negSuf: "",
            gSize: 0,
            lgSize: 0,
          },
          r = e.split(";"),
          i = r[0],
          s = r[1],
          o =
            -1 !== i.indexOf(".")
              ? i.split(".")
              : [
                  i.substring(0, i.lastIndexOf("0") + 1),
                  i.substring(i.lastIndexOf("0") + 1),
                ],
          a = o[0],
          l = o[1] || "";
        n.posPre = a.substr(0, a.indexOf("#"));
        for (let u = 0; u < l.length; u++) {
          const e = l.charAt(u);
          "0" === e
            ? (n.minFrac = n.maxFrac = u + 1)
            : "#" === e
            ? (n.maxFrac = u + 1)
            : (n.posSuf += e);
        }
        const c = a.split(",");
        if (
          ((n.gSize = c[1] ? c[1].length : 0),
          (n.lgSize = c[2] || c[1] ? (c[2] || c[1]).length : 0),
          s)
        ) {
          const e = i.length - n.posPre.length - n.posSuf.length,
            t = s.indexOf("#");
          (n.negPre = s.substr(0, t).replace(/'/g, "")),
            (n.negSuf = s.substr(t + e).replace(/'/g, ""));
        } else (n.negPre = t + n.posPre), (n.negSuf = n.posSuf);
        return n;
      }
      function De(e) {
        const t = parseInt(e);
        if (isNaN(t))
          throw new Error("Invalid integer literal when parsing " + e);
        return t;
      }
      class Ie {}
      function Oe(e, t, n, r) {
        let i = "=" + e;
        if (t.indexOf(i) > -1) return i;
        if (((i = n.getPluralCategory(e, r)), t.indexOf(i) > -1)) return i;
        if (t.indexOf("other") > -1) return "other";
        throw new Error(`No plural message found for value "${e}"`);
      }
      let ke = (() => {
        class e extends Ie {
          constructor(e) {
            super(), (this.locale = e);
          }
          getPluralCategory(e, t) {
            switch (K(t || this.locale)(e)) {
              case O.Zero:
                return "zero";
              case O.One:
                return "one";
              case O.Two:
                return "two";
              case O.Few:
                return "few";
              case O.Many:
                return "many";
              default:
                return "other";
            }
          }
        }
        return (
          (e.ɵfac = function (t) {
            return new (t || e)(r["\u0275\u0275inject"](r.LOCALE_ID));
          }),
          (e.ɵprov = r["\u0275\u0275defineInjectable"]({
            token: e,
            factory: e.ɵfac,
          })),
          e
        );
      })();
      function Re(e, t, n) {
        return Object(r["\u0275registerLocaleData"])(e, t, n);
      }
      function Ae(e, t) {
        t = encodeURIComponent(t);
        for (const n of e.split(";")) {
          const e = n.indexOf("="),
            [r, i] = -1 == e ? [n, ""] : [n.slice(0, e), n.slice(e + 1)];
          if (r.trim() === t) return decodeURIComponent(i);
        }
        return null;
      }
      let Te = (() => {
          class e {
            constructor(e, t, n, r) {
              (this._iterableDiffers = e),
                (this._keyValueDiffers = t),
                (this._ngEl = n),
                (this._renderer = r),
                (this._iterableDiffer = null),
                (this._keyValueDiffer = null),
                (this._initialClasses = []),
                (this._rawClass = null);
            }
            set klass(e) {
              this._removeClasses(this._initialClasses),
                (this._initialClasses =
                  "string" == typeof e ? e.split(/\s+/) : []),
                this._applyClasses(this._initialClasses),
                this._applyClasses(this._rawClass);
            }
            set ngClass(e) {
              this._removeClasses(this._rawClass),
                this._applyClasses(this._initialClasses),
                (this._iterableDiffer = null),
                (this._keyValueDiffer = null),
                (this._rawClass = "string" == typeof e ? e.split(/\s+/) : e),
                this._rawClass &&
                  (Object(r["\u0275isListLikeIterable"])(this._rawClass)
                    ? (this._iterableDiffer = this._iterableDiffers
                        .find(this._rawClass)
                        .create())
                    : (this._keyValueDiffer = this._keyValueDiffers
                        .find(this._rawClass)
                        .create()));
            }
            ngDoCheck() {
              if (this._iterableDiffer) {
                const e = this._iterableDiffer.diff(this._rawClass);
                e && this._applyIterableChanges(e);
              } else if (this._keyValueDiffer) {
                const e = this._keyValueDiffer.diff(this._rawClass);
                e && this._applyKeyValueChanges(e);
              }
            }
            _applyKeyValueChanges(e) {
              e.forEachAddedItem((e) =>
                this._toggleClass(e.key, e.currentValue)
              ),
                e.forEachChangedItem((e) =>
                  this._toggleClass(e.key, e.currentValue)
                ),
                e.forEachRemovedItem((e) => {
                  e.previousValue && this._toggleClass(e.key, !1);
                });
            }
            _applyIterableChanges(e) {
              e.forEachAddedItem((e) => {
                if ("string" != typeof e.item)
                  throw new Error(
                    "NgClass can only toggle CSS classes expressed as strings, got " +
                      Object(r["\u0275stringify"])(e.item)
                  );
                this._toggleClass(e.item, !0);
              }),
                e.forEachRemovedItem((e) => this._toggleClass(e.item, !1));
            }
            _applyClasses(e) {
              e &&
                (Array.isArray(e) || e instanceof Set
                  ? e.forEach((e) => this._toggleClass(e, !0))
                  : Object.keys(e).forEach((t) =>
                      this._toggleClass(t, !!e[t])
                    ));
            }
            _removeClasses(e) {
              e &&
                (Array.isArray(e) || e instanceof Set
                  ? e.forEach((e) => this._toggleClass(e, !1))
                  : Object.keys(e).forEach((e) => this._toggleClass(e, !1)));
            }
            _toggleClass(e, t) {
              (e = e.trim()) &&
                e.split(/\s+/g).forEach((e) => {
                  t
                    ? this._renderer.addClass(this._ngEl.nativeElement, e)
                    : this._renderer.removeClass(this._ngEl.nativeElement, e);
                });
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(
                r["\u0275\u0275directiveInject"](r.IterableDiffers),
                r["\u0275\u0275directiveInject"](r.KeyValueDiffers),
                r["\u0275\u0275directiveInject"](r.ElementRef),
                r["\u0275\u0275directiveInject"](r.Renderer2)
              );
            }),
            (e.ɵdir = r["\u0275\u0275defineDirective"]({
              type: e,
              selectors: [["", "ngClass", ""]],
              inputs: { klass: ["class", "klass"], ngClass: "ngClass" },
            })),
            e
          );
        })(),
        Fe = (() => {
          class e {
            constructor(e) {
              (this._viewContainerRef = e),
                (this._componentRef = null),
                (this._moduleRef = null);
            }
            ngOnChanges(e) {
              if (
                (this._viewContainerRef.clear(),
                (this._componentRef = null),
                this.ngComponentOutlet)
              ) {
                const t =
                  this.ngComponentOutletInjector ||
                  this._viewContainerRef.parentInjector;
                if (e.ngComponentOutletNgModuleFactory)
                  if (
                    (this._moduleRef && this._moduleRef.destroy(),
                    this.ngComponentOutletNgModuleFactory)
                  ) {
                    const e = t.get(r.NgModuleRef);
                    this._moduleRef = this.ngComponentOutletNgModuleFactory.create(
                      e.injector
                    );
                  } else this._moduleRef = null;
                const n = (this._moduleRef
                  ? this._moduleRef.componentFactoryResolver
                  : t.get(r.ComponentFactoryResolver)
                ).resolveComponentFactory(this.ngComponentOutlet);
                this._componentRef = this._viewContainerRef.createComponent(
                  n,
                  this._viewContainerRef.length,
                  t,
                  this.ngComponentOutletContent
                );
              }
            }
            ngOnDestroy() {
              this._moduleRef && this._moduleRef.destroy();
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(
                r["\u0275\u0275directiveInject"](r.ViewContainerRef)
              );
            }),
            (e.ɵdir = r["\u0275\u0275defineDirective"]({
              type: e,
              selectors: [["", "ngComponentOutlet", ""]],
              inputs: {
                ngComponentOutlet: "ngComponentOutlet",
                ngComponentOutletInjector: "ngComponentOutletInjector",
                ngComponentOutletContent: "ngComponentOutletContent",
                ngComponentOutletNgModuleFactory:
                  "ngComponentOutletNgModuleFactory",
              },
              features: [r["\u0275\u0275NgOnChangesFeature"]],
            })),
            e
          );
        })();
      class Pe {
        constructor(e, t, n, r) {
          (this.$implicit = e),
            (this.ngForOf = t),
            (this.index = n),
            (this.count = r);
        }
        get first() {
          return 0 === this.index;
        }
        get last() {
          return this.index === this.count - 1;
        }
        get even() {
          return this.index % 2 == 0;
        }
        get odd() {
          return !this.even;
        }
      }
      let je = (() => {
        class e {
          constructor(e, t, n) {
            (this._viewContainer = e),
              (this._template = t),
              (this._differs = n),
              (this._ngForOf = null),
              (this._ngForOfDirty = !0),
              (this._differ = null);
          }
          set ngForOf(e) {
            (this._ngForOf = e), (this._ngForOfDirty = !0);
          }
          set ngForTrackBy(e) {
            Object(r.isDevMode)() &&
              null != e &&
              "function" != typeof e &&
              console &&
              console.warn &&
              console.warn(
                `trackBy must be a function, but received ${JSON.stringify(
                  e
                )}. See https://angular.io/api/common/NgForOf#change-propagation for more information.`
              ),
              (this._trackByFn = e);
          }
          get ngForTrackBy() {
            return this._trackByFn;
          }
          set ngForTemplate(e) {
            e && (this._template = e);
          }
          ngDoCheck() {
            if (this._ngForOfDirty) {
              this._ngForOfDirty = !1;
              const n = this._ngForOf;
              if (!this._differ && n)
                try {
                  this._differ = this._differs
                    .find(n)
                    .create(this.ngForTrackBy);
                } catch (t) {
                  throw new Error(
                    `Cannot find a differ supporting object '${n}' of type '${
                      ((e = n), e.name || typeof e)
                    }'. NgFor only supports binding to Iterables such as Arrays.`
                  );
                }
            }
            var e;
            if (this._differ) {
              const e = this._differ.diff(this._ngForOf);
              e && this._applyChanges(e);
            }
          }
          _applyChanges(e) {
            const t = [];
            e.forEachOperation((e, n, r) => {
              if (null == e.previousIndex) {
                const n = this._viewContainer.createEmbeddedView(
                    this._template,
                    new Pe(null, this._ngForOf, -1, -1),
                    null === r ? void 0 : r
                  ),
                  i = new Ne(e, n);
                t.push(i);
              } else if (null == r)
                this._viewContainer.remove(null === n ? void 0 : n);
              else if (null !== n) {
                const i = this._viewContainer.get(n);
                this._viewContainer.move(i, r);
                const s = new Ne(e, i);
                t.push(s);
              }
            });
            for (let n = 0; n < t.length; n++)
              this._perViewChange(t[n].view, t[n].record);
            for (let n = 0, r = this._viewContainer.length; n < r; n++) {
              const e = this._viewContainer.get(n);
              (e.context.index = n),
                (e.context.count = r),
                (e.context.ngForOf = this._ngForOf);
            }
            e.forEachIdentityChange((e) => {
              this._viewContainer.get(e.currentIndex).context.$implicit =
                e.item;
            });
          }
          _perViewChange(e, t) {
            e.context.$implicit = t.item;
          }
          static ngTemplateContextGuard(e, t) {
            return !0;
          }
        }
        return (
          (e.ɵfac = function (t) {
            return new (t || e)(
              r["\u0275\u0275directiveInject"](r.ViewContainerRef),
              r["\u0275\u0275directiveInject"](r.TemplateRef),
              r["\u0275\u0275directiveInject"](r.IterableDiffers)
            );
          }),
          (e.ɵdir = r["\u0275\u0275defineDirective"]({
            type: e,
            selectors: [["", "ngFor", "", "ngForOf", ""]],
            inputs: {
              ngForOf: "ngForOf",
              ngForTrackBy: "ngForTrackBy",
              ngForTemplate: "ngForTemplate",
            },
          })),
          e
        );
      })();
      class Ne {
        constructor(e, t) {
          (this.record = e), (this.view = t);
        }
      }
      let Me = (() => {
        class e {
          constructor(e, t) {
            (this._viewContainer = e),
              (this._context = new Le()),
              (this._thenTemplateRef = null),
              (this._elseTemplateRef = null),
              (this._thenViewRef = null),
              (this._elseViewRef = null),
              (this._thenTemplateRef = t);
          }
          set ngIf(e) {
            (this._context.$implicit = this._context.ngIf = e),
              this._updateView();
          }
          set ngIfThen(e) {
            Ve("ngIfThen", e),
              (this._thenTemplateRef = e),
              (this._thenViewRef = null),
              this._updateView();
          }
          set ngIfElse(e) {
            Ve("ngIfElse", e),
              (this._elseTemplateRef = e),
              (this._elseViewRef = null),
              this._updateView();
          }
          _updateView() {
            this._context.$implicit
              ? this._thenViewRef ||
                (this._viewContainer.clear(),
                (this._elseViewRef = null),
                this._thenTemplateRef &&
                  (this._thenViewRef = this._viewContainer.createEmbeddedView(
                    this._thenTemplateRef,
                    this._context
                  )))
              : this._elseViewRef ||
                (this._viewContainer.clear(),
                (this._thenViewRef = null),
                this._elseTemplateRef &&
                  (this._elseViewRef = this._viewContainer.createEmbeddedView(
                    this._elseTemplateRef,
                    this._context
                  )));
          }
          static ngTemplateContextGuard(e, t) {
            return !0;
          }
        }
        return (
          (e.ɵfac = function (t) {
            return new (t || e)(
              r["\u0275\u0275directiveInject"](r.ViewContainerRef),
              r["\u0275\u0275directiveInject"](r.TemplateRef)
            );
          }),
          (e.ɵdir = r["\u0275\u0275defineDirective"]({
            type: e,
            selectors: [["", "ngIf", ""]],
            inputs: {
              ngIf: "ngIf",
              ngIfThen: "ngIfThen",
              ngIfElse: "ngIfElse",
            },
          })),
          e
        );
      })();
      class Le {
        constructor() {
          (this.$implicit = null), (this.ngIf = null);
        }
      }
      function Ve(e, t) {
        if (t && !t.createEmbeddedView)
          throw new Error(
            `${e} must be a TemplateRef, but received '${Object(
              r["\u0275stringify"]
            )(t)}'.`
          );
      }
      class Be {
        constructor(e, t) {
          (this._viewContainerRef = e),
            (this._templateRef = t),
            (this._created = !1);
        }
        create() {
          (this._created = !0),
            this._viewContainerRef.createEmbeddedView(this._templateRef);
        }
        destroy() {
          (this._created = !1), this._viewContainerRef.clear();
        }
        enforceState(e) {
          e && !this._created
            ? this.create()
            : !e && this._created && this.destroy();
        }
      }
      let ze = (() => {
          class e {
            constructor() {
              (this._defaultUsed = !1),
                (this._caseCount = 0),
                (this._lastCaseCheckIndex = 0),
                (this._lastCasesMatched = !1);
            }
            set ngSwitch(e) {
              (this._ngSwitch = e),
                0 === this._caseCount && this._updateDefaultCases(!0);
            }
            _addCase() {
              return this._caseCount++;
            }
            _addDefault(e) {
              this._defaultViews || (this._defaultViews = []),
                this._defaultViews.push(e);
            }
            _matchCase(e) {
              const t = e == this._ngSwitch;
              return (
                (this._lastCasesMatched = this._lastCasesMatched || t),
                this._lastCaseCheckIndex++,
                this._lastCaseCheckIndex === this._caseCount &&
                  (this._updateDefaultCases(!this._lastCasesMatched),
                  (this._lastCaseCheckIndex = 0),
                  (this._lastCasesMatched = !1)),
                t
              );
            }
            _updateDefaultCases(e) {
              if (this._defaultViews && e !== this._defaultUsed) {
                this._defaultUsed = e;
                for (let t = 0; t < this._defaultViews.length; t++)
                  this._defaultViews[t].enforceState(e);
              }
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)();
            }),
            (e.ɵdir = r["\u0275\u0275defineDirective"]({
              type: e,
              selectors: [["", "ngSwitch", ""]],
              inputs: { ngSwitch: "ngSwitch" },
            })),
            e
          );
        })(),
        Ue = (() => {
          class e {
            constructor(e, t, n) {
              (this.ngSwitch = n), n._addCase(), (this._view = new Be(e, t));
            }
            ngDoCheck() {
              this._view.enforceState(
                this.ngSwitch._matchCase(this.ngSwitchCase)
              );
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(
                r["\u0275\u0275directiveInject"](r.ViewContainerRef),
                r["\u0275\u0275directiveInject"](r.TemplateRef),
                r["\u0275\u0275directiveInject"](ze, 1)
              );
            }),
            (e.ɵdir = r["\u0275\u0275defineDirective"]({
              type: e,
              selectors: [["", "ngSwitchCase", ""]],
              inputs: { ngSwitchCase: "ngSwitchCase" },
            })),
            e
          );
        })(),
        He = (() => {
          class e {
            constructor(e, t, n) {
              n._addDefault(new Be(e, t));
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(
                r["\u0275\u0275directiveInject"](r.ViewContainerRef),
                r["\u0275\u0275directiveInject"](r.TemplateRef),
                r["\u0275\u0275directiveInject"](ze, 1)
              );
            }),
            (e.ɵdir = r["\u0275\u0275defineDirective"]({
              type: e,
              selectors: [["", "ngSwitchDefault", ""]],
            })),
            e
          );
        })(),
        $e = (() => {
          class e {
            constructor(e) {
              (this._localization = e), (this._caseViews = {});
            }
            set ngPlural(e) {
              (this._switchValue = e), this._updateView();
            }
            addCase(e, t) {
              this._caseViews[e] = t;
            }
            _updateView() {
              this._clearViews();
              const e = Object.keys(this._caseViews),
                t = Oe(this._switchValue, e, this._localization);
              this._activateView(this._caseViews[t]);
            }
            _clearViews() {
              this._activeView && this._activeView.destroy();
            }
            _activateView(e) {
              e && ((this._activeView = e), this._activeView.create());
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(r["\u0275\u0275directiveInject"](Ie));
            }),
            (e.ɵdir = r["\u0275\u0275defineDirective"]({
              type: e,
              selectors: [["", "ngPlural", ""]],
              inputs: { ngPlural: "ngPlural" },
            })),
            e
          );
        })(),
        qe = (() => {
          class e {
            constructor(e, t, n, r) {
              this.value = e;
              const i = !isNaN(Number(e));
              r.addCase(i ? "=" + e : e, new Be(n, t));
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(
                r["\u0275\u0275injectAttribute"]("ngPluralCase"),
                r["\u0275\u0275directiveInject"](r.TemplateRef),
                r["\u0275\u0275directiveInject"](r.ViewContainerRef),
                r["\u0275\u0275directiveInject"]($e, 1)
              );
            }),
            (e.ɵdir = r["\u0275\u0275defineDirective"]({
              type: e,
              selectors: [["", "ngPluralCase", ""]],
            })),
            e
          );
        })(),
        Ge = (() => {
          class e {
            constructor(e, t, n) {
              (this._ngEl = e),
                (this._differs = t),
                (this._renderer = n),
                (this._ngStyle = null),
                (this._differ = null);
            }
            set ngStyle(e) {
              (this._ngStyle = e),
                !this._differ &&
                  e &&
                  (this._differ = this._differs.find(e).create());
            }
            ngDoCheck() {
              if (this._differ) {
                const e = this._differ.diff(this._ngStyle);
                e && this._applyChanges(e);
              }
            }
            _setStyle(e, t) {
              const [n, r] = e.split(".");
              null != (t = null != t && r ? `${t}${r}` : t)
                ? this._renderer.setStyle(this._ngEl.nativeElement, n, t)
                : this._renderer.removeStyle(this._ngEl.nativeElement, n);
            }
            _applyChanges(e) {
              e.forEachRemovedItem((e) => this._setStyle(e.key, null)),
                e.forEachAddedItem((e) =>
                  this._setStyle(e.key, e.currentValue)
                ),
                e.forEachChangedItem((e) =>
                  this._setStyle(e.key, e.currentValue)
                );
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(
                r["\u0275\u0275directiveInject"](r.ElementRef),
                r["\u0275\u0275directiveInject"](r.KeyValueDiffers),
                r["\u0275\u0275directiveInject"](r.Renderer2)
              );
            }),
            (e.ɵdir = r["\u0275\u0275defineDirective"]({
              type: e,
              selectors: [["", "ngStyle", ""]],
              inputs: { ngStyle: "ngStyle" },
            })),
            e
          );
        })(),
        We = (() => {
          class e {
            constructor(e) {
              (this._viewContainerRef = e),
                (this._viewRef = null),
                (this.ngTemplateOutletContext = null),
                (this.ngTemplateOutlet = null);
            }
            ngOnChanges(e) {
              if (this._shouldRecreateView(e)) {
                const e = this._viewContainerRef;
                this._viewRef && e.remove(e.indexOf(this._viewRef)),
                  (this._viewRef = this.ngTemplateOutlet
                    ? e.createEmbeddedView(
                        this.ngTemplateOutlet,
                        this.ngTemplateOutletContext
                      )
                    : null);
              } else
                this._viewRef &&
                  this.ngTemplateOutletContext &&
                  this._updateExistingContext(this.ngTemplateOutletContext);
            }
            _shouldRecreateView(e) {
              const t = e.ngTemplateOutletContext;
              return (
                !!e.ngTemplateOutlet || (t && this._hasContextShapeChanged(t))
              );
            }
            _hasContextShapeChanged(e) {
              const t = Object.keys(e.previousValue || {}),
                n = Object.keys(e.currentValue || {});
              if (t.length === n.length) {
                for (let e of n) if (-1 === t.indexOf(e)) return !0;
                return !1;
              }
              return !0;
            }
            _updateExistingContext(e) {
              for (let t of Object.keys(e))
                this._viewRef.context[t] = this.ngTemplateOutletContext[t];
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(
                r["\u0275\u0275directiveInject"](r.ViewContainerRef)
              );
            }),
            (e.ɵdir = r["\u0275\u0275defineDirective"]({
              type: e,
              selectors: [["", "ngTemplateOutlet", ""]],
              inputs: {
                ngTemplateOutletContext: "ngTemplateOutletContext",
                ngTemplateOutlet: "ngTemplateOutlet",
              },
              features: [r["\u0275\u0275NgOnChangesFeature"]],
            })),
            e
          );
        })();
      const Qe = [Te, Fe, je, Me, We, Ge, ze, Ue, He, $e, qe];
      function Ke(e, t) {
        return Error(
          `InvalidPipeArgument: '${t}' for pipe '${Object(r["\u0275stringify"])(
            e
          )}'`
        );
      }
      class Ze {
        createSubscription(e, t) {
          return e.subscribe({
            next: t,
            error: (e) => {
              throw e;
            },
          });
        }
        dispose(e) {
          e.unsubscribe();
        }
        onDestroy(e) {
          e.unsubscribe();
        }
      }
      class Ye {
        createSubscription(e, t) {
          return e.then(t, (e) => {
            throw e;
          });
        }
        dispose(e) {}
        onDestroy(e) {}
      }
      const Xe = new Ye(),
        Je = new Ze();
      let et = (() => {
          class e {
            constructor(e) {
              (this._ref = e),
                (this._latestValue = null),
                (this._latestReturnedValue = null),
                (this._subscription = null),
                (this._obj = null),
                (this._strategy = null);
            }
            ngOnDestroy() {
              this._subscription && this._dispose();
            }
            transform(e) {
              return this._obj
                ? e !== this._obj
                  ? (this._dispose(), this.transform(e))
                  : Object(r["\u0275looseIdentical"])(
                      this._latestValue,
                      this._latestReturnedValue
                    )
                  ? this._latestReturnedValue
                  : ((this._latestReturnedValue = this._latestValue),
                    r.WrappedValue.wrap(this._latestValue))
                : (e && this._subscribe(e),
                  (this._latestReturnedValue = this._latestValue),
                  this._latestValue);
            }
            _subscribe(e) {
              (this._obj = e),
                (this._strategy = this._selectStrategy(e)),
                (this._subscription = this._strategy.createSubscription(
                  e,
                  (t) => this._updateLatestValue(e, t)
                ));
            }
            _selectStrategy(t) {
              if (Object(r["\u0275isPromise"])(t)) return Xe;
              if (Object(r["\u0275isObservable"])(t)) return Je;
              throw Ke(e, t);
            }
            _dispose() {
              this._strategy.dispose(this._subscription),
                (this._latestValue = null),
                (this._latestReturnedValue = null),
                (this._subscription = null),
                (this._obj = null);
            }
            _updateLatestValue(e, t) {
              e === this._obj &&
                ((this._latestValue = t), this._ref.markForCheck());
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(
                r["\u0275\u0275injectPipeChangeDetectorRef"]()
              );
            }),
            (e.ɵpipe = r["\u0275\u0275definePipe"]({
              name: "async",
              type: e,
              pure: !1,
            })),
            e
          );
        })(),
        tt = (() => {
          class e {
            transform(t) {
              if (!t) return t;
              if ("string" != typeof t) throw Ke(e, t);
              return t.toLowerCase();
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)();
            }),
            (e.ɵpipe = r["\u0275\u0275definePipe"]({
              name: "lowercase",
              type: e,
              pure: !0,
            })),
            e
          );
        })();
      const nt = /(?:[A-Za-z\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u0860-\u086A\u08A0-\u08B4\u08B6-\u08BD\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u09FC\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C60\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16F1-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u1884\u1887-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1C80-\u1C88\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2183\u2184\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005\u3006\u3031-\u3035\u303B\u303C\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312E\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FEA\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6E5\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AE\uA7B0-\uA7B7\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDE80-\uDE9C\uDEA0-\uDED0\uDF00-\uDF1F\uDF2D-\uDF40\uDF42-\uDF49\uDF50-\uDF75\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF]|\uD801[\uDC00-\uDC9D\uDCB0-\uDCD3\uDCD8-\uDCFB\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE4\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2]|\uD804[\uDC03-\uDC37\uDC83-\uDCAF\uDCD0-\uDCE8\uDD03-\uDD26\uDD50-\uDD72\uDD76\uDD83-\uDDB2\uDDC1-\uDDC4\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE2B\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEDE\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3D\uDF50\uDF5D-\uDF61]|\uD805[\uDC00-\uDC34\uDC47-\uDC4A\uDC80-\uDCAF\uDCC4\uDCC5\uDCC7\uDD80-\uDDAE\uDDD8-\uDDDB\uDE00-\uDE2F\uDE44\uDE80-\uDEAA\uDF00-\uDF19]|\uD806[\uDCA0-\uDCDF\uDCFF\uDE00\uDE0B-\uDE32\uDE3A\uDE50\uDE5C-\uDE83\uDE86-\uDE89\uDEC0-\uDEF8]|\uD807[\uDC00-\uDC08\uDC0A-\uDC2E\uDC40\uDC72-\uDC8F\uDD00-\uDD06\uDD08\uDD09\uDD0B-\uDD30\uDD46]|\uD808[\uDC00-\uDF99]|\uD809[\uDC80-\uDD43]|[\uD80C\uD81C-\uD820\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872\uD874-\uD879][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDED0-\uDEED\uDF00-\uDF2F\uDF40-\uDF43\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50\uDF93-\uDF9F\uDFE0\uDFE1]|\uD821[\uDC00-\uDFEC]|\uD822[\uDC00-\uDEF2]|\uD82C[\uDC00-\uDD1E\uDD70-\uDEFB]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB]|\uD83A[\uDC00-\uDCC4\uDD00-\uDD43]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1\uDEB0-\uDFFF]|\uD87A[\uDC00-\uDFE0]|\uD87E[\uDC00-\uDE1D])\S*/g;
      let rt = (() => {
          class e {
            transform(t) {
              if (!t) return t;
              if ("string" != typeof t) throw Ke(e, t);
              return t.replace(
                nt,
                (e) => e[0].toUpperCase() + e.substr(1).toLowerCase()
              );
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)();
            }),
            (e.ɵpipe = r["\u0275\u0275definePipe"]({
              name: "titlecase",
              type: e,
              pure: !0,
            })),
            e
          );
        })(),
        it = (() => {
          class e {
            transform(t) {
              if (!t) return t;
              if ("string" != typeof t) throw Ke(e, t);
              return t.toUpperCase();
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)();
            }),
            (e.ɵpipe = r["\u0275\u0275definePipe"]({
              name: "uppercase",
              type: e,
              pure: !0,
            })),
            e
          );
        })(),
        st = (() => {
          class e {
            constructor(e) {
              this.locale = e;
            }
            transform(t, n = "mediumDate", r, i) {
              if (null == t || "" === t || t != t) return null;
              try {
                return ue(t, n, i || this.locale, r);
              } catch (s) {
                throw Ke(e, s.message);
              }
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(
                r["\u0275\u0275directiveInject"](r.LOCALE_ID)
              );
            }),
            (e.ɵpipe = r["\u0275\u0275definePipe"]({
              name: "date",
              type: e,
              pure: !0,
            })),
            e
          );
        })();
      const ot = /#/g;
      let at = (() => {
          class e {
            constructor(e) {
              this._localization = e;
            }
            transform(t, n, r) {
              if (null == t) return "";
              if ("object" != typeof n || null === n) throw Ke(e, n);
              return n[Oe(t, Object.keys(n), this._localization, r)].replace(
                ot,
                t.toString()
              );
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(r["\u0275\u0275directiveInject"](Ie));
            }),
            (e.ɵpipe = r["\u0275\u0275definePipe"]({
              name: "i18nPlural",
              type: e,
              pure: !0,
            })),
            e
          );
        })(),
        lt = (() => {
          class e {
            transform(t, n) {
              if (null == t) return "";
              if ("object" != typeof n || "string" != typeof t) throw Ke(e, n);
              return n.hasOwnProperty(t)
                ? n[t]
                : n.hasOwnProperty("other")
                ? n.other
                : "";
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)();
            }),
            (e.ɵpipe = r["\u0275\u0275definePipe"]({
              name: "i18nSelect",
              type: e,
              pure: !0,
            })),
            e
          );
        })(),
        ct = (() => {
          class e {
            transform(e) {
              return JSON.stringify(e, null, 2);
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)();
            }),
            (e.ɵpipe = r["\u0275\u0275definePipe"]({
              name: "json",
              type: e,
              pure: !1,
            })),
            e
          );
        })(),
        ut = (() => {
          class e {
            constructor(e) {
              (this.differs = e), (this.keyValues = []);
            }
            transform(e, t = ht) {
              if (!e || (!(e instanceof Map) && "object" != typeof e))
                return null;
              this.differ || (this.differ = this.differs.find(e).create());
              const n = this.differ.diff(e);
              return (
                n &&
                  ((this.keyValues = []),
                  n.forEachItem((e) => {
                    this.keyValues.push({ key: e.key, value: e.currentValue });
                  }),
                  this.keyValues.sort(t)),
                this.keyValues
              );
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(
                r["\u0275\u0275directiveInject"](r.KeyValueDiffers)
              );
            }),
            (e.ɵpipe = r["\u0275\u0275definePipe"]({
              name: "keyvalue",
              type: e,
              pure: !1,
            })),
            e
          );
        })();
      function ht(e, t) {
        const n = e.key,
          r = t.key;
        if (n === r) return 0;
        if (void 0 === n) return 1;
        if (void 0 === r) return -1;
        if (null === n) return 1;
        if (null === r) return -1;
        if ("string" == typeof n && "string" == typeof r) return n < r ? -1 : 1;
        if ("number" == typeof n && "number" == typeof r) return n - r;
        if ("boolean" == typeof n && "boolean" == typeof r)
          return n < r ? -1 : 1;
        const i = String(n),
          s = String(r);
        return i == s ? 0 : i < s ? -1 : 1;
      }
      let dt = (() => {
          class e {
            constructor(e) {
              this._locale = e;
            }
            transform(t, n, r) {
              if (mt(t)) return null;
              r = r || this._locale;
              try {
                return Ee(gt(t), r, n);
              } catch (i) {
                throw Ke(e, i.message);
              }
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(
                r["\u0275\u0275directiveInject"](r.LOCALE_ID)
              );
            }),
            (e.ɵpipe = r["\u0275\u0275definePipe"]({
              name: "number",
              type: e,
              pure: !0,
            })),
            e
          );
        })(),
        ft = (() => {
          class e {
            constructor(e) {
              this._locale = e;
            }
            transform(t, n, r) {
              if (mt(t)) return null;
              r = r || this._locale;
              try {
                return Se(gt(t), r, n);
              } catch (i) {
                throw Ke(e, i.message);
              }
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(
                r["\u0275\u0275directiveInject"](r.LOCALE_ID)
              );
            }),
            (e.ɵpipe = r["\u0275\u0275definePipe"]({
              name: "percent",
              type: e,
              pure: !0,
            })),
            e
          );
        })(),
        pt = (() => {
          class e {
            constructor(e, t = "USD") {
              (this._locale = e), (this._defaultCurrencyCode = t);
            }
            transform(t, n, r = "symbol", i, s) {
              if (mt(t)) return null;
              (s = s || this._locale),
                "boolean" == typeof r &&
                  (console &&
                    console.warn &&
                    console.warn(
                      'Warning: the currency pipe has been changed in Angular v5. The symbolDisplay option (third parameter) is now a string instead of a boolean. The accepted values are "code", "symbol" or "symbol-narrow".'
                    ),
                  (r = r ? "symbol" : "code"));
              let o = n || this._defaultCurrencyCode;
              "code" !== r &&
                (o =
                  "symbol" === r || "symbol-narrow" === r
                    ? ne(o, "symbol" === r ? "wide" : "narrow", s)
                    : r);
              try {
                return Ce(gt(t), s, o, n, i);
              } catch (a) {
                throw Ke(e, a.message);
              }
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(
                r["\u0275\u0275directiveInject"](r.LOCALE_ID),
                r["\u0275\u0275directiveInject"](r.DEFAULT_CURRENCY_CODE)
              );
            }),
            (e.ɵpipe = r["\u0275\u0275definePipe"]({
              name: "currency",
              type: e,
              pure: !0,
            })),
            e
          );
        })();
      function mt(e) {
        return null == e || "" === e || e != e;
      }
      function gt(e) {
        if ("string" == typeof e && !isNaN(Number(e) - parseFloat(e)))
          return Number(e);
        if ("number" != typeof e) throw new Error(e + " is not a number");
        return e;
      }
      let _t = (() => {
        class e {
          transform(t, n, r) {
            if (null == t) return t;
            if (!this.supports(t)) throw Ke(e, t);
            return t.slice(n, r);
          }
          supports(e) {
            return "string" == typeof e || Array.isArray(e);
          }
        }
        return (
          (e.ɵfac = function (t) {
            return new (t || e)();
          }),
          (e.ɵpipe = r["\u0275\u0275definePipe"]({
            name: "slice",
            type: e,
            pure: !1,
          })),
          e
        );
      })();
      const yt = [et, it, tt, ct, _t, dt, ft, rt, pt, st, at, lt, ut];
      let vt = (() => {
        class e {}
        return (
          (e.ɵmod = r["\u0275\u0275defineNgModule"]({ type: e })),
          (e.ɵinj = r["\u0275\u0275defineInjector"]({
            factory: function (t) {
              return new (t || e)();
            },
            providers: [{ provide: Ie, useClass: ke }],
          })),
          e
        );
      })();
      const bt = "browser",
        wt = "server",
        Ct = "browserWorkerApp",
        St = "browserWorkerUi";
      function Et(e) {
        return e === bt;
      }
      function xt(e) {
        return e === wt;
      }
      function Dt(e) {
        return e === Ct;
      }
      function It(e) {
        return e === St;
      }
      const Ot = new r.Version("9.1.12");
      let kt = (() => {
        class e {}
        return (
          (e.ɵprov = Object(r["\u0275\u0275defineInjectable"])({
            token: e,
            providedIn: "root",
            factory: () =>
              new Rt(
                Object(r["\u0275\u0275inject"])(l),
                window,
                Object(r["\u0275\u0275inject"])(r.ErrorHandler)
              ),
          })),
          e
        );
      })();
      class Rt {
        constructor(e, t, n) {
          (this.document = e),
            (this.window = t),
            (this.errorHandler = n),
            (this.offset = () => [0, 0]);
        }
        setOffset(e) {
          this.offset = Array.isArray(e) ? () => e : e;
        }
        getScrollPosition() {
          return this.supportScrollRestoration()
            ? [this.window.scrollX, this.window.scrollY]
            : [0, 0];
        }
        scrollToPosition(e) {
          this.supportScrollRestoration() && this.window.scrollTo(e[0], e[1]);
        }
        scrollToAnchor(e) {
          if (this.supportScrollRestoration()) {
            e =
              this.window.CSS && this.window.CSS.escape
                ? this.window.CSS.escape(e)
                : e.replace(/(\"|\'\ |:|\.|\[|\]|,|=)/g, "\\$1");
            try {
              const t = this.document.querySelector("#" + e);
              if (t) return void this.scrollToElement(t);
              const n = this.document.querySelector(`[name='${e}']`);
              if (n) return void this.scrollToElement(n);
            } catch (t) {
              this.errorHandler.handleError(t);
            }
          }
        }
        setHistoryScrollRestoration(e) {
          if (this.supportScrollRestoration()) {
            const t = this.window.history;
            t && t.scrollRestoration && (t.scrollRestoration = e);
          }
        }
        scrollToElement(e) {
          const t = e.getBoundingClientRect(),
            n = t.left + this.window.pageXOffset,
            r = t.top + this.window.pageYOffset,
            i = this.offset();
          this.window.scrollTo(n - i[0], r - i[1]);
        }
        supportScrollRestoration() {
          try {
            return !!this.window && !!this.window.scrollTo;
          } catch (e) {
            return !1;
          }
        }
      }
      class At {
        setOffset(e) {}
        getScrollPosition() {
          return [0, 0];
        }
        scrollToPosition(e) {}
        scrollToAnchor(e) {}
        setHistoryScrollRestoration(e) {}
      }
    },
    quSY: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return a;
      });
      var r = n("DH7j"),
        i = n("XoHu"),
        s = n("n6bG");
      const o = (() => {
        function e(e) {
          return (
            Error.call(this),
            (this.message = e
              ? `${e.length} errors occurred during unsubscription:\n${e
                  .map((e, t) => `${t + 1}) ${e.toString()}`)
                  .join("\n  ")}`
              : ""),
            (this.name = "UnsubscriptionError"),
            (this.errors = e),
            this
          );
        }
        return (e.prototype = Object.create(Error.prototype)), e;
      })();
      let a = (() => {
        class e {
          constructor(e) {
            (this.closed = !1),
              (this._parentOrParents = null),
              (this._subscriptions = null),
              e && (this._unsubscribe = e);
          }
          unsubscribe() {
            let t;
            if (this.closed) return;
            let {
              _parentOrParents: n,
              _unsubscribe: a,
              _subscriptions: c,
            } = this;
            if (
              ((this.closed = !0),
              (this._parentOrParents = null),
              (this._subscriptions = null),
              n instanceof e)
            )
              n.remove(this);
            else if (null !== n)
              for (let e = 0; e < n.length; ++e) n[e].remove(this);
            if (Object(s.a)(a))
              try {
                a.call(this);
              } catch (u) {
                t = u instanceof o ? l(u.errors) : [u];
              }
            if (Object(r.a)(c)) {
              let e = -1,
                n = c.length;
              for (; ++e < n; ) {
                const n = c[e];
                if (Object(i.a)(n))
                  try {
                    n.unsubscribe();
                  } catch (u) {
                    (t = t || []),
                      u instanceof o ? (t = t.concat(l(u.errors))) : t.push(u);
                  }
              }
            }
            if (t) throw new o(t);
          }
          add(t) {
            let n = t;
            if (!t) return e.EMPTY;
            switch (typeof t) {
              case "function":
                n = new e(t);
              case "object":
                if (
                  n === this ||
                  n.closed ||
                  "function" != typeof n.unsubscribe
                )
                  return n;
                if (this.closed) return n.unsubscribe(), n;
                if (!(n instanceof e)) {
                  const t = n;
                  (n = new e()), (n._subscriptions = [t]);
                }
                break;
              default:
                throw new Error(
                  "unrecognized teardown " + t + " added to Subscription."
                );
            }
            let { _parentOrParents: r } = n;
            if (null === r) n._parentOrParents = this;
            else if (r instanceof e) {
              if (r === this) return n;
              n._parentOrParents = [r, this];
            } else {
              if (-1 !== r.indexOf(this)) return n;
              r.push(this);
            }
            const i = this._subscriptions;
            return null === i ? (this._subscriptions = [n]) : i.push(n), n;
          }
          remove(e) {
            const t = this._subscriptions;
            if (t) {
              const n = t.indexOf(e);
              -1 !== n && t.splice(n, 1);
            }
          }
        }
        var t;
        return (e.EMPTY = (((t = new e()).closed = !0), t)), e;
      })();
      function l(e) {
        return e.reduce((e, t) => e.concat(t instanceof o ? t.errors : t), []);
      }
    },
    sriv: function (e, t, n) {
      var r = n("mJn+");
      Object.defineProperty(t, "__esModule", { value: !0 });
      var i = n("hI8m");
      t.FlashMessagesModule = i.FlashMessagesModule;
      var s = n("bnWe");
      (t.FlashMessagesService = s.FlashMessagesService),
        (t.FlashMessagesComponent = r.FlashMessagesComponent);
    },
    w1tV: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return p;
      });
      var r = n("XNiG"),
        i = n("HDdC"),
        s = n("7o/Q"),
        o = n("quSY");
      function a() {
        return function (e) {
          return e.lift(new l(e));
        };
      }
      class l {
        constructor(e) {
          this.connectable = e;
        }
        call(e, t) {
          const { connectable: n } = this;
          n._refCount++;
          const r = new c(e, n),
            i = t.subscribe(r);
          return r.closed || (r.connection = n.connect()), i;
        }
      }
      class c extends s.a {
        constructor(e, t) {
          super(e), (this.connectable = t);
        }
        _unsubscribe() {
          const { connectable: e } = this;
          if (!e) return void (this.connection = null);
          this.connectable = null;
          const t = e._refCount;
          if (t <= 0) return void (this.connection = null);
          if (((e._refCount = t - 1), t > 1))
            return void (this.connection = null);
          const { connection: n } = this,
            r = e._connection;
          (this.connection = null), !r || (n && r !== n) || r.unsubscribe();
        }
      }
      class u extends i.a {
        constructor(e, t) {
          super(),
            (this.source = e),
            (this.subjectFactory = t),
            (this._refCount = 0),
            (this._isComplete = !1);
        }
        _subscribe(e) {
          return this.getSubject().subscribe(e);
        }
        getSubject() {
          const e = this._subject;
          return (
            (e && !e.isStopped) || (this._subject = this.subjectFactory()),
            this._subject
          );
        }
        connect() {
          let e = this._connection;
          return (
            e ||
              ((this._isComplete = !1),
              (e = this._connection = new o.a()),
              e.add(this.source.subscribe(new d(this.getSubject(), this))),
              e.closed && ((this._connection = null), (e = o.a.EMPTY))),
            e
          );
        }
        refCount() {
          return a()(this);
        }
      }
      const h = (() => {
        const e = u.prototype;
        return {
          operator: { value: null },
          _refCount: { value: 0, writable: !0 },
          _subject: { value: null, writable: !0 },
          _connection: { value: null, writable: !0 },
          _subscribe: { value: e._subscribe },
          _isComplete: { value: e._isComplete, writable: !0 },
          getSubject: { value: e.getSubject },
          connect: { value: e.connect },
          refCount: { value: e.refCount },
        };
      })();
      class d extends r.b {
        constructor(e, t) {
          super(e), (this.connectable = t);
        }
        _error(e) {
          this._unsubscribe(), super._error(e);
        }
        _complete() {
          (this.connectable._isComplete = !0),
            this._unsubscribe(),
            super._complete();
        }
        _unsubscribe() {
          const e = this.connectable;
          if (e) {
            this.connectable = null;
            const t = e._connection;
            (e._refCount = 0),
              (e._subject = null),
              (e._connection = null),
              t && t.unsubscribe();
          }
        }
      }
      function f() {
        return new r.a();
      }
      function p() {
        return (e) => {
          return a()(
            ((t = f),
            function (e) {
              let n;
              n =
                "function" == typeof t
                  ? t
                  : function () {
                      return t;
                    };
              const r = Object.create(e, h);
              return (r.source = e), (r.subjectFactory = n), r;
            })(e)
          );
          var t;
        };
      }
    },
    yCtX: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return o;
      });
      var r = n("HDdC"),
        i = n("ngJS"),
        s = n("jZKg");
      function o(e, t) {
        return t ? Object(s.a)(e, t) : new r.a(Object(i.a)(e));
      }
    },
    "z+Ro": function (e, t, n) {
      "use strict";
      function r(e) {
        return e && "function" == typeof e.schedule;
      }
      n.d(t, "a", function () {
        return r;
      });
    },
    zUnb: function (e, t, n) {
      "use strict";
      n.r(t);
      var r = n("fXoL"),
        i = n("ofXK");
      class s extends i["\u0275DomAdapter"] {
        constructor() {
          super();
        }
        supportsDOMEvents() {
          return !0;
        }
      }
      class o extends s {
        static makeCurrent() {
          Object(i["\u0275setRootDomAdapter"])(new o());
        }
        getProperty(e, t) {
          return e[t];
        }
        log(e) {
          window.console && window.console.log && window.console.log(e);
        }
        logGroup(e) {
          window.console && window.console.group && window.console.group(e);
        }
        logGroupEnd() {
          window.console &&
            window.console.groupEnd &&
            window.console.groupEnd();
        }
        onAndCancel(e, t, n) {
          return (
            e.addEventListener(t, n, !1),
            () => {
              e.removeEventListener(t, n, !1);
            }
          );
        }
        dispatchEvent(e, t) {
          e.dispatchEvent(t);
        }
        remove(e) {
          return e.parentNode && e.parentNode.removeChild(e), e;
        }
        getValue(e) {
          return e.value;
        }
        createElement(e, t) {
          return (t = t || this.getDefaultDocument()).createElement(e);
        }
        createHtmlDocument() {
          return document.implementation.createHTMLDocument("fakeTitle");
        }
        getDefaultDocument() {
          return document;
        }
        isElementNode(e) {
          return e.nodeType === Node.ELEMENT_NODE;
        }
        isShadowRoot(e) {
          return e instanceof DocumentFragment;
        }
        getGlobalEventTarget(e, t) {
          return "window" === t
            ? window
            : "document" === t
            ? e
            : "body" === t
            ? e.body
            : null;
        }
        getHistory() {
          return window.history;
        }
        getLocation() {
          return window.location;
        }
        getBaseHref(e) {
          const t =
            l || ((l = document.querySelector("base")), l)
              ? l.getAttribute("href")
              : null;
          return null == t
            ? null
            : ((n = t),
              a || (a = document.createElement("a")),
              a.setAttribute("href", n),
              "/" === a.pathname.charAt(0) ? a.pathname : "/" + a.pathname);
          var n;
        }
        resetBaseElement() {
          l = null;
        }
        getUserAgent() {
          return window.navigator.userAgent;
        }
        performanceNow() {
          return window.performance && window.performance.now
            ? window.performance.now()
            : new Date().getTime();
        }
        supportsCookies() {
          return !0;
        }
        getCookie(e) {
          return Object(i["\u0275parseCookieValue"])(document.cookie, e);
        }
      }
      let a,
        l = null;
      const c = new r.InjectionToken("TRANSITION_ID"),
        u = [
          {
            provide: r.APP_INITIALIZER,
            useFactory: function (e, t, n) {
              return () => {
                n.get(r.ApplicationInitStatus).donePromise.then(() => {
                  const n = Object(i["\u0275getDOM"])();
                  Array.prototype.slice
                    .apply(t.querySelectorAll("style[ng-transition]"))
                    .filter((t) => t.getAttribute("ng-transition") === e)
                    .forEach((e) => n.remove(e));
                });
              };
            },
            deps: [c, i.DOCUMENT, r.Injector],
            multi: !0,
          },
        ];
      class h {
        static init() {
          Object(r.setTestabilityGetter)(new h());
        }
        addToWindow(e) {
          (r["\u0275global"].getAngularTestability = (t, n = !0) => {
            const r = e.findTestabilityInTree(t, n);
            if (null == r)
              throw new Error("Could not find testability for element.");
            return r;
          }),
            (r["\u0275global"].getAllAngularTestabilities = () =>
              e.getAllTestabilities()),
            (r["\u0275global"].getAllAngularRootElements = () =>
              e.getAllRootElements()),
            r["\u0275global"].frameworkStabilizers ||
              (r["\u0275global"].frameworkStabilizers = []),
            r["\u0275global"].frameworkStabilizers.push((e) => {
              const t = r["\u0275global"].getAllAngularTestabilities();
              let n = t.length,
                i = !1;
              const s = function (t) {
                (i = i || t), n--, 0 == n && e(i);
              };
              t.forEach(function (e) {
                e.whenStable(s);
              });
            });
        }
        findTestabilityInTree(e, t, n) {
          if (null == t) return null;
          const r = e.getTestability(t);
          return null != r
            ? r
            : n
            ? Object(i["\u0275getDOM"])().isShadowRoot(t)
              ? this.findTestabilityInTree(e, t.host, !0)
              : this.findTestabilityInTree(e, t.parentElement, !0)
            : null;
        }
      }
      const d = new r.InjectionToken("EventManagerPlugins");
      let f = (() => {
        class e {
          constructor(e, t) {
            (this._zone = t),
              (this._eventNameToPlugin = new Map()),
              e.forEach((e) => (e.manager = this)),
              (this._plugins = e.slice().reverse());
          }
          addEventListener(e, t, n) {
            return this._findPluginFor(t).addEventListener(e, t, n);
          }
          addGlobalEventListener(e, t, n) {
            return this._findPluginFor(t).addGlobalEventListener(e, t, n);
          }
          getZone() {
            return this._zone;
          }
          _findPluginFor(e) {
            const t = this._eventNameToPlugin.get(e);
            if (t) return t;
            const n = this._plugins;
            for (let r = 0; r < n.length; r++) {
              const t = n[r];
              if (t.supports(e)) return this._eventNameToPlugin.set(e, t), t;
            }
            throw new Error("No event manager plugin found for event " + e);
          }
        }
        return (
          (e.ɵfac = function (t) {
            return new (t || e)(
              r["\u0275\u0275inject"](d),
              r["\u0275\u0275inject"](r.NgZone)
            );
          }),
          (e.ɵprov = r["\u0275\u0275defineInjectable"]({
            token: e,
            factory: e.ɵfac,
          })),
          e
        );
      })();
      class p {
        constructor(e) {
          this._doc = e;
        }
        addGlobalEventListener(e, t, n) {
          const r = Object(i["\u0275getDOM"])().getGlobalEventTarget(
            this._doc,
            e
          );
          if (!r)
            throw new Error(`Unsupported event target ${r} for event ${t}`);
          return this.addEventListener(r, t, n);
        }
      }
      let m = (() => {
          class e {
            constructor() {
              this._stylesSet = new Set();
            }
            addStyles(e) {
              const t = new Set();
              e.forEach((e) => {
                this._stylesSet.has(e) || (this._stylesSet.add(e), t.add(e));
              }),
                this.onStylesAdded(t);
            }
            onStylesAdded(e) {}
            getAllStyles() {
              return Array.from(this._stylesSet);
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)();
            }),
            (e.ɵprov = r["\u0275\u0275defineInjectable"]({
              token: e,
              factory: e.ɵfac,
            })),
            e
          );
        })(),
        g = (() => {
          class e extends m {
            constructor(e) {
              super(),
                (this._doc = e),
                (this._hostNodes = new Set()),
                (this._styleNodes = new Set()),
                this._hostNodes.add(e.head);
            }
            _addStylesToHost(e, t) {
              e.forEach((e) => {
                const n = this._doc.createElement("style");
                (n.textContent = e), this._styleNodes.add(t.appendChild(n));
              });
            }
            addHost(e) {
              this._addStylesToHost(this._stylesSet, e), this._hostNodes.add(e);
            }
            removeHost(e) {
              this._hostNodes.delete(e);
            }
            onStylesAdded(e) {
              this._hostNodes.forEach((t) => this._addStylesToHost(e, t));
            }
            ngOnDestroy() {
              this._styleNodes.forEach((e) =>
                Object(i["\u0275getDOM"])().remove(e)
              );
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(r["\u0275\u0275inject"](i.DOCUMENT));
            }),
            (e.ɵprov = r["\u0275\u0275defineInjectable"]({
              token: e,
              factory: e.ɵfac,
            })),
            e
          );
        })();
      const _ = {
          svg: "http://www.w3.org/2000/svg",
          xhtml: "http://www.w3.org/1999/xhtml",
          xlink: "http://www.w3.org/1999/xlink",
          xml: "http://www.w3.org/XML/1998/namespace",
          xmlns: "http://www.w3.org/2000/xmlns/",
        },
        y = /%COMP%/g;
      function v(e, t, n) {
        for (let r = 0; r < t.length; r++) {
          let i = t[r];
          Array.isArray(i) ? v(e, i, n) : ((i = i.replace(y, e)), n.push(i));
        }
        return n;
      }
      function b(e) {
        return (t) => {
          if ("__ngUnwrap__" === t) return e;
          !1 === e(t) && (t.preventDefault(), (t.returnValue = !1));
        };
      }
      let w = (() => {
        class e {
          constructor(e, t, n) {
            (this.eventManager = e),
              (this.sharedStylesHost = t),
              (this.appId = n),
              (this.rendererByCompId = new Map()),
              (this.defaultRenderer = new C(e));
          }
          createRenderer(e, t) {
            if (!e || !t) return this.defaultRenderer;
            switch (t.encapsulation) {
              case r.ViewEncapsulation.Emulated: {
                let n = this.rendererByCompId.get(t.id);
                return (
                  n ||
                    ((n = new S(
                      this.eventManager,
                      this.sharedStylesHost,
                      t,
                      this.appId
                    )),
                    this.rendererByCompId.set(t.id, n)),
                  n.applyToHost(e),
                  n
                );
              }
              case r.ViewEncapsulation.Native:
              case r.ViewEncapsulation.ShadowDom:
                return new E(this.eventManager, this.sharedStylesHost, e, t);
              default:
                if (!this.rendererByCompId.has(t.id)) {
                  const e = v(t.id, t.styles, []);
                  this.sharedStylesHost.addStyles(e),
                    this.rendererByCompId.set(t.id, this.defaultRenderer);
                }
                return this.defaultRenderer;
            }
          }
          begin() {}
          end() {}
        }
        return (
          (e.ɵfac = function (t) {
            return new (t || e)(
              r["\u0275\u0275inject"](f),
              r["\u0275\u0275inject"](g),
              r["\u0275\u0275inject"](r.APP_ID)
            );
          }),
          (e.ɵprov = r["\u0275\u0275defineInjectable"]({
            token: e,
            factory: e.ɵfac,
          })),
          e
        );
      })();
      class C {
        constructor(e) {
          (this.eventManager = e), (this.data = Object.create(null));
        }
        destroy() {}
        createElement(e, t) {
          return t
            ? document.createElementNS(_[t] || t, e)
            : document.createElement(e);
        }
        createComment(e) {
          return document.createComment(e);
        }
        createText(e) {
          return document.createTextNode(e);
        }
        appendChild(e, t) {
          e.appendChild(t);
        }
        insertBefore(e, t, n) {
          e && e.insertBefore(t, n);
        }
        removeChild(e, t) {
          e && e.removeChild(t);
        }
        selectRootElement(e, t) {
          let n = "string" == typeof e ? document.querySelector(e) : e;
          if (!n)
            throw new Error(`The selector "${e}" did not match any elements`);
          return t || (n.textContent = ""), n;
        }
        parentNode(e) {
          return e.parentNode;
        }
        nextSibling(e) {
          return e.nextSibling;
        }
        setAttribute(e, t, n, r) {
          if (r) {
            t = r + ":" + t;
            const i = _[r];
            i ? e.setAttributeNS(i, t, n) : e.setAttribute(t, n);
          } else e.setAttribute(t, n);
        }
        removeAttribute(e, t, n) {
          if (n) {
            const r = _[n];
            r ? e.removeAttributeNS(r, t) : e.removeAttribute(`${n}:${t}`);
          } else e.removeAttribute(t);
        }
        addClass(e, t) {
          e.classList.add(t);
        }
        removeClass(e, t) {
          e.classList.remove(t);
        }
        setStyle(e, t, n, i) {
          i & r.RendererStyleFlags2.DashCase
            ? e.style.setProperty(
                t,
                n,
                i & r.RendererStyleFlags2.Important ? "important" : ""
              )
            : (e.style[t] = n);
        }
        removeStyle(e, t, n) {
          n & r.RendererStyleFlags2.DashCase
            ? e.style.removeProperty(t)
            : (e.style[t] = "");
        }
        setProperty(e, t, n) {
          e[t] = n;
        }
        setValue(e, t) {
          e.nodeValue = t;
        }
        listen(e, t, n) {
          return "string" == typeof e
            ? this.eventManager.addGlobalEventListener(e, t, b(n))
            : this.eventManager.addEventListener(e, t, b(n));
        }
      }
      class S extends C {
        constructor(e, t, n, r) {
          super(e), (this.component = n);
          const i = v(r + "-" + n.id, n.styles, []);
          t.addStyles(i),
            (this.contentAttr = "_ngcontent-%COMP%".replace(y, r + "-" + n.id)),
            (this.hostAttr = (function (e) {
              return "_nghost-%COMP%".replace(y, e);
            })(r + "-" + n.id));
        }
        applyToHost(e) {
          super.setAttribute(e, this.hostAttr, "");
        }
        createElement(e, t) {
          const n = super.createElement(e, t);
          return super.setAttribute(n, this.contentAttr, ""), n;
        }
      }
      class E extends C {
        constructor(e, t, n, i) {
          super(e),
            (this.sharedStylesHost = t),
            (this.hostEl = n),
            (this.component = i),
            (this.shadowRoot =
              i.encapsulation === r.ViewEncapsulation.ShadowDom
                ? n.attachShadow({ mode: "open" })
                : n.createShadowRoot()),
            this.sharedStylesHost.addHost(this.shadowRoot);
          const s = v(i.id, i.styles, []);
          for (let r = 0; r < s.length; r++) {
            const e = document.createElement("style");
            (e.textContent = s[r]), this.shadowRoot.appendChild(e);
          }
        }
        nodeOrShadowRoot(e) {
          return e === this.hostEl ? this.shadowRoot : e;
        }
        destroy() {
          this.sharedStylesHost.removeHost(this.shadowRoot);
        }
        appendChild(e, t) {
          return super.appendChild(this.nodeOrShadowRoot(e), t);
        }
        insertBefore(e, t, n) {
          return super.insertBefore(this.nodeOrShadowRoot(e), t, n);
        }
        removeChild(e, t) {
          return super.removeChild(this.nodeOrShadowRoot(e), t);
        }
        parentNode(e) {
          return this.nodeOrShadowRoot(
            super.parentNode(this.nodeOrShadowRoot(e))
          );
        }
      }
      let x = (() => {
        class e extends p {
          constructor(e) {
            super(e);
          }
          supports(e) {
            return !0;
          }
          addEventListener(e, t, n) {
            return (
              e.addEventListener(t, n, !1),
              () => this.removeEventListener(e, t, n)
            );
          }
          removeEventListener(e, t, n) {
            return e.removeEventListener(t, n);
          }
        }
        return (
          (e.ɵfac = function (t) {
            return new (t || e)(r["\u0275\u0275inject"](i.DOCUMENT));
          }),
          (e.ɵprov = r["\u0275\u0275defineInjectable"]({
            token: e,
            factory: e.ɵfac,
          })),
          e
        );
      })();
      const D = ["alt", "control", "meta", "shift"],
        I = {
          "\b": "Backspace",
          "\t": "Tab",
          "\x7f": "Delete",
          "\x1b": "Escape",
          Del: "Delete",
          Esc: "Escape",
          Left: "ArrowLeft",
          Right: "ArrowRight",
          Up: "ArrowUp",
          Down: "ArrowDown",
          Menu: "ContextMenu",
          Scroll: "ScrollLock",
          Win: "OS",
        },
        O = {
          A: "1",
          B: "2",
          C: "3",
          D: "4",
          E: "5",
          F: "6",
          G: "7",
          H: "8",
          I: "9",
          J: "*",
          K: "+",
          M: "-",
          N: ".",
          O: "/",
          "`": "0",
          "\x90": "NumLock",
        },
        k = {
          alt: (e) => e.altKey,
          control: (e) => e.ctrlKey,
          meta: (e) => e.metaKey,
          shift: (e) => e.shiftKey,
        };
      let R = (() => {
          class e extends p {
            constructor(e) {
              super(e);
            }
            supports(t) {
              return null != e.parseEventName(t);
            }
            addEventListener(t, n, r) {
              const s = e.parseEventName(n),
                o = e.eventCallback(s.fullKey, r, this.manager.getZone());
              return this.manager
                .getZone()
                .runOutsideAngular(() =>
                  Object(i["\u0275getDOM"])().onAndCancel(t, s.domEventName, o)
                );
            }
            static parseEventName(t) {
              const n = t.toLowerCase().split("."),
                r = n.shift();
              if (0 === n.length || ("keydown" !== r && "keyup" !== r))
                return null;
              const i = e._normalizeKey(n.pop());
              let s = "";
              if (
                (D.forEach((e) => {
                  const t = n.indexOf(e);
                  t > -1 && (n.splice(t, 1), (s += e + "."));
                }),
                (s += i),
                0 != n.length || 0 === i.length)
              )
                return null;
              const o = {};
              return (o.domEventName = r), (o.fullKey = s), o;
            }
            static getEventFullKey(e) {
              let t = "",
                n = (function (e) {
                  let t = e.key;
                  if (null == t) {
                    if (((t = e.keyIdentifier), null == t))
                      return "Unidentified";
                    t.startsWith("U+") &&
                      ((t = String.fromCharCode(parseInt(t.substring(2), 16))),
                      3 === e.location && O.hasOwnProperty(t) && (t = O[t]));
                  }
                  return I[t] || t;
                })(e);
              return (
                (n = n.toLowerCase()),
                " " === n ? (n = "space") : "." === n && (n = "dot"),
                D.forEach((r) => {
                  r != n && (0, k[r])(e) && (t += r + ".");
                }),
                (t += n),
                t
              );
            }
            static eventCallback(t, n, r) {
              return (i) => {
                e.getEventFullKey(i) === t && r.runGuarded(() => n(i));
              };
            }
            static _normalizeKey(e) {
              switch (e) {
                case "esc":
                  return "escape";
                default:
                  return e;
              }
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(r["\u0275\u0275inject"](i.DOCUMENT));
            }),
            (e.ɵprov = r["\u0275\u0275defineInjectable"]({
              token: e,
              factory: e.ɵfac,
            })),
            e
          );
        })(),
        A = (() => {
          class e {}
          return (
            (e.ɵfac = function (t) {
              return new (t || e)();
            }),
            (e.ɵprov = Object(r["\u0275\u0275defineInjectable"])({
              factory: function () {
                return Object(r["\u0275\u0275inject"])(T);
              },
              token: e,
              providedIn: "root",
            })),
            e
          );
        })(),
        T = (() => {
          class e extends A {
            constructor(e) {
              super(), (this._doc = e);
            }
            sanitize(e, t) {
              if (null == t) return null;
              switch (e) {
                case r.SecurityContext.NONE:
                  return t;
                case r.SecurityContext.HTML:
                  return Object(r["\u0275allowSanitizationBypassAndThrow"])(
                    t,
                    "HTML"
                  )
                    ? Object(r["\u0275unwrapSafeValue"])(t)
                    : Object(r["\u0275_sanitizeHtml"])(this._doc, String(t));
                case r.SecurityContext.STYLE:
                  return Object(r["\u0275allowSanitizationBypassAndThrow"])(
                    t,
                    "Style"
                  )
                    ? Object(r["\u0275unwrapSafeValue"])(t)
                    : Object(r["\u0275_sanitizeStyle"])(t);
                case r.SecurityContext.SCRIPT:
                  if (
                    Object(r["\u0275allowSanitizationBypassAndThrow"])(
                      t,
                      "Script"
                    )
                  )
                    return Object(r["\u0275unwrapSafeValue"])(t);
                  throw new Error("unsafe value used in a script context");
                case r.SecurityContext.URL:
                  return (
                    Object(r["\u0275getSanitizationBypassType"])(t),
                    Object(r["\u0275allowSanitizationBypassAndThrow"])(t, "URL")
                      ? Object(r["\u0275unwrapSafeValue"])(t)
                      : Object(r["\u0275_sanitizeUrl"])(String(t))
                  );
                case r.SecurityContext.RESOURCE_URL:
                  if (
                    Object(r["\u0275allowSanitizationBypassAndThrow"])(
                      t,
                      "ResourceURL"
                    )
                  )
                    return Object(r["\u0275unwrapSafeValue"])(t);
                  throw new Error(
                    "unsafe value used in a resource URL context (see http://g.co/ng/security#xss)"
                  );
                default:
                  throw new Error(
                    `Unexpected SecurityContext ${e} (see http://g.co/ng/security#xss)`
                  );
              }
            }
            bypassSecurityTrustHtml(e) {
              return Object(r["\u0275bypassSanitizationTrustHtml"])(e);
            }
            bypassSecurityTrustStyle(e) {
              return Object(r["\u0275bypassSanitizationTrustStyle"])(e);
            }
            bypassSecurityTrustScript(e) {
              return Object(r["\u0275bypassSanitizationTrustScript"])(e);
            }
            bypassSecurityTrustUrl(e) {
              return Object(r["\u0275bypassSanitizationTrustUrl"])(e);
            }
            bypassSecurityTrustResourceUrl(e) {
              return Object(r["\u0275bypassSanitizationTrustResourceUrl"])(e);
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(r["\u0275\u0275inject"](i.DOCUMENT));
            }),
            (e.ɵprov = Object(r["\u0275\u0275defineInjectable"])({
              factory: function () {
                return (
                  (e = Object(r["\u0275\u0275inject"])(r.INJECTOR)),
                  new T(e.get(i.DOCUMENT))
                );
                var e;
              },
              token: e,
              providedIn: "root",
            })),
            e
          );
        })();
      const F = [
          { provide: r.PLATFORM_ID, useValue: i["\u0275PLATFORM_BROWSER_ID"] },
          {
            provide: r.PLATFORM_INITIALIZER,
            useValue: function () {
              o.makeCurrent(), h.init();
            },
            multi: !0,
          },
          {
            provide: i.DOCUMENT,
            useFactory: function () {
              return Object(r["\u0275setDocument"])(document), document;
            },
            deps: [],
          },
        ],
        P = Object(r.createPlatformFactory)(r.platformCore, "browser", F),
        j = [
          [],
          { provide: r["\u0275INJECTOR_SCOPE"], useValue: "root" },
          {
            provide: r.ErrorHandler,
            useFactory: function () {
              return new r.ErrorHandler();
            },
            deps: [],
          },
          {
            provide: d,
            useClass: x,
            multi: !0,
            deps: [i.DOCUMENT, r.NgZone, r.PLATFORM_ID],
          },
          { provide: d, useClass: R, multi: !0, deps: [i.DOCUMENT] },
          [],
          { provide: w, useClass: w, deps: [f, g, r.APP_ID] },
          { provide: r.RendererFactory2, useExisting: w },
          { provide: m, useExisting: g },
          { provide: g, useClass: g, deps: [i.DOCUMENT] },
          { provide: r.Testability, useClass: r.Testability, deps: [r.NgZone] },
          { provide: f, useClass: f, deps: [d, r.NgZone] },
          [],
        ];
      let N = (() => {
        class e {
          constructor(e) {
            if (e)
              throw new Error(
                "BrowserModule has already been loaded. If you need access to common directives such as NgIf and NgFor from a lazy loaded module, import CommonModule instead."
              );
          }
          static withServerTransition(t) {
            return {
              ngModule: e,
              providers: [
                { provide: r.APP_ID, useValue: t.appId },
                { provide: c, useExisting: r.APP_ID },
                u,
              ],
            };
          }
        }
        return (
          (e.ɵmod = r["\u0275\u0275defineNgModule"]({ type: e })),
          (e.ɵinj = r["\u0275\u0275defineInjector"]({
            factory: function (t) {
              return new (t || e)(r["\u0275\u0275inject"](e, 12));
            },
            providers: j,
            imports: [i.CommonModule, r.ApplicationModule],
          })),
          e
        );
      })();
      "undefined" != typeof window && window;
      var M = n("XNiG"),
        L = n("quSY"),
        V = n("z+Ro"),
        B = n("yCtX"),
        z = n("jZKg");
      function U(...e) {
        let t = e[e.length - 1];
        return Object(V.a)(t) ? (e.pop(), Object(z.a)(e, t)) : Object(B.a)(e);
      }
      function H(e, ...t) {
        return t.length
          ? t.some((t) => e[t])
          : e.altKey || e.shiftKey || e.ctrlKey || e.metaKey;
      }
      var $ = n("7o/Q");
      function q() {}
      var G = n("n6bG");
      function W(e, t, n) {
        return function (r) {
          return r.lift(new Q(e, t, n));
        };
      }
      class Q {
        constructor(e, t, n) {
          (this.nextOrObserver = e), (this.error = t), (this.complete = n);
        }
        call(e, t) {
          return t.subscribe(
            new K(e, this.nextOrObserver, this.error, this.complete)
          );
        }
      }
      class K extends $.a {
        constructor(e, t, n, r) {
          super(e),
            (this._tapNext = q),
            (this._tapError = q),
            (this._tapComplete = q),
            (this._tapError = n || q),
            (this._tapComplete = r || q),
            Object(G.a)(t)
              ? ((this._context = this), (this._tapNext = t))
              : t &&
                ((this._context = t),
                (this._tapNext = t.next || q),
                (this._tapError = t.error || q),
                (this._tapComplete = t.complete || q));
        }
        _next(e) {
          try {
            this._tapNext.call(this._context, e);
          } catch (t) {
            return void this.destination.error(t);
          }
          this.destination.next(e);
        }
        _error(e) {
          try {
            this._tapError.call(this._context, e);
          } catch (e) {
            return void this.destination.error(e);
          }
          this.destination.error(e);
        }
        _complete() {
          try {
            this._tapComplete.call(this._context);
          } catch (e) {
            return void this.destination.error(e);
          }
          return this.destination.complete();
        }
      }
      class Z extends L.a {
        constructor(e, t) {
          super();
        }
        schedule(e, t = 0) {
          return this;
        }
      }
      class Y extends Z {
        constructor(e, t) {
          super(e, t),
            (this.scheduler = e),
            (this.work = t),
            (this.pending = !1);
        }
        schedule(e, t = 0) {
          if (this.closed) return this;
          this.state = e;
          const n = this.id,
            r = this.scheduler;
          return (
            null != n && (this.id = this.recycleAsyncId(r, n, t)),
            (this.pending = !0),
            (this.delay = t),
            (this.id = this.id || this.requestAsyncId(r, this.id, t)),
            this
          );
        }
        requestAsyncId(e, t, n = 0) {
          return setInterval(e.flush.bind(e, this), n);
        }
        recycleAsyncId(e, t, n = 0) {
          if (null !== n && this.delay === n && !1 === this.pending) return t;
          clearInterval(t);
        }
        execute(e, t) {
          if (this.closed) return new Error("executing a cancelled action");
          this.pending = !1;
          const n = this._execute(e, t);
          if (n) return n;
          !1 === this.pending &&
            null != this.id &&
            (this.id = this.recycleAsyncId(this.scheduler, this.id, null));
        }
        _execute(e, t) {
          let n = !1,
            r = void 0;
          try {
            this.work(e);
          } catch (i) {
            (n = !0), (r = (!!i && i) || new Error(i));
          }
          if (n) return this.unsubscribe(), r;
        }
        _unsubscribe() {
          const e = this.id,
            t = this.scheduler,
            n = t.actions,
            r = n.indexOf(this);
          (this.work = null),
            (this.state = null),
            (this.pending = !1),
            (this.scheduler = null),
            -1 !== r && n.splice(r, 1),
            null != e && (this.id = this.recycleAsyncId(t, e, null)),
            (this.delay = null);
        }
      }
      let X = (() => {
        class e {
          constructor(t, n = e.now) {
            (this.SchedulerAction = t), (this.now = n);
          }
          schedule(e, t = 0, n) {
            return new this.SchedulerAction(this, e).schedule(n, t);
          }
        }
        return (e.now = () => Date.now()), e;
      })();
      class J extends X {
        constructor(e, t = X.now) {
          super(e, () =>
            J.delegate && J.delegate !== this ? J.delegate.now() : t()
          ),
            (this.actions = []),
            (this.active = !1),
            (this.scheduled = void 0);
        }
        schedule(e, t = 0, n) {
          return J.delegate && J.delegate !== this
            ? J.delegate.schedule(e, t, n)
            : super.schedule(e, t, n);
        }
        flush(e) {
          const { actions: t } = this;
          if (this.active) return void t.push(e);
          let n;
          this.active = !0;
          do {
            if ((n = e.execute(e.state, e.delay))) break;
          } while ((e = t.shift()));
          if (((this.active = !1), n)) {
            for (; (e = t.shift()); ) e.unsubscribe();
            throw n;
          }
        }
      }
      const ee = new J(Y);
      function te(e, t = ee) {
        return (n) => n.lift(new ne(e, t));
      }
      class ne {
        constructor(e, t) {
          (this.dueTime = e), (this.scheduler = t);
        }
        call(e, t) {
          return t.subscribe(new re(e, this.dueTime, this.scheduler));
        }
      }
      class re extends $.a {
        constructor(e, t, n) {
          super(e),
            (this.dueTime = t),
            (this.scheduler = n),
            (this.debouncedSubscription = null),
            (this.lastValue = null),
            (this.hasValue = !1);
        }
        _next(e) {
          this.clearDebounce(),
            (this.lastValue = e),
            (this.hasValue = !0),
            this.add(
              (this.debouncedSubscription = this.scheduler.schedule(
                ie,
                this.dueTime,
                this
              ))
            );
        }
        _complete() {
          this.debouncedNext(), this.destination.complete();
        }
        debouncedNext() {
          if ((this.clearDebounce(), this.hasValue)) {
            const { lastValue: e } = this;
            (this.lastValue = null),
              (this.hasValue = !1),
              this.destination.next(e);
          }
        }
        clearDebounce() {
          const e = this.debouncedSubscription;
          null !== e &&
            (this.remove(e),
            e.unsubscribe(),
            (this.debouncedSubscription = null));
        }
      }
      function ie(e) {
        e.debouncedNext();
      }
      function se(e, t) {
        return function (n) {
          return n.lift(new oe(e, t));
        };
      }
      class oe {
        constructor(e, t) {
          (this.predicate = e), (this.thisArg = t);
        }
        call(e, t) {
          return t.subscribe(new ae(e, this.predicate, this.thisArg));
        }
      }
      class ae extends $.a {
        constructor(e, t, n) {
          super(e), (this.predicate = t), (this.thisArg = n), (this.count = 0);
        }
        _next(e) {
          let t;
          try {
            t = this.predicate.call(this.thisArg, e, this.count++);
          } catch (n) {
            return void this.destination.error(n);
          }
          t && this.destination.next(e);
        }
      }
      var le = n("lJxs");
      const ce = (() => {
        function e() {
          return (
            Error.call(this),
            (this.message = "argument out of range"),
            (this.name = "ArgumentOutOfRangeError"),
            this
          );
        }
        return (e.prototype = Object.create(Error.prototype)), e;
      })();
      var ue = n("HDdC");
      const he = new ue.a((e) => e.complete());
      function de(e) {
        return e
          ? (function (e) {
              return new ue.a((t) => e.schedule(() => t.complete()));
            })(e)
          : he;
      }
      function fe(e) {
        return (t) => (0 === e ? de() : t.lift(new pe(e)));
      }
      class pe {
        constructor(e) {
          if (((this.total = e), this.total < 0)) throw new ce();
        }
        call(e, t) {
          return t.subscribe(new me(e, this.total));
        }
      }
      class me extends $.a {
        constructor(e, t) {
          super(e), (this.total = t), (this.count = 0);
        }
        _next(e) {
          const t = this.total,
            n = ++this.count;
          n <= t &&
            (this.destination.next(e),
            n === t && (this.destination.complete(), this.unsubscribe()));
        }
      }
      function ge(e) {
        return null != e && "" + e != "false";
      }
      function _e(e, t = 0) {
        return (function (e) {
          return !isNaN(parseFloat(e)) && !isNaN(Number(e));
        })(e)
          ? Number(e)
          : t;
      }
      function ye(e) {
        return Array.isArray(e) ? e : [e];
      }
      function ve(e) {
        return null == e ? "" : "string" == typeof e ? e : e + "px";
      }
      function be(e) {
        return e instanceof r.ElementRef ? e.nativeElement : e;
      }
      let we;
      try {
        we = "undefined" != typeof Intl && Intl.v8BreakIterator;
      } catch (Lp) {
        we = !1;
      }
      let Ce,
        Se = (() => {
          class e {
            constructor(e) {
              (this._platformId = e),
                (this.isBrowser = this._platformId
                  ? Object(i.isPlatformBrowser)(this._platformId)
                  : "object" == typeof document && !!document),
                (this.EDGE =
                  this.isBrowser && /(edge)/i.test(navigator.userAgent)),
                (this.TRIDENT =
                  this.isBrowser &&
                  /(msie|trident)/i.test(navigator.userAgent)),
                (this.BLINK =
                  this.isBrowser &&
                  !(!window.chrome && !we) &&
                  "undefined" != typeof CSS &&
                  !this.EDGE &&
                  !this.TRIDENT),
                (this.WEBKIT =
                  this.isBrowser &&
                  /AppleWebKit/i.test(navigator.userAgent) &&
                  !this.BLINK &&
                  !this.EDGE &&
                  !this.TRIDENT),
                (this.IOS =
                  this.isBrowser &&
                  /iPad|iPhone|iPod/.test(navigator.userAgent) &&
                  !("MSStream" in window)),
                (this.FIREFOX =
                  this.isBrowser &&
                  /(firefox|minefield)/i.test(navigator.userAgent)),
                (this.ANDROID =
                  this.isBrowser &&
                  /android/i.test(navigator.userAgent) &&
                  !this.TRIDENT),
                (this.SAFARI =
                  this.isBrowser &&
                  /safari/i.test(navigator.userAgent) &&
                  this.WEBKIT);
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(r["\u0275\u0275inject"](r.PLATFORM_ID, 8));
            }),
            (e.ɵprov = Object(r["\u0275\u0275defineInjectable"])({
              factory: function () {
                return new e(Object(r["\u0275\u0275inject"])(r.PLATFORM_ID, 8));
              },
              token: e,
              providedIn: "root",
            })),
            e
          );
        })(),
        Ee = (() => {
          class e {}
          return (
            (e.ɵmod = r["\u0275\u0275defineNgModule"]({ type: e })),
            (e.ɵinj = r["\u0275\u0275defineInjector"]({
              factory: function (t) {
                return new (t || e)();
              },
            })),
            e
          );
        })();
      const xe = [
        "color",
        "button",
        "checkbox",
        "date",
        "datetime-local",
        "email",
        "file",
        "hidden",
        "image",
        "month",
        "number",
        "password",
        "radio",
        "range",
        "reset",
        "search",
        "submit",
        "tel",
        "text",
        "time",
        "url",
        "week",
      ];
      function De() {
        if (Ce) return Ce;
        if ("object" != typeof document || !document)
          return (Ce = new Set(xe)), Ce;
        let e = document.createElement("input");
        return (
          (Ce = new Set(
            xe.filter((t) => (e.setAttribute("type", t), e.type === t))
          )),
          Ce
        );
      }
      let Ie, Oe;
      function ke(e) {
        return (function () {
          if (null == Ie && "undefined" != typeof window)
            try {
              window.addEventListener(
                "test",
                null,
                Object.defineProperty({}, "passive", { get: () => (Ie = !0) })
              );
            } finally {
              Ie = Ie || !1;
            }
          return Ie;
        })()
          ? e
          : !!e.capture;
      }
      let Re = (() => {
          class e {
            create(e) {
              return "undefined" == typeof MutationObserver
                ? null
                : new MutationObserver(e);
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)();
            }),
            (e.ɵprov = Object(r["\u0275\u0275defineInjectable"])({
              factory: function () {
                return new e();
              },
              token: e,
              providedIn: "root",
            })),
            e
          );
        })(),
        Ae = (() => {
          class e {
            constructor(e) {
              (this._mutationObserverFactory = e),
                (this._observedElements = new Map());
            }
            ngOnDestroy() {
              this._observedElements.forEach((e, t) =>
                this._cleanupObserver(t)
              );
            }
            observe(e) {
              const t = be(e);
              return new ue.a((e) => {
                const n = this._observeElement(t).subscribe(e);
                return () => {
                  n.unsubscribe(), this._unobserveElement(t);
                };
              });
            }
            _observeElement(e) {
              if (this._observedElements.has(e))
                this._observedElements.get(e).count++;
              else {
                const t = new M.a(),
                  n = this._mutationObserverFactory.create((e) => t.next(e));
                n &&
                  n.observe(e, {
                    characterData: !0,
                    childList: !0,
                    subtree: !0,
                  }),
                  this._observedElements.set(e, {
                    observer: n,
                    stream: t,
                    count: 1,
                  });
              }
              return this._observedElements.get(e).stream;
            }
            _unobserveElement(e) {
              this._observedElements.has(e) &&
                (this._observedElements.get(e).count--,
                this._observedElements.get(e).count ||
                  this._cleanupObserver(e));
            }
            _cleanupObserver(e) {
              if (this._observedElements.has(e)) {
                const { observer: t, stream: n } = this._observedElements.get(
                  e
                );
                t && t.disconnect(),
                  n.complete(),
                  this._observedElements.delete(e);
              }
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(r["\u0275\u0275inject"](Re));
            }),
            (e.ɵprov = Object(r["\u0275\u0275defineInjectable"])({
              factory: function () {
                return new e(Object(r["\u0275\u0275inject"])(Re));
              },
              token: e,
              providedIn: "root",
            })),
            e
          );
        })(),
        Te = (() => {
          class e {
            constructor(e, t, n) {
              (this._contentObserver = e),
                (this._elementRef = t),
                (this._ngZone = n),
                (this.event = new r.EventEmitter()),
                (this._disabled = !1),
                (this._currentSubscription = null);
            }
            get disabled() {
              return this._disabled;
            }
            set disabled(e) {
              (this._disabled = ge(e)),
                this._disabled ? this._unsubscribe() : this._subscribe();
            }
            get debounce() {
              return this._debounce;
            }
            set debounce(e) {
              (this._debounce = _e(e)), this._subscribe();
            }
            ngAfterContentInit() {
              this._currentSubscription || this.disabled || this._subscribe();
            }
            ngOnDestroy() {
              this._unsubscribe();
            }
            _subscribe() {
              this._unsubscribe();
              const e = this._contentObserver.observe(this._elementRef);
              this._ngZone.runOutsideAngular(() => {
                this._currentSubscription = (this.debounce
                  ? e.pipe(te(this.debounce))
                  : e
                ).subscribe(this.event);
              });
            }
            _unsubscribe() {
              this._currentSubscription &&
                this._currentSubscription.unsubscribe();
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(
                r["\u0275\u0275directiveInject"](Ae),
                r["\u0275\u0275directiveInject"](r.ElementRef),
                r["\u0275\u0275directiveInject"](r.NgZone)
              );
            }),
            (e.ɵdir = r["\u0275\u0275defineDirective"]({
              type: e,
              selectors: [["", "cdkObserveContent", ""]],
              inputs: {
                disabled: ["cdkObserveContentDisabled", "disabled"],
                debounce: "debounce",
              },
              outputs: { event: "cdkObserveContent" },
              exportAs: ["cdkObserveContent"],
            })),
            e
          );
        })(),
        Fe = (() => {
          class e {}
          return (
            (e.ɵmod = r["\u0275\u0275defineNgModule"]({ type: e })),
            (e.ɵinj = r["\u0275\u0275defineInjector"]({
              factory: function (t) {
                return new (t || e)();
              },
              providers: [Re],
            })),
            e
          );
        })();
      function Pe(e, t) {
        return (e.getAttribute(t) || "").match(/\S+/g) || [];
      }
      let je = 0;
      const Ne = new Map();
      let Me = null,
        Le = (() => {
          class e {
            constructor(e) {
              this._document = e;
            }
            describe(e, t) {
              this._canBeDescribed(e, t) &&
                ("string" != typeof t
                  ? (this._setMessageId(t),
                    Ne.set(t, { messageElement: t, referenceCount: 0 }))
                  : Ne.has(t) || this._createMessageElement(t),
                this._isElementDescribedByMessage(e, t) ||
                  this._addMessageReference(e, t));
            }
            removeDescription(e, t) {
              if (this._isElementNode(e)) {
                if (
                  (this._isElementDescribedByMessage(e, t) &&
                    this._removeMessageReference(e, t),
                  "string" == typeof t)
                ) {
                  const e = Ne.get(t);
                  e && 0 === e.referenceCount && this._deleteMessageElement(t);
                }
                Me &&
                  0 === Me.childNodes.length &&
                  this._deleteMessagesContainer();
              }
            }
            ngOnDestroy() {
              const e = this._document.querySelectorAll(
                "[cdk-describedby-host]"
              );
              for (let t = 0; t < e.length; t++)
                this._removeCdkDescribedByReferenceIds(e[t]),
                  e[t].removeAttribute("cdk-describedby-host");
              Me && this._deleteMessagesContainer(), Ne.clear();
            }
            _createMessageElement(e) {
              const t = this._document.createElement("div");
              this._setMessageId(t),
                (t.textContent = e),
                this._createMessagesContainer(),
                Me.appendChild(t),
                Ne.set(e, { messageElement: t, referenceCount: 0 });
            }
            _setMessageId(e) {
              e.id || (e.id = "cdk-describedby-message-" + je++);
            }
            _deleteMessageElement(e) {
              const t = Ne.get(e),
                n = t && t.messageElement;
              Me && n && Me.removeChild(n), Ne.delete(e);
            }
            _createMessagesContainer() {
              if (!Me) {
                const e = this._document.getElementById(
                  "cdk-describedby-message-container"
                );
                e && e.parentNode.removeChild(e),
                  (Me = this._document.createElement("div")),
                  (Me.id = "cdk-describedby-message-container"),
                  Me.setAttribute("aria-hidden", "true"),
                  (Me.style.display = "none"),
                  this._document.body.appendChild(Me);
              }
            }
            _deleteMessagesContainer() {
              Me &&
                Me.parentNode &&
                (Me.parentNode.removeChild(Me), (Me = null));
            }
            _removeCdkDescribedByReferenceIds(e) {
              const t = Pe(e, "aria-describedby").filter(
                (e) => 0 != e.indexOf("cdk-describedby-message")
              );
              e.setAttribute("aria-describedby", t.join(" "));
            }
            _addMessageReference(e, t) {
              const n = Ne.get(t);
              !(function (e, t, n) {
                const r = Pe(e, t);
                r.some((e) => e.trim() == n.trim()) ||
                  (r.push(n.trim()), e.setAttribute(t, r.join(" ")));
              })(e, "aria-describedby", n.messageElement.id),
                e.setAttribute("cdk-describedby-host", ""),
                n.referenceCount++;
            }
            _removeMessageReference(e, t) {
              const n = Ne.get(t);
              n.referenceCount--,
                (function (e, t, n) {
                  const r = Pe(e, t).filter((e) => e != n.trim());
                  r.length
                    ? e.setAttribute(t, r.join(" "))
                    : e.removeAttribute(t);
                })(e, "aria-describedby", n.messageElement.id),
                e.removeAttribute("cdk-describedby-host");
            }
            _isElementDescribedByMessage(e, t) {
              const n = Pe(e, "aria-describedby"),
                r = Ne.get(t),
                i = r && r.messageElement.id;
              return !!i && -1 != n.indexOf(i);
            }
            _canBeDescribed(e, t) {
              if (!this._isElementNode(e)) return !1;
              if (t && "object" == typeof t) return !0;
              const n = null == t ? "" : ("" + t).trim(),
                r = e.getAttribute("aria-label");
              return !(!n || (r && r.trim() === n));
            }
            _isElementNode(e) {
              return e.nodeType === this._document.ELEMENT_NODE;
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(r["\u0275\u0275inject"](i.DOCUMENT));
            }),
            (e.ɵprov = Object(r["\u0275\u0275defineInjectable"])({
              factory: function () {
                return new e(Object(r["\u0275\u0275inject"])(i.DOCUMENT));
              },
              token: e,
              providedIn: "root",
            })),
            e
          );
        })();
      class Ve extends class {
        constructor(e) {
          (this._items = e),
            (this._activeItemIndex = -1),
            (this._activeItem = null),
            (this._wrap = !1),
            (this._letterKeyStream = new M.a()),
            (this._typeaheadSubscription = L.a.EMPTY),
            (this._vertical = !0),
            (this._allowedModifierKeys = []),
            (this._skipPredicateFn = (e) => e.disabled),
            (this._pressedLetters = []),
            (this.tabOut = new M.a()),
            (this.change = new M.a()),
            e instanceof r.QueryList &&
              e.changes.subscribe((e) => {
                if (this._activeItem) {
                  const t = e.toArray().indexOf(this._activeItem);
                  t > -1 &&
                    t !== this._activeItemIndex &&
                    (this._activeItemIndex = t);
                }
              });
        }
        skipPredicate(e) {
          return (this._skipPredicateFn = e), this;
        }
        withWrap(e = !0) {
          return (this._wrap = e), this;
        }
        withVerticalOrientation(e = !0) {
          return (this._vertical = e), this;
        }
        withHorizontalOrientation(e) {
          return (this._horizontal = e), this;
        }
        withAllowedModifierKeys(e) {
          return (this._allowedModifierKeys = e), this;
        }
        withTypeAhead(e = 200) {
          if (
            this._items.length &&
            this._items.some((e) => "function" != typeof e.getLabel)
          )
            throw Error(
              "ListKeyManager items in typeahead mode must implement the `getLabel` method."
            );
          return (
            this._typeaheadSubscription.unsubscribe(),
            (this._typeaheadSubscription = this._letterKeyStream
              .pipe(
                W((e) => this._pressedLetters.push(e)),
                te(e),
                se(() => this._pressedLetters.length > 0),
                Object(le.a)(() => this._pressedLetters.join(""))
              )
              .subscribe((e) => {
                const t = this._getItemsArray();
                for (let n = 1; n < t.length + 1; n++) {
                  const r = (this._activeItemIndex + n) % t.length,
                    i = t[r];
                  if (
                    !this._skipPredicateFn(i) &&
                    0 === i.getLabel().toUpperCase().trim().indexOf(e)
                  ) {
                    this.setActiveItem(r);
                    break;
                  }
                }
                this._pressedLetters = [];
              })),
            this
          );
        }
        setActiveItem(e) {
          const t = this._activeItemIndex;
          this.updateActiveItem(e),
            this._activeItemIndex !== t &&
              this.change.next(this._activeItemIndex);
        }
        onKeydown(e) {
          const t = e.keyCode,
            n = ["altKey", "ctrlKey", "metaKey", "shiftKey"].every(
              (t) => !e[t] || this._allowedModifierKeys.indexOf(t) > -1
            );
          switch (t) {
            case 9:
              return void this.tabOut.next();
            case 40:
              if (this._vertical && n) {
                this.setNextItemActive();
                break;
              }
              return;
            case 38:
              if (this._vertical && n) {
                this.setPreviousItemActive();
                break;
              }
              return;
            case 39:
              if (this._horizontal && n) {
                "rtl" === this._horizontal
                  ? this.setPreviousItemActive()
                  : this.setNextItemActive();
                break;
              }
              return;
            case 37:
              if (this._horizontal && n) {
                "rtl" === this._horizontal
                  ? this.setNextItemActive()
                  : this.setPreviousItemActive();
                break;
              }
              return;
            default:
              return void (
                (n || H(e, "shiftKey")) &&
                (e.key && 1 === e.key.length
                  ? this._letterKeyStream.next(e.key.toLocaleUpperCase())
                  : ((t >= 65 && t <= 90) || (t >= 48 && t <= 57)) &&
                    this._letterKeyStream.next(String.fromCharCode(t)))
              );
          }
          (this._pressedLetters = []), e.preventDefault();
        }
        get activeItemIndex() {
          return this._activeItemIndex;
        }
        get activeItem() {
          return this._activeItem;
        }
        isTyping() {
          return this._pressedLetters.length > 0;
        }
        setFirstItemActive() {
          this._setActiveItemByIndex(0, 1);
        }
        setLastItemActive() {
          this._setActiveItemByIndex(this._items.length - 1, -1);
        }
        setNextItemActive() {
          this._activeItemIndex < 0
            ? this.setFirstItemActive()
            : this._setActiveItemByDelta(1);
        }
        setPreviousItemActive() {
          this._activeItemIndex < 0 && this._wrap
            ? this.setLastItemActive()
            : this._setActiveItemByDelta(-1);
        }
        updateActiveItem(e) {
          const t = this._getItemsArray(),
            n = "number" == typeof e ? e : t.indexOf(e),
            r = t[n];
          (this._activeItem = null == r ? null : r),
            (this._activeItemIndex = n);
        }
        _setActiveItemByDelta(e) {
          this._wrap
            ? this._setActiveInWrapMode(e)
            : this._setActiveInDefaultMode(e);
        }
        _setActiveInWrapMode(e) {
          const t = this._getItemsArray();
          for (let n = 1; n <= t.length; n++) {
            const r = (this._activeItemIndex + e * n + t.length) % t.length;
            if (!this._skipPredicateFn(t[r])) return void this.setActiveItem(r);
          }
        }
        _setActiveInDefaultMode(e) {
          this._setActiveItemByIndex(this._activeItemIndex + e, e);
        }
        _setActiveItemByIndex(e, t) {
          const n = this._getItemsArray();
          if (n[e]) {
            for (; this._skipPredicateFn(n[e]); ) if (!n[(e += t)]) return;
            this.setActiveItem(e);
          }
        }
        _getItemsArray() {
          return this._items instanceof r.QueryList
            ? this._items.toArray()
            : this._items;
        }
      } {
        setActiveItem(e) {
          this.activeItem && this.activeItem.setInactiveStyles(),
            super.setActiveItem(e),
            this.activeItem && this.activeItem.setActiveStyles();
        }
      }
      "undefined" != typeof Element && Element;
      const Be = new r.InjectionToken("liveAnnouncerElement", {
          providedIn: "root",
          factory: function () {
            return null;
          },
        }),
        ze = new r.InjectionToken("LIVE_ANNOUNCER_DEFAULT_OPTIONS");
      let Ue = (() => {
        class e {
          constructor(e, t, n, r) {
            (this._ngZone = t),
              (this._defaultOptions = r),
              (this._document = n),
              (this._liveElement = e || this._createLiveElement());
          }
          announce(e, ...t) {
            const n = this._defaultOptions;
            let r, i;
            return (
              1 === t.length && "number" == typeof t[0]
                ? (i = t[0])
                : ([r, i] = t),
              this.clear(),
              clearTimeout(this._previousTimeout),
              r || (r = n && n.politeness ? n.politeness : "polite"),
              null == i && n && (i = n.duration),
              this._liveElement.setAttribute("aria-live", r),
              this._ngZone.runOutsideAngular(
                () =>
                  new Promise((t) => {
                    clearTimeout(this._previousTimeout),
                      (this._previousTimeout = setTimeout(() => {
                        (this._liveElement.textContent = e),
                          t(),
                          "number" == typeof i &&
                            (this._previousTimeout = setTimeout(
                              () => this.clear(),
                              i
                            ));
                      }, 100));
                  })
              )
            );
          }
          clear() {
            this._liveElement && (this._liveElement.textContent = "");
          }
          ngOnDestroy() {
            clearTimeout(this._previousTimeout),
              this._liveElement &&
                this._liveElement.parentNode &&
                (this._liveElement.parentNode.removeChild(this._liveElement),
                (this._liveElement = null));
          }
          _createLiveElement() {
            const e = this._document.getElementsByClassName(
                "cdk-live-announcer-element"
              ),
              t = this._document.createElement("div");
            for (let n = 0; n < e.length; n++)
              e[n].parentNode.removeChild(e[n]);
            return (
              t.classList.add("cdk-live-announcer-element"),
              t.classList.add("cdk-visually-hidden"),
              t.setAttribute("aria-atomic", "true"),
              t.setAttribute("aria-live", "polite"),
              this._document.body.appendChild(t),
              t
            );
          }
        }
        return (
          (e.ɵfac = function (t) {
            return new (t || e)(
              r["\u0275\u0275inject"](Be, 8),
              r["\u0275\u0275inject"](r.NgZone),
              r["\u0275\u0275inject"](i.DOCUMENT),
              r["\u0275\u0275inject"](ze, 8)
            );
          }),
          (e.ɵprov = Object(r["\u0275\u0275defineInjectable"])({
            factory: function () {
              return new e(
                Object(r["\u0275\u0275inject"])(Be, 8),
                Object(r["\u0275\u0275inject"])(r.NgZone),
                Object(r["\u0275\u0275inject"])(i.DOCUMENT),
                Object(r["\u0275\u0275inject"])(ze, 8)
              );
            },
            token: e,
            providedIn: "root",
          })),
          e
        );
      })();
      function He(e) {
        return 0 === e.buttons;
      }
      const $e = new r.InjectionToken("cdk-focus-monitor-default-options"),
        qe = ke({ passive: !0, capture: !0 });
      let Ge = (() => {
        class e {
          constructor(e, t, n, r) {
            (this._ngZone = e),
              (this._platform = t),
              (this._origin = null),
              (this._windowFocused = !1),
              (this._elementInfo = new Map()),
              (this._monitoredElementCount = 0),
              (this._rootNodeFocusListenerCount = new Map()),
              (this._documentKeydownListener = () => {
                (this._lastTouchTarget = null),
                  this._setOriginForCurrentEventQueue("keyboard");
              }),
              (this._documentMousedownListener = (e) => {
                if (!this._lastTouchTarget) {
                  const t = He(e) ? "keyboard" : "mouse";
                  this._setOriginForCurrentEventQueue(t);
                }
              }),
              (this._documentTouchstartListener = (e) => {
                null != this._touchTimeoutId &&
                  clearTimeout(this._touchTimeoutId),
                  (this._lastTouchTarget = We(e)),
                  (this._touchTimeoutId = setTimeout(
                    () => (this._lastTouchTarget = null),
                    650
                  ));
              }),
              (this._windowFocusListener = () => {
                (this._windowFocused = !0),
                  (this._windowFocusTimeoutId = setTimeout(
                    () => (this._windowFocused = !1)
                  ));
              }),
              (this._rootNodeFocusAndBlurListener = (e) => {
                const t = We(e),
                  n = "focus" === e.type ? this._onFocus : this._onBlur;
                for (let r = t; r; r = r.parentElement) n.call(this, e, r);
              }),
              (this._document = n),
              (this._detectionMode =
                (null == r ? void 0 : r.detectionMode) || 0);
          }
          monitor(e, t = !1) {
            if (!this._platform.isBrowser) return U(null);
            const n = be(e),
              r =
                (function (e) {
                  if (
                    (function () {
                      if (null == Oe) {
                        const e =
                          "undefined" != typeof document ? document.head : null;
                        Oe = !(!e || (!e.createShadowRoot && !e.attachShadow));
                      }
                      return Oe;
                    })()
                  ) {
                    const t = e.getRootNode ? e.getRootNode() : null;
                    if (
                      "undefined" != typeof ShadowRoot &&
                      ShadowRoot &&
                      t instanceof ShadowRoot
                    )
                      return t;
                  }
                  return null;
                })(n) || this._getDocument(),
              i = this._elementInfo.get(n);
            if (i) return t && (i.checkChildren = !0), i.subject.asObservable();
            const s = { checkChildren: t, subject: new M.a(), rootNode: r };
            return (
              this._elementInfo.set(n, s),
              this._registerGlobalListeners(s),
              s.subject.asObservable()
            );
          }
          stopMonitoring(e) {
            const t = be(e),
              n = this._elementInfo.get(t);
            n &&
              (n.subject.complete(),
              this._setClasses(t),
              this._elementInfo.delete(t),
              this._removeGlobalListeners(n));
          }
          focusVia(e, t, n) {
            const r = be(e);
            this._setOriginForCurrentEventQueue(t),
              "function" == typeof r.focus && r.focus(n);
          }
          ngOnDestroy() {
            this._elementInfo.forEach((e, t) => this.stopMonitoring(t));
          }
          _getDocument() {
            return this._document || document;
          }
          _getWindow() {
            return this._getDocument().defaultView || window;
          }
          _toggleClass(e, t, n) {
            n ? e.classList.add(t) : e.classList.remove(t);
          }
          _getFocusOrigin(e) {
            return this._origin
              ? this._origin
              : this._windowFocused && this._lastFocusOrigin
              ? this._lastFocusOrigin
              : this._wasCausedByTouch(e)
              ? "touch"
              : "program";
          }
          _setClasses(e, t) {
            this._toggleClass(e, "cdk-focused", !!t),
              this._toggleClass(e, "cdk-touch-focused", "touch" === t),
              this._toggleClass(e, "cdk-keyboard-focused", "keyboard" === t),
              this._toggleClass(e, "cdk-mouse-focused", "mouse" === t),
              this._toggleClass(e, "cdk-program-focused", "program" === t);
          }
          _setOriginForCurrentEventQueue(e) {
            this._ngZone.runOutsideAngular(() => {
              (this._origin = e),
                0 === this._detectionMode &&
                  (this._originTimeoutId = setTimeout(
                    () => (this._origin = null),
                    1
                  ));
            });
          }
          _wasCausedByTouch(e) {
            const t = We(e);
            return (
              this._lastTouchTarget instanceof Node &&
              t instanceof Node &&
              (t === this._lastTouchTarget || t.contains(this._lastTouchTarget))
            );
          }
          _onFocus(e, t) {
            const n = this._elementInfo.get(t);
            if (!n || (!n.checkChildren && t !== We(e))) return;
            const r = this._getFocusOrigin(e);
            this._setClasses(t, r),
              this._emitOrigin(n.subject, r),
              (this._lastFocusOrigin = r);
          }
          _onBlur(e, t) {
            const n = this._elementInfo.get(t);
            !n ||
              (n.checkChildren &&
                e.relatedTarget instanceof Node &&
                t.contains(e.relatedTarget)) ||
              (this._setClasses(t), this._emitOrigin(n.subject, null));
          }
          _emitOrigin(e, t) {
            this._ngZone.run(() => e.next(t));
          }
          _registerGlobalListeners(e) {
            if (!this._platform.isBrowser) return;
            const t = e.rootNode,
              n = this._rootNodeFocusListenerCount.get(t) || 0;
            n ||
              this._ngZone.runOutsideAngular(() => {
                t.addEventListener(
                  "focus",
                  this._rootNodeFocusAndBlurListener,
                  qe
                ),
                  t.addEventListener(
                    "blur",
                    this._rootNodeFocusAndBlurListener,
                    qe
                  );
              }),
              this._rootNodeFocusListenerCount.set(t, n + 1),
              1 == ++this._monitoredElementCount &&
                this._ngZone.runOutsideAngular(() => {
                  const e = this._getDocument(),
                    t = this._getWindow();
                  e.addEventListener(
                    "keydown",
                    this._documentKeydownListener,
                    qe
                  ),
                    e.addEventListener(
                      "mousedown",
                      this._documentMousedownListener,
                      qe
                    ),
                    e.addEventListener(
                      "touchstart",
                      this._documentTouchstartListener,
                      qe
                    ),
                    t.addEventListener("focus", this._windowFocusListener);
                });
          }
          _removeGlobalListeners(e) {
            const t = e.rootNode;
            if (this._rootNodeFocusListenerCount.has(t)) {
              const e = this._rootNodeFocusListenerCount.get(t);
              e > 1
                ? this._rootNodeFocusListenerCount.set(t, e - 1)
                : (t.removeEventListener(
                    "focus",
                    this._rootNodeFocusAndBlurListener,
                    qe
                  ),
                  t.removeEventListener(
                    "blur",
                    this._rootNodeFocusAndBlurListener,
                    qe
                  ),
                  this._rootNodeFocusListenerCount.delete(t));
            }
            if (!--this._monitoredElementCount) {
              const e = this._getDocument(),
                t = this._getWindow();
              e.removeEventListener(
                "keydown",
                this._documentKeydownListener,
                qe
              ),
                e.removeEventListener(
                  "mousedown",
                  this._documentMousedownListener,
                  qe
                ),
                e.removeEventListener(
                  "touchstart",
                  this._documentTouchstartListener,
                  qe
                ),
                t.removeEventListener("focus", this._windowFocusListener),
                clearTimeout(this._windowFocusTimeoutId),
                clearTimeout(this._touchTimeoutId),
                clearTimeout(this._originTimeoutId);
            }
          }
        }
        return (
          (e.ɵfac = function (t) {
            return new (t || e)(
              r["\u0275\u0275inject"](r.NgZone),
              r["\u0275\u0275inject"](Se),
              r["\u0275\u0275inject"](i.DOCUMENT, 8),
              r["\u0275\u0275inject"]($e, 8)
            );
          }),
          (e.ɵprov = Object(r["\u0275\u0275defineInjectable"])({
            factory: function () {
              return new e(
                Object(r["\u0275\u0275inject"])(r.NgZone),
                Object(r["\u0275\u0275inject"])(Se),
                Object(r["\u0275\u0275inject"])(i.DOCUMENT, 8),
                Object(r["\u0275\u0275inject"])($e, 8)
              );
            },
            token: e,
            providedIn: "root",
          })),
          e
        );
      })();
      function We(e) {
        return e.composedPath ? e.composedPath()[0] : e.target;
      }
      let Qe = (() => {
          class e {
            constructor(e, t) {
              (this._platform = e), (this._document = t);
            }
            getHighContrastMode() {
              if (!this._platform.isBrowser) return 0;
              const e = this._document.createElement("div");
              (e.style.backgroundColor = "rgb(1,2,3)"),
                (e.style.position = "absolute"),
                this._document.body.appendChild(e);
              const t = this._document.defaultView || window,
                n = t && t.getComputedStyle ? t.getComputedStyle(e) : null,
                r = ((n && n.backgroundColor) || "").replace(/ /g, "");
              switch ((this._document.body.removeChild(e), r)) {
                case "rgb(0,0,0)":
                  return 2;
                case "rgb(255,255,255)":
                  return 1;
              }
              return 0;
            }
            _applyBodyHighContrastModeCssClasses() {
              if (this._platform.isBrowser && this._document.body) {
                const e = this._document.body.classList;
                e.remove("cdk-high-contrast-active"),
                  e.remove("cdk-high-contrast-black-on-white"),
                  e.remove("cdk-high-contrast-white-on-black");
                const t = this.getHighContrastMode();
                1 === t
                  ? (e.add("cdk-high-contrast-active"),
                    e.add("cdk-high-contrast-black-on-white"))
                  : 2 === t &&
                    (e.add("cdk-high-contrast-active"),
                    e.add("cdk-high-contrast-white-on-black"));
              }
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(
                r["\u0275\u0275inject"](Se),
                r["\u0275\u0275inject"](i.DOCUMENT)
              );
            }),
            (e.ɵprov = Object(r["\u0275\u0275defineInjectable"])({
              factory: function () {
                return new e(
                  Object(r["\u0275\u0275inject"])(Se),
                  Object(r["\u0275\u0275inject"])(i.DOCUMENT)
                );
              },
              token: e,
              providedIn: "root",
            })),
            e
          );
        })(),
        Ke = (() => {
          class e {
            constructor(e) {
              e._applyBodyHighContrastModeCssClasses();
            }
          }
          return (
            (e.ɵmod = r["\u0275\u0275defineNgModule"]({ type: e })),
            (e.ɵinj = r["\u0275\u0275defineInjector"]({
              factory: function (t) {
                return new (t || e)(r["\u0275\u0275inject"](Qe));
              },
              imports: [[Ee, Fe]],
            })),
            e
          );
        })();
      const Ze = new r.InjectionToken("cdk-dir-doc", {
        providedIn: "root",
        factory: function () {
          return Object(r.inject)(i.DOCUMENT);
        },
      });
      let Ye = (() => {
          class e {
            constructor(e) {
              if (
                ((this.value = "ltr"), (this.change = new r.EventEmitter()), e)
              ) {
                const t = e.documentElement ? e.documentElement.dir : null,
                  n = (e.body ? e.body.dir : null) || t;
                this.value = "ltr" === n || "rtl" === n ? n : "ltr";
              }
            }
            ngOnDestroy() {
              this.change.complete();
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(r["\u0275\u0275inject"](Ze, 8));
            }),
            (e.ɵprov = Object(r["\u0275\u0275defineInjectable"])({
              factory: function () {
                return new e(Object(r["\u0275\u0275inject"])(Ze, 8));
              },
              token: e,
              providedIn: "root",
            })),
            e
          );
        })(),
        Xe = (() => {
          class e {}
          return (
            (e.ɵmod = r["\u0275\u0275defineNgModule"]({ type: e })),
            (e.ɵinj = r["\u0275\u0275defineInjector"]({
              factory: function (t) {
                return new (t || e)();
              },
            })),
            e
          );
        })();
      const Je = new r.Version("9.2.4");
      var et = n("bHdf");
      function tt() {
        return Object(et.a)(1);
      }
      function nt(...e) {
        return tt()(U(...e));
      }
      function rt(...e) {
        const t = e[e.length - 1];
        return Object(V.a)(t) ? (e.pop(), (n) => nt(e, n, t)) : (t) => nt(e, t);
      }
      class it {}
      function st(e, t) {
        return { type: 7, name: e, definitions: t, options: {} };
      }
      function ot(e, t = null) {
        return { type: 4, styles: t, timings: e };
      }
      function at(e, t = null) {
        return { type: 2, steps: e, options: t };
      }
      function lt(e) {
        return { type: 6, styles: e, offset: null };
      }
      function ct(e, t, n) {
        return { type: 0, name: e, styles: t, options: n };
      }
      function ut(e) {
        return { type: 5, steps: e };
      }
      function ht(e, t, n = null) {
        return { type: 1, expr: e, animation: t, options: n };
      }
      function dt(e = null) {
        return { type: 9, options: e };
      }
      function ft(e, t, n = null) {
        return { type: 11, selector: e, animation: t, options: n };
      }
      function pt(e) {
        Promise.resolve(null).then(e);
      }
      class mt {
        constructor(e = 0, t = 0) {
          (this._onDoneFns = []),
            (this._onStartFns = []),
            (this._onDestroyFns = []),
            (this._started = !1),
            (this._destroyed = !1),
            (this._finished = !1),
            (this.parentPlayer = null),
            (this.totalTime = e + t);
        }
        _onFinish() {
          this._finished ||
            ((this._finished = !0),
            this._onDoneFns.forEach((e) => e()),
            (this._onDoneFns = []));
        }
        onStart(e) {
          this._onStartFns.push(e);
        }
        onDone(e) {
          this._onDoneFns.push(e);
        }
        onDestroy(e) {
          this._onDestroyFns.push(e);
        }
        hasStarted() {
          return this._started;
        }
        init() {}
        play() {
          this.hasStarted() || (this._onStart(), this.triggerMicrotask()),
            (this._started = !0);
        }
        triggerMicrotask() {
          pt(() => this._onFinish());
        }
        _onStart() {
          this._onStartFns.forEach((e) => e()), (this._onStartFns = []);
        }
        pause() {}
        restart() {}
        finish() {
          this._onFinish();
        }
        destroy() {
          this._destroyed ||
            ((this._destroyed = !0),
            this.hasStarted() || this._onStart(),
            this.finish(),
            this._onDestroyFns.forEach((e) => e()),
            (this._onDestroyFns = []));
        }
        reset() {}
        setPosition(e) {}
        getPosition() {
          return 0;
        }
        triggerCallback(e) {
          const t = "start" == e ? this._onStartFns : this._onDoneFns;
          t.forEach((e) => e()), (t.length = 0);
        }
      }
      class gt {
        constructor(e) {
          (this._onDoneFns = []),
            (this._onStartFns = []),
            (this._finished = !1),
            (this._started = !1),
            (this._destroyed = !1),
            (this._onDestroyFns = []),
            (this.parentPlayer = null),
            (this.totalTime = 0),
            (this.players = e);
          let t = 0,
            n = 0,
            r = 0;
          const i = this.players.length;
          0 == i
            ? pt(() => this._onFinish())
            : this.players.forEach((e) => {
                e.onDone(() => {
                  ++t == i && this._onFinish();
                }),
                  e.onDestroy(() => {
                    ++n == i && this._onDestroy();
                  }),
                  e.onStart(() => {
                    ++r == i && this._onStart();
                  });
              }),
            (this.totalTime = this.players.reduce(
              (e, t) => Math.max(e, t.totalTime),
              0
            ));
        }
        _onFinish() {
          this._finished ||
            ((this._finished = !0),
            this._onDoneFns.forEach((e) => e()),
            (this._onDoneFns = []));
        }
        init() {
          this.players.forEach((e) => e.init());
        }
        onStart(e) {
          this._onStartFns.push(e);
        }
        _onStart() {
          this.hasStarted() ||
            ((this._started = !0),
            this._onStartFns.forEach((e) => e()),
            (this._onStartFns = []));
        }
        onDone(e) {
          this._onDoneFns.push(e);
        }
        onDestroy(e) {
          this._onDestroyFns.push(e);
        }
        hasStarted() {
          return this._started;
        }
        play() {
          this.parentPlayer || this.init(),
            this._onStart(),
            this.players.forEach((e) => e.play());
        }
        pause() {
          this.players.forEach((e) => e.pause());
        }
        restart() {
          this.players.forEach((e) => e.restart());
        }
        finish() {
          this._onFinish(), this.players.forEach((e) => e.finish());
        }
        destroy() {
          this._onDestroy();
        }
        _onDestroy() {
          this._destroyed ||
            ((this._destroyed = !0),
            this._onFinish(),
            this.players.forEach((e) => e.destroy()),
            this._onDestroyFns.forEach((e) => e()),
            (this._onDestroyFns = []));
        }
        reset() {
          this.players.forEach((e) => e.reset()),
            (this._destroyed = !1),
            (this._finished = !1),
            (this._started = !1);
        }
        setPosition(e) {
          const t = e * this.totalTime;
          this.players.forEach((e) => {
            const n = e.totalTime ? Math.min(1, t / e.totalTime) : 1;
            e.setPosition(n);
          });
        }
        getPosition() {
          let e = 0;
          return (
            this.players.forEach((t) => {
              const n = t.getPosition();
              e = Math.min(n, e);
            }),
            e
          );
        }
        beforeDestroy() {
          this.players.forEach((e) => {
            e.beforeDestroy && e.beforeDestroy();
          });
        }
        triggerCallback(e) {
          const t = "start" == e ? this._onStartFns : this._onDoneFns;
          t.forEach((e) => e()), (t.length = 0);
        }
      }
      function _t() {
        return (
          "undefined" != typeof process &&
          "[object process]" === {}.toString.call(process)
        );
      }
      function yt(e) {
        switch (e.length) {
          case 0:
            return new mt();
          case 1:
            return e[0];
          default:
            return new gt(e);
        }
      }
      function vt(e, t, n, r, i = {}, s = {}) {
        const o = [],
          a = [];
        let l = -1,
          c = null;
        if (
          (r.forEach((e) => {
            const n = e.offset,
              r = n == l,
              u = (r && c) || {};
            Object.keys(e).forEach((n) => {
              let r = n,
                a = e[n];
              if ("offset" !== n)
                switch (((r = t.normalizePropertyName(r, o)), a)) {
                  case "!":
                    a = i[n];
                    break;
                  case "*":
                    a = s[n];
                    break;
                  default:
                    a = t.normalizeStyleValue(n, r, a, o);
                }
              u[r] = a;
            }),
              r || a.push(u),
              (c = u),
              (l = n);
          }),
          o.length)
        ) {
          const e = "\n - ";
          throw new Error(
            `Unable to animate due to the following errors:${e}${o.join(e)}`
          );
        }
        return a;
      }
      function bt(e, t, n, r) {
        switch (t) {
          case "start":
            e.onStart(() => r(n && wt(n, "start", e)));
            break;
          case "done":
            e.onDone(() => r(n && wt(n, "done", e)));
            break;
          case "destroy":
            e.onDestroy(() => r(n && wt(n, "destroy", e)));
        }
      }
      function wt(e, t, n) {
        const r = n.totalTime,
          i = Ct(
            e.element,
            e.triggerName,
            e.fromState,
            e.toState,
            t || e.phaseName,
            null == r ? e.totalTime : r,
            !!n.disabled
          ),
          s = e._data;
        return null != s && (i._data = s), i;
      }
      function Ct(e, t, n, r, i = "", s = 0, o) {
        return {
          element: e,
          triggerName: t,
          fromState: n,
          toState: r,
          phaseName: i,
          totalTime: s,
          disabled: !!o,
        };
      }
      function St(e, t, n) {
        let r;
        return (
          e instanceof Map
            ? ((r = e.get(t)), r || e.set(t, (r = n)))
            : ((r = e[t]), r || (r = e[t] = n)),
          r
        );
      }
      function Et(e) {
        const t = e.indexOf(":");
        return [e.substring(1, t), e.substr(t + 1)];
      }
      let xt = (e, t) => !1,
        Dt = (e, t) => !1,
        It = (e, t, n) => [];
      const Ot = _t();
      (Ot || "undefined" != typeof Element) &&
        ((xt = (e, t) => e.contains(t)),
        (Dt = (() => {
          if (Ot || Element.prototype.matches) return (e, t) => e.matches(t);
          {
            const e = Element.prototype,
              t =
                e.matchesSelector ||
                e.mozMatchesSelector ||
                e.msMatchesSelector ||
                e.oMatchesSelector ||
                e.webkitMatchesSelector;
            return t ? (e, n) => t.apply(e, [n]) : Dt;
          }
        })()),
        (It = (e, t, n) => {
          let r = [];
          if (n) r.push(...e.querySelectorAll(t));
          else {
            const n = e.querySelector(t);
            n && r.push(n);
          }
          return r;
        }));
      let kt = null,
        Rt = !1;
      function At(e) {
        kt ||
          ((kt = ("undefined" != typeof document ? document.body : null) || {}),
          (Rt = !!kt.style && "WebkitAppearance" in kt.style));
        let t = !0;
        return (
          kt.style &&
            !(function (e) {
              return "ebkit" == e.substring(1, 6);
            })(e) &&
            ((t = e in kt.style), !t && Rt) &&
            (t =
              "Webkit" + e.charAt(0).toUpperCase() + e.substr(1) in kt.style),
          t
        );
      }
      const Tt = Dt,
        Ft = xt,
        Pt = It;
      function jt(e) {
        const t = {};
        return (
          Object.keys(e).forEach((n) => {
            const r = n.replace(/([a-z])([A-Z])/g, "$1-$2");
            t[r] = e[n];
          }),
          t
        );
      }
      let Nt = (() => {
          class e {
            validateStyleProperty(e) {
              return At(e);
            }
            matchesElement(e, t) {
              return Tt(e, t);
            }
            containsElement(e, t) {
              return Ft(e, t);
            }
            query(e, t, n) {
              return Pt(e, t, n);
            }
            computeStyle(e, t, n) {
              return n || "";
            }
            animate(e, t, n, r, i, s = [], o) {
              return new mt(n, r);
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)();
            }),
            (e.ɵprov = r["\u0275\u0275defineInjectable"]({
              token: e,
              factory: e.ɵfac,
            })),
            e
          );
        })(),
        Mt = (() => {
          class e {}
          return (e.NOOP = new Nt()), e;
        })();
      function Lt(e) {
        if ("number" == typeof e) return e;
        const t = e.match(/^(-?[\.\d]+)(m?s)/);
        return !t || t.length < 2 ? 0 : Vt(parseFloat(t[1]), t[2]);
      }
      function Vt(e, t) {
        switch (t) {
          case "s":
            return 1e3 * e;
          default:
            return e;
        }
      }
      function Bt(e, t, n) {
        return e.hasOwnProperty("duration")
          ? e
          : (function (e, t, n) {
              let r,
                i = 0,
                s = "";
              if ("string" == typeof e) {
                const n = e.match(
                  /^(-?[\.\d]+)(m?s)(?:\s+(-?[\.\d]+)(m?s))?(?:\s+([-a-z]+(?:\(.+?\))?))?$/i
                );
                if (null === n)
                  return (
                    t.push(`The provided timing value "${e}" is invalid.`),
                    { duration: 0, delay: 0, easing: "" }
                  );
                r = Vt(parseFloat(n[1]), n[2]);
                const o = n[3];
                null != o && (i = Vt(parseFloat(o), n[4]));
                const a = n[5];
                a && (s = a);
              } else r = e;
              if (!n) {
                let n = !1,
                  s = t.length;
                r < 0 &&
                  (t.push(
                    "Duration values below 0 are not allowed for this animation step."
                  ),
                  (n = !0)),
                  i < 0 &&
                    (t.push(
                      "Delay values below 0 are not allowed for this animation step."
                    ),
                    (n = !0)),
                  n &&
                    t.splice(
                      s,
                      0,
                      `The provided timing value "${e}" is invalid.`
                    );
              }
              return { duration: r, delay: i, easing: s };
            })(e, t, n);
      }
      function zt(e, t = {}) {
        return (
          Object.keys(e).forEach((n) => {
            t[n] = e[n];
          }),
          t
        );
      }
      function Ut(e, t, n = {}) {
        if (t) for (let r in e) n[r] = e[r];
        else zt(e, n);
        return n;
      }
      function Ht(e, t, n) {
        return n ? t + ":" + n + ";" : "";
      }
      function $t(e) {
        let t = "";
        for (let n = 0; n < e.style.length; n++) {
          const r = e.style.item(n);
          t += Ht(0, r, e.style.getPropertyValue(r));
        }
        for (const n in e.style)
          e.style.hasOwnProperty(n) &&
            !n.startsWith("_") &&
            (t += Ht(
              0,
              n.replace(/([a-z])([A-Z])/g, "$1-$2").toLowerCase(),
              e.style[n]
            ));
        e.setAttribute("style", t);
      }
      function qt(e, t, n) {
        e.style &&
          (Object.keys(t).forEach((r) => {
            const i = Jt(r);
            n && !n.hasOwnProperty(r) && (n[r] = e.style[i]),
              (e.style[i] = t[r]);
          }),
          _t() && $t(e));
      }
      function Gt(e, t) {
        e.style &&
          (Object.keys(t).forEach((t) => {
            const n = Jt(t);
            e.style[n] = "";
          }),
          _t() && $t(e));
      }
      function Wt(e) {
        return Array.isArray(e) ? (1 == e.length ? e[0] : at(e)) : e;
      }
      const Qt = new RegExp("{{\\s*(.+?)\\s*}}", "g");
      function Kt(e) {
        let t = [];
        if ("string" == typeof e) {
          let n;
          for (; (n = Qt.exec(e)); ) t.push(n[1]);
          Qt.lastIndex = 0;
        }
        return t;
      }
      function Zt(e, t, n) {
        const r = e.toString(),
          i = r.replace(Qt, (e, r) => {
            let i = t[r];
            return (
              t.hasOwnProperty(r) ||
                (n.push("Please provide a value for the animation param " + r),
                (i = "")),
              i.toString()
            );
          });
        return i == r ? e : i;
      }
      function Yt(e) {
        const t = [];
        let n = e.next();
        for (; !n.done; ) t.push(n.value), (n = e.next());
        return t;
      }
      const Xt = /-+([a-z0-9])/g;
      function Jt(e) {
        return e.replace(Xt, (...e) => e[1].toUpperCase());
      }
      function en(e, t) {
        return 0 === e || 0 === t;
      }
      function tn(e, t, n) {
        const r = Object.keys(n);
        if (r.length && t.length) {
          let s = t[0],
            o = [];
          if (
            (r.forEach((e) => {
              s.hasOwnProperty(e) || o.push(e), (s[e] = n[e]);
            }),
            o.length)
          )
            for (var i = 1; i < t.length; i++) {
              let n = t[i];
              o.forEach(function (t) {
                n[t] = rn(e, t);
              });
            }
        }
        return t;
      }
      function nn(e, t, n) {
        switch (t.type) {
          case 7:
            return e.visitTrigger(t, n);
          case 0:
            return e.visitState(t, n);
          case 1:
            return e.visitTransition(t, n);
          case 2:
            return e.visitSequence(t, n);
          case 3:
            return e.visitGroup(t, n);
          case 4:
            return e.visitAnimate(t, n);
          case 5:
            return e.visitKeyframes(t, n);
          case 6:
            return e.visitStyle(t, n);
          case 8:
            return e.visitReference(t, n);
          case 9:
            return e.visitAnimateChild(t, n);
          case 10:
            return e.visitAnimateRef(t, n);
          case 11:
            return e.visitQuery(t, n);
          case 12:
            return e.visitStagger(t, n);
          default:
            throw new Error(
              "Unable to resolve animation metadata node #" + t.type
            );
        }
      }
      function rn(e, t) {
        return window.getComputedStyle(e)[t];
      }
      function sn(e, t) {
        const n = [];
        return (
          "string" == typeof e
            ? e.split(/\s*,\s*/).forEach((e) =>
                (function (e, t, n) {
                  if (":" == e[0]) {
                    const r = (function (e, t) {
                      switch (e) {
                        case ":enter":
                          return "void => *";
                        case ":leave":
                          return "* => void";
                        case ":increment":
                          return (e, t) => parseFloat(t) > parseFloat(e);
                        case ":decrement":
                          return (e, t) => parseFloat(t) < parseFloat(e);
                        default:
                          return (
                            t.push(
                              `The transition alias value "${e}" is not supported`
                            ),
                            "* => *"
                          );
                      }
                    })(e, n);
                    if ("function" == typeof r) return void t.push(r);
                    e = r;
                  }
                  const r = e.match(/^(\*|[-\w]+)\s*(<?[=-]>)\s*(\*|[-\w]+)$/);
                  if (null == r || r.length < 4)
                    return (
                      n.push(
                        `The provided transition expression "${e}" is not supported`
                      ),
                      t
                    );
                  const i = r[1],
                    s = r[2],
                    o = r[3];
                  t.push(ln(i, o)),
                    "<" != s[0] || ("*" == i && "*" == o) || t.push(ln(o, i));
                })(e, n, t)
              )
            : n.push(e),
          n
        );
      }
      const on = new Set(["true", "1"]),
        an = new Set(["false", "0"]);
      function ln(e, t) {
        const n = on.has(e) || an.has(e),
          r = on.has(t) || an.has(t);
        return (i, s) => {
          let o = "*" == e || e == i,
            a = "*" == t || t == s;
          return (
            !o && n && "boolean" == typeof i && (o = i ? on.has(e) : an.has(e)),
            !a && r && "boolean" == typeof s && (a = s ? on.has(t) : an.has(t)),
            o && a
          );
        };
      }
      const cn = new RegExp("s*:selfs*,?", "g");
      function un(e, t, n) {
        return new hn(e).build(t, n);
      }
      class hn {
        constructor(e) {
          this._driver = e;
        }
        build(e, t) {
          const n = new dn(t);
          return this._resetContextStyleTimingState(n), nn(this, Wt(e), n);
        }
        _resetContextStyleTimingState(e) {
          (e.currentQuerySelector = ""),
            (e.collectedStyles = {}),
            (e.collectedStyles[""] = {}),
            (e.currentTime = 0);
        }
        visitTrigger(e, t) {
          let n = (t.queryCount = 0),
            r = (t.depCount = 0);
          const i = [],
            s = [];
          return (
            "@" == e.name.charAt(0) &&
              t.errors.push(
                "animation triggers cannot be prefixed with an `@` sign (e.g. trigger('@foo', [...]))"
              ),
            e.definitions.forEach((e) => {
              if ((this._resetContextStyleTimingState(t), 0 == e.type)) {
                const n = e,
                  r = n.name;
                r
                  .toString()
                  .split(/\s*,\s*/)
                  .forEach((e) => {
                    (n.name = e), i.push(this.visitState(n, t));
                  }),
                  (n.name = r);
              } else if (1 == e.type) {
                const i = this.visitTransition(e, t);
                (n += i.queryCount), (r += i.depCount), s.push(i);
              } else
                t.errors.push(
                  "only state() and transition() definitions can sit inside of a trigger()"
                );
            }),
            {
              type: 7,
              name: e.name,
              states: i,
              transitions: s,
              queryCount: n,
              depCount: r,
              options: null,
            }
          );
        }
        visitState(e, t) {
          const n = this.visitStyle(e.styles, t),
            r = (e.options && e.options.params) || null;
          if (n.containsDynamicStyles) {
            const i = new Set(),
              s = r || {};
            if (
              (n.styles.forEach((e) => {
                if (fn(e)) {
                  const t = e;
                  Object.keys(t).forEach((e) => {
                    Kt(t[e]).forEach((e) => {
                      s.hasOwnProperty(e) || i.add(e);
                    });
                  });
                }
              }),
              i.size)
            ) {
              const n = Yt(i.values());
              t.errors.push(
                `state("${
                  e.name
                }", ...) must define default values for all the following style substitutions: ${n.join(
                  ", "
                )}`
              );
            }
          }
          return {
            type: 0,
            name: e.name,
            style: n,
            options: r ? { params: r } : null,
          };
        }
        visitTransition(e, t) {
          (t.queryCount = 0), (t.depCount = 0);
          const n = nn(this, Wt(e.animation), t);
          return {
            type: 1,
            matchers: sn(e.expr, t.errors),
            animation: n,
            queryCount: t.queryCount,
            depCount: t.depCount,
            options: pn(e.options),
          };
        }
        visitSequence(e, t) {
          return {
            type: 2,
            steps: e.steps.map((e) => nn(this, e, t)),
            options: pn(e.options),
          };
        }
        visitGroup(e, t) {
          const n = t.currentTime;
          let r = 0;
          const i = e.steps.map((e) => {
            t.currentTime = n;
            const i = nn(this, e, t);
            return (r = Math.max(r, t.currentTime)), i;
          });
          return (
            (t.currentTime = r), { type: 3, steps: i, options: pn(e.options) }
          );
        }
        visitAnimate(e, t) {
          const n = (function (e, t) {
            let n = null;
            if (e.hasOwnProperty("duration")) n = e;
            else if ("number" == typeof e) return mn(Bt(e, t).duration, 0, "");
            const r = e;
            if (
              r
                .split(/\s+/)
                .some((e) => "{" == e.charAt(0) && "{" == e.charAt(1))
            ) {
              const e = mn(0, 0, "");
              return (e.dynamic = !0), (e.strValue = r), e;
            }
            return (n = n || Bt(r, t)), mn(n.duration, n.delay, n.easing);
          })(e.timings, t.errors);
          let r;
          t.currentAnimateTimings = n;
          let i = e.styles ? e.styles : lt({});
          if (5 == i.type) r = this.visitKeyframes(i, t);
          else {
            let i = e.styles,
              s = !1;
            if (!i) {
              s = !0;
              const e = {};
              n.easing && (e.easing = n.easing), (i = lt(e));
            }
            t.currentTime += n.duration + n.delay;
            const o = this.visitStyle(i, t);
            (o.isEmptyStep = s), (r = o);
          }
          return (
            (t.currentAnimateTimings = null),
            { type: 4, timings: n, style: r, options: null }
          );
        }
        visitStyle(e, t) {
          const n = this._makeStyleAst(e, t);
          return this._validateStyleAst(n, t), n;
        }
        _makeStyleAst(e, t) {
          const n = [];
          Array.isArray(e.styles)
            ? e.styles.forEach((e) => {
                "string" == typeof e
                  ? "*" == e
                    ? n.push(e)
                    : t.errors.push(
                        `The provided style string value ${e} is not allowed.`
                      )
                  : n.push(e);
              })
            : n.push(e.styles);
          let r = !1,
            i = null;
          return (
            n.forEach((e) => {
              if (fn(e)) {
                const t = e,
                  n = t.easing;
                if ((n && ((i = n), delete t.easing), !r))
                  for (let e in t)
                    if (t[e].toString().indexOf("{{") >= 0) {
                      r = !0;
                      break;
                    }
              }
            }),
            {
              type: 6,
              styles: n,
              easing: i,
              offset: e.offset,
              containsDynamicStyles: r,
              options: null,
            }
          );
        }
        _validateStyleAst(e, t) {
          const n = t.currentAnimateTimings;
          let r = t.currentTime,
            i = t.currentTime;
          n && i > 0 && (i -= n.duration + n.delay),
            e.styles.forEach((e) => {
              "string" != typeof e &&
                Object.keys(e).forEach((n) => {
                  if (!this._driver.validateStyleProperty(n))
                    return void t.errors.push(
                      `The provided animation property "${n}" is not a supported CSS property for animations`
                    );
                  const s = t.collectedStyles[t.currentQuerySelector],
                    o = s[n];
                  let a = !0;
                  o &&
                    (i != r &&
                      i >= o.startTime &&
                      r <= o.endTime &&
                      (t.errors.push(
                        `The CSS property "${n}" that exists between the times of "${o.startTime}ms" and "${o.endTime}ms" is also being animated in a parallel animation between the times of "${i}ms" and "${r}ms"`
                      ),
                      (a = !1)),
                    (i = o.startTime)),
                    a && (s[n] = { startTime: i, endTime: r }),
                    t.options &&
                      (function (e, t, n) {
                        const r = t.params || {},
                          i = Kt(e);
                        i.length &&
                          i.forEach((e) => {
                            r.hasOwnProperty(e) ||
                              n.push(
                                `Unable to resolve the local animation param ${e} in the given list of values`
                              );
                          });
                      })(e[n], t.options, t.errors);
                });
            });
        }
        visitKeyframes(e, t) {
          const n = { type: 5, styles: [], options: null };
          if (!t.currentAnimateTimings)
            return (
              t.errors.push(
                "keyframes() must be placed inside of a call to animate()"
              ),
              n
            );
          let r = 0;
          const i = [];
          let s = !1,
            o = !1,
            a = 0;
          const l = e.steps.map((e) => {
            const n = this._makeStyleAst(e, t);
            let l =
                null != n.offset
                  ? n.offset
                  : (function (e) {
                      if ("string" == typeof e) return null;
                      let t = null;
                      if (Array.isArray(e))
                        e.forEach((e) => {
                          if (fn(e) && e.hasOwnProperty("offset")) {
                            const n = e;
                            (t = parseFloat(n.offset)), delete n.offset;
                          }
                        });
                      else if (fn(e) && e.hasOwnProperty("offset")) {
                        const n = e;
                        (t = parseFloat(n.offset)), delete n.offset;
                      }
                      return t;
                    })(n.styles),
              c = 0;
            return (
              null != l && (r++, (c = n.offset = l)),
              (o = o || c < 0 || c > 1),
              (s = s || c < a),
              (a = c),
              i.push(c),
              n
            );
          });
          o &&
            t.errors.push(
              "Please ensure that all keyframe offsets are between 0 and 1"
            ),
            s &&
              t.errors.push(
                "Please ensure that all keyframe offsets are in order"
              );
          const c = e.steps.length;
          let u = 0;
          r > 0 && r < c
            ? t.errors.push(
                "Not all style() steps within the declared keyframes() contain offsets"
              )
            : 0 == r && (u = 1 / (c - 1));
          const h = c - 1,
            d = t.currentTime,
            f = t.currentAnimateTimings,
            p = f.duration;
          return (
            l.forEach((e, r) => {
              const s = u > 0 ? (r == h ? 1 : u * r) : i[r],
                o = s * p;
              (t.currentTime = d + f.delay + o),
                (f.duration = o),
                this._validateStyleAst(e, t),
                (e.offset = s),
                n.styles.push(e);
            }),
            n
          );
        }
        visitReference(e, t) {
          return {
            type: 8,
            animation: nn(this, Wt(e.animation), t),
            options: pn(e.options),
          };
        }
        visitAnimateChild(e, t) {
          return t.depCount++, { type: 9, options: pn(e.options) };
        }
        visitAnimateRef(e, t) {
          return {
            type: 10,
            animation: this.visitReference(e.animation, t),
            options: pn(e.options),
          };
        }
        visitQuery(e, t) {
          const n = t.currentQuerySelector,
            r = e.options || {};
          t.queryCount++, (t.currentQuery = e);
          const [i, s] = (function (e) {
            const t = !!e.split(/\s*,\s*/).find((e) => ":self" == e);
            return (
              t && (e = e.replace(cn, "")),
              [
                (e = e
                  .replace(/@\*/g, ".ng-trigger")
                  .replace(/@\w+/g, (e) => ".ng-trigger-" + e.substr(1))
                  .replace(/:animating/g, ".ng-animating")),
                t,
              ]
            );
          })(e.selector);
          (t.currentQuerySelector = n.length ? n + " " + i : i),
            St(t.collectedStyles, t.currentQuerySelector, {});
          const o = nn(this, Wt(e.animation), t);
          return (
            (t.currentQuery = null),
            (t.currentQuerySelector = n),
            {
              type: 11,
              selector: i,
              limit: r.limit || 0,
              optional: !!r.optional,
              includeSelf: s,
              animation: o,
              originalSelector: e.selector,
              options: pn(e.options),
            }
          );
        }
        visitStagger(e, t) {
          t.currentQuery ||
            t.errors.push("stagger() can only be used inside of query()");
          const n =
            "full" === e.timings
              ? { duration: 0, delay: 0, easing: "full" }
              : Bt(e.timings, t.errors, !0);
          return {
            type: 12,
            animation: nn(this, Wt(e.animation), t),
            timings: n,
            options: null,
          };
        }
      }
      class dn {
        constructor(e) {
          (this.errors = e),
            (this.queryCount = 0),
            (this.depCount = 0),
            (this.currentTransition = null),
            (this.currentQuery = null),
            (this.currentQuerySelector = null),
            (this.currentAnimateTimings = null),
            (this.currentTime = 0),
            (this.collectedStyles = {}),
            (this.options = null);
        }
      }
      function fn(e) {
        return !Array.isArray(e) && "object" == typeof e;
      }
      function pn(e) {
        var t;
        return (
          e
            ? (e = zt(e)).params && (e.params = (t = e.params) ? zt(t) : null)
            : (e = {}),
          e
        );
      }
      function mn(e, t, n) {
        return { duration: e, delay: t, easing: n };
      }
      function gn(e, t, n, r, i, s, o = null, a = !1) {
        return {
          type: 1,
          element: e,
          keyframes: t,
          preStyleProps: n,
          postStyleProps: r,
          duration: i,
          delay: s,
          totalTime: i + s,
          easing: o,
          subTimeline: a,
        };
      }
      class _n {
        constructor() {
          this._map = new Map();
        }
        consume(e) {
          let t = this._map.get(e);
          return t ? this._map.delete(e) : (t = []), t;
        }
        append(e, t) {
          let n = this._map.get(e);
          n || this._map.set(e, (n = [])), n.push(...t);
        }
        has(e) {
          return this._map.has(e);
        }
        clear() {
          this._map.clear();
        }
      }
      const yn = new RegExp(":enter", "g"),
        vn = new RegExp(":leave", "g");
      function bn(e, t, n, r, i, s = {}, o = {}, a, l, c = []) {
        return new wn().buildKeyframes(e, t, n, r, i, s, o, a, l, c);
      }
      class wn {
        buildKeyframes(e, t, n, r, i, s, o, a, l, c = []) {
          l = l || new _n();
          const u = new Sn(e, t, l, r, i, c, []);
          (u.options = a),
            u.currentTimeline.setStyles([s], null, u.errors, a),
            nn(this, n, u);
          const h = u.timelines.filter((e) => e.containsAnimation());
          if (h.length && Object.keys(o).length) {
            const e = h[h.length - 1];
            e.allowOnlyTimelineStyles() || e.setStyles([o], null, u.errors, a);
          }
          return h.length
            ? h.map((e) => e.buildKeyframes())
            : [gn(t, [], [], [], 0, 0, "", !1)];
        }
        visitTrigger(e, t) {}
        visitState(e, t) {}
        visitTransition(e, t) {}
        visitAnimateChild(e, t) {
          const n = t.subInstructions.consume(t.element);
          if (n) {
            const r = t.createSubContext(e.options),
              i = t.currentTimeline.currentTime,
              s = this._visitSubInstructions(n, r, r.options);
            i != s && t.transformIntoNewTimeline(s);
          }
          t.previousNode = e;
        }
        visitAnimateRef(e, t) {
          const n = t.createSubContext(e.options);
          n.transformIntoNewTimeline(),
            this.visitReference(e.animation, n),
            t.transformIntoNewTimeline(n.currentTimeline.currentTime),
            (t.previousNode = e);
        }
        _visitSubInstructions(e, t, n) {
          let r = t.currentTimeline.currentTime;
          const i = null != n.duration ? Lt(n.duration) : null,
            s = null != n.delay ? Lt(n.delay) : null;
          return (
            0 !== i &&
              e.forEach((e) => {
                const n = t.appendInstructionToTimeline(e, i, s);
                r = Math.max(r, n.duration + n.delay);
              }),
            r
          );
        }
        visitReference(e, t) {
          t.updateOptions(e.options, !0),
            nn(this, e.animation, t),
            (t.previousNode = e);
        }
        visitSequence(e, t) {
          const n = t.subContextCount;
          let r = t;
          const i = e.options;
          if (
            i &&
            (i.params || i.delay) &&
            ((r = t.createSubContext(i)),
            r.transformIntoNewTimeline(),
            null != i.delay)
          ) {
            6 == r.previousNode.type &&
              (r.currentTimeline.snapshotCurrentStyles(),
              (r.previousNode = Cn));
            const e = Lt(i.delay);
            r.delayNextStep(e);
          }
          e.steps.length &&
            (e.steps.forEach((e) => nn(this, e, r)),
            r.currentTimeline.applyStylesToKeyframe(),
            r.subContextCount > n && r.transformIntoNewTimeline()),
            (t.previousNode = e);
        }
        visitGroup(e, t) {
          const n = [];
          let r = t.currentTimeline.currentTime;
          const i = e.options && e.options.delay ? Lt(e.options.delay) : 0;
          e.steps.forEach((s) => {
            const o = t.createSubContext(e.options);
            i && o.delayNextStep(i),
              nn(this, s, o),
              (r = Math.max(r, o.currentTimeline.currentTime)),
              n.push(o.currentTimeline);
          }),
            n.forEach((e) => t.currentTimeline.mergeTimelineCollectedStyles(e)),
            t.transformIntoNewTimeline(r),
            (t.previousNode = e);
        }
        _visitTiming(e, t) {
          if (e.dynamic) {
            const n = e.strValue;
            return Bt(t.params ? Zt(n, t.params, t.errors) : n, t.errors);
          }
          return { duration: e.duration, delay: e.delay, easing: e.easing };
        }
        visitAnimate(e, t) {
          const n = (t.currentAnimateTimings = this._visitTiming(e.timings, t)),
            r = t.currentTimeline;
          n.delay && (t.incrementTime(n.delay), r.snapshotCurrentStyles());
          const i = e.style;
          5 == i.type
            ? this.visitKeyframes(i, t)
            : (t.incrementTime(n.duration),
              this.visitStyle(i, t),
              r.applyStylesToKeyframe()),
            (t.currentAnimateTimings = null),
            (t.previousNode = e);
        }
        visitStyle(e, t) {
          const n = t.currentTimeline,
            r = t.currentAnimateTimings;
          !r && n.getCurrentStyleProperties().length && n.forwardFrame();
          const i = (r && r.easing) || e.easing;
          e.isEmptyStep
            ? n.applyEmptyStep(i)
            : n.setStyles(e.styles, i, t.errors, t.options),
            (t.previousNode = e);
        }
        visitKeyframes(e, t) {
          const n = t.currentAnimateTimings,
            r = t.currentTimeline.duration,
            i = n.duration,
            s = t.createSubContext().currentTimeline;
          (s.easing = n.easing),
            e.styles.forEach((e) => {
              s.forwardTime((e.offset || 0) * i),
                s.setStyles(e.styles, e.easing, t.errors, t.options),
                s.applyStylesToKeyframe();
            }),
            t.currentTimeline.mergeTimelineCollectedStyles(s),
            t.transformIntoNewTimeline(r + i),
            (t.previousNode = e);
        }
        visitQuery(e, t) {
          const n = t.currentTimeline.currentTime,
            r = e.options || {},
            i = r.delay ? Lt(r.delay) : 0;
          i &&
            (6 === t.previousNode.type ||
              (0 == n &&
                t.currentTimeline.getCurrentStyleProperties().length)) &&
            (t.currentTimeline.snapshotCurrentStyles(), (t.previousNode = Cn));
          let s = n;
          const o = t.invokeQuery(
            e.selector,
            e.originalSelector,
            e.limit,
            e.includeSelf,
            !!r.optional,
            t.errors
          );
          t.currentQueryTotal = o.length;
          let a = null;
          o.forEach((n, r) => {
            t.currentQueryIndex = r;
            const o = t.createSubContext(e.options, n);
            i && o.delayNextStep(i),
              n === t.element && (a = o.currentTimeline),
              nn(this, e.animation, o),
              o.currentTimeline.applyStylesToKeyframe(),
              (s = Math.max(s, o.currentTimeline.currentTime));
          }),
            (t.currentQueryIndex = 0),
            (t.currentQueryTotal = 0),
            t.transformIntoNewTimeline(s),
            a &&
              (t.currentTimeline.mergeTimelineCollectedStyles(a),
              t.currentTimeline.snapshotCurrentStyles()),
            (t.previousNode = e);
        }
        visitStagger(e, t) {
          const n = t.parentContext,
            r = t.currentTimeline,
            i = e.timings,
            s = Math.abs(i.duration),
            o = s * (t.currentQueryTotal - 1);
          let a = s * t.currentQueryIndex;
          switch (i.duration < 0 ? "reverse" : i.easing) {
            case "reverse":
              a = o - a;
              break;
            case "full":
              a = n.currentStaggerTime;
          }
          const l = t.currentTimeline;
          a && l.delayNextStep(a);
          const c = l.currentTime;
          nn(this, e.animation, t),
            (t.previousNode = e),
            (n.currentStaggerTime =
              r.currentTime - c + (r.startTime - n.currentTimeline.startTime));
        }
      }
      const Cn = {};
      class Sn {
        constructor(e, t, n, r, i, s, o, a) {
          (this._driver = e),
            (this.element = t),
            (this.subInstructions = n),
            (this._enterClassName = r),
            (this._leaveClassName = i),
            (this.errors = s),
            (this.timelines = o),
            (this.parentContext = null),
            (this.currentAnimateTimings = null),
            (this.previousNode = Cn),
            (this.subContextCount = 0),
            (this.options = {}),
            (this.currentQueryIndex = 0),
            (this.currentQueryTotal = 0),
            (this.currentStaggerTime = 0),
            (this.currentTimeline = a || new En(this._driver, t, 0)),
            o.push(this.currentTimeline);
        }
        get params() {
          return this.options.params;
        }
        updateOptions(e, t) {
          if (!e) return;
          const n = e;
          let r = this.options;
          null != n.duration && (r.duration = Lt(n.duration)),
            null != n.delay && (r.delay = Lt(n.delay));
          const i = n.params;
          if (i) {
            let e = r.params;
            e || (e = this.options.params = {}),
              Object.keys(i).forEach((n) => {
                (t && e.hasOwnProperty(n)) || (e[n] = Zt(i[n], e, this.errors));
              });
          }
        }
        _copyOptions() {
          const e = {};
          if (this.options) {
            const t = this.options.params;
            if (t) {
              const n = (e.params = {});
              Object.keys(t).forEach((e) => {
                n[e] = t[e];
              });
            }
          }
          return e;
        }
        createSubContext(e = null, t, n) {
          const r = t || this.element,
            i = new Sn(
              this._driver,
              r,
              this.subInstructions,
              this._enterClassName,
              this._leaveClassName,
              this.errors,
              this.timelines,
              this.currentTimeline.fork(r, n || 0)
            );
          return (
            (i.previousNode = this.previousNode),
            (i.currentAnimateTimings = this.currentAnimateTimings),
            (i.options = this._copyOptions()),
            i.updateOptions(e),
            (i.currentQueryIndex = this.currentQueryIndex),
            (i.currentQueryTotal = this.currentQueryTotal),
            (i.parentContext = this),
            this.subContextCount++,
            i
          );
        }
        transformIntoNewTimeline(e) {
          return (
            (this.previousNode = Cn),
            (this.currentTimeline = this.currentTimeline.fork(this.element, e)),
            this.timelines.push(this.currentTimeline),
            this.currentTimeline
          );
        }
        appendInstructionToTimeline(e, t, n) {
          const r = {
              duration: null != t ? t : e.duration,
              delay:
                this.currentTimeline.currentTime +
                (null != n ? n : 0) +
                e.delay,
              easing: "",
            },
            i = new xn(
              this._driver,
              e.element,
              e.keyframes,
              e.preStyleProps,
              e.postStyleProps,
              r,
              e.stretchStartingKeyframe
            );
          return this.timelines.push(i), r;
        }
        incrementTime(e) {
          this.currentTimeline.forwardTime(this.currentTimeline.duration + e);
        }
        delayNextStep(e) {
          e > 0 && this.currentTimeline.delayNextStep(e);
        }
        invokeQuery(e, t, n, r, i, s) {
          let o = [];
          if ((r && o.push(this.element), e.length > 0)) {
            e = (e = e.replace(yn, "." + this._enterClassName)).replace(
              vn,
              "." + this._leaveClassName
            );
            let t = this._driver.query(this.element, e, 1 != n);
            0 !== n &&
              (t = n < 0 ? t.slice(t.length + n, t.length) : t.slice(0, n)),
              o.push(...t);
          }
          return (
            i ||
              0 != o.length ||
              s.push(
                `\`query("${t}")\` returned zero elements. (Use \`query("${t}", { optional: true })\` if you wish to allow this.)`
              ),
            o
          );
        }
      }
      class En {
        constructor(e, t, n, r) {
          (this._driver = e),
            (this.element = t),
            (this.startTime = n),
            (this._elementTimelineStylesLookup = r),
            (this.duration = 0),
            (this._previousKeyframe = {}),
            (this._currentKeyframe = {}),
            (this._keyframes = new Map()),
            (this._styleSummary = {}),
            (this._pendingStyles = {}),
            (this._backFill = {}),
            (this._currentEmptyStepKeyframe = null),
            this._elementTimelineStylesLookup ||
              (this._elementTimelineStylesLookup = new Map()),
            (this._localTimelineStyles = Object.create(this._backFill, {})),
            (this._globalTimelineStyles = this._elementTimelineStylesLookup.get(
              t
            )),
            this._globalTimelineStyles ||
              ((this._globalTimelineStyles = this._localTimelineStyles),
              this._elementTimelineStylesLookup.set(
                t,
                this._localTimelineStyles
              )),
            this._loadKeyframe();
        }
        containsAnimation() {
          switch (this._keyframes.size) {
            case 0:
              return !1;
            case 1:
              return this.getCurrentStyleProperties().length > 0;
            default:
              return !0;
          }
        }
        getCurrentStyleProperties() {
          return Object.keys(this._currentKeyframe);
        }
        get currentTime() {
          return this.startTime + this.duration;
        }
        delayNextStep(e) {
          const t =
            1 == this._keyframes.size &&
            Object.keys(this._pendingStyles).length;
          this.duration || t
            ? (this.forwardTime(this.currentTime + e),
              t && this.snapshotCurrentStyles())
            : (this.startTime += e);
        }
        fork(e, t) {
          return (
            this.applyStylesToKeyframe(),
            new En(
              this._driver,
              e,
              t || this.currentTime,
              this._elementTimelineStylesLookup
            )
          );
        }
        _loadKeyframe() {
          this._currentKeyframe &&
            (this._previousKeyframe = this._currentKeyframe),
            (this._currentKeyframe = this._keyframes.get(this.duration)),
            this._currentKeyframe ||
              ((this._currentKeyframe = Object.create(this._backFill, {})),
              this._keyframes.set(this.duration, this._currentKeyframe));
        }
        forwardFrame() {
          (this.duration += 1), this._loadKeyframe();
        }
        forwardTime(e) {
          this.applyStylesToKeyframe(),
            (this.duration = e),
            this._loadKeyframe();
        }
        _updateStyle(e, t) {
          (this._localTimelineStyles[e] = t),
            (this._globalTimelineStyles[e] = t),
            (this._styleSummary[e] = { time: this.currentTime, value: t });
        }
        allowOnlyTimelineStyles() {
          return this._currentEmptyStepKeyframe !== this._currentKeyframe;
        }
        applyEmptyStep(e) {
          e && (this._previousKeyframe.easing = e),
            Object.keys(this._globalTimelineStyles).forEach((e) => {
              (this._backFill[e] = this._globalTimelineStyles[e] || "*"),
                (this._currentKeyframe[e] = "*");
            }),
            (this._currentEmptyStepKeyframe = this._currentKeyframe);
        }
        setStyles(e, t, n, r) {
          t && (this._previousKeyframe.easing = t);
          const i = (r && r.params) || {},
            s = (function (e, t) {
              const n = {};
              let r;
              return (
                e.forEach((e) => {
                  "*" === e
                    ? ((r = r || Object.keys(t)),
                      r.forEach((e) => {
                        n[e] = "*";
                      }))
                    : Ut(e, !1, n);
                }),
                n
              );
            })(e, this._globalTimelineStyles);
          Object.keys(s).forEach((e) => {
            const t = Zt(s[e], i, n);
            (this._pendingStyles[e] = t),
              this._localTimelineStyles.hasOwnProperty(e) ||
                (this._backFill[e] = this._globalTimelineStyles.hasOwnProperty(
                  e
                )
                  ? this._globalTimelineStyles[e]
                  : "*"),
              this._updateStyle(e, t);
          });
        }
        applyStylesToKeyframe() {
          const e = this._pendingStyles,
            t = Object.keys(e);
          0 != t.length &&
            ((this._pendingStyles = {}),
            t.forEach((t) => {
              this._currentKeyframe[t] = e[t];
            }),
            Object.keys(this._localTimelineStyles).forEach((e) => {
              this._currentKeyframe.hasOwnProperty(e) ||
                (this._currentKeyframe[e] = this._localTimelineStyles[e]);
            }));
        }
        snapshotCurrentStyles() {
          Object.keys(this._localTimelineStyles).forEach((e) => {
            const t = this._localTimelineStyles[e];
            (this._pendingStyles[e] = t), this._updateStyle(e, t);
          });
        }
        getFinalKeyframe() {
          return this._keyframes.get(this.duration);
        }
        get properties() {
          const e = [];
          for (let t in this._currentKeyframe) e.push(t);
          return e;
        }
        mergeTimelineCollectedStyles(e) {
          Object.keys(e._styleSummary).forEach((t) => {
            const n = this._styleSummary[t],
              r = e._styleSummary[t];
            (!n || r.time > n.time) && this._updateStyle(t, r.value);
          });
        }
        buildKeyframes() {
          this.applyStylesToKeyframe();
          const e = new Set(),
            t = new Set(),
            n = 1 === this._keyframes.size && 0 === this.duration;
          let r = [];
          this._keyframes.forEach((i, s) => {
            const o = Ut(i, !0);
            Object.keys(o).forEach((n) => {
              const r = o[n];
              "!" == r ? e.add(n) : "*" == r && t.add(n);
            }),
              n || (o.offset = s / this.duration),
              r.push(o);
          });
          const i = e.size ? Yt(e.values()) : [],
            s = t.size ? Yt(t.values()) : [];
          if (n) {
            const e = r[0],
              t = zt(e);
            (e.offset = 0), (t.offset = 1), (r = [e, t]);
          }
          return gn(
            this.element,
            r,
            i,
            s,
            this.duration,
            this.startTime,
            this.easing,
            !1
          );
        }
      }
      class xn extends En {
        constructor(e, t, n, r, i, s, o = !1) {
          super(e, t, s.delay),
            (this.element = t),
            (this.keyframes = n),
            (this.preStyleProps = r),
            (this.postStyleProps = i),
            (this._stretchStartingKeyframe = o),
            (this.timings = {
              duration: s.duration,
              delay: s.delay,
              easing: s.easing,
            });
        }
        containsAnimation() {
          return this.keyframes.length > 1;
        }
        buildKeyframes() {
          let e = this.keyframes,
            { delay: t, duration: n, easing: r } = this.timings;
          if (this._stretchStartingKeyframe && t) {
            const i = [],
              s = n + t,
              o = t / s,
              a = Ut(e[0], !1);
            (a.offset = 0), i.push(a);
            const l = Ut(e[0], !1);
            (l.offset = Dn(o)), i.push(l);
            const c = e.length - 1;
            for (let r = 1; r <= c; r++) {
              let o = Ut(e[r], !1);
              (o.offset = Dn((t + o.offset * n) / s)), i.push(o);
            }
            (n = s), (t = 0), (r = ""), (e = i);
          }
          return gn(
            this.element,
            e,
            this.preStyleProps,
            this.postStyleProps,
            n,
            t,
            r,
            !0
          );
        }
      }
      function Dn(e, t = 3) {
        const n = Math.pow(10, t - 1);
        return Math.round(e * n) / n;
      }
      class In {}
      class On extends In {
        normalizePropertyName(e, t) {
          return Jt(e);
        }
        normalizeStyleValue(e, t, n, r) {
          let i = "";
          const s = n.toString().trim();
          if (kn[t] && 0 !== n && "0" !== n)
            if ("number" == typeof n) i = "px";
            else {
              const t = n.match(/^[+-]?[\d\.]+([a-z]*)$/);
              t &&
                0 == t[1].length &&
                r.push(`Please provide a CSS unit value for ${e}:${n}`);
            }
          return s + i;
        }
      }
      const kn = (() =>
        (function (e) {
          const t = {};
          return e.forEach((e) => (t[e] = !0)), t;
        })(
          "width,height,minWidth,minHeight,maxWidth,maxHeight,left,top,bottom,right,fontSize,outlineWidth,outlineOffset,paddingTop,paddingLeft,paddingBottom,paddingRight,marginTop,marginLeft,marginBottom,marginRight,borderRadius,borderWidth,borderTopWidth,borderLeftWidth,borderRightWidth,borderBottomWidth,textIndent,perspective".split(
            ","
          )
        ))();
      function Rn(e, t, n, r, i, s, o, a, l, c, u, h, d) {
        return {
          type: 0,
          element: e,
          triggerName: t,
          isRemovalTransition: i,
          fromState: n,
          fromStyles: s,
          toState: r,
          toStyles: o,
          timelines: a,
          queriedElements: l,
          preStyleProps: c,
          postStyleProps: u,
          totalTime: h,
          errors: d,
        };
      }
      const An = {};
      class Tn {
        constructor(e, t, n) {
          (this._triggerName = e), (this.ast = t), (this._stateStyles = n);
        }
        match(e, t, n, r) {
          return (function (e, t, n, r, i) {
            return e.some((e) => e(t, n, r, i));
          })(this.ast.matchers, e, t, n, r);
        }
        buildStyles(e, t, n) {
          const r = this._stateStyles["*"],
            i = this._stateStyles[e],
            s = r ? r.buildStyles(t, n) : {};
          return i ? i.buildStyles(t, n) : s;
        }
        build(e, t, n, r, i, s, o, a, l, c) {
          const u = [],
            h = (this.ast.options && this.ast.options.params) || An,
            d = this.buildStyles(n, (o && o.params) || An, u),
            f = (a && a.params) || An,
            p = this.buildStyles(r, f, u),
            m = new Set(),
            g = new Map(),
            _ = new Map(),
            y = "void" === r,
            v = { params: Object.assign(Object.assign({}, h), f) },
            b = c ? [] : bn(e, t, this.ast.animation, i, s, d, p, v, l, u);
          let w = 0;
          if (
            (b.forEach((e) => {
              w = Math.max(e.duration + e.delay, w);
            }),
            u.length)
          )
            return Rn(t, this._triggerName, n, r, y, d, p, [], [], g, _, w, u);
          b.forEach((e) => {
            const n = e.element,
              r = St(g, n, {});
            e.preStyleProps.forEach((e) => (r[e] = !0));
            const i = St(_, n, {});
            e.postStyleProps.forEach((e) => (i[e] = !0)), n !== t && m.add(n);
          });
          const C = Yt(m.values());
          return Rn(t, this._triggerName, n, r, y, d, p, b, C, g, _, w);
        }
      }
      class Fn {
        constructor(e, t) {
          (this.styles = e), (this.defaultParams = t);
        }
        buildStyles(e, t) {
          const n = {},
            r = zt(this.defaultParams);
          return (
            Object.keys(e).forEach((t) => {
              const n = e[t];
              null != n && (r[t] = n);
            }),
            this.styles.styles.forEach((e) => {
              if ("string" != typeof e) {
                const i = e;
                Object.keys(i).forEach((e) => {
                  let s = i[e];
                  s.length > 1 && (s = Zt(s, r, t)), (n[e] = s);
                });
              }
            }),
            n
          );
        }
      }
      class Pn {
        constructor(e, t) {
          (this.name = e),
            (this.ast = t),
            (this.transitionFactories = []),
            (this.states = {}),
            t.states.forEach((e) => {
              this.states[e.name] = new Fn(
                e.style,
                (e.options && e.options.params) || {}
              );
            }),
            jn(this.states, "true", "1"),
            jn(this.states, "false", "0"),
            t.transitions.forEach((t) => {
              this.transitionFactories.push(new Tn(e, t, this.states));
            }),
            (this.fallbackTransition = new Tn(
              e,
              {
                type: 1,
                animation: { type: 2, steps: [], options: null },
                matchers: [(e, t) => !0],
                options: null,
                queryCount: 0,
                depCount: 0,
              },
              this.states
            ));
        }
        get containsQueries() {
          return this.ast.queryCount > 0;
        }
        matchTransition(e, t, n, r) {
          return (
            this.transitionFactories.find((i) => i.match(e, t, n, r)) || null
          );
        }
        matchStyles(e, t, n) {
          return this.fallbackTransition.buildStyles(e, t, n);
        }
      }
      function jn(e, t, n) {
        e.hasOwnProperty(t)
          ? e.hasOwnProperty(n) || (e[n] = e[t])
          : e.hasOwnProperty(n) && (e[t] = e[n]);
      }
      const Nn = new _n();
      class Mn {
        constructor(e, t, n) {
          (this.bodyNode = e),
            (this._driver = t),
            (this._normalizer = n),
            (this._animations = {}),
            (this._playersById = {}),
            (this.players = []);
        }
        register(e, t) {
          const n = [],
            r = un(this._driver, t, n);
          if (n.length)
            throw new Error(
              "Unable to build the animation due to the following errors: " +
                n.join("\n")
            );
          this._animations[e] = r;
        }
        _buildPlayer(e, t, n) {
          const r = e.element,
            i = vt(0, this._normalizer, 0, e.keyframes, t, n);
          return this._driver.animate(
            r,
            i,
            e.duration,
            e.delay,
            e.easing,
            [],
            !0
          );
        }
        create(e, t, n = {}) {
          const r = [],
            i = this._animations[e];
          let s;
          const o = new Map();
          if (
            (i
              ? ((s = bn(
                  this._driver,
                  t,
                  i,
                  "ng-enter",
                  "ng-leave",
                  {},
                  {},
                  n,
                  Nn,
                  r
                )),
                s.forEach((e) => {
                  const t = St(o, e.element, {});
                  e.postStyleProps.forEach((e) => (t[e] = null));
                }))
              : (r.push(
                  "The requested animation doesn't exist or has already been destroyed"
                ),
                (s = [])),
            r.length)
          )
            throw new Error(
              "Unable to create the animation due to the following errors: " +
                r.join("\n")
            );
          o.forEach((e, t) => {
            Object.keys(e).forEach((n) => {
              e[n] = this._driver.computeStyle(t, n, "*");
            });
          });
          const a = yt(
            s.map((e) => {
              const t = o.get(e.element);
              return this._buildPlayer(e, {}, t);
            })
          );
          return (
            (this._playersById[e] = a),
            a.onDestroy(() => this.destroy(e)),
            this.players.push(a),
            a
          );
        }
        destroy(e) {
          const t = this._getPlayer(e);
          t.destroy(), delete this._playersById[e];
          const n = this.players.indexOf(t);
          n >= 0 && this.players.splice(n, 1);
        }
        _getPlayer(e) {
          const t = this._playersById[e];
          if (!t)
            throw new Error(
              "Unable to find the timeline player referenced by " + e
            );
          return t;
        }
        listen(e, t, n, r) {
          const i = Ct(t, "", "", "");
          return bt(this._getPlayer(e), n, i, r), () => {};
        }
        command(e, t, n, r) {
          if ("register" == n) return void this.register(e, r[0]);
          if ("create" == n) return void this.create(e, t, r[0] || {});
          const i = this._getPlayer(e);
          switch (n) {
            case "play":
              i.play();
              break;
            case "pause":
              i.pause();
              break;
            case "reset":
              i.reset();
              break;
            case "restart":
              i.restart();
              break;
            case "finish":
              i.finish();
              break;
            case "init":
              i.init();
              break;
            case "setPosition":
              i.setPosition(parseFloat(r[0]));
              break;
            case "destroy":
              this.destroy(e);
          }
        }
      }
      const Ln = [],
        Vn = {
          namespaceId: "",
          setForRemoval: !1,
          setForMove: !1,
          hasAnimation: !1,
          removedBeforeQueried: !1,
        },
        Bn = {
          namespaceId: "",
          setForMove: !1,
          setForRemoval: !1,
          hasAnimation: !1,
          removedBeforeQueried: !0,
        };
      class zn {
        constructor(e, t = "") {
          this.namespaceId = t;
          const n = e && e.hasOwnProperty("value");
          if (((this.value = null != (r = n ? e.value : e) ? r : null), n)) {
            const t = zt(e);
            delete t.value, (this.options = t);
          } else this.options = {};
          var r;
          this.options.params || (this.options.params = {});
        }
        get params() {
          return this.options.params;
        }
        absorbOptions(e) {
          const t = e.params;
          if (t) {
            const e = this.options.params;
            Object.keys(t).forEach((n) => {
              null == e[n] && (e[n] = t[n]);
            });
          }
        }
      }
      const Un = new zn("void");
      class Hn {
        constructor(e, t, n) {
          (this.id = e),
            (this.hostElement = t),
            (this._engine = n),
            (this.players = []),
            (this._triggers = {}),
            (this._queue = []),
            (this._elementListeners = new Map()),
            (this._hostClassName = "ng-tns-" + e),
            Zn(t, this._hostClassName);
        }
        listen(e, t, n, r) {
          if (!this._triggers.hasOwnProperty(t))
            throw new Error(
              `Unable to listen on the animation trigger event "${n}" because the animation trigger "${t}" doesn't exist!`
            );
          if (null == n || 0 == n.length)
            throw new Error(
              `Unable to listen on the animation trigger "${t}" because the provided event is undefined!`
            );
          if ("start" != (i = n) && "done" != i)
            throw new Error(
              `The provided animation trigger event "${n}" for the animation trigger "${t}" is not supported!`
            );
          var i;
          const s = St(this._elementListeners, e, []),
            o = { name: t, phase: n, callback: r };
          s.push(o);
          const a = St(this._engine.statesByElement, e, {});
          return (
            a.hasOwnProperty(t) ||
              (Zn(e, "ng-trigger"), Zn(e, "ng-trigger-" + t), (a[t] = Un)),
            () => {
              this._engine.afterFlush(() => {
                const e = s.indexOf(o);
                e >= 0 && s.splice(e, 1), this._triggers[t] || delete a[t];
              });
            }
          );
        }
        register(e, t) {
          return !this._triggers[e] && ((this._triggers[e] = t), !0);
        }
        _getTrigger(e) {
          const t = this._triggers[e];
          if (!t)
            throw new Error(
              `The provided animation trigger "${e}" has not been registered!`
            );
          return t;
        }
        trigger(e, t, n, r = !0) {
          const i = this._getTrigger(t),
            s = new qn(this.id, t, e);
          let o = this._engine.statesByElement.get(e);
          o ||
            (Zn(e, "ng-trigger"),
            Zn(e, "ng-trigger-" + t),
            this._engine.statesByElement.set(e, (o = {})));
          let a = o[t];
          const l = new zn(n, this.id);
          if (
            (!(n && n.hasOwnProperty("value")) &&
              a &&
              l.absorbOptions(a.options),
            (o[t] = l),
            a || (a = Un),
            "void" !== l.value && a.value === l.value)
          ) {
            if (
              !(function (e, t) {
                const n = Object.keys(e),
                  r = Object.keys(t);
                if (n.length != r.length) return !1;
                for (let i = 0; i < n.length; i++) {
                  const r = n[i];
                  if (!t.hasOwnProperty(r) || e[r] !== t[r]) return !1;
                }
                return !0;
              })(a.params, l.params)
            ) {
              const t = [],
                n = i.matchStyles(a.value, a.params, t),
                r = i.matchStyles(l.value, l.params, t);
              t.length
                ? this._engine.reportError(t)
                : this._engine.afterFlush(() => {
                    Gt(e, n), qt(e, r);
                  });
            }
            return;
          }
          const c = St(this._engine.playersByElement, e, []);
          c.forEach((e) => {
            e.namespaceId == this.id &&
              e.triggerName == t &&
              e.queued &&
              e.destroy();
          });
          let u = i.matchTransition(a.value, l.value, e, l.params),
            h = !1;
          if (!u) {
            if (!r) return;
            (u = i.fallbackTransition), (h = !0);
          }
          return (
            this._engine.totalQueuedPlayers++,
            this._queue.push({
              element: e,
              triggerName: t,
              transition: u,
              fromState: a,
              toState: l,
              player: s,
              isFallbackTransition: h,
            }),
            h ||
              (Zn(e, "ng-animate-queued"),
              s.onStart(() => {
                Yn(e, "ng-animate-queued");
              })),
            s.onDone(() => {
              let t = this.players.indexOf(s);
              t >= 0 && this.players.splice(t, 1);
              const n = this._engine.playersByElement.get(e);
              if (n) {
                let e = n.indexOf(s);
                e >= 0 && n.splice(e, 1);
              }
            }),
            this.players.push(s),
            c.push(s),
            s
          );
        }
        deregister(e) {
          delete this._triggers[e],
            this._engine.statesByElement.forEach((t, n) => {
              delete t[e];
            }),
            this._elementListeners.forEach((t, n) => {
              this._elementListeners.set(
                n,
                t.filter((t) => t.name != e)
              );
            });
        }
        clearElementCache(e) {
          this._engine.statesByElement.delete(e),
            this._elementListeners.delete(e);
          const t = this._engine.playersByElement.get(e);
          t &&
            (t.forEach((e) => e.destroy()),
            this._engine.playersByElement.delete(e));
        }
        _signalRemovalForInnerTriggers(e, t) {
          const n = this._engine.driver.query(e, ".ng-trigger", !0);
          n.forEach((e) => {
            if (e.__ng_removed) return;
            const n = this._engine.fetchNamespacesByElement(e);
            n.size
              ? n.forEach((n) => n.triggerLeaveAnimation(e, t, !1, !0))
              : this.clearElementCache(e);
          }),
            this._engine.afterFlushAnimationsDone(() =>
              n.forEach((e) => this.clearElementCache(e))
            );
        }
        triggerLeaveAnimation(e, t, n, r) {
          const i = this._engine.statesByElement.get(e);
          if (i) {
            const s = [];
            if (
              (Object.keys(i).forEach((t) => {
                if (this._triggers[t]) {
                  const n = this.trigger(e, t, "void", r);
                  n && s.push(n);
                }
              }),
              s.length)
            )
              return (
                this._engine.markElementAsRemoved(this.id, e, !0, t),
                n && yt(s).onDone(() => this._engine.processLeaveNode(e)),
                !0
              );
          }
          return !1;
        }
        prepareLeaveAnimationListeners(e) {
          const t = this._elementListeners.get(e);
          if (t) {
            const n = new Set();
            t.forEach((t) => {
              const r = t.name;
              if (n.has(r)) return;
              n.add(r);
              const i = this._triggers[r].fallbackTransition,
                s = this._engine.statesByElement.get(e)[r] || Un,
                o = new zn("void"),
                a = new qn(this.id, r, e);
              this._engine.totalQueuedPlayers++,
                this._queue.push({
                  element: e,
                  triggerName: r,
                  transition: i,
                  fromState: s,
                  toState: o,
                  player: a,
                  isFallbackTransition: !0,
                });
            });
          }
        }
        removeNode(e, t) {
          const n = this._engine;
          if (
            (e.childElementCount && this._signalRemovalForInnerTriggers(e, t),
            this.triggerLeaveAnimation(e, t, !0))
          )
            return;
          let r = !1;
          if (n.totalAnimations) {
            const t = n.players.length ? n.playersByQueriedElement.get(e) : [];
            if (t && t.length) r = !0;
            else {
              let t = e;
              for (; (t = t.parentNode); )
                if (n.statesByElement.get(t)) {
                  r = !0;
                  break;
                }
            }
          }
          if ((this.prepareLeaveAnimationListeners(e), r))
            n.markElementAsRemoved(this.id, e, !1, t);
          else {
            const r = e.__ng_removed;
            (r && r !== Vn) ||
              (n.afterFlush(() => this.clearElementCache(e)),
              n.destroyInnerAnimations(e),
              n._onRemovalComplete(e, t));
          }
        }
        insertNode(e, t) {
          Zn(e, this._hostClassName);
        }
        drainQueuedTransitions(e) {
          const t = [];
          return (
            this._queue.forEach((n) => {
              const r = n.player;
              if (r.destroyed) return;
              const i = n.element,
                s = this._elementListeners.get(i);
              s &&
                s.forEach((t) => {
                  if (t.name == n.triggerName) {
                    const r = Ct(
                      i,
                      n.triggerName,
                      n.fromState.value,
                      n.toState.value
                    );
                    (r._data = e), bt(n.player, t.phase, r, t.callback);
                  }
                }),
                r.markedForDestroy
                  ? this._engine.afterFlush(() => {
                      r.destroy();
                    })
                  : t.push(n);
            }),
            (this._queue = []),
            t.sort((e, t) => {
              const n = e.transition.ast.depCount,
                r = t.transition.ast.depCount;
              return 0 == n || 0 == r
                ? n - r
                : this._engine.driver.containsElement(e.element, t.element)
                ? 1
                : -1;
            })
          );
        }
        destroy(e) {
          this.players.forEach((e) => e.destroy()),
            this._signalRemovalForInnerTriggers(this.hostElement, e);
        }
        elementContainsData(e) {
          let t = !1;
          return (
            this._elementListeners.has(e) && (t = !0),
            (t = !!this._queue.find((t) => t.element === e) || t),
            t
          );
        }
      }
      class $n {
        constructor(e, t, n) {
          (this.bodyNode = e),
            (this.driver = t),
            (this._normalizer = n),
            (this.players = []),
            (this.newHostElements = new Map()),
            (this.playersByElement = new Map()),
            (this.playersByQueriedElement = new Map()),
            (this.statesByElement = new Map()),
            (this.disabledNodes = new Set()),
            (this.totalAnimations = 0),
            (this.totalQueuedPlayers = 0),
            (this._namespaceLookup = {}),
            (this._namespaceList = []),
            (this._flushFns = []),
            (this._whenQuietFns = []),
            (this.namespacesByHostElement = new Map()),
            (this.collectedEnterElements = []),
            (this.collectedLeaveElements = []),
            (this.onRemovalComplete = (e, t) => {});
        }
        _onRemovalComplete(e, t) {
          this.onRemovalComplete(e, t);
        }
        get queuedPlayers() {
          const e = [];
          return (
            this._namespaceList.forEach((t) => {
              t.players.forEach((t) => {
                t.queued && e.push(t);
              });
            }),
            e
          );
        }
        createNamespace(e, t) {
          const n = new Hn(e, t, this);
          return (
            t.parentNode
              ? this._balanceNamespaceList(n, t)
              : (this.newHostElements.set(t, n), this.collectEnterElement(t)),
            (this._namespaceLookup[e] = n)
          );
        }
        _balanceNamespaceList(e, t) {
          const n = this._namespaceList.length - 1;
          if (n >= 0) {
            let r = !1;
            for (let i = n; i >= 0; i--)
              if (
                this.driver.containsElement(
                  this._namespaceList[i].hostElement,
                  t
                )
              ) {
                this._namespaceList.splice(i + 1, 0, e), (r = !0);
                break;
              }
            r || this._namespaceList.splice(0, 0, e);
          } else this._namespaceList.push(e);
          return this.namespacesByHostElement.set(t, e), e;
        }
        register(e, t) {
          let n = this._namespaceLookup[e];
          return n || (n = this.createNamespace(e, t)), n;
        }
        registerTrigger(e, t, n) {
          let r = this._namespaceLookup[e];
          r && r.register(t, n) && this.totalAnimations++;
        }
        destroy(e, t) {
          if (!e) return;
          const n = this._fetchNamespace(e);
          this.afterFlush(() => {
            this.namespacesByHostElement.delete(n.hostElement),
              delete this._namespaceLookup[e];
            const t = this._namespaceList.indexOf(n);
            t >= 0 && this._namespaceList.splice(t, 1);
          }),
            this.afterFlushAnimationsDone(() => n.destroy(t));
        }
        _fetchNamespace(e) {
          return this._namespaceLookup[e];
        }
        fetchNamespacesByElement(e) {
          const t = new Set(),
            n = this.statesByElement.get(e);
          if (n) {
            const e = Object.keys(n);
            for (let r = 0; r < e.length; r++) {
              const i = n[e[r]].namespaceId;
              if (i) {
                const e = this._fetchNamespace(i);
                e && t.add(e);
              }
            }
          }
          return t;
        }
        trigger(e, t, n, r) {
          if (Gn(t)) {
            const i = this._fetchNamespace(e);
            if (i) return i.trigger(t, n, r), !0;
          }
          return !1;
        }
        insertNode(e, t, n, r) {
          if (!Gn(t)) return;
          const i = t.__ng_removed;
          if (i && i.setForRemoval) {
            (i.setForRemoval = !1), (i.setForMove = !0);
            const e = this.collectedLeaveElements.indexOf(t);
            e >= 0 && this.collectedLeaveElements.splice(e, 1);
          }
          if (e) {
            const r = this._fetchNamespace(e);
            r && r.insertNode(t, n);
          }
          r && this.collectEnterElement(t);
        }
        collectEnterElement(e) {
          this.collectedEnterElements.push(e);
        }
        markElementAsDisabled(e, t) {
          t
            ? this.disabledNodes.has(e) ||
              (this.disabledNodes.add(e), Zn(e, "ng-animate-disabled"))
            : this.disabledNodes.has(e) &&
              (this.disabledNodes.delete(e), Yn(e, "ng-animate-disabled"));
        }
        removeNode(e, t, n, r) {
          if (Gn(t)) {
            const i = e ? this._fetchNamespace(e) : null;
            if (
              (i ? i.removeNode(t, r) : this.markElementAsRemoved(e, t, !1, r),
              n)
            ) {
              const n = this.namespacesByHostElement.get(t);
              n && n.id !== e && n.removeNode(t, r);
            }
          } else this._onRemovalComplete(t, r);
        }
        markElementAsRemoved(e, t, n, r) {
          this.collectedLeaveElements.push(t),
            (t.__ng_removed = {
              namespaceId: e,
              setForRemoval: r,
              hasAnimation: n,
              removedBeforeQueried: !1,
            });
        }
        listen(e, t, n, r, i) {
          return Gn(t) ? this._fetchNamespace(e).listen(t, n, r, i) : () => {};
        }
        _buildInstruction(e, t, n, r, i) {
          return e.transition.build(
            this.driver,
            e.element,
            e.fromState.value,
            e.toState.value,
            n,
            r,
            e.fromState.options,
            e.toState.options,
            t,
            i
          );
        }
        destroyInnerAnimations(e) {
          let t = this.driver.query(e, ".ng-trigger", !0);
          t.forEach((e) => this.destroyActiveAnimationsForElement(e)),
            0 != this.playersByQueriedElement.size &&
              ((t = this.driver.query(e, ".ng-animating", !0)),
              t.forEach((e) => this.finishActiveQueriedAnimationOnElement(e)));
        }
        destroyActiveAnimationsForElement(e) {
          const t = this.playersByElement.get(e);
          t &&
            t.forEach((e) => {
              e.queued ? (e.markedForDestroy = !0) : e.destroy();
            });
        }
        finishActiveQueriedAnimationOnElement(e) {
          const t = this.playersByQueriedElement.get(e);
          t && t.forEach((e) => e.finish());
        }
        whenRenderingDone() {
          return new Promise((e) => {
            if (this.players.length) return yt(this.players).onDone(() => e());
            e();
          });
        }
        processLeaveNode(e) {
          const t = e.__ng_removed;
          if (t && t.setForRemoval) {
            if (((e.__ng_removed = Vn), t.namespaceId)) {
              this.destroyInnerAnimations(e);
              const n = this._fetchNamespace(t.namespaceId);
              n && n.clearElementCache(e);
            }
            this._onRemovalComplete(e, t.setForRemoval);
          }
          this.driver.matchesElement(e, ".ng-animate-disabled") &&
            this.markElementAsDisabled(e, !1),
            this.driver.query(e, ".ng-animate-disabled", !0).forEach((e) => {
              this.markElementAsDisabled(e, !1);
            });
        }
        flush(e = -1) {
          let t = [];
          if (
            (this.newHostElements.size &&
              (this.newHostElements.forEach((e, t) =>
                this._balanceNamespaceList(e, t)
              ),
              this.newHostElements.clear()),
            this.totalAnimations && this.collectedEnterElements.length)
          )
            for (let n = 0; n < this.collectedEnterElements.length; n++)
              Zn(this.collectedEnterElements[n], "ng-star-inserted");
          if (
            this._namespaceList.length &&
            (this.totalQueuedPlayers || this.collectedLeaveElements.length)
          ) {
            const n = [];
            try {
              t = this._flushAnimations(n, e);
            } finally {
              for (let e = 0; e < n.length; e++) n[e]();
            }
          } else
            for (let n = 0; n < this.collectedLeaveElements.length; n++)
              this.processLeaveNode(this.collectedLeaveElements[n]);
          if (
            ((this.totalQueuedPlayers = 0),
            (this.collectedEnterElements.length = 0),
            (this.collectedLeaveElements.length = 0),
            this._flushFns.forEach((e) => e()),
            (this._flushFns = []),
            this._whenQuietFns.length)
          ) {
            const e = this._whenQuietFns;
            (this._whenQuietFns = []),
              t.length
                ? yt(t).onDone(() => {
                    e.forEach((e) => e());
                  })
                : e.forEach((e) => e());
          }
        }
        reportError(e) {
          throw new Error(
            "Unable to process animations due to the following failed trigger transitions\n " +
              e.join("\n")
          );
        }
        _flushAnimations(e, t) {
          const n = new _n(),
            r = [],
            i = new Map(),
            s = [],
            o = new Map(),
            a = new Map(),
            l = new Map(),
            c = new Set();
          this.disabledNodes.forEach((e) => {
            c.add(e);
            const t = this.driver.query(e, ".ng-animate-queued", !0);
            for (let n = 0; n < t.length; n++) c.add(t[n]);
          });
          const u = this.bodyNode,
            h = Array.from(this.statesByElement.keys()),
            d = Kn(h, this.collectedEnterElements),
            f = new Map();
          let p = 0;
          d.forEach((e, t) => {
            const n = "ng-enter" + p++;
            f.set(t, n), e.forEach((e) => Zn(e, n));
          });
          const m = [],
            g = new Set(),
            _ = new Set();
          for (let R = 0; R < this.collectedLeaveElements.length; R++) {
            const e = this.collectedLeaveElements[R],
              t = e.__ng_removed;
            t &&
              t.setForRemoval &&
              (m.push(e),
              g.add(e),
              t.hasAnimation
                ? this.driver
                    .query(e, ".ng-star-inserted", !0)
                    .forEach((e) => g.add(e))
                : _.add(e));
          }
          const y = new Map(),
            v = Kn(h, Array.from(g));
          v.forEach((e, t) => {
            const n = "ng-leave" + p++;
            y.set(t, n), e.forEach((e) => Zn(e, n));
          }),
            e.push(() => {
              d.forEach((e, t) => {
                const n = f.get(t);
                e.forEach((e) => Yn(e, n));
              }),
                v.forEach((e, t) => {
                  const n = y.get(t);
                  e.forEach((e) => Yn(e, n));
                }),
                m.forEach((e) => {
                  this.processLeaveNode(e);
                });
            });
          const b = [],
            w = [];
          for (let R = this._namespaceList.length - 1; R >= 0; R--)
            this._namespaceList[R].drainQueuedTransitions(t).forEach((e) => {
              const t = e.player,
                i = e.element;
              if ((b.push(t), this.collectedEnterElements.length)) {
                const e = i.__ng_removed;
                if (e && e.setForMove) return void t.destroy();
              }
              const c = !u || !this.driver.containsElement(u, i),
                h = y.get(i),
                d = f.get(i),
                p = this._buildInstruction(e, n, d, h, c);
              if (p.errors && p.errors.length) w.push(p);
              else {
                if (c)
                  return (
                    t.onStart(() => Gt(i, p.fromStyles)),
                    t.onDestroy(() => qt(i, p.toStyles)),
                    void r.push(t)
                  );
                if (e.isFallbackTransition)
                  return (
                    t.onStart(() => Gt(i, p.fromStyles)),
                    t.onDestroy(() => qt(i, p.toStyles)),
                    void r.push(t)
                  );
                p.timelines.forEach((e) => (e.stretchStartingKeyframe = !0)),
                  n.append(i, p.timelines),
                  s.push({ instruction: p, player: t, element: i }),
                  p.queriedElements.forEach((e) => St(o, e, []).push(t)),
                  p.preStyleProps.forEach((e, t) => {
                    const n = Object.keys(e);
                    if (n.length) {
                      let e = a.get(t);
                      e || a.set(t, (e = new Set())),
                        n.forEach((t) => e.add(t));
                    }
                  }),
                  p.postStyleProps.forEach((e, t) => {
                    const n = Object.keys(e);
                    let r = l.get(t);
                    r || l.set(t, (r = new Set())), n.forEach((e) => r.add(e));
                  });
              }
            });
          if (w.length) {
            const e = [];
            w.forEach((t) => {
              e.push(`@${t.triggerName} has failed due to:\n`),
                t.errors.forEach((t) => e.push(`- ${t}\n`));
            }),
              b.forEach((e) => e.destroy()),
              this.reportError(e);
          }
          const C = new Map(),
            S = new Map();
          s.forEach((e) => {
            const t = e.element;
            n.has(t) &&
              (S.set(t, t),
              this._beforeAnimationBuild(
                e.player.namespaceId,
                e.instruction,
                C
              ));
          }),
            r.forEach((e) => {
              const t = e.element;
              this._getPreviousPlayers(
                t,
                !1,
                e.namespaceId,
                e.triggerName,
                null
              ).forEach((e) => {
                St(C, t, []).push(e), e.destroy();
              });
            });
          const E = m.filter((e) => Jn(e, a, l)),
            x = new Map();
          Qn(x, this.driver, _, l, "*").forEach((e) => {
            Jn(e, a, l) && E.push(e);
          });
          const D = new Map();
          d.forEach((e, t) => {
            Qn(D, this.driver, new Set(e), a, "!");
          }),
            E.forEach((e) => {
              const t = x.get(e),
                n = D.get(e);
              x.set(e, Object.assign(Object.assign({}, t), n));
            });
          const I = [],
            O = [],
            k = {};
          s.forEach((e) => {
            const { element: t, player: s, instruction: o } = e;
            if (n.has(t)) {
              if (c.has(t))
                return (
                  s.onDestroy(() => qt(t, o.toStyles)),
                  (s.disabled = !0),
                  s.overrideTotalTime(o.totalTime),
                  void r.push(s)
                );
              let e = k;
              if (S.size > 1) {
                let n = t;
                const r = [];
                for (; (n = n.parentNode); ) {
                  const t = S.get(n);
                  if (t) {
                    e = t;
                    break;
                  }
                  r.push(n);
                }
                r.forEach((t) => S.set(t, e));
              }
              const n = this._buildAnimation(s.namespaceId, o, C, i, D, x);
              if ((s.setRealPlayer(n), e === k)) I.push(s);
              else {
                const t = this.playersByElement.get(e);
                t && t.length && (s.parentPlayer = yt(t)), r.push(s);
              }
            } else
              Gt(t, o.fromStyles),
                s.onDestroy(() => qt(t, o.toStyles)),
                O.push(s),
                c.has(t) && r.push(s);
          }),
            O.forEach((e) => {
              const t = i.get(e.element);
              if (t && t.length) {
                const n = yt(t);
                e.setRealPlayer(n);
              }
            }),
            r.forEach((e) => {
              e.parentPlayer ? e.syncPlayerEvents(e.parentPlayer) : e.destroy();
            });
          for (let R = 0; R < m.length; R++) {
            const e = m[R],
              t = e.__ng_removed;
            if ((Yn(e, "ng-leave"), t && t.hasAnimation)) continue;
            let n = [];
            if (o.size) {
              let t = o.get(e);
              t && t.length && n.push(...t);
              let r = this.driver.query(e, ".ng-animating", !0);
              for (let e = 0; e < r.length; e++) {
                let t = o.get(r[e]);
                t && t.length && n.push(...t);
              }
            }
            const r = n.filter((e) => !e.destroyed);
            r.length ? Xn(this, e, r) : this.processLeaveNode(e);
          }
          return (
            (m.length = 0),
            I.forEach((e) => {
              this.players.push(e),
                e.onDone(() => {
                  e.destroy();
                  const t = this.players.indexOf(e);
                  this.players.splice(t, 1);
                }),
                e.play();
            }),
            I
          );
        }
        elementContainsData(e, t) {
          let n = !1;
          const r = t.__ng_removed;
          return (
            r && r.setForRemoval && (n = !0),
            this.playersByElement.has(t) && (n = !0),
            this.playersByQueriedElement.has(t) && (n = !0),
            this.statesByElement.has(t) && (n = !0),
            this._fetchNamespace(e).elementContainsData(t) || n
          );
        }
        afterFlush(e) {
          this._flushFns.push(e);
        }
        afterFlushAnimationsDone(e) {
          this._whenQuietFns.push(e);
        }
        _getPreviousPlayers(e, t, n, r, i) {
          let s = [];
          if (t) {
            const t = this.playersByQueriedElement.get(e);
            t && (s = t);
          } else {
            const t = this.playersByElement.get(e);
            if (t) {
              const e = !i || "void" == i;
              t.forEach((t) => {
                t.queued || ((e || t.triggerName == r) && s.push(t));
              });
            }
          }
          return (
            (n || r) &&
              (s = s.filter(
                (e) => !((n && n != e.namespaceId) || (r && r != e.triggerName))
              )),
            s
          );
        }
        _beforeAnimationBuild(e, t, n) {
          const r = t.element,
            i = t.isRemovalTransition ? void 0 : e,
            s = t.isRemovalTransition ? void 0 : t.triggerName;
          for (const o of t.timelines) {
            const e = o.element,
              a = e !== r,
              l = St(n, e, []);
            this._getPreviousPlayers(e, a, i, s, t.toState).forEach((e) => {
              const t = e.getRealPlayer();
              t.beforeDestroy && t.beforeDestroy(), e.destroy(), l.push(e);
            });
          }
          Gt(r, t.fromStyles);
        }
        _buildAnimation(e, t, n, r, i, s) {
          const o = t.triggerName,
            a = t.element,
            l = [],
            c = new Set(),
            u = new Set(),
            h = t.timelines.map((t) => {
              const h = t.element;
              c.add(h);
              const d = h.__ng_removed;
              if (d && d.removedBeforeQueried)
                return new mt(t.duration, t.delay);
              const f = h !== a,
                p = (function (e) {
                  const t = [];
                  return (
                    (function e(t, n) {
                      for (let r = 0; r < t.length; r++) {
                        const i = t[r];
                        i instanceof gt ? e(i.players, n) : n.push(i);
                      }
                    })(e, t),
                    t
                  );
                })((n.get(h) || Ln).map((e) => e.getRealPlayer())).filter(
                  (e) => !!e.element && e.element === h
                ),
                m = i.get(h),
                g = s.get(h),
                _ = vt(0, this._normalizer, 0, t.keyframes, m, g),
                y = this._buildPlayer(t, _, p);
              if ((t.subTimeline && r && u.add(h), f)) {
                const t = new qn(e, o, h);
                t.setRealPlayer(y), l.push(t);
              }
              return y;
            });
          l.forEach((e) => {
            St(this.playersByQueriedElement, e.element, []).push(e),
              e.onDone(() =>
                (function (e, t, n) {
                  let r;
                  if (e instanceof Map) {
                    if (((r = e.get(t)), r)) {
                      if (r.length) {
                        const e = r.indexOf(n);
                        r.splice(e, 1);
                      }
                      0 == r.length && e.delete(t);
                    }
                  } else if (((r = e[t]), r)) {
                    if (r.length) {
                      const e = r.indexOf(n);
                      r.splice(e, 1);
                    }
                    0 == r.length && delete e[t];
                  }
                  return r;
                })(this.playersByQueriedElement, e.element, e)
              );
          }),
            c.forEach((e) => Zn(e, "ng-animating"));
          const d = yt(h);
          return (
            d.onDestroy(() => {
              c.forEach((e) => Yn(e, "ng-animating")), qt(a, t.toStyles);
            }),
            u.forEach((e) => {
              St(r, e, []).push(d);
            }),
            d
          );
        }
        _buildPlayer(e, t, n) {
          return t.length > 0
            ? this.driver.animate(
                e.element,
                t,
                e.duration,
                e.delay,
                e.easing,
                n
              )
            : new mt(e.duration, e.delay);
        }
      }
      class qn {
        constructor(e, t, n) {
          (this.namespaceId = e),
            (this.triggerName = t),
            (this.element = n),
            (this._player = new mt()),
            (this._containsRealPlayer = !1),
            (this._queuedCallbacks = {}),
            (this.destroyed = !1),
            (this.markedForDestroy = !1),
            (this.disabled = !1),
            (this.queued = !0),
            (this.totalTime = 0);
        }
        setRealPlayer(e) {
          this._containsRealPlayer ||
            ((this._player = e),
            Object.keys(this._queuedCallbacks).forEach((t) => {
              this._queuedCallbacks[t].forEach((n) => bt(e, t, void 0, n));
            }),
            (this._queuedCallbacks = {}),
            (this._containsRealPlayer = !0),
            this.overrideTotalTime(e.totalTime),
            (this.queued = !1));
        }
        getRealPlayer() {
          return this._player;
        }
        overrideTotalTime(e) {
          this.totalTime = e;
        }
        syncPlayerEvents(e) {
          const t = this._player;
          t.triggerCallback && e.onStart(() => t.triggerCallback("start")),
            e.onDone(() => this.finish()),
            e.onDestroy(() => this.destroy());
        }
        _queueEvent(e, t) {
          St(this._queuedCallbacks, e, []).push(t);
        }
        onDone(e) {
          this.queued && this._queueEvent("done", e), this._player.onDone(e);
        }
        onStart(e) {
          this.queued && this._queueEvent("start", e), this._player.onStart(e);
        }
        onDestroy(e) {
          this.queued && this._queueEvent("destroy", e),
            this._player.onDestroy(e);
        }
        init() {
          this._player.init();
        }
        hasStarted() {
          return !this.queued && this._player.hasStarted();
        }
        play() {
          !this.queued && this._player.play();
        }
        pause() {
          !this.queued && this._player.pause();
        }
        restart() {
          !this.queued && this._player.restart();
        }
        finish() {
          this._player.finish();
        }
        destroy() {
          (this.destroyed = !0), this._player.destroy();
        }
        reset() {
          !this.queued && this._player.reset();
        }
        setPosition(e) {
          this.queued || this._player.setPosition(e);
        }
        getPosition() {
          return this.queued ? 0 : this._player.getPosition();
        }
        triggerCallback(e) {
          const t = this._player;
          t.triggerCallback && t.triggerCallback(e);
        }
      }
      function Gn(e) {
        return e && 1 === e.nodeType;
      }
      function Wn(e, t) {
        const n = e.style.display;
        return (e.style.display = null != t ? t : "none"), n;
      }
      function Qn(e, t, n, r, i) {
        const s = [];
        n.forEach((e) => s.push(Wn(e)));
        const o = [];
        r.forEach((n, r) => {
          const s = {};
          n.forEach((e) => {
            const n = (s[e] = t.computeStyle(r, e, i));
            (n && 0 != n.length) || ((r.__ng_removed = Bn), o.push(r));
          }),
            e.set(r, s);
        });
        let a = 0;
        return n.forEach((e) => Wn(e, s[a++])), o;
      }
      function Kn(e, t) {
        const n = new Map();
        if ((e.forEach((e) => n.set(e, [])), 0 == t.length)) return n;
        const r = new Set(t),
          i = new Map();
        return (
          t.forEach((e) => {
            const t = (function e(t) {
              if (!t) return 1;
              let s = i.get(t);
              if (s) return s;
              const o = t.parentNode;
              return (s = n.has(o) ? o : r.has(o) ? 1 : e(o)), i.set(t, s), s;
            })(e);
            1 !== t && n.get(t).push(e);
          }),
          n
        );
      }
      function Zn(e, t) {
        if (e.classList) e.classList.add(t);
        else {
          let n = e.$$classes;
          n || (n = e.$$classes = {}), (n[t] = !0);
        }
      }
      function Yn(e, t) {
        if (e.classList) e.classList.remove(t);
        else {
          let n = e.$$classes;
          n && delete n[t];
        }
      }
      function Xn(e, t, n) {
        yt(n).onDone(() => e.processLeaveNode(t));
      }
      function Jn(e, t, n) {
        const r = n.get(e);
        if (!r) return !1;
        let i = t.get(e);
        return i ? r.forEach((e) => i.add(e)) : t.set(e, r), n.delete(e), !0;
      }
      class er {
        constructor(e, t, n) {
          (this.bodyNode = e),
            (this._driver = t),
            (this._triggerCache = {}),
            (this.onRemovalComplete = (e, t) => {}),
            (this._transitionEngine = new $n(e, t, n)),
            (this._timelineEngine = new Mn(e, t, n)),
            (this._transitionEngine.onRemovalComplete = (e, t) =>
              this.onRemovalComplete(e, t));
        }
        registerTrigger(e, t, n, r, i) {
          const s = e + "-" + r;
          let o = this._triggerCache[s];
          if (!o) {
            const e = [],
              t = un(this._driver, i, e);
            if (e.length)
              throw new Error(
                `The animation trigger "${r}" has failed to build due to the following errors:\n - ${e.join(
                  "\n - "
                )}`
              );
            (o = (function (e, t) {
              return new Pn(e, t);
            })(r, t)),
              (this._triggerCache[s] = o);
          }
          this._transitionEngine.registerTrigger(t, r, o);
        }
        register(e, t) {
          this._transitionEngine.register(e, t);
        }
        destroy(e, t) {
          this._transitionEngine.destroy(e, t);
        }
        onInsert(e, t, n, r) {
          this._transitionEngine.insertNode(e, t, n, r);
        }
        onRemove(e, t, n, r) {
          this._transitionEngine.removeNode(e, t, r || !1, n);
        }
        disableAnimations(e, t) {
          this._transitionEngine.markElementAsDisabled(e, t);
        }
        process(e, t, n, r) {
          if ("@" == n.charAt(0)) {
            const [e, i] = Et(n);
            this._timelineEngine.command(e, t, i, r);
          } else this._transitionEngine.trigger(e, t, n, r);
        }
        listen(e, t, n, r, i) {
          if ("@" == n.charAt(0)) {
            const [e, r] = Et(n);
            return this._timelineEngine.listen(e, t, r, i);
          }
          return this._transitionEngine.listen(e, t, n, r, i);
        }
        flush(e = -1) {
          this._transitionEngine.flush(e);
        }
        get players() {
          return this._transitionEngine.players.concat(
            this._timelineEngine.players
          );
        }
        whenRenderingDone() {
          return this._transitionEngine.whenRenderingDone();
        }
      }
      function tr(e, t) {
        let n = null,
          r = null;
        return (
          Array.isArray(t) && t.length
            ? ((n = rr(t[0])), t.length > 1 && (r = rr(t[t.length - 1])))
            : t && (n = rr(t)),
          n || r ? new nr(e, n, r) : null
        );
      }
      let nr = (() => {
        class e {
          constructor(t, n, r) {
            (this._element = t),
              (this._startStyles = n),
              (this._endStyles = r),
              (this._state = 0);
            let i = e.initialStylesByElement.get(t);
            i || e.initialStylesByElement.set(t, (i = {})),
              (this._initialStyles = i);
          }
          start() {
            this._state < 1 &&
              (this._startStyles &&
                qt(this._element, this._startStyles, this._initialStyles),
              (this._state = 1));
          }
          finish() {
            this.start(),
              this._state < 2 &&
                (qt(this._element, this._initialStyles),
                this._endStyles &&
                  (qt(this._element, this._endStyles),
                  (this._endStyles = null)),
                (this._state = 1));
          }
          destroy() {
            this.finish(),
              this._state < 3 &&
                (e.initialStylesByElement.delete(this._element),
                this._startStyles &&
                  (Gt(this._element, this._startStyles),
                  (this._endStyles = null)),
                this._endStyles &&
                  (Gt(this._element, this._endStyles),
                  (this._endStyles = null)),
                qt(this._element, this._initialStyles),
                (this._state = 3));
          }
        }
        return (e.initialStylesByElement = new WeakMap()), e;
      })();
      function rr(e) {
        let t = null;
        const n = Object.keys(e);
        for (let r = 0; r < n.length; r++) {
          const i = n[r];
          ir(i) && ((t = t || {}), (t[i] = e[i]));
        }
        return t;
      }
      function ir(e) {
        return "display" === e || "position" === e;
      }
      class sr {
        constructor(e, t, n, r, i, s, o) {
          (this._element = e),
            (this._name = t),
            (this._duration = n),
            (this._delay = r),
            (this._easing = i),
            (this._fillMode = s),
            (this._onDoneFn = o),
            (this._finished = !1),
            (this._destroyed = !1),
            (this._startTime = 0),
            (this._position = 0),
            (this._eventFn = (e) => this._handleCallback(e));
        }
        apply() {
          !(function (e, t) {
            const n = hr(e, "").trim();
            n.length &&
              ((function (e, t) {
                let n = 0;
                for (let r = 0; r < e.length; r++) "," === e.charAt(r) && n++;
              })(n),
              (t = `${n}, ${t}`)),
              ur(e, "", t);
          })(
            this._element,
            `${this._duration}ms ${this._easing} ${this._delay}ms 1 normal ${this._fillMode} ${this._name}`
          ),
            cr(this._element, this._eventFn, !1),
            (this._startTime = Date.now());
        }
        pause() {
          or(this._element, this._name, "paused");
        }
        resume() {
          or(this._element, this._name, "running");
        }
        setPosition(e) {
          const t = ar(this._element, this._name);
          (this._position = e * this._duration),
            ur(this._element, "Delay", `-${this._position}ms`, t);
        }
        getPosition() {
          return this._position;
        }
        _handleCallback(e) {
          const t = e._ngTestManualTimestamp || Date.now(),
            n = 1e3 * parseFloat(e.elapsedTime.toFixed(3));
          e.animationName == this._name &&
            Math.max(t - this._startTime, 0) >= this._delay &&
            n >= this._duration &&
            this.finish();
        }
        finish() {
          this._finished ||
            ((this._finished = !0),
            this._onDoneFn(),
            cr(this._element, this._eventFn, !0));
        }
        destroy() {
          this._destroyed ||
            ((this._destroyed = !0),
            this.finish(),
            (function (e, t) {
              const n = hr(e, "").split(","),
                r = lr(n, t);
              r >= 0 && (n.splice(r, 1), ur(e, "", n.join(",")));
            })(this._element, this._name));
        }
      }
      function or(e, t, n) {
        ur(e, "PlayState", n, ar(e, t));
      }
      function ar(e, t) {
        const n = hr(e, "");
        return n.indexOf(",") > 0 ? lr(n.split(","), t) : lr([n], t);
      }
      function lr(e, t) {
        for (let n = 0; n < e.length; n++) if (e[n].indexOf(t) >= 0) return n;
        return -1;
      }
      function cr(e, t, n) {
        n
          ? e.removeEventListener("animationend", t)
          : e.addEventListener("animationend", t);
      }
      function ur(e, t, n, r) {
        const i = "animation" + t;
        if (null != r) {
          const t = e.style[i];
          if (t.length) {
            const e = t.split(",");
            (e[r] = n), (n = e.join(","));
          }
        }
        e.style[i] = n;
      }
      function hr(e, t) {
        return e.style["animation" + t];
      }
      class dr {
        constructor(e, t, n, r, i, s, o, a) {
          (this.element = e),
            (this.keyframes = t),
            (this.animationName = n),
            (this._duration = r),
            (this._delay = i),
            (this._finalStyles = o),
            (this._specialStyles = a),
            (this._onDoneFns = []),
            (this._onStartFns = []),
            (this._onDestroyFns = []),
            (this._started = !1),
            (this.currentSnapshot = {}),
            (this._state = 0),
            (this.easing = s || "linear"),
            (this.totalTime = r + i),
            this._buildStyler();
        }
        onStart(e) {
          this._onStartFns.push(e);
        }
        onDone(e) {
          this._onDoneFns.push(e);
        }
        onDestroy(e) {
          this._onDestroyFns.push(e);
        }
        destroy() {
          this.init(),
            this._state >= 4 ||
              ((this._state = 4),
              this._styler.destroy(),
              this._flushStartFns(),
              this._flushDoneFns(),
              this._specialStyles && this._specialStyles.destroy(),
              this._onDestroyFns.forEach((e) => e()),
              (this._onDestroyFns = []));
        }
        _flushDoneFns() {
          this._onDoneFns.forEach((e) => e()), (this._onDoneFns = []);
        }
        _flushStartFns() {
          this._onStartFns.forEach((e) => e()), (this._onStartFns = []);
        }
        finish() {
          this.init(),
            this._state >= 3 ||
              ((this._state = 3),
              this._styler.finish(),
              this._flushStartFns(),
              this._specialStyles && this._specialStyles.finish(),
              this._flushDoneFns());
        }
        setPosition(e) {
          this._styler.setPosition(e);
        }
        getPosition() {
          return this._styler.getPosition();
        }
        hasStarted() {
          return this._state >= 2;
        }
        init() {
          this._state >= 1 ||
            ((this._state = 1),
            this._styler.apply(),
            this._delay && this._styler.pause());
        }
        play() {
          this.init(),
            this.hasStarted() ||
              (this._flushStartFns(),
              (this._state = 2),
              this._specialStyles && this._specialStyles.start()),
            this._styler.resume();
        }
        pause() {
          this.init(), this._styler.pause();
        }
        restart() {
          this.reset(), this.play();
        }
        reset() {
          this._styler.destroy(), this._buildStyler(), this._styler.apply();
        }
        _buildStyler() {
          this._styler = new sr(
            this.element,
            this.animationName,
            this._duration,
            this._delay,
            this.easing,
            "forwards",
            () => this.finish()
          );
        }
        triggerCallback(e) {
          const t = "start" == e ? this._onStartFns : this._onDoneFns;
          t.forEach((e) => e()), (t.length = 0);
        }
        beforeDestroy() {
          this.init();
          const e = {};
          if (this.hasStarted()) {
            const t = this._state >= 3;
            Object.keys(this._finalStyles).forEach((n) => {
              "offset" != n &&
                (e[n] = t ? this._finalStyles[n] : rn(this.element, n));
            });
          }
          this.currentSnapshot = e;
        }
      }
      class fr extends mt {
        constructor(e, t) {
          super(),
            (this.element = e),
            (this._startingStyles = {}),
            (this.__initialized = !1),
            (this._styles = jt(t));
        }
        init() {
          !this.__initialized &&
            this._startingStyles &&
            ((this.__initialized = !0),
            Object.keys(this._styles).forEach((e) => {
              this._startingStyles[e] = this.element.style[e];
            }),
            super.init());
        }
        play() {
          this._startingStyles &&
            (this.init(),
            Object.keys(this._styles).forEach((e) =>
              this.element.style.setProperty(e, this._styles[e])
            ),
            super.play());
        }
        destroy() {
          this._startingStyles &&
            (Object.keys(this._startingStyles).forEach((e) => {
              const t = this._startingStyles[e];
              t
                ? this.element.style.setProperty(e, t)
                : this.element.style.removeProperty(e);
            }),
            (this._startingStyles = null),
            super.destroy());
        }
      }
      class pr {
        constructor() {
          (this._count = 0),
            (this._head = document.querySelector("head")),
            (this._warningIssued = !1);
        }
        validateStyleProperty(e) {
          return At(e);
        }
        matchesElement(e, t) {
          return Tt(e, t);
        }
        containsElement(e, t) {
          return Ft(e, t);
        }
        query(e, t, n) {
          return Pt(e, t, n);
        }
        computeStyle(e, t, n) {
          return window.getComputedStyle(e)[t];
        }
        buildKeyframeElement(e, t, n) {
          n = n.map((e) => jt(e));
          let r = `@keyframes ${t} {\n`,
            i = "";
          n.forEach((e) => {
            i = " ";
            const t = parseFloat(e.offset);
            (r += `${i}${100 * t}% {\n`),
              (i += " "),
              Object.keys(e).forEach((t) => {
                const n = e[t];
                switch (t) {
                  case "offset":
                    return;
                  case "easing":
                    return void (
                      n && (r += `${i}animation-timing-function: ${n};\n`)
                    );
                  default:
                    return void (r += `${i}${t}: ${n};\n`);
                }
              }),
              (r += i + "}\n");
          }),
            (r += "}\n");
          const s = document.createElement("style");
          return (s.innerHTML = r), s;
        }
        animate(e, t, n, r, i, s = [], o) {
          o && this._notifyFaultyScrubber();
          const a = s.filter((e) => e instanceof dr),
            l = {};
          en(n, r) &&
            a.forEach((e) => {
              let t = e.currentSnapshot;
              Object.keys(t).forEach((e) => (l[e] = t[e]));
            });
          const c = (function (e) {
            let t = {};
            return (
              e &&
                (Array.isArray(e) ? e : [e]).forEach((e) => {
                  Object.keys(e).forEach((n) => {
                    "offset" != n && "easing" != n && (t[n] = e[n]);
                  });
                }),
              t
            );
          })((t = tn(e, t, l)));
          if (0 == n) return new fr(e, c);
          const u = "gen_css_kf_" + this._count++,
            h = this.buildKeyframeElement(e, u, t);
          document.querySelector("head").appendChild(h);
          const d = tr(e, t),
            f = new dr(e, t, u, n, r, i, c, d);
          return (
            f.onDestroy(() => {
              var e;
              (e = h).parentNode.removeChild(e);
            }),
            f
          );
        }
        _notifyFaultyScrubber() {
          this._warningIssued ||
            (console.warn(
              "@angular/animations: please load the web-animations.js polyfill to allow programmatic access...\n",
              "  visit http://bit.ly/IWukam to learn more about using the web-animation-js polyfill."
            ),
            (this._warningIssued = !0));
        }
      }
      class mr {
        constructor(e, t, n, r) {
          (this.element = e),
            (this.keyframes = t),
            (this.options = n),
            (this._specialStyles = r),
            (this._onDoneFns = []),
            (this._onStartFns = []),
            (this._onDestroyFns = []),
            (this._initialized = !1),
            (this._finished = !1),
            (this._started = !1),
            (this._destroyed = !1),
            (this.time = 0),
            (this.parentPlayer = null),
            (this.currentSnapshot = {}),
            (this._duration = n.duration),
            (this._delay = n.delay || 0),
            (this.time = this._duration + this._delay);
        }
        _onFinish() {
          this._finished ||
            ((this._finished = !0),
            this._onDoneFns.forEach((e) => e()),
            (this._onDoneFns = []));
        }
        init() {
          this._buildPlayer(), this._preparePlayerBeforeStart();
        }
        _buildPlayer() {
          if (this._initialized) return;
          this._initialized = !0;
          const e = this.keyframes;
          (this.domPlayer = this._triggerWebAnimation(
            this.element,
            e,
            this.options
          )),
            (this._finalKeyframe = e.length ? e[e.length - 1] : {}),
            this.domPlayer.addEventListener("finish", () => this._onFinish());
        }
        _preparePlayerBeforeStart() {
          this._delay ? this._resetDomPlayerState() : this.domPlayer.pause();
        }
        _triggerWebAnimation(e, t, n) {
          return e.animate(t, n);
        }
        onStart(e) {
          this._onStartFns.push(e);
        }
        onDone(e) {
          this._onDoneFns.push(e);
        }
        onDestroy(e) {
          this._onDestroyFns.push(e);
        }
        play() {
          this._buildPlayer(),
            this.hasStarted() ||
              (this._onStartFns.forEach((e) => e()),
              (this._onStartFns = []),
              (this._started = !0),
              this._specialStyles && this._specialStyles.start()),
            this.domPlayer.play();
        }
        pause() {
          this.init(), this.domPlayer.pause();
        }
        finish() {
          this.init(),
            this._specialStyles && this._specialStyles.finish(),
            this._onFinish(),
            this.domPlayer.finish();
        }
        reset() {
          this._resetDomPlayerState(),
            (this._destroyed = !1),
            (this._finished = !1),
            (this._started = !1);
        }
        _resetDomPlayerState() {
          this.domPlayer && this.domPlayer.cancel();
        }
        restart() {
          this.reset(), this.play();
        }
        hasStarted() {
          return this._started;
        }
        destroy() {
          this._destroyed ||
            ((this._destroyed = !0),
            this._resetDomPlayerState(),
            this._onFinish(),
            this._specialStyles && this._specialStyles.destroy(),
            this._onDestroyFns.forEach((e) => e()),
            (this._onDestroyFns = []));
        }
        setPosition(e) {
          this.domPlayer.currentTime = e * this.time;
        }
        getPosition() {
          return this.domPlayer.currentTime / this.time;
        }
        get totalTime() {
          return this._delay + this._duration;
        }
        beforeDestroy() {
          const e = {};
          this.hasStarted() &&
            Object.keys(this._finalKeyframe).forEach((t) => {
              "offset" != t &&
                (e[t] = this._finished
                  ? this._finalKeyframe[t]
                  : rn(this.element, t));
            }),
            (this.currentSnapshot = e);
        }
        triggerCallback(e) {
          const t = "start" == e ? this._onStartFns : this._onDoneFns;
          t.forEach((e) => e()), (t.length = 0);
        }
      }
      class gr {
        constructor() {
          (this._isNativeImpl = /\{\s*\[native\s+code\]\s*\}/.test(
            _r().toString()
          )),
            (this._cssKeyframesDriver = new pr());
        }
        validateStyleProperty(e) {
          return At(e);
        }
        matchesElement(e, t) {
          return Tt(e, t);
        }
        containsElement(e, t) {
          return Ft(e, t);
        }
        query(e, t, n) {
          return Pt(e, t, n);
        }
        computeStyle(e, t, n) {
          return window.getComputedStyle(e)[t];
        }
        overrideWebAnimationsSupport(e) {
          this._isNativeImpl = e;
        }
        animate(e, t, n, r, i, s = [], o) {
          if (!o && !this._isNativeImpl)
            return this._cssKeyframesDriver.animate(e, t, n, r, i, s);
          const a = {
            duration: n,
            delay: r,
            fill: 0 == r ? "both" : "forwards",
          };
          i && (a.easing = i);
          const l = {},
            c = s.filter((e) => e instanceof mr);
          en(n, r) &&
            c.forEach((e) => {
              let t = e.currentSnapshot;
              Object.keys(t).forEach((e) => (l[e] = t[e]));
            });
          const u = tr(e, (t = tn(e, (t = t.map((e) => Ut(e, !1))), l)));
          return new mr(e, t, a, u);
        }
      }
      function _r() {
        return (
          ("undefined" != typeof window &&
            void 0 !== window.document &&
            Element.prototype.animate) ||
          {}
        );
      }
      let yr = (() => {
        class e extends it {
          constructor(e, t) {
            super(),
              (this._nextAnimationId = 0),
              (this._renderer = e.createRenderer(t.body, {
                id: "0",
                encapsulation: r.ViewEncapsulation.None,
                styles: [],
                data: { animation: [] },
              }));
          }
          build(e) {
            const t = this._nextAnimationId.toString();
            this._nextAnimationId++;
            const n = Array.isArray(e) ? at(e) : e;
            return (
              wr(this._renderer, null, t, "register", [n]),
              new vr(t, this._renderer)
            );
          }
        }
        return (
          (e.ɵfac = function (t) {
            return new (t || e)(
              r["\u0275\u0275inject"](r.RendererFactory2),
              r["\u0275\u0275inject"](i.DOCUMENT)
            );
          }),
          (e.ɵprov = r["\u0275\u0275defineInjectable"]({
            token: e,
            factory: e.ɵfac,
          })),
          e
        );
      })();
      class vr extends class {} {
        constructor(e, t) {
          super(), (this._id = e), (this._renderer = t);
        }
        create(e, t) {
          return new br(this._id, e, t || {}, this._renderer);
        }
      }
      class br {
        constructor(e, t, n, r) {
          (this.id = e),
            (this.element = t),
            (this._renderer = r),
            (this.parentPlayer = null),
            (this._started = !1),
            (this.totalTime = 0),
            this._command("create", n);
        }
        _listen(e, t) {
          return this._renderer.listen(this.element, `@@${this.id}:${e}`, t);
        }
        _command(e, ...t) {
          return wr(this._renderer, this.element, this.id, e, t);
        }
        onDone(e) {
          this._listen("done", e);
        }
        onStart(e) {
          this._listen("start", e);
        }
        onDestroy(e) {
          this._listen("destroy", e);
        }
        init() {
          this._command("init");
        }
        hasStarted() {
          return this._started;
        }
        play() {
          this._command("play"), (this._started = !0);
        }
        pause() {
          this._command("pause");
        }
        restart() {
          this._command("restart");
        }
        finish() {
          this._command("finish");
        }
        destroy() {
          this._command("destroy");
        }
        reset() {
          this._command("reset");
        }
        setPosition(e) {
          this._command("setPosition", e);
        }
        getPosition() {
          return 0;
        }
      }
      function wr(e, t, n, r, i) {
        return e.setProperty(t, `@@${n}:${r}`, i);
      }
      let Cr = (() => {
        class e {
          constructor(e, t, n) {
            (this.delegate = e),
              (this.engine = t),
              (this._zone = n),
              (this._currentId = 0),
              (this._microtaskId = 1),
              (this._animationCallbacksBuffer = []),
              (this._rendererCache = new Map()),
              (this._cdRecurDepth = 0),
              (this.promise = Promise.resolve(0)),
              (t.onRemovalComplete = (e, t) => {
                t && t.parentNode(e) && t.removeChild(e.parentNode, e);
              });
          }
          createRenderer(e, t) {
            const n = this.delegate.createRenderer(e, t);
            if (!(e && t && t.data && t.data.animation)) {
              let e = this._rendererCache.get(n);
              return (
                e ||
                  ((e = new Sr("", n, this.engine)),
                  this._rendererCache.set(n, e)),
                e
              );
            }
            const r = t.id,
              i = t.id + "-" + this._currentId;
            this._currentId++, this.engine.register(i, e);
            const s = (t) => {
              Array.isArray(t)
                ? t.forEach(s)
                : this.engine.registerTrigger(r, i, e, t.name, t);
            };
            return t.data.animation.forEach(s), new Er(this, i, n, this.engine);
          }
          begin() {
            this._cdRecurDepth++, this.delegate.begin && this.delegate.begin();
          }
          _scheduleCountTask() {
            this.promise.then(() => {
              this._microtaskId++;
            });
          }
          scheduleListenerCallback(e, t, n) {
            e >= 0 && e < this._microtaskId
              ? this._zone.run(() => t(n))
              : (0 == this._animationCallbacksBuffer.length &&
                  Promise.resolve(null).then(() => {
                    this._zone.run(() => {
                      this._animationCallbacksBuffer.forEach((e) => {
                        const [t, n] = e;
                        t(n);
                      }),
                        (this._animationCallbacksBuffer = []);
                    });
                  }),
                this._animationCallbacksBuffer.push([t, n]));
          }
          end() {
            this._cdRecurDepth--,
              0 == this._cdRecurDepth &&
                this._zone.runOutsideAngular(() => {
                  this._scheduleCountTask(),
                    this.engine.flush(this._microtaskId);
                }),
              this.delegate.end && this.delegate.end();
          }
          whenRenderingDone() {
            return this.engine.whenRenderingDone();
          }
        }
        return (
          (e.ɵfac = function (t) {
            return new (t || e)(
              r["\u0275\u0275inject"](r.RendererFactory2),
              r["\u0275\u0275inject"](er),
              r["\u0275\u0275inject"](r.NgZone)
            );
          }),
          (e.ɵprov = r["\u0275\u0275defineInjectable"]({
            token: e,
            factory: e.ɵfac,
          })),
          e
        );
      })();
      class Sr {
        constructor(e, t, n) {
          (this.namespaceId = e),
            (this.delegate = t),
            (this.engine = n),
            (this.destroyNode = this.delegate.destroyNode
              ? (e) => t.destroyNode(e)
              : null);
        }
        get data() {
          return this.delegate.data;
        }
        destroy() {
          this.engine.destroy(this.namespaceId, this.delegate),
            this.delegate.destroy();
        }
        createElement(e, t) {
          return this.delegate.createElement(e, t);
        }
        createComment(e) {
          return this.delegate.createComment(e);
        }
        createText(e) {
          return this.delegate.createText(e);
        }
        appendChild(e, t) {
          this.delegate.appendChild(e, t),
            this.engine.onInsert(this.namespaceId, t, e, !1);
        }
        insertBefore(e, t, n) {
          this.delegate.insertBefore(e, t, n),
            this.engine.onInsert(this.namespaceId, t, e, !0);
        }
        removeChild(e, t, n) {
          this.engine.onRemove(this.namespaceId, t, this.delegate, n);
        }
        selectRootElement(e, t) {
          return this.delegate.selectRootElement(e, t);
        }
        parentNode(e) {
          return this.delegate.parentNode(e);
        }
        nextSibling(e) {
          return this.delegate.nextSibling(e);
        }
        setAttribute(e, t, n, r) {
          this.delegate.setAttribute(e, t, n, r);
        }
        removeAttribute(e, t, n) {
          this.delegate.removeAttribute(e, t, n);
        }
        addClass(e, t) {
          this.delegate.addClass(e, t);
        }
        removeClass(e, t) {
          this.delegate.removeClass(e, t);
        }
        setStyle(e, t, n, r) {
          this.delegate.setStyle(e, t, n, r);
        }
        removeStyle(e, t, n) {
          this.delegate.removeStyle(e, t, n);
        }
        setProperty(e, t, n) {
          "@" == t.charAt(0) && "@.disabled" == t
            ? this.disableAnimations(e, !!n)
            : this.delegate.setProperty(e, t, n);
        }
        setValue(e, t) {
          this.delegate.setValue(e, t);
        }
        listen(e, t, n) {
          return this.delegate.listen(e, t, n);
        }
        disableAnimations(e, t) {
          this.engine.disableAnimations(e, t);
        }
      }
      class Er extends Sr {
        constructor(e, t, n, r) {
          super(t, n, r), (this.factory = e), (this.namespaceId = t);
        }
        setProperty(e, t, n) {
          "@" == t.charAt(0)
            ? "." == t.charAt(1) && "@.disabled" == t
              ? this.disableAnimations(e, (n = void 0 === n || !!n))
              : this.engine.process(this.namespaceId, e, t.substr(1), n)
            : this.delegate.setProperty(e, t, n);
        }
        listen(e, t, n) {
          if ("@" == t.charAt(0)) {
            const r = (function (e) {
              switch (e) {
                case "body":
                  return document.body;
                case "document":
                  return document;
                case "window":
                  return window;
                default:
                  return e;
              }
            })(e);
            let i = t.substr(1),
              s = "";
            return (
              "@" != i.charAt(0) &&
                ([i, s] = (function (e) {
                  const t = e.indexOf(".");
                  return [e.substring(0, t), e.substr(t + 1)];
                })(i)),
              this.engine.listen(this.namespaceId, r, i, s, (e) => {
                this.factory.scheduleListenerCallback(e._data || -1, n, e);
              })
            );
          }
          return this.delegate.listen(e, t, n);
        }
      }
      let xr = (() => {
        class e extends er {
          constructor(e, t, n) {
            super(e.body, t, n);
          }
        }
        return (
          (e.ɵfac = function (t) {
            return new (t || e)(
              r["\u0275\u0275inject"](i.DOCUMENT),
              r["\u0275\u0275inject"](Mt),
              r["\u0275\u0275inject"](In)
            );
          }),
          (e.ɵprov = r["\u0275\u0275defineInjectable"]({
            token: e,
            factory: e.ɵfac,
          })),
          e
        );
      })();
      const Dr = new r.InjectionToken("AnimationModuleType"),
        Ir = [
          {
            provide: Mt,
            useFactory: function () {
              return "function" == typeof _r() ? new gr() : new pr();
            },
          },
          { provide: Dr, useValue: "BrowserAnimations" },
          { provide: it, useClass: yr },
          {
            provide: In,
            useFactory: function () {
              return new On();
            },
          },
          { provide: er, useClass: xr },
          {
            provide: r.RendererFactory2,
            useFactory: function (e, t, n) {
              return new Cr(e, t, n);
            },
            deps: [w, er, r.NgZone],
          },
        ];
      let Or = (() => {
        class e {}
        return (
          (e.ɵmod = r["\u0275\u0275defineNgModule"]({ type: e })),
          (e.ɵinj = r["\u0275\u0275defineInjector"]({
            factory: function (t) {
              return new (t || e)();
            },
            providers: Ir,
            imports: [N],
          })),
          e
        );
      })();
      const kr = ["*", [["mat-option"], ["ng-container"]]],
        Rr = ["*", "mat-option, ng-container"];
      function Ar(e, t) {
        if (
          (1 & e && r["\u0275\u0275element"](0, "mat-pseudo-checkbox", 3),
          2 & e)
        ) {
          const e = r["\u0275\u0275nextContext"]();
          r["\u0275\u0275property"](
            "state",
            e.selected ? "checked" : "unchecked"
          )("disabled", e.disabled);
        }
      }
      const Tr = ["*"],
        Fr = new r.Version("9.2.4"),
        Pr = new r.InjectionToken("mat-sanity-checks", {
          providedIn: "root",
          factory: function () {
            return !0;
          },
        });
      let jr,
        Nr = (() => {
          class e {
            constructor(e, t, n) {
              (this._hasDoneGlobalChecks = !1),
                (this._document = n),
                e._applyBodyHighContrastModeCssClasses(),
                (this._sanityChecks = t),
                this._hasDoneGlobalChecks ||
                  (this._checkDoctypeIsDefined(),
                  this._checkThemeIsPresent(),
                  this._checkCdkVersionMatch(),
                  (this._hasDoneGlobalChecks = !0));
            }
            _getDocument() {
              const e = this._document || document;
              return "object" == typeof e && e ? e : null;
            }
            _getWindow() {
              const e = this._getDocument(),
                t = (null == e ? void 0 : e.defaultView) || window;
              return "object" == typeof t && t ? t : null;
            }
            _checksAreEnabled() {
              return Object(r.isDevMode)() && !this._isTestEnv();
            }
            _isTestEnv() {
              const e = this._getWindow();
              return e && (e.__karma__ || e.jasmine);
            }
            _checkDoctypeIsDefined() {
              const e =
                  this._checksAreEnabled() &&
                  (!0 === this._sanityChecks || this._sanityChecks.doctype),
                t = this._getDocument();
              e &&
                t &&
                !t.doctype &&
                console.warn(
                  "Current document does not have a doctype. This may cause some Angular Material components not to behave as expected."
                );
            }
            _checkThemeIsPresent() {
              const e =
                  !this._checksAreEnabled() ||
                  !1 === this._sanityChecks ||
                  !this._sanityChecks.theme,
                t = this._getDocument();
              if (e || !t || !t.body || "function" != typeof getComputedStyle)
                return;
              const n = t.createElement("div");
              n.classList.add("mat-theme-loaded-marker"), t.body.appendChild(n);
              const r = getComputedStyle(n);
              r &&
                "none" !== r.display &&
                console.warn(
                  "Could not find Angular Material core theme. Most Material components may not work as expected. For more info refer to the theming guide: https://material.angular.io/guide/theming"
                ),
                t.body.removeChild(n);
            }
            _checkCdkVersionMatch() {
              this._checksAreEnabled() &&
                (!0 === this._sanityChecks || this._sanityChecks.version) &&
                Fr.full !== Je.full &&
                console.warn(
                  "The Angular Material version (" +
                    Fr.full +
                    ") does not match the Angular CDK version (" +
                    Je.full +
                    ").\nPlease ensure the versions of these two packages exactly match."
                );
            }
          }
          return (
            (e.ɵmod = r["\u0275\u0275defineNgModule"]({ type: e })),
            (e.ɵinj = r["\u0275\u0275defineInjector"]({
              factory: function (t) {
                return new (t || e)(
                  r["\u0275\u0275inject"](Qe),
                  r["\u0275\u0275inject"](Pr, 8),
                  r["\u0275\u0275inject"](i.DOCUMENT, 8)
                );
              },
              imports: [[Xe], Xe],
            })),
            e
          );
        })();
      function Mr(e) {
        return class extends e {
          constructor(...e) {
            super(...e), (this._disabled = !1);
          }
          get disabled() {
            return this._disabled;
          }
          set disabled(e) {
            this._disabled = ge(e);
          }
        };
      }
      function Lr(e, t) {
        return class extends e {
          constructor(...e) {
            super(...e), (this.color = t);
          }
          get color() {
            return this._color;
          }
          set color(e) {
            const n = e || t;
            n !== this._color &&
              (this._color &&
                this._elementRef.nativeElement.classList.remove(
                  "mat-" + this._color
                ),
              n && this._elementRef.nativeElement.classList.add("mat-" + n),
              (this._color = n));
          }
        };
      }
      function Vr(e) {
        return class extends e {
          constructor(...e) {
            super(...e), (this._disableRipple = !1);
          }
          get disableRipple() {
            return this._disableRipple;
          }
          set disableRipple(e) {
            this._disableRipple = ge(e);
          }
        };
      }
      function Br(e, t = 0) {
        return class extends e {
          constructor(...e) {
            super(...e), (this._tabIndex = t);
          }
          get tabIndex() {
            return this.disabled ? -1 : this._tabIndex;
          }
          set tabIndex(e) {
            this._tabIndex = null != e ? e : t;
          }
        };
      }
      function zr(e) {
        return class extends e {
          constructor(...e) {
            super(...e),
              (this.errorState = !1),
              (this.stateChanges = new M.a());
          }
          updateErrorState() {
            const e = this.errorState,
              t = (
                this.errorStateMatcher || this._defaultErrorStateMatcher
              ).isErrorState(
                this.ngControl ? this.ngControl.control : null,
                this._parentFormGroup || this._parentForm
              );
            t !== e && ((this.errorState = t), this.stateChanges.next());
          }
        };
      }
      function Ur(e) {
        return class extends e {
          constructor(...e) {
            super(...e),
              (this._isInitialized = !1),
              (this._pendingSubscribers = []),
              (this.initialized = new ue.a((e) => {
                this._isInitialized
                  ? this._notifySubscriber(e)
                  : this._pendingSubscribers.push(e);
              }));
          }
          _markInitialized() {
            if (this._isInitialized)
              throw Error(
                "This directive has already been marked as initialized and should not be called twice."
              );
            (this._isInitialized = !0),
              this._pendingSubscribers.forEach(this._notifySubscriber),
              (this._pendingSubscribers = null);
          }
          _notifySubscriber(e) {
            e.next(), e.complete();
          }
        };
      }
      try {
        jr = "undefined" != typeof Intl;
      } catch (Lp) {
        jr = !1;
      }
      let Hr = (() => {
        class e {
          isErrorState(e, t) {
            return !!(e && e.invalid && (e.touched || (t && t.submitted)));
          }
        }
        return (
          (e.ɵfac = function (t) {
            return new (t || e)();
          }),
          (e.ɵprov = Object(r["\u0275\u0275defineInjectable"])({
            factory: function () {
              return new e();
            },
            token: e,
            providedIn: "root",
          })),
          e
        );
      })();
      class $r {
        constructor(e, t, n) {
          (this._renderer = e),
            (this.element = t),
            (this.config = n),
            (this.state = 3);
        }
        fadeOut() {
          this._renderer.fadeOutRipple(this);
        }
      }
      const qr = { enterDuration: 450, exitDuration: 400 },
        Gr = ke({ passive: !0 }),
        Wr = ["mousedown", "touchstart"],
        Qr = ["mouseup", "mouseleave", "touchend", "touchcancel"];
      class Kr {
        constructor(e, t, n, r) {
          (this._target = e),
            (this._ngZone = t),
            (this._isPointerDown = !1),
            (this._activeRipples = new Set()),
            (this._pointerUpEventsRegistered = !1),
            r.isBrowser && (this._containerElement = be(n));
        }
        fadeInRipple(e, t, n = {}) {
          const r = (this._containerRect =
              this._containerRect ||
              this._containerElement.getBoundingClientRect()),
            i = Object.assign(Object.assign({}, qr), n.animation);
          n.centered &&
            ((e = r.left + r.width / 2), (t = r.top + r.height / 2));
          const s =
              n.radius ||
              (function (e, t, n) {
                const r = Math.max(Math.abs(e - n.left), Math.abs(e - n.right)),
                  i = Math.max(Math.abs(t - n.top), Math.abs(t - n.bottom));
                return Math.sqrt(r * r + i * i);
              })(e, t, r),
            o = e - r.left,
            a = t - r.top,
            l = i.enterDuration,
            c = document.createElement("div");
          c.classList.add("mat-ripple-element"),
            (c.style.left = o - s + "px"),
            (c.style.top = a - s + "px"),
            (c.style.height = 2 * s + "px"),
            (c.style.width = 2 * s + "px"),
            null != n.color && (c.style.backgroundColor = n.color),
            (c.style.transitionDuration = l + "ms"),
            this._containerElement.appendChild(c),
            window.getComputedStyle(c).getPropertyValue("opacity"),
            (c.style.transform = "scale(1)");
          const u = new $r(this, c, n);
          return (
            (u.state = 0),
            this._activeRipples.add(u),
            n.persistent || (this._mostRecentTransientRipple = u),
            this._runTimeoutOutsideZone(() => {
              const e = u === this._mostRecentTransientRipple;
              (u.state = 1),
                n.persistent || (e && this._isPointerDown) || u.fadeOut();
            }, l),
            u
          );
        }
        fadeOutRipple(e) {
          const t = this._activeRipples.delete(e);
          if (
            (e === this._mostRecentTransientRipple &&
              (this._mostRecentTransientRipple = null),
            this._activeRipples.size || (this._containerRect = null),
            !t)
          )
            return;
          const n = e.element,
            r = Object.assign(Object.assign({}, qr), e.config.animation);
          (n.style.transitionDuration = r.exitDuration + "ms"),
            (n.style.opacity = "0"),
            (e.state = 2),
            this._runTimeoutOutsideZone(() => {
              (e.state = 3), n.parentNode.removeChild(n);
            }, r.exitDuration);
        }
        fadeOutAll() {
          this._activeRipples.forEach((e) => e.fadeOut());
        }
        setupTriggerEvents(e) {
          const t = be(e);
          t &&
            t !== this._triggerElement &&
            (this._removeTriggerEvents(),
            (this._triggerElement = t),
            this._registerEvents(Wr));
        }
        handleEvent(e) {
          "mousedown" === e.type
            ? this._onMousedown(e)
            : "touchstart" === e.type
            ? this._onTouchStart(e)
            : this._onPointerUp(),
            this._pointerUpEventsRegistered ||
              (this._registerEvents(Qr),
              (this._pointerUpEventsRegistered = !0));
        }
        _onMousedown(e) {
          const t = He(e),
            n =
              this._lastTouchStartEvent &&
              Date.now() < this._lastTouchStartEvent + 800;
          this._target.rippleDisabled ||
            t ||
            n ||
            ((this._isPointerDown = !0),
            this.fadeInRipple(e.clientX, e.clientY, this._target.rippleConfig));
        }
        _onTouchStart(e) {
          if (!this._target.rippleDisabled) {
            (this._lastTouchStartEvent = Date.now()),
              (this._isPointerDown = !0);
            const t = e.changedTouches;
            for (let e = 0; e < t.length; e++)
              this.fadeInRipple(
                t[e].clientX,
                t[e].clientY,
                this._target.rippleConfig
              );
          }
        }
        _onPointerUp() {
          this._isPointerDown &&
            ((this._isPointerDown = !1),
            this._activeRipples.forEach((e) => {
              !e.config.persistent &&
                (1 === e.state ||
                  (e.config.terminateOnPointerUp && 0 === e.state)) &&
                e.fadeOut();
            }));
        }
        _runTimeoutOutsideZone(e, t = 0) {
          this._ngZone.runOutsideAngular(() => setTimeout(e, t));
        }
        _registerEvents(e) {
          this._ngZone.runOutsideAngular(() => {
            e.forEach((e) => {
              this._triggerElement.addEventListener(e, this, Gr);
            });
          });
        }
        _removeTriggerEvents() {
          this._triggerElement &&
            (Wr.forEach((e) => {
              this._triggerElement.removeEventListener(e, this, Gr);
            }),
            this._pointerUpEventsRegistered &&
              Qr.forEach((e) => {
                this._triggerElement.removeEventListener(e, this, Gr);
              }));
        }
      }
      const Zr = new r.InjectionToken("mat-ripple-global-options");
      let Yr = (() => {
          class e {
            constructor(e, t, n, r, i) {
              (this._elementRef = e),
                (this._animationMode = i),
                (this.radius = 0),
                (this._disabled = !1),
                (this._isInitialized = !1),
                (this._globalOptions = r || {}),
                (this._rippleRenderer = new Kr(this, t, e, n));
            }
            get disabled() {
              return this._disabled;
            }
            set disabled(e) {
              (this._disabled = e), this._setupTriggerEventsIfEnabled();
            }
            get trigger() {
              return this._trigger || this._elementRef.nativeElement;
            }
            set trigger(e) {
              (this._trigger = e), this._setupTriggerEventsIfEnabled();
            }
            ngOnInit() {
              (this._isInitialized = !0), this._setupTriggerEventsIfEnabled();
            }
            ngOnDestroy() {
              this._rippleRenderer._removeTriggerEvents();
            }
            fadeOutAll() {
              this._rippleRenderer.fadeOutAll();
            }
            get rippleConfig() {
              return {
                centered: this.centered,
                radius: this.radius,
                color: this.color,
                animation: Object.assign(
                  Object.assign(
                    Object.assign({}, this._globalOptions.animation),
                    "NoopAnimations" === this._animationMode
                      ? { enterDuration: 0, exitDuration: 0 }
                      : {}
                  ),
                  this.animation
                ),
                terminateOnPointerUp: this._globalOptions.terminateOnPointerUp,
              };
            }
            get rippleDisabled() {
              return this.disabled || !!this._globalOptions.disabled;
            }
            _setupTriggerEventsIfEnabled() {
              !this.disabled &&
                this._isInitialized &&
                this._rippleRenderer.setupTriggerEvents(this.trigger);
            }
            launch(e, t = 0, n) {
              return "number" == typeof e
                ? this._rippleRenderer.fadeInRipple(
                    e,
                    t,
                    Object.assign(Object.assign({}, this.rippleConfig), n)
                  )
                : this._rippleRenderer.fadeInRipple(
                    0,
                    0,
                    Object.assign(Object.assign({}, this.rippleConfig), e)
                  );
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(
                r["\u0275\u0275directiveInject"](r.ElementRef),
                r["\u0275\u0275directiveInject"](r.NgZone),
                r["\u0275\u0275directiveInject"](Se),
                r["\u0275\u0275directiveInject"](Zr, 8),
                r["\u0275\u0275directiveInject"](Dr, 8)
              );
            }),
            (e.ɵdir = r["\u0275\u0275defineDirective"]({
              type: e,
              selectors: [
                ["", "mat-ripple", ""],
                ["", "matRipple", ""],
              ],
              hostAttrs: [1, "mat-ripple"],
              hostVars: 2,
              hostBindings: function (e, t) {
                2 & e &&
                  r["\u0275\u0275classProp"](
                    "mat-ripple-unbounded",
                    t.unbounded
                  );
              },
              inputs: {
                radius: ["matRippleRadius", "radius"],
                disabled: ["matRippleDisabled", "disabled"],
                trigger: ["matRippleTrigger", "trigger"],
                color: ["matRippleColor", "color"],
                unbounded: ["matRippleUnbounded", "unbounded"],
                centered: ["matRippleCentered", "centered"],
                animation: ["matRippleAnimation", "animation"],
              },
              exportAs: ["matRipple"],
            })),
            e
          );
        })(),
        Xr = (() => {
          class e {}
          return (
            (e.ɵmod = r["\u0275\u0275defineNgModule"]({ type: e })),
            (e.ɵinj = r["\u0275\u0275defineInjector"]({
              factory: function (t) {
                return new (t || e)();
              },
              imports: [[Nr, Ee], Nr],
            })),
            e
          );
        })(),
        Jr = (() => {
          class e {
            constructor(e) {
              (this._animationMode = e),
                (this.state = "unchecked"),
                (this.disabled = !1);
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(r["\u0275\u0275directiveInject"](Dr, 8));
            }),
            (e.ɵcmp = r["\u0275\u0275defineComponent"]({
              type: e,
              selectors: [["mat-pseudo-checkbox"]],
              hostAttrs: [1, "mat-pseudo-checkbox"],
              hostVars: 8,
              hostBindings: function (e, t) {
                2 & e &&
                  r["\u0275\u0275classProp"](
                    "mat-pseudo-checkbox-indeterminate",
                    "indeterminate" === t.state
                  )("mat-pseudo-checkbox-checked", "checked" === t.state)(
                    "mat-pseudo-checkbox-disabled",
                    t.disabled
                  )(
                    "_mat-animation-noopable",
                    "NoopAnimations" === t._animationMode
                  );
              },
              inputs: { state: "state", disabled: "disabled" },
              decls: 0,
              vars: 0,
              template: function (e, t) {},
              styles: [
                '.mat-pseudo-checkbox{width:16px;height:16px;border:2px solid;border-radius:2px;cursor:pointer;display:inline-block;vertical-align:middle;box-sizing:border-box;position:relative;flex-shrink:0;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1),background-color 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox::after{position:absolute;opacity:0;content:"";border-bottom:2px solid currentColor;transition:opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox.mat-pseudo-checkbox-indeterminate{border-color:transparent}._mat-animation-noopable.mat-pseudo-checkbox{transition:none;animation:none}._mat-animation-noopable.mat-pseudo-checkbox::after{transition:none}.mat-pseudo-checkbox-disabled{cursor:default}.mat-pseudo-checkbox-indeterminate::after{top:5px;left:1px;width:10px;opacity:1;border-radius:2px}.mat-pseudo-checkbox-checked::after{top:2.4px;left:1px;width:8px;height:3px;border-left:2px solid currentColor;transform:rotate(-45deg);opacity:1;box-sizing:content-box}\n',
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            e
          );
        })(),
        ei = (() => {
          class e {}
          return (
            (e.ɵmod = r["\u0275\u0275defineNgModule"]({ type: e })),
            (e.ɵinj = r["\u0275\u0275defineInjector"]({
              factory: function (t) {
                return new (t || e)();
              },
            })),
            e
          );
        })();
      class ti {}
      const ni = Mr(ti);
      let ri = 0,
        ii = (() => {
          class e extends ni {
            constructor() {
              super(...arguments),
                (this._labelId = "mat-optgroup-label-" + ri++);
            }
          }
          return (
            (e.ɵfac = function (t) {
              return si(t || e);
            }),
            (e.ɵcmp = r["\u0275\u0275defineComponent"]({
              type: e,
              selectors: [["mat-optgroup"]],
              hostAttrs: ["role", "group", 1, "mat-optgroup"],
              hostVars: 4,
              hostBindings: function (e, t) {
                2 & e &&
                  (r["\u0275\u0275attribute"](
                    "aria-disabled",
                    t.disabled.toString()
                  )("aria-labelledby", t._labelId),
                  r["\u0275\u0275classProp"](
                    "mat-optgroup-disabled",
                    t.disabled
                  ));
              },
              inputs: { disabled: "disabled", label: "label" },
              exportAs: ["matOptgroup"],
              features: [r["\u0275\u0275InheritDefinitionFeature"]],
              ngContentSelectors: Rr,
              decls: 4,
              vars: 2,
              consts: [[1, "mat-optgroup-label", 3, "id"]],
              template: function (e, t) {
                1 & e &&
                  (r["\u0275\u0275projectionDef"](kr),
                  r["\u0275\u0275elementStart"](0, "label", 0),
                  r["\u0275\u0275text"](1),
                  r["\u0275\u0275projection"](2),
                  r["\u0275\u0275elementEnd"](),
                  r["\u0275\u0275projection"](3, 1)),
                  2 & e &&
                    (r["\u0275\u0275property"]("id", t._labelId),
                    r["\u0275\u0275advance"](1),
                    r["\u0275\u0275textInterpolate1"]("", t.label, " "));
              },
              styles: [
                ".mat-optgroup-label{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup-label[disabled]{cursor:default}[dir=rtl] .mat-optgroup-label{text-align:right}.mat-optgroup-label .mat-icon{margin-right:16px;vertical-align:middle}.mat-optgroup-label .mat-icon svg{vertical-align:top}[dir=rtl] .mat-optgroup-label .mat-icon{margin-left:16px;margin-right:0}\n",
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            e
          );
        })();
      const si = r["\u0275\u0275getInheritedFactory"](ii);
      let oi = 0;
      class ai {
        constructor(e, t = !1) {
          (this.source = e), (this.isUserInput = t);
        }
      }
      const li = new r.InjectionToken("MAT_OPTION_PARENT_COMPONENT");
      let ci = (() => {
        class e {
          constructor(e, t, n, i) {
            (this._element = e),
              (this._changeDetectorRef = t),
              (this._parent = n),
              (this.group = i),
              (this._selected = !1),
              (this._active = !1),
              (this._disabled = !1),
              (this._mostRecentViewValue = ""),
              (this.id = "mat-option-" + oi++),
              (this.onSelectionChange = new r.EventEmitter()),
              (this._stateChanges = new M.a());
          }
          get multiple() {
            return this._parent && this._parent.multiple;
          }
          get selected() {
            return this._selected;
          }
          get disabled() {
            return (this.group && this.group.disabled) || this._disabled;
          }
          set disabled(e) {
            this._disabled = ge(e);
          }
          get disableRipple() {
            return this._parent && this._parent.disableRipple;
          }
          get active() {
            return this._active;
          }
          get viewValue() {
            return (this._getHostElement().textContent || "").trim();
          }
          select() {
            this._selected ||
              ((this._selected = !0),
              this._changeDetectorRef.markForCheck(),
              this._emitSelectionChangeEvent());
          }
          deselect() {
            this._selected &&
              ((this._selected = !1),
              this._changeDetectorRef.markForCheck(),
              this._emitSelectionChangeEvent());
          }
          focus(e, t) {
            const n = this._getHostElement();
            "function" == typeof n.focus && n.focus(t);
          }
          setActiveStyles() {
            this._active ||
              ((this._active = !0), this._changeDetectorRef.markForCheck());
          }
          setInactiveStyles() {
            this._active &&
              ((this._active = !1), this._changeDetectorRef.markForCheck());
          }
          getLabel() {
            return this.viewValue;
          }
          _handleKeydown(e) {
            (13 !== e.keyCode && 32 !== e.keyCode) ||
              H(e) ||
              (this._selectViaInteraction(), e.preventDefault());
          }
          _selectViaInteraction() {
            this.disabled ||
              ((this._selected = !this.multiple || !this._selected),
              this._changeDetectorRef.markForCheck(),
              this._emitSelectionChangeEvent(!0));
          }
          _getAriaSelected() {
            return this.selected || (!this.multiple && null);
          }
          _getTabIndex() {
            return this.disabled ? "-1" : "0";
          }
          _getHostElement() {
            return this._element.nativeElement;
          }
          ngAfterViewChecked() {
            if (this._selected) {
              const e = this.viewValue;
              e !== this._mostRecentViewValue &&
                ((this._mostRecentViewValue = e), this._stateChanges.next());
            }
          }
          ngOnDestroy() {
            this._stateChanges.complete();
          }
          _emitSelectionChangeEvent(e = !1) {
            this.onSelectionChange.emit(new ai(this, e));
          }
        }
        return (
          (e.ɵfac = function (t) {
            return new (t || e)(
              r["\u0275\u0275directiveInject"](r.ElementRef),
              r["\u0275\u0275directiveInject"](r.ChangeDetectorRef),
              r["\u0275\u0275directiveInject"](li, 8),
              r["\u0275\u0275directiveInject"](ii, 8)
            );
          }),
          (e.ɵcmp = r["\u0275\u0275defineComponent"]({
            type: e,
            selectors: [["mat-option"]],
            hostAttrs: [
              "role",
              "option",
              1,
              "mat-option",
              "mat-focus-indicator",
            ],
            hostVars: 12,
            hostBindings: function (e, t) {
              1 & e &&
                r["\u0275\u0275listener"]("click", function () {
                  return t._selectViaInteraction();
                })("keydown", function (e) {
                  return t._handleKeydown(e);
                }),
                2 & e &&
                  (r["\u0275\u0275hostProperty"]("id", t.id),
                  r["\u0275\u0275attribute"]("tabindex", t._getTabIndex())(
                    "aria-selected",
                    t._getAriaSelected()
                  )("aria-disabled", t.disabled.toString()),
                  r["\u0275\u0275classProp"]("mat-selected", t.selected)(
                    "mat-option-multiple",
                    t.multiple
                  )("mat-active", t.active)("mat-option-disabled", t.disabled));
            },
            inputs: { id: "id", disabled: "disabled", value: "value" },
            outputs: { onSelectionChange: "onSelectionChange" },
            exportAs: ["matOption"],
            ngContentSelectors: Tr,
            decls: 4,
            vars: 3,
            consts: [
              [
                "class",
                "mat-option-pseudo-checkbox",
                3,
                "state",
                "disabled",
                4,
                "ngIf",
              ],
              [1, "mat-option-text"],
              [
                "mat-ripple",
                "",
                1,
                "mat-option-ripple",
                3,
                "matRippleTrigger",
                "matRippleDisabled",
              ],
              [1, "mat-option-pseudo-checkbox", 3, "state", "disabled"],
            ],
            template: function (e, t) {
              1 & e &&
                (r["\u0275\u0275projectionDef"](),
                r["\u0275\u0275template"](
                  0,
                  Ar,
                  1,
                  2,
                  "mat-pseudo-checkbox",
                  0
                ),
                r["\u0275\u0275elementStart"](1, "span", 1),
                r["\u0275\u0275projection"](2),
                r["\u0275\u0275elementEnd"](),
                r["\u0275\u0275element"](3, "div", 2)),
                2 & e &&
                  (r["\u0275\u0275property"]("ngIf", t.multiple),
                  r["\u0275\u0275advance"](3),
                  r["\u0275\u0275property"](
                    "matRippleTrigger",
                    t._getHostElement()
                  )("matRippleDisabled", t.disabled || t.disableRipple));
            },
            directives: [i.NgIf, Yr, Jr],
            styles: [
              ".mat-option{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative;cursor:pointer;outline:none;display:flex;flex-direction:row;max-width:100%;box-sizing:border-box;align-items:center;-webkit-tap-highlight-color:transparent}.mat-option[disabled]{cursor:default}[dir=rtl] .mat-option{text-align:right}.mat-option .mat-icon{margin-right:16px;vertical-align:middle}.mat-option .mat-icon svg{vertical-align:top}[dir=rtl] .mat-option .mat-icon{margin-left:16px;margin-right:0}.mat-option[aria-disabled=true]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:32px}[dir=rtl] .mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:16px;padding-right:32px}.cdk-high-contrast-active .mat-option{margin:0 1px}.cdk-high-contrast-active .mat-option.mat-active{border:solid 1px currentColor;margin:0}.mat-option-text{display:inline-block;flex-grow:1;overflow:hidden;text-overflow:ellipsis}.mat-option .mat-option-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.cdk-high-contrast-active .mat-option .mat-option-ripple{opacity:.5}.mat-option-pseudo-checkbox{margin-right:8px}[dir=rtl] .mat-option-pseudo-checkbox{margin-left:8px;margin-right:0}\n",
            ],
            encapsulation: 2,
            changeDetection: 0,
          })),
          e
        );
      })();
      function ui(e, t, n) {
        if (n.length) {
          let r = t.toArray(),
            i = n.toArray(),
            s = 0;
          for (let t = 0; t < e + 1; t++)
            r[t].group && r[t].group === i[s] && s++;
          return s;
        }
        return 0;
      }
      let hi = (() => {
        class e {}
        return (
          (e.ɵmod = r["\u0275\u0275defineNgModule"]({ type: e })),
          (e.ɵinj = r["\u0275\u0275defineInjector"]({
            factory: function (t) {
              return new (t || e)();
            },
            imports: [[Xr, i.CommonModule, ei]],
          })),
          e
        );
      })();
      const di = new r.InjectionToken("mat-label-global-options");
      var fi = n("DH7j"),
        pi = n("XoHu"),
        mi = n("Cfvw");
      function gi(...e) {
        if (1 === e.length) {
          const t = e[0];
          if (Object(fi.a)(t)) return _i(t, null);
          if (
            Object(pi.a)(t) &&
            Object.getPrototypeOf(t) === Object.prototype
          ) {
            const e = Object.keys(t);
            return _i(
              e.map((e) => t[e]),
              e
            );
          }
        }
        if ("function" == typeof e[e.length - 1]) {
          const t = e.pop();
          return _i(
            (e = 1 === e.length && Object(fi.a)(e[0]) ? e[0] : e),
            null
          ).pipe(Object(le.a)((e) => t(...e)));
        }
        return _i(e, null);
      }
      function _i(e, t) {
        return new ue.a((n) => {
          const r = e.length;
          if (0 === r) return void n.complete();
          const i = new Array(r);
          let s = 0,
            o = 0;
          for (let a = 0; a < r; a++) {
            const l = Object(mi.a)(e[a]);
            let c = !1;
            n.add(
              l.subscribe({
                next: (e) => {
                  c || ((c = !0), o++), (i[a] = e);
                },
                error: (e) => n.error(e),
                complete: () => {
                  s++,
                    (s !== r && c) ||
                      (o === r &&
                        n.next(
                          t ? t.reduce((e, t, n) => ((e[t] = i[n]), e), {}) : i
                        ),
                      n.complete());
                },
              })
            );
          }
        });
      }
      var yi = n("l7GE"),
        vi = n("51Dv"),
        bi = n("ZUHj");
      function wi(e) {
        return function (t) {
          const n = new Ci(e),
            r = t.lift(n);
          return (n.caught = r);
        };
      }
      class Ci {
        constructor(e) {
          this.selector = e;
        }
        call(e, t) {
          return t.subscribe(new Si(e, this.selector, this.caught));
        }
      }
      class Si extends yi.a {
        constructor(e, t, n) {
          super(e), (this.selector = t), (this.caught = n);
        }
        error(e) {
          if (!this.isStopped) {
            let n;
            try {
              n = this.selector(e, this.caught);
            } catch (t) {
              return void super.error(t);
            }
            this._unsubscribeAndRecycle();
            const r = new vi.a(this, void 0, void 0);
            this.add(r);
            const i = Object(bi.a)(this, n, void 0, void 0, r);
            i !== r && this.add(i);
          }
        }
      }
      function Ei(e) {
        return (t) => t.lift(new xi(e));
      }
      class xi {
        constructor(e) {
          this.callback = e;
        }
        call(e, t) {
          return t.subscribe(new Di(e, this.callback));
        }
      }
      class Di extends $.a {
        constructor(e, t) {
          super(e), this.add(new L.a(t));
        }
      }
      var Ii = n("w1tV"),
        Oi = n("5+tZ");
      function ki(e, t) {
        return Object(Oi.a)(e, t, 1);
      }
      class Ri {}
      class Ai {}
      class Ti {
        constructor(e) {
          (this.normalizedNames = new Map()),
            (this.lazyUpdate = null),
            e
              ? (this.lazyInit =
                  "string" == typeof e
                    ? () => {
                        (this.headers = new Map()),
                          e.split("\n").forEach((e) => {
                            const t = e.indexOf(":");
                            if (t > 0) {
                              const n = e.slice(0, t),
                                r = n.toLowerCase(),
                                i = e.slice(t + 1).trim();
                              this.maybeSetNormalizedName(n, r),
                                this.headers.has(r)
                                  ? this.headers.get(r).push(i)
                                  : this.headers.set(r, [i]);
                            }
                          });
                      }
                    : () => {
                        (this.headers = new Map()),
                          Object.keys(e).forEach((t) => {
                            let n = e[t];
                            const r = t.toLowerCase();
                            "string" == typeof n && (n = [n]),
                              n.length > 0 &&
                                (this.headers.set(r, n),
                                this.maybeSetNormalizedName(t, r));
                          });
                      })
              : (this.headers = new Map());
        }
        has(e) {
          return this.init(), this.headers.has(e.toLowerCase());
        }
        get(e) {
          this.init();
          const t = this.headers.get(e.toLowerCase());
          return t && t.length > 0 ? t[0] : null;
        }
        keys() {
          return this.init(), Array.from(this.normalizedNames.values());
        }
        getAll(e) {
          return this.init(), this.headers.get(e.toLowerCase()) || null;
        }
        append(e, t) {
          return this.clone({ name: e, value: t, op: "a" });
        }
        set(e, t) {
          return this.clone({ name: e, value: t, op: "s" });
        }
        delete(e, t) {
          return this.clone({ name: e, value: t, op: "d" });
        }
        maybeSetNormalizedName(e, t) {
          this.normalizedNames.has(t) || this.normalizedNames.set(t, e);
        }
        init() {
          this.lazyInit &&
            (this.lazyInit instanceof Ti
              ? this.copyFrom(this.lazyInit)
              : this.lazyInit(),
            (this.lazyInit = null),
            this.lazyUpdate &&
              (this.lazyUpdate.forEach((e) => this.applyUpdate(e)),
              (this.lazyUpdate = null)));
        }
        copyFrom(e) {
          e.init(),
            Array.from(e.headers.keys()).forEach((t) => {
              this.headers.set(t, e.headers.get(t)),
                this.normalizedNames.set(t, e.normalizedNames.get(t));
            });
        }
        clone(e) {
          const t = new Ti();
          return (
            (t.lazyInit =
              this.lazyInit && this.lazyInit instanceof Ti
                ? this.lazyInit
                : this),
            (t.lazyUpdate = (this.lazyUpdate || []).concat([e])),
            t
          );
        }
        applyUpdate(e) {
          const t = e.name.toLowerCase();
          switch (e.op) {
            case "a":
            case "s":
              let n = e.value;
              if (("string" == typeof n && (n = [n]), 0 === n.length)) return;
              this.maybeSetNormalizedName(e.name, t);
              const r = ("a" === e.op ? this.headers.get(t) : void 0) || [];
              r.push(...n), this.headers.set(t, r);
              break;
            case "d":
              const i = e.value;
              if (i) {
                let e = this.headers.get(t);
                if (!e) return;
                (e = e.filter((e) => -1 === i.indexOf(e))),
                  0 === e.length
                    ? (this.headers.delete(t), this.normalizedNames.delete(t))
                    : this.headers.set(t, e);
              } else this.headers.delete(t), this.normalizedNames.delete(t);
          }
        }
        forEach(e) {
          this.init(),
            Array.from(this.normalizedNames.keys()).forEach((t) =>
              e(this.normalizedNames.get(t), this.headers.get(t))
            );
        }
      }
      class Fi {
        encodeKey(e) {
          return Pi(e);
        }
        encodeValue(e) {
          return Pi(e);
        }
        decodeKey(e) {
          return decodeURIComponent(e);
        }
        decodeValue(e) {
          return decodeURIComponent(e);
        }
      }
      function Pi(e) {
        return encodeURIComponent(e)
          .replace(/%40/gi, "@")
          .replace(/%3A/gi, ":")
          .replace(/%24/gi, "$")
          .replace(/%2C/gi, ",")
          .replace(/%3B/gi, ";")
          .replace(/%2B/gi, "+")
          .replace(/%3D/gi, "=")
          .replace(/%3F/gi, "?")
          .replace(/%2F/gi, "/");
      }
      class ji {
        constructor(e = {}) {
          if (
            ((this.updates = null),
            (this.cloneFrom = null),
            (this.encoder = e.encoder || new Fi()),
            e.fromString)
          ) {
            if (e.fromObject)
              throw new Error("Cannot specify both fromString and fromObject.");
            this.map = (function (e, t) {
              const n = new Map();
              return (
                e.length > 0 &&
                  e.split("&").forEach((e) => {
                    const r = e.indexOf("="),
                      [i, s] =
                        -1 == r
                          ? [t.decodeKey(e), ""]
                          : [
                              t.decodeKey(e.slice(0, r)),
                              t.decodeValue(e.slice(r + 1)),
                            ],
                      o = n.get(i) || [];
                    o.push(s), n.set(i, o);
                  }),
                n
              );
            })(e.fromString, this.encoder);
          } else
            e.fromObject
              ? ((this.map = new Map()),
                Object.keys(e.fromObject).forEach((t) => {
                  const n = e.fromObject[t];
                  this.map.set(t, Array.isArray(n) ? n : [n]);
                }))
              : (this.map = null);
        }
        has(e) {
          return this.init(), this.map.has(e);
        }
        get(e) {
          this.init();
          const t = this.map.get(e);
          return t ? t[0] : null;
        }
        getAll(e) {
          return this.init(), this.map.get(e) || null;
        }
        keys() {
          return this.init(), Array.from(this.map.keys());
        }
        append(e, t) {
          return this.clone({ param: e, value: t, op: "a" });
        }
        set(e, t) {
          return this.clone({ param: e, value: t, op: "s" });
        }
        delete(e, t) {
          return this.clone({ param: e, value: t, op: "d" });
        }
        toString() {
          return (
            this.init(),
            this.keys()
              .map((e) => {
                const t = this.encoder.encodeKey(e);
                return this.map
                  .get(e)
                  .map((e) => t + "=" + this.encoder.encodeValue(e))
                  .join("&");
              })
              .filter((e) => "" !== e)
              .join("&")
          );
        }
        clone(e) {
          const t = new ji({ encoder: this.encoder });
          return (
            (t.cloneFrom = this.cloneFrom || this),
            (t.updates = (this.updates || []).concat([e])),
            t
          );
        }
        init() {
          null === this.map && (this.map = new Map()),
            null !== this.cloneFrom &&
              (this.cloneFrom.init(),
              this.cloneFrom
                .keys()
                .forEach((e) => this.map.set(e, this.cloneFrom.map.get(e))),
              this.updates.forEach((e) => {
                switch (e.op) {
                  case "a":
                  case "s":
                    const t =
                      ("a" === e.op ? this.map.get(e.param) : void 0) || [];
                    t.push(e.value), this.map.set(e.param, t);
                    break;
                  case "d":
                    if (void 0 === e.value) {
                      this.map.delete(e.param);
                      break;
                    }
                    {
                      let t = this.map.get(e.param) || [];
                      const n = t.indexOf(e.value);
                      -1 !== n && t.splice(n, 1),
                        t.length > 0
                          ? this.map.set(e.param, t)
                          : this.map.delete(e.param);
                    }
                }
              }),
              (this.cloneFrom = this.updates = null));
        }
      }
      function Ni(e) {
        return "undefined" != typeof ArrayBuffer && e instanceof ArrayBuffer;
      }
      function Mi(e) {
        return "undefined" != typeof Blob && e instanceof Blob;
      }
      function Li(e) {
        return "undefined" != typeof FormData && e instanceof FormData;
      }
      class Vi {
        constructor(e, t, n, r) {
          let i;
          if (
            ((this.url = t),
            (this.body = null),
            (this.reportProgress = !1),
            (this.withCredentials = !1),
            (this.responseType = "json"),
            (this.method = e.toUpperCase()),
            (function (e) {
              switch (e) {
                case "DELETE":
                case "GET":
                case "HEAD":
                case "OPTIONS":
                case "JSONP":
                  return !1;
                default:
                  return !0;
              }
            })(this.method) || r
              ? ((this.body = void 0 !== n ? n : null), (i = r))
              : (i = n),
            i &&
              ((this.reportProgress = !!i.reportProgress),
              (this.withCredentials = !!i.withCredentials),
              i.responseType && (this.responseType = i.responseType),
              i.headers && (this.headers = i.headers),
              i.params && (this.params = i.params)),
            this.headers || (this.headers = new Ti()),
            this.params)
          ) {
            const e = this.params.toString();
            if (0 === e.length) this.urlWithParams = t;
            else {
              const n = t.indexOf("?");
              this.urlWithParams =
                t + (-1 === n ? "?" : n < t.length - 1 ? "&" : "") + e;
            }
          } else (this.params = new ji()), (this.urlWithParams = t);
        }
        serializeBody() {
          return null === this.body
            ? null
            : Ni(this.body) ||
              Mi(this.body) ||
              Li(this.body) ||
              "string" == typeof this.body
            ? this.body
            : this.body instanceof ji
            ? this.body.toString()
            : "object" == typeof this.body ||
              "boolean" == typeof this.body ||
              Array.isArray(this.body)
            ? JSON.stringify(this.body)
            : this.body.toString();
        }
        detectContentTypeHeader() {
          return null === this.body || Li(this.body)
            ? null
            : Mi(this.body)
            ? this.body.type || null
            : Ni(this.body)
            ? null
            : "string" == typeof this.body
            ? "text/plain"
            : this.body instanceof ji
            ? "application/x-www-form-urlencoded;charset=UTF-8"
            : "object" == typeof this.body ||
              "number" == typeof this.body ||
              Array.isArray(this.body)
            ? "application/json"
            : null;
        }
        clone(e = {}) {
          const t = e.method || this.method,
            n = e.url || this.url,
            r = e.responseType || this.responseType,
            i = void 0 !== e.body ? e.body : this.body,
            s =
              void 0 !== e.withCredentials
                ? e.withCredentials
                : this.withCredentials,
            o =
              void 0 !== e.reportProgress
                ? e.reportProgress
                : this.reportProgress;
          let a = e.headers || this.headers,
            l = e.params || this.params;
          return (
            void 0 !== e.setHeaders &&
              (a = Object.keys(e.setHeaders).reduce(
                (t, n) => t.set(n, e.setHeaders[n]),
                a
              )),
            e.setParams &&
              (l = Object.keys(e.setParams).reduce(
                (t, n) => t.set(n, e.setParams[n]),
                l
              )),
            new Vi(t, n, i, {
              params: l,
              headers: a,
              reportProgress: o,
              responseType: r,
              withCredentials: s,
            })
          );
        }
      }
      const Bi = (function () {
        var e = {
          Sent: 0,
          UploadProgress: 1,
          ResponseHeader: 2,
          DownloadProgress: 3,
          Response: 4,
          User: 5,
        };
        return (
          (e[e.Sent] = "Sent"),
          (e[e.UploadProgress] = "UploadProgress"),
          (e[e.ResponseHeader] = "ResponseHeader"),
          (e[e.DownloadProgress] = "DownloadProgress"),
          (e[e.Response] = "Response"),
          (e[e.User] = "User"),
          e
        );
      })();
      class zi {
        constructor(e, t = 200, n = "OK") {
          (this.headers = e.headers || new Ti()),
            (this.status = void 0 !== e.status ? e.status : t),
            (this.statusText = e.statusText || n),
            (this.url = e.url || null),
            (this.ok = this.status >= 200 && this.status < 300);
        }
      }
      class Ui extends zi {
        constructor(e = {}) {
          super(e), (this.type = Bi.ResponseHeader);
        }
        clone(e = {}) {
          return new Ui({
            headers: e.headers || this.headers,
            status: void 0 !== e.status ? e.status : this.status,
            statusText: e.statusText || this.statusText,
            url: e.url || this.url || void 0,
          });
        }
      }
      class Hi extends zi {
        constructor(e = {}) {
          super(e),
            (this.type = Bi.Response),
            (this.body = void 0 !== e.body ? e.body : null);
        }
        clone(e = {}) {
          return new Hi({
            body: void 0 !== e.body ? e.body : this.body,
            headers: e.headers || this.headers,
            status: void 0 !== e.status ? e.status : this.status,
            statusText: e.statusText || this.statusText,
            url: e.url || this.url || void 0,
          });
        }
      }
      class $i extends zi {
        constructor(e) {
          super(e, 0, "Unknown Error"),
            (this.name = "HttpErrorResponse"),
            (this.ok = !1),
            (this.message =
              this.status >= 200 && this.status < 300
                ? "Http failure during parsing for " +
                  (e.url || "(unknown url)")
                : `Http failure response for ${e.url || "(unknown url)"}: ${
                    e.status
                  } ${e.statusText}`),
            (this.error = e.error || null);
        }
      }
      function qi(e, t) {
        return {
          body: t,
          headers: e.headers,
          observe: e.observe,
          params: e.params,
          reportProgress: e.reportProgress,
          responseType: e.responseType,
          withCredentials: e.withCredentials,
        };
      }
      let Gi = (() => {
        class e {
          constructor(e) {
            this.handler = e;
          }
          request(e, t, n = {}) {
            let r;
            if (e instanceof Vi) r = e;
            else {
              let i = void 0;
              i = n.headers instanceof Ti ? n.headers : new Ti(n.headers);
              let s = void 0;
              n.params &&
                (s =
                  n.params instanceof ji
                    ? n.params
                    : new ji({ fromObject: n.params })),
                (r = new Vi(e, t, void 0 !== n.body ? n.body : null, {
                  headers: i,
                  params: s,
                  reportProgress: n.reportProgress,
                  responseType: n.responseType || "json",
                  withCredentials: n.withCredentials,
                }));
            }
            const i = U(r).pipe(ki((e) => this.handler.handle(e)));
            if (e instanceof Vi || "events" === n.observe) return i;
            const s = i.pipe(se((e) => e instanceof Hi));
            switch (n.observe || "body") {
              case "body":
                switch (r.responseType) {
                  case "arraybuffer":
                    return s.pipe(
                      Object(le.a)((e) => {
                        if (null !== e.body && !(e.body instanceof ArrayBuffer))
                          throw new Error("Response is not an ArrayBuffer.");
                        return e.body;
                      })
                    );
                  case "blob":
                    return s.pipe(
                      Object(le.a)((e) => {
                        if (null !== e.body && !(e.body instanceof Blob))
                          throw new Error("Response is not a Blob.");
                        return e.body;
                      })
                    );
                  case "text":
                    return s.pipe(
                      Object(le.a)((e) => {
                        if (null !== e.body && "string" != typeof e.body)
                          throw new Error("Response is not a string.");
                        return e.body;
                      })
                    );
                  case "json":
                  default:
                    return s.pipe(Object(le.a)((e) => e.body));
                }
              case "response":
                return s;
              default:
                throw new Error(
                  `Unreachable: unhandled observe type ${n.observe}}`
                );
            }
          }
          delete(e, t = {}) {
            return this.request("DELETE", e, t);
          }
          get(e, t = {}) {
            return this.request("GET", e, t);
          }
          head(e, t = {}) {
            return this.request("HEAD", e, t);
          }
          jsonp(e, t) {
            return this.request("JSONP", e, {
              params: new ji().append(t, "JSONP_CALLBACK"),
              observe: "body",
              responseType: "json",
            });
          }
          options(e, t = {}) {
            return this.request("OPTIONS", e, t);
          }
          patch(e, t, n = {}) {
            return this.request("PATCH", e, qi(n, t));
          }
          post(e, t, n = {}) {
            return this.request("POST", e, qi(n, t));
          }
          put(e, t, n = {}) {
            return this.request("PUT", e, qi(n, t));
          }
        }
        return (
          (e.ɵfac = function (t) {
            return new (t || e)(r["\u0275\u0275inject"](Ri));
          }),
          (e.ɵprov = r["\u0275\u0275defineInjectable"]({
            token: e,
            factory: e.ɵfac,
          })),
          e
        );
      })();
      class Wi {
        constructor(e, t) {
          (this.next = e), (this.interceptor = t);
        }
        handle(e) {
          return this.interceptor.intercept(e, this.next);
        }
      }
      const Qi = new r.InjectionToken("HTTP_INTERCEPTORS");
      let Ki = (() => {
        class e {
          intercept(e, t) {
            return t.handle(e);
          }
        }
        return (
          (e.ɵfac = function (t) {
            return new (t || e)();
          }),
          (e.ɵprov = r["\u0275\u0275defineInjectable"]({
            token: e,
            factory: e.ɵfac,
          })),
          e
        );
      })();
      const Zi = /^\)\]\}',?\n/;
      class Yi {}
      let Xi = (() => {
          class e {
            constructor() {}
            build() {
              return new XMLHttpRequest();
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)();
            }),
            (e.ɵprov = r["\u0275\u0275defineInjectable"]({
              token: e,
              factory: e.ɵfac,
            })),
            e
          );
        })(),
        Ji = (() => {
          class e {
            constructor(e) {
              this.xhrFactory = e;
            }
            handle(e) {
              if ("JSONP" === e.method)
                throw new Error(
                  "Attempted to construct Jsonp request without JsonpClientModule installed."
                );
              return new ue.a((t) => {
                const n = this.xhrFactory.build();
                if (
                  (n.open(e.method, e.urlWithParams),
                  e.withCredentials && (n.withCredentials = !0),
                  e.headers.forEach((e, t) =>
                    n.setRequestHeader(e, t.join(","))
                  ),
                  e.headers.has("Accept") ||
                    n.setRequestHeader(
                      "Accept",
                      "application/json, text/plain, */*"
                    ),
                  !e.headers.has("Content-Type"))
                ) {
                  const t = e.detectContentTypeHeader();
                  null !== t && n.setRequestHeader("Content-Type", t);
                }
                if (e.responseType) {
                  const t = e.responseType.toLowerCase();
                  n.responseType = "json" !== t ? t : "text";
                }
                const r = e.serializeBody();
                let i = null;
                const s = () => {
                    if (null !== i) return i;
                    const t = 1223 === n.status ? 204 : n.status,
                      r = n.statusText || "OK",
                      s = new Ti(n.getAllResponseHeaders()),
                      o =
                        (function (e) {
                          return "responseURL" in e && e.responseURL
                            ? e.responseURL
                            : /^X-Request-URL:/m.test(e.getAllResponseHeaders())
                            ? e.getResponseHeader("X-Request-URL")
                            : null;
                        })(n) || e.url;
                    return (
                      (i = new Ui({
                        headers: s,
                        status: t,
                        statusText: r,
                        url: o,
                      })),
                      i
                    );
                  },
                  o = () => {
                    let { headers: r, status: i, statusText: o, url: a } = s(),
                      l = null;
                    204 !== i &&
                      (l = void 0 === n.response ? n.responseText : n.response),
                      0 === i && (i = l ? 200 : 0);
                    let c = i >= 200 && i < 300;
                    if ("json" === e.responseType && "string" == typeof l) {
                      const e = l;
                      l = l.replace(Zi, "");
                      try {
                        l = "" !== l ? JSON.parse(l) : null;
                      } catch (u) {
                        (l = e), c && ((c = !1), (l = { error: u, text: l }));
                      }
                    }
                    c
                      ? (t.next(
                          new Hi({
                            body: l,
                            headers: r,
                            status: i,
                            statusText: o,
                            url: a || void 0,
                          })
                        ),
                        t.complete())
                      : t.error(
                          new $i({
                            error: l,
                            headers: r,
                            status: i,
                            statusText: o,
                            url: a || void 0,
                          })
                        );
                  },
                  a = (e) => {
                    const { url: r } = s(),
                      i = new $i({
                        error: e,
                        status: n.status || 0,
                        statusText: n.statusText || "Unknown Error",
                        url: r || void 0,
                      });
                    t.error(i);
                  };
                let l = !1;
                const c = (r) => {
                    l || (t.next(s()), (l = !0));
                    let i = { type: Bi.DownloadProgress, loaded: r.loaded };
                    r.lengthComputable && (i.total = r.total),
                      "text" === e.responseType &&
                        n.responseText &&
                        (i.partialText = n.responseText),
                      t.next(i);
                  },
                  u = (e) => {
                    let n = { type: Bi.UploadProgress, loaded: e.loaded };
                    e.lengthComputable && (n.total = e.total), t.next(n);
                  };
                return (
                  n.addEventListener("load", o),
                  n.addEventListener("error", a),
                  e.reportProgress &&
                    (n.addEventListener("progress", c),
                    null !== r &&
                      n.upload &&
                      n.upload.addEventListener("progress", u)),
                  n.send(r),
                  t.next({ type: Bi.Sent }),
                  () => {
                    n.removeEventListener("error", a),
                      n.removeEventListener("load", o),
                      e.reportProgress &&
                        (n.removeEventListener("progress", c),
                        null !== r &&
                          n.upload &&
                          n.upload.removeEventListener("progress", u)),
                      n.abort();
                  }
                );
              });
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(r["\u0275\u0275inject"](Yi));
            }),
            (e.ɵprov = r["\u0275\u0275defineInjectable"]({
              token: e,
              factory: e.ɵfac,
            })),
            e
          );
        })();
      const es = new r.InjectionToken("XSRF_COOKIE_NAME"),
        ts = new r.InjectionToken("XSRF_HEADER_NAME");
      class ns {}
      let rs = (() => {
          class e {
            constructor(e, t, n) {
              (this.doc = e),
                (this.platform = t),
                (this.cookieName = n),
                (this.lastCookieString = ""),
                (this.lastToken = null),
                (this.parseCount = 0);
            }
            getToken() {
              if ("server" === this.platform) return null;
              const e = this.doc.cookie || "";
              return (
                e !== this.lastCookieString &&
                  (this.parseCount++,
                  (this.lastToken = Object(i["\u0275parseCookieValue"])(
                    e,
                    this.cookieName
                  )),
                  (this.lastCookieString = e)),
                this.lastToken
              );
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(
                r["\u0275\u0275inject"](i.DOCUMENT),
                r["\u0275\u0275inject"](r.PLATFORM_ID),
                r["\u0275\u0275inject"](es)
              );
            }),
            (e.ɵprov = r["\u0275\u0275defineInjectable"]({
              token: e,
              factory: e.ɵfac,
            })),
            e
          );
        })(),
        is = (() => {
          class e {
            constructor(e, t) {
              (this.tokenService = e), (this.headerName = t);
            }
            intercept(e, t) {
              const n = e.url.toLowerCase();
              if (
                "GET" === e.method ||
                "HEAD" === e.method ||
                n.startsWith("http://") ||
                n.startsWith("https://")
              )
                return t.handle(e);
              const r = this.tokenService.getToken();
              return (
                null === r ||
                  e.headers.has(this.headerName) ||
                  (e = e.clone({ headers: e.headers.set(this.headerName, r) })),
                t.handle(e)
              );
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(
                r["\u0275\u0275inject"](ns),
                r["\u0275\u0275inject"](ts)
              );
            }),
            (e.ɵprov = r["\u0275\u0275defineInjectable"]({
              token: e,
              factory: e.ɵfac,
            })),
            e
          );
        })(),
        ss = (() => {
          class e {
            constructor(e, t) {
              (this.backend = e), (this.injector = t), (this.chain = null);
            }
            handle(e) {
              if (null === this.chain) {
                const e = this.injector.get(Qi, []);
                this.chain = e.reduceRight(
                  (e, t) => new Wi(e, t),
                  this.backend
                );
              }
              return this.chain.handle(e);
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(
                r["\u0275\u0275inject"](Ai),
                r["\u0275\u0275inject"](r.Injector)
              );
            }),
            (e.ɵprov = r["\u0275\u0275defineInjectable"]({
              token: e,
              factory: e.ɵfac,
            })),
            e
          );
        })(),
        os = (() => {
          class e {
            static disable() {
              return {
                ngModule: e,
                providers: [{ provide: is, useClass: Ki }],
              };
            }
            static withOptions(t = {}) {
              return {
                ngModule: e,
                providers: [
                  t.cookieName ? { provide: es, useValue: t.cookieName } : [],
                  t.headerName ? { provide: ts, useValue: t.headerName } : [],
                ],
              };
            }
          }
          return (
            (e.ɵmod = r["\u0275\u0275defineNgModule"]({ type: e })),
            (e.ɵinj = r["\u0275\u0275defineInjector"]({
              factory: function (t) {
                return new (t || e)();
              },
              providers: [
                is,
                { provide: Qi, useExisting: is, multi: !0 },
                { provide: ns, useClass: rs },
                { provide: es, useValue: "XSRF-TOKEN" },
                { provide: ts, useValue: "X-XSRF-TOKEN" },
              ],
            })),
            e
          );
        })(),
        as = (() => {
          class e {}
          return (
            (e.ɵmod = r["\u0275\u0275defineNgModule"]({ type: e })),
            (e.ɵinj = r["\u0275\u0275defineInjector"]({
              factory: function (t) {
                return new (t || e)();
              },
              providers: [
                Gi,
                { provide: Ri, useClass: ss },
                Ji,
                { provide: Ai, useExisting: Ji },
                Xi,
                { provide: Yi, useExisting: Xi },
              ],
              imports: [
                [
                  os.withOptions({
                    cookieName: "XSRF-TOKEN",
                    headerName: "X-XSRF-TOKEN",
                  }),
                ],
              ],
            })),
            e
          );
        })();
      const ls = ["*"];
      function cs(e) {
        return Error(`Unable to find icon with the name "${e}"`);
      }
      function us(e) {
        return Error(
          `The URL provided to MatIconRegistry was not trusted as a resource URL via Angular's DomSanitizer. Attempted URL was "${e}".`
        );
      }
      function hs(e) {
        return Error(
          `The literal provided to MatIconRegistry was not trusted as safe HTML by Angular's DomSanitizer. Attempted literal was "${e}".`
        );
      }
      class ds {
        constructor(e, t) {
          (this.options = t),
            e.nodeName ? (this.svgElement = e) : (this.url = e);
        }
      }
      let fs = (() => {
        class e {
          constructor(e, t, n, r) {
            (this._httpClient = e),
              (this._sanitizer = t),
              (this._errorHandler = r),
              (this._svgIconConfigs = new Map()),
              (this._iconSetConfigs = new Map()),
              (this._cachedIconsByUrl = new Map()),
              (this._inProgressUrlFetches = new Map()),
              (this._fontCssClassesByAlias = new Map()),
              (this._defaultFontSetClass = "material-icons"),
              (this._document = n);
          }
          addSvgIcon(e, t, n) {
            return this.addSvgIconInNamespace("", e, t, n);
          }
          addSvgIconLiteral(e, t, n) {
            return this.addSvgIconLiteralInNamespace("", e, t, n);
          }
          addSvgIconInNamespace(e, t, n, r) {
            return this._addSvgIconConfig(e, t, new ds(n, r));
          }
          addSvgIconLiteralInNamespace(e, t, n, i) {
            const s = this._sanitizer.sanitize(r.SecurityContext.HTML, n);
            if (!s) throw hs(n);
            const o = this._createSvgElementForSingleIcon(s, i);
            return this._addSvgIconConfig(e, t, new ds(o, i));
          }
          addSvgIconSet(e, t) {
            return this.addSvgIconSetInNamespace("", e, t);
          }
          addSvgIconSetLiteral(e, t) {
            return this.addSvgIconSetLiteralInNamespace("", e, t);
          }
          addSvgIconSetInNamespace(e, t, n) {
            return this._addSvgIconSetConfig(e, new ds(t, n));
          }
          addSvgIconSetLiteralInNamespace(e, t, n) {
            const i = this._sanitizer.sanitize(r.SecurityContext.HTML, t);
            if (!i) throw hs(t);
            const s = this._svgElementFromString(i);
            return this._addSvgIconSetConfig(e, new ds(s, n));
          }
          registerFontClassAlias(e, t = e) {
            return this._fontCssClassesByAlias.set(e, t), this;
          }
          classNameForFontAlias(e) {
            return this._fontCssClassesByAlias.get(e) || e;
          }
          setDefaultFontSetClass(e) {
            return (this._defaultFontSetClass = e), this;
          }
          getDefaultFontSetClass() {
            return this._defaultFontSetClass;
          }
          getSvgIconFromUrl(e) {
            const t = this._sanitizer.sanitize(
              r.SecurityContext.RESOURCE_URL,
              e
            );
            if (!t) throw us(e);
            const n = this._cachedIconsByUrl.get(t);
            return n
              ? U(ps(n))
              : this._loadSvgIconFromConfig(new ds(e)).pipe(
                  W((e) => this._cachedIconsByUrl.set(t, e)),
                  Object(le.a)((e) => ps(e))
                );
          }
          getNamedSvgIcon(e, t = "") {
            const n = ms(t, e),
              r = this._svgIconConfigs.get(n);
            if (r) return this._getSvgFromConfig(r);
            const i = this._iconSetConfigs.get(t);
            return i
              ? this._getSvgFromIconSetConfigs(e, i)
              : ((s = cs(n)), new ue.a((e) => e.error(s)));
            var s;
          }
          ngOnDestroy() {
            this._svgIconConfigs.clear(),
              this._iconSetConfigs.clear(),
              this._cachedIconsByUrl.clear();
          }
          _getSvgFromConfig(e) {
            return e.svgElement
              ? U(ps(e.svgElement))
              : this._loadSvgIconFromConfig(e).pipe(
                  W((t) => (e.svgElement = t)),
                  Object(le.a)((e) => ps(e))
                );
          }
          _getSvgFromIconSetConfigs(e, t) {
            const n = this._extractIconWithNameFromAnySet(e, t);
            return n
              ? U(n)
              : gi(
                  t
                    .filter((e) => !e.svgElement)
                    .map((e) =>
                      this._loadSvgIconSetFromConfig(e).pipe(
                        wi((t) => {
                          const n = `Loading icon set URL: ${this._sanitizer.sanitize(
                            r.SecurityContext.RESOURCE_URL,
                            e.url
                          )} failed: ${t.message}`;
                          return (
                            this._errorHandler
                              ? this._errorHandler.handleError(new Error(n))
                              : console.error(n),
                            U(null)
                          );
                        })
                      )
                    )
                ).pipe(
                  Object(le.a)(() => {
                    const n = this._extractIconWithNameFromAnySet(e, t);
                    if (!n) throw cs(e);
                    return n;
                  })
                );
          }
          _extractIconWithNameFromAnySet(e, t) {
            for (let n = t.length - 1; n >= 0; n--) {
              const r = t[n];
              if (r.svgElement) {
                const t = this._extractSvgIconFromSet(
                  r.svgElement,
                  e,
                  r.options
                );
                if (t) return t;
              }
            }
            return null;
          }
          _loadSvgIconFromConfig(e) {
            return this._fetchUrl(e.url).pipe(
              Object(le.a)((t) =>
                this._createSvgElementForSingleIcon(t, e.options)
              )
            );
          }
          _loadSvgIconSetFromConfig(e) {
            return e.svgElement
              ? U(e.svgElement)
              : this._fetchUrl(e.url).pipe(
                  Object(le.a)(
                    (t) => (
                      e.svgElement ||
                        (e.svgElement = this._svgElementFromString(t)),
                      e.svgElement
                    )
                  )
                );
          }
          _createSvgElementForSingleIcon(e, t) {
            const n = this._svgElementFromString(e);
            return this._setSvgAttributes(n, t), n;
          }
          _extractSvgIconFromSet(e, t, n) {
            const r = e.querySelector(`[id="${t}"]`);
            if (!r) return null;
            const i = r.cloneNode(!0);
            if ((i.removeAttribute("id"), "svg" === i.nodeName.toLowerCase()))
              return this._setSvgAttributes(i, n);
            if ("symbol" === i.nodeName.toLowerCase())
              return this._setSvgAttributes(this._toSvgElement(i), n);
            const s = this._svgElementFromString("<svg></svg>");
            return s.appendChild(i), this._setSvgAttributes(s, n);
          }
          _svgElementFromString(e) {
            const t = this._document.createElement("DIV");
            t.innerHTML = e;
            const n = t.querySelector("svg");
            if (!n) throw Error("<svg> tag not found");
            return n;
          }
          _toSvgElement(e) {
            const t = this._svgElementFromString("<svg></svg>"),
              n = e.attributes;
            for (let r = 0; r < n.length; r++) {
              const { name: e, value: i } = n[r];
              "id" !== e && t.setAttribute(e, i);
            }
            for (let r = 0; r < e.childNodes.length; r++)
              e.childNodes[r].nodeType === this._document.ELEMENT_NODE &&
                t.appendChild(e.childNodes[r].cloneNode(!0));
            return t;
          }
          _setSvgAttributes(e, t) {
            return (
              e.setAttribute("fit", ""),
              e.setAttribute("height", "100%"),
              e.setAttribute("width", "100%"),
              e.setAttribute("preserveAspectRatio", "xMidYMid meet"),
              e.setAttribute("focusable", "false"),
              t && t.viewBox && e.setAttribute("viewBox", t.viewBox),
              e
            );
          }
          _fetchUrl(e) {
            if (!this._httpClient)
              throw Error(
                "Could not find HttpClient provider for use with Angular Material icons. Please include the HttpClientModule from @angular/common/http in your app imports."
              );
            if (null == e) throw Error(`Cannot fetch icon from URL "${e}".`);
            const t = this._sanitizer.sanitize(
              r.SecurityContext.RESOURCE_URL,
              e
            );
            if (!t) throw us(e);
            const n = this._inProgressUrlFetches.get(t);
            if (n) return n;
            const i = this._httpClient.get(t, { responseType: "text" }).pipe(
              Ei(() => this._inProgressUrlFetches.delete(t)),
              Object(Ii.a)()
            );
            return this._inProgressUrlFetches.set(t, i), i;
          }
          _addSvgIconConfig(e, t, n) {
            return this._svgIconConfigs.set(ms(e, t), n), this;
          }
          _addSvgIconSetConfig(e, t) {
            const n = this._iconSetConfigs.get(e);
            return n ? n.push(t) : this._iconSetConfigs.set(e, [t]), this;
          }
        }
        return (
          (e.ɵfac = function (t) {
            return new (t || e)(
              r["\u0275\u0275inject"](Gi, 8),
              r["\u0275\u0275inject"](A),
              r["\u0275\u0275inject"](i.DOCUMENT, 8),
              r["\u0275\u0275inject"](r.ErrorHandler, 8)
            );
          }),
          (e.ɵprov = Object(r["\u0275\u0275defineInjectable"])({
            factory: function () {
              return new e(
                Object(r["\u0275\u0275inject"])(Gi, 8),
                Object(r["\u0275\u0275inject"])(A),
                Object(r["\u0275\u0275inject"])(i.DOCUMENT, 8),
                Object(r["\u0275\u0275inject"])(r.ErrorHandler, 8)
              );
            },
            token: e,
            providedIn: "root",
          })),
          e
        );
      })();
      function ps(e) {
        return e.cloneNode(!0);
      }
      function ms(e, t) {
        return e + ":" + t;
      }
      class gs {
        constructor(e) {
          this._elementRef = e;
        }
      }
      const _s = Lr(gs),
        ys = new r.InjectionToken("mat-icon-location", {
          providedIn: "root",
          factory: function () {
            const e = Object(r.inject)(i.DOCUMENT),
              t = e ? e.location : null;
            return { getPathname: () => (t ? t.pathname + t.search : "") };
          },
        }),
        vs = [
          "clip-path",
          "color-profile",
          "src",
          "cursor",
          "fill",
          "filter",
          "marker",
          "marker-start",
          "marker-mid",
          "marker-end",
          "mask",
          "stroke",
        ],
        bs = vs.map((e) => `[${e}]`).join(", "),
        ws = /^url\(['"]?#(.*?)['"]?\)$/;
      let Cs = (() => {
          class e extends _s {
            constructor(e, t, n, r, i) {
              super(e),
                (this._iconRegistry = t),
                (this._location = r),
                (this._errorHandler = i),
                (this._inline = !1),
                (this._currentIconFetch = L.a.EMPTY),
                n || e.nativeElement.setAttribute("aria-hidden", "true");
            }
            get inline() {
              return this._inline;
            }
            set inline(e) {
              this._inline = ge(e);
            }
            get fontSet() {
              return this._fontSet;
            }
            set fontSet(e) {
              this._fontSet = this._cleanupFontValue(e);
            }
            get fontIcon() {
              return this._fontIcon;
            }
            set fontIcon(e) {
              this._fontIcon = this._cleanupFontValue(e);
            }
            _splitIconName(e) {
              if (!e) return ["", ""];
              const t = e.split(":");
              switch (t.length) {
                case 1:
                  return ["", t[0]];
                case 2:
                  return t;
                default:
                  throw Error(`Invalid icon name: "${e}"`);
              }
            }
            ngOnChanges(e) {
              const t = e.svgIcon;
              if (t)
                if ((this._currentIconFetch.unsubscribe(), this.svgIcon)) {
                  const [e, t] = this._splitIconName(this.svgIcon);
                  this._currentIconFetch = this._iconRegistry
                    .getNamedSvgIcon(t, e)
                    .pipe(fe(1))
                    .subscribe(
                      (e) => this._setSvgElement(e),
                      (n) => {
                        const r = `Error retrieving icon ${e}:${t}! ${n.message}`;
                        this._errorHandler
                          ? this._errorHandler.handleError(new Error(r))
                          : console.error(r);
                      }
                    );
                } else t.previousValue && this._clearSvgElement();
              this._usingFontIcon() && this._updateFontIconClasses();
            }
            ngOnInit() {
              this._usingFontIcon() && this._updateFontIconClasses();
            }
            ngAfterViewChecked() {
              const e = this._elementsWithExternalReferences;
              if (e && this._location && e.size) {
                const e = this._location.getPathname();
                e !== this._previousPath &&
                  ((this._previousPath = e), this._prependPathToReferences(e));
              }
            }
            ngOnDestroy() {
              this._currentIconFetch.unsubscribe(),
                this._elementsWithExternalReferences &&
                  this._elementsWithExternalReferences.clear();
            }
            _usingFontIcon() {
              return !this.svgIcon;
            }
            _setSvgElement(e) {
              this._clearSvgElement();
              const t = e.querySelectorAll("style");
              for (let n = 0; n < t.length; n++) t[n].textContent += " ";
              if (this._location) {
                const t = this._location.getPathname();
                (this._previousPath = t),
                  this._cacheChildrenWithExternalReferences(e),
                  this._prependPathToReferences(t);
              }
              this._elementRef.nativeElement.appendChild(e);
            }
            _clearSvgElement() {
              const e = this._elementRef.nativeElement;
              let t = e.childNodes.length;
              for (
                this._elementsWithExternalReferences &&
                this._elementsWithExternalReferences.clear();
                t--;

              ) {
                const n = e.childNodes[t];
                (1 === n.nodeType && "svg" !== n.nodeName.toLowerCase()) ||
                  e.removeChild(n);
              }
            }
            _updateFontIconClasses() {
              if (!this._usingFontIcon()) return;
              const e = this._elementRef.nativeElement,
                t = this.fontSet
                  ? this._iconRegistry.classNameForFontAlias(this.fontSet)
                  : this._iconRegistry.getDefaultFontSetClass();
              t != this._previousFontSetClass &&
                (this._previousFontSetClass &&
                  e.classList.remove(this._previousFontSetClass),
                t && e.classList.add(t),
                (this._previousFontSetClass = t)),
                this.fontIcon != this._previousFontIconClass &&
                  (this._previousFontIconClass &&
                    e.classList.remove(this._previousFontIconClass),
                  this.fontIcon && e.classList.add(this.fontIcon),
                  (this._previousFontIconClass = this.fontIcon));
            }
            _cleanupFontValue(e) {
              return "string" == typeof e ? e.trim().split(" ")[0] : e;
            }
            _prependPathToReferences(e) {
              const t = this._elementsWithExternalReferences;
              t &&
                t.forEach((t, n) => {
                  t.forEach((t) => {
                    n.setAttribute(t.name, `url('${e}#${t.value}')`);
                  });
                });
            }
            _cacheChildrenWithExternalReferences(e) {
              const t = e.querySelectorAll(bs),
                n = (this._elementsWithExternalReferences =
                  this._elementsWithExternalReferences || new Map());
              for (let r = 0; r < t.length; r++)
                vs.forEach((e) => {
                  const i = t[r],
                    s = i.getAttribute(e),
                    o = s ? s.match(ws) : null;
                  if (o) {
                    let t = n.get(i);
                    t || ((t = []), n.set(i, t)),
                      t.push({ name: e, value: o[1] });
                  }
                });
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(
                r["\u0275\u0275directiveInject"](r.ElementRef),
                r["\u0275\u0275directiveInject"](fs),
                r["\u0275\u0275injectAttribute"]("aria-hidden"),
                r["\u0275\u0275directiveInject"](ys, 8),
                r["\u0275\u0275directiveInject"](r.ErrorHandler, 8)
              );
            }),
            (e.ɵcmp = r["\u0275\u0275defineComponent"]({
              type: e,
              selectors: [["mat-icon"]],
              hostAttrs: ["role", "img", 1, "mat-icon", "notranslate"],
              hostVars: 4,
              hostBindings: function (e, t) {
                2 & e &&
                  r["\u0275\u0275classProp"]("mat-icon-inline", t.inline)(
                    "mat-icon-no-color",
                    "primary" !== t.color &&
                      "accent" !== t.color &&
                      "warn" !== t.color
                  );
              },
              inputs: {
                color: "color",
                inline: "inline",
                fontSet: "fontSet",
                fontIcon: "fontIcon",
                svgIcon: "svgIcon",
              },
              exportAs: ["matIcon"],
              features: [
                r["\u0275\u0275InheritDefinitionFeature"],
                r["\u0275\u0275NgOnChangesFeature"],
              ],
              ngContentSelectors: ls,
              decls: 1,
              vars: 0,
              template: function (e, t) {
                1 & e &&
                  (r["\u0275\u0275projectionDef"](),
                  r["\u0275\u0275projection"](0));
              },
              styles: [
                ".mat-icon{background-repeat:no-repeat;display:inline-block;fill:currentColor;height:24px;width:24px}.mat-icon.mat-icon-inline{font-size:inherit;height:inherit;line-height:inherit;width:inherit}[dir=rtl] .mat-icon-rtl-mirror{transform:scale(-1, 1)}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon{display:block}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-icon{margin:auto}\n",
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            e
          );
        })(),
        Ss = (() => {
          class e {}
          return (
            (e.ɵmod = r["\u0275\u0275defineNgModule"]({ type: e })),
            (e.ɵinj = r["\u0275\u0275defineInjector"]({
              factory: function (t) {
                return new (t || e)();
              },
              imports: [[Nr], Nr],
            })),
            e
          );
        })();
      var Es = n("9ppp");
      class xs extends M.a {
        constructor(e) {
          super(), (this._value = e);
        }
        get value() {
          return this.getValue();
        }
        _subscribe(e) {
          const t = super._subscribe(e);
          return t && !t.closed && e.next(this._value), t;
        }
        getValue() {
          if (this.hasError) throw this.thrownError;
          if (this.closed) throw new Es.a();
          return this._value;
        }
        next(e) {
          super.next((this._value = e));
        }
      }
      const Ds = (() => {
          function e() {
            return (
              Error.call(this),
              (this.message = "no elements in sequence"),
              (this.name = "EmptyError"),
              this
            );
          }
          return (e.prototype = Object.create(Error.prototype)), e;
        })(),
        Is = {};
      function Os(...e) {
        let t = null,
          n = null;
        return (
          Object(V.a)(e[e.length - 1]) && (n = e.pop()),
          "function" == typeof e[e.length - 1] && (t = e.pop()),
          1 === e.length && Object(fi.a)(e[0]) && (e = e[0]),
          Object(B.a)(e, n).lift(new ks(t))
        );
      }
      class ks {
        constructor(e) {
          this.resultSelector = e;
        }
        call(e, t) {
          return t.subscribe(new Rs(e, this.resultSelector));
        }
      }
      class Rs extends yi.a {
        constructor(e, t) {
          super(e),
            (this.resultSelector = t),
            (this.active = 0),
            (this.values = []),
            (this.observables = []);
        }
        _next(e) {
          this.values.push(Is), this.observables.push(e);
        }
        _complete() {
          const e = this.observables,
            t = e.length;
          if (0 === t) this.destination.complete();
          else {
            (this.active = t), (this.toRespond = t);
            for (let n = 0; n < t; n++) {
              const t = e[n];
              this.add(Object(bi.a)(this, t, t, n));
            }
          }
        }
        notifyComplete(e) {
          0 == (this.active -= 1) && this.destination.complete();
        }
        notifyNext(e, t, n, r, i) {
          const s = this.values,
            o = this.toRespond
              ? s[n] === Is
                ? --this.toRespond
                : this.toRespond
              : 0;
          (s[n] = t),
            0 === o &&
              (this.resultSelector
                ? this._tryResultSelector(s)
                : this.destination.next(s.slice()));
        }
        _tryResultSelector(e) {
          let t;
          try {
            t = this.resultSelector.apply(this, e);
          } catch (n) {
            return void this.destination.error(n);
          }
          this.destination.next(t);
        }
      }
      function As(e) {
        return new ue.a((t) => {
          let n;
          try {
            n = e();
          } catch (r) {
            return void t.error(r);
          }
          return (n ? Object(mi.a)(n) : de()).subscribe(t);
        });
      }
      function Ts(e) {
        return function (t) {
          return 0 === e ? de() : t.lift(new Fs(e));
        };
      }
      class Fs {
        constructor(e) {
          if (((this.total = e), this.total < 0)) throw new ce();
        }
        call(e, t) {
          return t.subscribe(new Ps(e, this.total));
        }
      }
      class Ps extends $.a {
        constructor(e, t) {
          super(e),
            (this.total = t),
            (this.ring = new Array()),
            (this.count = 0);
        }
        _next(e) {
          const t = this.ring,
            n = this.total,
            r = this.count++;
          t.length < n ? t.push(e) : (t[r % n] = e);
        }
        _complete() {
          const e = this.destination;
          let t = this.count;
          if (t > 0) {
            const n = this.count >= this.total ? this.total : this.count,
              r = this.ring;
            for (let i = 0; i < n; i++) {
              const i = t++ % n;
              e.next(r[i]);
            }
          }
          e.complete();
        }
      }
      function js(e = Ls) {
        return (t) => t.lift(new Ns(e));
      }
      class Ns {
        constructor(e) {
          this.errorFactory = e;
        }
        call(e, t) {
          return t.subscribe(new Ms(e, this.errorFactory));
        }
      }
      class Ms extends $.a {
        constructor(e, t) {
          super(e), (this.errorFactory = t), (this.hasValue = !1);
        }
        _next(e) {
          (this.hasValue = !0), this.destination.next(e);
        }
        _complete() {
          if (this.hasValue) return this.destination.complete();
          {
            let t;
            try {
              t = this.errorFactory();
            } catch (e) {
              t = e;
            }
            this.destination.error(t);
          }
        }
      }
      function Ls() {
        return new Ds();
      }
      function Vs(e = null) {
        return (t) => t.lift(new Bs(e));
      }
      class Bs {
        constructor(e) {
          this.defaultValue = e;
        }
        call(e, t) {
          return t.subscribe(new zs(e, this.defaultValue));
        }
      }
      class zs extends $.a {
        constructor(e, t) {
          super(e), (this.defaultValue = t), (this.isEmpty = !0);
        }
        _next(e) {
          (this.isEmpty = !1), this.destination.next(e);
        }
        _complete() {
          this.isEmpty && this.destination.next(this.defaultValue),
            this.destination.complete();
        }
      }
      var Us = n("SpAZ");
      function Hs(e, t) {
        const n = arguments.length >= 2;
        return (r) =>
          r.pipe(
            e ? se((t, n) => e(t, n, r)) : Us.a,
            Ts(1),
            n ? Vs(t) : js(() => new Ds())
          );
      }
      function $s(e, t) {
        const n = arguments.length >= 2;
        return (r) =>
          r.pipe(
            e ? se((t, n) => e(t, n, r)) : Us.a,
            fe(1),
            n ? Vs(t) : js(() => new Ds())
          );
      }
      class qs {
        constructor(e, t, n) {
          (this.predicate = e), (this.thisArg = t), (this.source = n);
        }
        call(e, t) {
          return t.subscribe(
            new Gs(e, this.predicate, this.thisArg, this.source)
          );
        }
      }
      class Gs extends $.a {
        constructor(e, t, n, r) {
          super(e),
            (this.predicate = t),
            (this.thisArg = n),
            (this.source = r),
            (this.index = 0),
            (this.thisArg = n || this);
        }
        notifyComplete(e) {
          this.destination.next(e), this.destination.complete();
        }
        _next(e) {
          let t = !1;
          try {
            t = this.predicate.call(this.thisArg, e, this.index++, this.source);
          } catch (n) {
            return void this.destination.error(n);
          }
          t || this.notifyComplete(!1);
        }
        _complete() {
          this.notifyComplete(!0);
        }
      }
      function Ws(e, t) {
        return "function" == typeof t
          ? (n) =>
              n.pipe(
                Ws((n, r) =>
                  Object(mi.a)(e(n, r)).pipe(
                    Object(le.a)((e, i) => t(n, e, r, i))
                  )
                )
              )
          : (t) => t.lift(new Qs(e));
      }
      class Qs {
        constructor(e) {
          this.project = e;
        }
        call(e, t) {
          return t.subscribe(new Ks(e, this.project));
        }
      }
      class Ks extends yi.a {
        constructor(e, t) {
          super(e), (this.project = t), (this.index = 0);
        }
        _next(e) {
          let t;
          const n = this.index++;
          try {
            t = this.project(e, n);
          } catch (r) {
            return void this.destination.error(r);
          }
          this._innerSub(t, e, n);
        }
        _innerSub(e, t, n) {
          const r = this.innerSubscription;
          r && r.unsubscribe();
          const i = new vi.a(this, t, n),
            s = this.destination;
          s.add(i),
            (this.innerSubscription = Object(bi.a)(this, e, void 0, void 0, i)),
            this.innerSubscription !== i && s.add(this.innerSubscription);
        }
        _complete() {
          const { innerSubscription: e } = this;
          (e && !e.closed) || super._complete(), this.unsubscribe();
        }
        _unsubscribe() {
          this.innerSubscription = null;
        }
        notifyComplete(e) {
          this.destination.remove(e),
            (this.innerSubscription = null),
            this.isStopped && super._complete();
        }
        notifyNext(e, t, n, r, i) {
          this.destination.next(t);
        }
      }
      function Zs(e, t) {
        let n = !1;
        return (
          arguments.length >= 2 && (n = !0),
          function (r) {
            return r.lift(new Ys(e, t, n));
          }
        );
      }
      class Ys {
        constructor(e, t, n = !1) {
          (this.accumulator = e), (this.seed = t), (this.hasSeed = n);
        }
        call(e, t) {
          return t.subscribe(
            new Xs(e, this.accumulator, this.seed, this.hasSeed)
          );
        }
      }
      class Xs extends $.a {
        constructor(e, t, n, r) {
          super(e),
            (this.accumulator = t),
            (this._seed = n),
            (this.hasSeed = r),
            (this.index = 0);
        }
        get seed() {
          return this._seed;
        }
        set seed(e) {
          (this.hasSeed = !0), (this._seed = e);
        }
        _next(e) {
          if (this.hasSeed) return this._tryNext(e);
          (this.seed = e), this.destination.next(e);
        }
        _tryNext(e) {
          const t = this.index++;
          let n;
          try {
            n = this.accumulator(this.seed, e, t);
          } catch (r) {
            this.destination.error(r);
          }
          (this.seed = n), this.destination.next(n);
        }
      }
      var Js = n("mCNh");
      class eo {
        constructor(e, t) {
          (this.id = e), (this.url = t);
        }
      }
      class to extends eo {
        constructor(e, t, n = "imperative", r = null) {
          super(e, t), (this.navigationTrigger = n), (this.restoredState = r);
        }
        toString() {
          return `NavigationStart(id: ${this.id}, url: '${this.url}')`;
        }
      }
      class no extends eo {
        constructor(e, t, n) {
          super(e, t), (this.urlAfterRedirects = n);
        }
        toString() {
          return `NavigationEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}')`;
        }
      }
      class ro extends eo {
        constructor(e, t, n) {
          super(e, t), (this.reason = n);
        }
        toString() {
          return `NavigationCancel(id: ${this.id}, url: '${this.url}')`;
        }
      }
      class io extends eo {
        constructor(e, t, n) {
          super(e, t), (this.error = n);
        }
        toString() {
          return `NavigationError(id: ${this.id}, url: '${this.url}', error: ${this.error})`;
        }
      }
      class so extends eo {
        constructor(e, t, n, r) {
          super(e, t), (this.urlAfterRedirects = n), (this.state = r);
        }
        toString() {
          return `RoutesRecognized(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;
        }
      }
      class oo extends eo {
        constructor(e, t, n, r) {
          super(e, t), (this.urlAfterRedirects = n), (this.state = r);
        }
        toString() {
          return `GuardsCheckStart(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;
        }
      }
      class ao extends eo {
        constructor(e, t, n, r, i) {
          super(e, t),
            (this.urlAfterRedirects = n),
            (this.state = r),
            (this.shouldActivate = i);
        }
        toString() {
          return `GuardsCheckEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state}, shouldActivate: ${this.shouldActivate})`;
        }
      }
      class lo extends eo {
        constructor(e, t, n, r) {
          super(e, t), (this.urlAfterRedirects = n), (this.state = r);
        }
        toString() {
          return `ResolveStart(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;
        }
      }
      class co extends eo {
        constructor(e, t, n, r) {
          super(e, t), (this.urlAfterRedirects = n), (this.state = r);
        }
        toString() {
          return `ResolveEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;
        }
      }
      class uo {
        constructor(e) {
          this.route = e;
        }
        toString() {
          return `RouteConfigLoadStart(path: ${this.route.path})`;
        }
      }
      class ho {
        constructor(e) {
          this.route = e;
        }
        toString() {
          return `RouteConfigLoadEnd(path: ${this.route.path})`;
        }
      }
      class fo {
        constructor(e) {
          this.snapshot = e;
        }
        toString() {
          return `ChildActivationStart(path: '${
            (this.snapshot.routeConfig && this.snapshot.routeConfig.path) || ""
          }')`;
        }
      }
      class po {
        constructor(e) {
          this.snapshot = e;
        }
        toString() {
          return `ChildActivationEnd(path: '${
            (this.snapshot.routeConfig && this.snapshot.routeConfig.path) || ""
          }')`;
        }
      }
      class mo {
        constructor(e) {
          this.snapshot = e;
        }
        toString() {
          return `ActivationStart(path: '${
            (this.snapshot.routeConfig && this.snapshot.routeConfig.path) || ""
          }')`;
        }
      }
      class go {
        constructor(e) {
          this.snapshot = e;
        }
        toString() {
          return `ActivationEnd(path: '${
            (this.snapshot.routeConfig && this.snapshot.routeConfig.path) || ""
          }')`;
        }
      }
      class _o {
        constructor(e, t, n) {
          (this.routerEvent = e), (this.position = t), (this.anchor = n);
        }
        toString() {
          return `Scroll(anchor: '${this.anchor}', position: '${
            this.position ? `${this.position[0]}, ${this.position[1]}` : null
          }')`;
        }
      }
      let yo = (() => {
        class e {}
        return (
          (e.ɵfac = function (t) {
            return new (t || e)();
          }),
          (e.ɵcmp = r["\u0275\u0275defineComponent"]({
            type: e,
            selectors: [["ng-component"]],
            decls: 1,
            vars: 0,
            template: function (e, t) {
              1 & e && r["\u0275\u0275element"](0, "router-outlet");
            },
            directives: function () {
              return [wl];
            },
            encapsulation: 2,
          })),
          e
        );
      })();
      class vo {
        constructor(e) {
          this.params = e || {};
        }
        has(e) {
          return this.params.hasOwnProperty(e);
        }
        get(e) {
          if (this.has(e)) {
            const t = this.params[e];
            return Array.isArray(t) ? t[0] : t;
          }
          return null;
        }
        getAll(e) {
          if (this.has(e)) {
            const t = this.params[e];
            return Array.isArray(t) ? t : [t];
          }
          return [];
        }
        get keys() {
          return Object.keys(this.params);
        }
      }
      function bo(e) {
        return new vo(e);
      }
      function wo(e) {
        const t = Error("NavigationCancelingError: " + e);
        return (t.ngNavigationCancelingError = !0), t;
      }
      function Co(e, t, n) {
        const r = n.path.split("/");
        if (r.length > e.length) return null;
        if ("full" === n.pathMatch && (t.hasChildren() || r.length < e.length))
          return null;
        const i = {};
        for (let s = 0; s < r.length; s++) {
          const t = r[s],
            n = e[s];
          if (t.startsWith(":")) i[t.substring(1)] = n;
          else if (t !== n.path) return null;
        }
        return { consumed: e.slice(0, r.length), posParams: i };
      }
      class So {
        constructor(e, t) {
          (this.routes = e), (this.module = t);
        }
      }
      function Eo(e, t = "") {
        for (let n = 0; n < e.length; n++) {
          const r = e[n];
          xo(r, Do(t, r));
        }
      }
      function xo(e, t) {
        if (!e)
          throw new Error(
            `\n      Invalid configuration of route '${t}': Encountered undefined route.\n      The reason might be an extra comma.\n\n      Example:\n      const routes: Routes = [\n        { path: '', redirectTo: '/dashboard', pathMatch: 'full' },\n        { path: 'dashboard',  component: DashboardComponent },, << two commas\n        { path: 'detail/:id', component: HeroDetailComponent }\n      ];\n    `
          );
        if (Array.isArray(e))
          throw new Error(
            `Invalid configuration of route '${t}': Array cannot be specified`
          );
        if (
          !e.component &&
          !e.children &&
          !e.loadChildren &&
          e.outlet &&
          "primary" !== e.outlet
        )
          throw new Error(
            `Invalid configuration of route '${t}': a componentless route without children or loadChildren cannot have a named outlet set`
          );
        if (e.redirectTo && e.children)
          throw new Error(
            `Invalid configuration of route '${t}': redirectTo and children cannot be used together`
          );
        if (e.redirectTo && e.loadChildren)
          throw new Error(
            `Invalid configuration of route '${t}': redirectTo and loadChildren cannot be used together`
          );
        if (e.children && e.loadChildren)
          throw new Error(
            `Invalid configuration of route '${t}': children and loadChildren cannot be used together`
          );
        if (e.redirectTo && e.component)
          throw new Error(
            `Invalid configuration of route '${t}': redirectTo and component cannot be used together`
          );
        if (e.path && e.matcher)
          throw new Error(
            `Invalid configuration of route '${t}': path and matcher cannot be used together`
          );
        if (
          void 0 === e.redirectTo &&
          !e.component &&
          !e.children &&
          !e.loadChildren
        )
          throw new Error(
            `Invalid configuration of route '${t}'. One of the following must be provided: component, redirectTo, children or loadChildren`
          );
        if (void 0 === e.path && void 0 === e.matcher)
          throw new Error(
            `Invalid configuration of route '${t}': routes must have either a path or a matcher specified`
          );
        if ("string" == typeof e.path && "/" === e.path.charAt(0))
          throw new Error(
            `Invalid configuration of route '${t}': path cannot start with a slash`
          );
        if ("" === e.path && void 0 !== e.redirectTo && void 0 === e.pathMatch)
          throw new Error(
            `Invalid configuration of route '{path: "${t}", redirectTo: "${e.redirectTo}"}': please provide 'pathMatch'. The default value of 'pathMatch' is 'prefix', but often the intent is to use 'full'.`
          );
        if (
          void 0 !== e.pathMatch &&
          "full" !== e.pathMatch &&
          "prefix" !== e.pathMatch
        )
          throw new Error(
            `Invalid configuration of route '${t}': pathMatch can only be set to 'prefix' or 'full'`
          );
        e.children && Eo(e.children, t);
      }
      function Do(e, t) {
        return t
          ? e || t.path
            ? e && !t.path
              ? e + "/"
              : !e && t.path
              ? t.path
              : `${e}/${t.path}`
            : ""
          : e;
      }
      function Io(e) {
        const t = e.children && e.children.map(Io),
          n = t
            ? Object.assign(Object.assign({}, e), { children: t })
            : Object.assign({}, e);
        return (
          !n.component &&
            (t || n.loadChildren) &&
            n.outlet &&
            "primary" !== n.outlet &&
            (n.component = yo),
          n
        );
      }
      function Oo(e, t) {
        const n = Object.keys(e),
          r = Object.keys(t);
        if (!n || !r || n.length != r.length) return !1;
        let i;
        for (let s = 0; s < n.length; s++)
          if (((i = n[s]), !ko(e[i], t[i]))) return !1;
        return !0;
      }
      function ko(e, t) {
        return Array.isArray(e) && Array.isArray(t)
          ? e.length == t.length && e.every((e) => t.indexOf(e) > -1)
          : e === t;
      }
      function Ro(e) {
        return Array.prototype.concat.apply([], e);
      }
      function Ao(e) {
        return e.length > 0 ? e[e.length - 1] : null;
      }
      function To(e, t) {
        for (const n in e) e.hasOwnProperty(n) && t(e[n], n);
      }
      function Fo(e) {
        return Object(r["\u0275isObservable"])(e)
          ? e
          : Object(r["\u0275isPromise"])(e)
          ? Object(mi.a)(Promise.resolve(e))
          : U(e);
      }
      function Po(e, t, n) {
        return n
          ? (function (e, t) {
              return Oo(e, t);
            })(e.queryParams, t.queryParams) &&
              (function e(t, n) {
                if (!Lo(t.segments, n.segments)) return !1;
                if (t.numberOfChildren !== n.numberOfChildren) return !1;
                for (const r in n.children) {
                  if (!t.children[r]) return !1;
                  if (!e(t.children[r], n.children[r])) return !1;
                }
                return !0;
              })(e.root, t.root)
          : (function (e, t) {
              return (
                Object.keys(t).length <= Object.keys(e).length &&
                Object.keys(t).every((n) => ko(e[n], t[n]))
              );
            })(e.queryParams, t.queryParams) &&
              (function e(t, n) {
                return (function t(n, r, i) {
                  if (n.segments.length > i.length)
                    return (
                      !!Lo(n.segments.slice(0, i.length), i) && !r.hasChildren()
                    );
                  if (n.segments.length === i.length) {
                    if (!Lo(n.segments, i)) return !1;
                    for (const t in r.children) {
                      if (!n.children[t]) return !1;
                      if (!e(n.children[t], r.children[t])) return !1;
                    }
                    return !0;
                  }
                  {
                    const e = i.slice(0, n.segments.length),
                      s = i.slice(n.segments.length);
                    return (
                      !!Lo(n.segments, e) &&
                      !!n.children.primary &&
                      t(n.children.primary, r, s)
                    );
                  }
                })(t, n, n.segments);
              })(e.root, t.root);
      }
      class jo {
        constructor(e, t, n) {
          (this.root = e), (this.queryParams = t), (this.fragment = n);
        }
        get queryParamMap() {
          return (
            this._queryParamMap || (this._queryParamMap = bo(this.queryParams)),
            this._queryParamMap
          );
        }
        toString() {
          return Uo.serialize(this);
        }
      }
      class No {
        constructor(e, t) {
          (this.segments = e),
            (this.children = t),
            (this.parent = null),
            To(t, (e, t) => (e.parent = this));
        }
        hasChildren() {
          return this.numberOfChildren > 0;
        }
        get numberOfChildren() {
          return Object.keys(this.children).length;
        }
        toString() {
          return Ho(this);
        }
      }
      class Mo {
        constructor(e, t) {
          (this.path = e), (this.parameters = t);
        }
        get parameterMap() {
          return (
            this._parameterMap || (this._parameterMap = bo(this.parameters)),
            this._parameterMap
          );
        }
        toString() {
          return Ko(this);
        }
      }
      function Lo(e, t) {
        return e.length === t.length && e.every((e, n) => e.path === t[n].path);
      }
      function Vo(e, t) {
        let n = [];
        return (
          To(e.children, (e, r) => {
            "primary" === r && (n = n.concat(t(e, r)));
          }),
          To(e.children, (e, r) => {
            "primary" !== r && (n = n.concat(t(e, r)));
          }),
          n
        );
      }
      class Bo {}
      class zo {
        parse(e) {
          const t = new ea(e);
          return new jo(
            t.parseRootSegment(),
            t.parseQueryParams(),
            t.parseFragment()
          );
        }
        serialize(e) {
          return `${
            "/" +
            (function e(t, n) {
              if (!t.hasChildren()) return Ho(t);
              if (n) {
                const n = t.children.primary ? e(t.children.primary, !1) : "",
                  r = [];
                return (
                  To(t.children, (t, n) => {
                    "primary" !== n && r.push(`${n}:${e(t, !1)}`);
                  }),
                  r.length > 0 ? `${n}(${r.join("//")})` : n
                );
              }
              {
                const n = Vo(t, (n, r) =>
                  "primary" === r
                    ? [e(t.children.primary, !1)]
                    : [`${r}:${e(n, !1)}`]
                );
                return `${Ho(t)}/(${n.join("//")})`;
              }
            })(e.root, !0)
          }${(function (e) {
            const t = Object.keys(e).map((t) => {
              const n = e[t];
              return Array.isArray(n)
                ? n.map((e) => `${qo(t)}=${qo(e)}`).join("&")
                : `${qo(t)}=${qo(n)}`;
            });
            return t.length ? "?" + t.join("&") : "";
          })(e.queryParams)}${
            "string" == typeof e.fragment ? "#" + encodeURI(e.fragment) : ""
          }`;
        }
      }
      const Uo = new zo();
      function Ho(e) {
        return e.segments.map((e) => Ko(e)).join("/");
      }
      function $o(e) {
        return encodeURIComponent(e)
          .replace(/%40/g, "@")
          .replace(/%3A/gi, ":")
          .replace(/%24/g, "$")
          .replace(/%2C/gi, ",");
      }
      function qo(e) {
        return $o(e).replace(/%3B/gi, ";");
      }
      function Go(e) {
        return $o(e)
          .replace(/\(/g, "%28")
          .replace(/\)/g, "%29")
          .replace(/%26/gi, "&");
      }
      function Wo(e) {
        return decodeURIComponent(e);
      }
      function Qo(e) {
        return Wo(e.replace(/\+/g, "%20"));
      }
      function Ko(e) {
        return `${Go(e.path)}${
          ((t = e.parameters),
          Object.keys(t)
            .map((e) => `;${Go(e)}=${Go(t[e])}`)
            .join(""))
        }`;
        var t;
      }
      const Zo = /^[^\/()?;=#]+/;
      function Yo(e) {
        const t = e.match(Zo);
        return t ? t[0] : "";
      }
      const Xo = /^[^=?&#]+/,
        Jo = /^[^?&#]+/;
      class ea {
        constructor(e) {
          (this.url = e), (this.remaining = e);
        }
        parseRootSegment() {
          return (
            this.consumeOptional("/"),
            "" === this.remaining ||
            this.peekStartsWith("?") ||
            this.peekStartsWith("#")
              ? new No([], {})
              : new No([], this.parseChildren())
          );
        }
        parseQueryParams() {
          const e = {};
          if (this.consumeOptional("?"))
            do {
              this.parseQueryParam(e);
            } while (this.consumeOptional("&"));
          return e;
        }
        parseFragment() {
          return this.consumeOptional("#")
            ? decodeURIComponent(this.remaining)
            : null;
        }
        parseChildren() {
          if ("" === this.remaining) return {};
          this.consumeOptional("/");
          const e = [];
          for (
            this.peekStartsWith("(") || e.push(this.parseSegment());
            this.peekStartsWith("/") &&
            !this.peekStartsWith("//") &&
            !this.peekStartsWith("/(");

          )
            this.capture("/"), e.push(this.parseSegment());
          let t = {};
          this.peekStartsWith("/(") &&
            (this.capture("/"), (t = this.parseParens(!0)));
          let n = {};
          return (
            this.peekStartsWith("(") && (n = this.parseParens(!1)),
            (e.length > 0 || Object.keys(t).length > 0) &&
              (n.primary = new No(e, t)),
            n
          );
        }
        parseSegment() {
          const e = Yo(this.remaining);
          if ("" === e && this.peekStartsWith(";"))
            throw new Error(
              `Empty path url segment cannot have parameters: '${this.remaining}'.`
            );
          return this.capture(e), new Mo(Wo(e), this.parseMatrixParams());
        }
        parseMatrixParams() {
          const e = {};
          for (; this.consumeOptional(";"); ) this.parseParam(e);
          return e;
        }
        parseParam(e) {
          const t = Yo(this.remaining);
          if (!t) return;
          this.capture(t);
          let n = "";
          if (this.consumeOptional("=")) {
            const e = Yo(this.remaining);
            e && ((n = e), this.capture(n));
          }
          e[Wo(t)] = Wo(n);
        }
        parseQueryParam(e) {
          const t = (function (e) {
            const t = e.match(Xo);
            return t ? t[0] : "";
          })(this.remaining);
          if (!t) return;
          this.capture(t);
          let n = "";
          if (this.consumeOptional("=")) {
            const e = (function (e) {
              const t = e.match(Jo);
              return t ? t[0] : "";
            })(this.remaining);
            e && ((n = e), this.capture(n));
          }
          const r = Qo(t),
            i = Qo(n);
          if (e.hasOwnProperty(r)) {
            let t = e[r];
            Array.isArray(t) || ((t = [t]), (e[r] = t)), t.push(i);
          } else e[r] = i;
        }
        parseParens(e) {
          const t = {};
          for (
            this.capture("(");
            !this.consumeOptional(")") && this.remaining.length > 0;

          ) {
            const n = Yo(this.remaining),
              r = this.remaining[n.length];
            if ("/" !== r && ")" !== r && ";" !== r)
              throw new Error(`Cannot parse url '${this.url}'`);
            let i = void 0;
            n.indexOf(":") > -1
              ? ((i = n.substr(0, n.indexOf(":"))),
                this.capture(i),
                this.capture(":"))
              : e && (i = "primary");
            const s = this.parseChildren();
            (t[i] = 1 === Object.keys(s).length ? s.primary : new No([], s)),
              this.consumeOptional("//");
          }
          return t;
        }
        peekStartsWith(e) {
          return this.remaining.startsWith(e);
        }
        consumeOptional(e) {
          return (
            !!this.peekStartsWith(e) &&
            ((this.remaining = this.remaining.substring(e.length)), !0)
          );
        }
        capture(e) {
          if (!this.consumeOptional(e)) throw new Error(`Expected "${e}".`);
        }
      }
      class ta {
        constructor(e) {
          this._root = e;
        }
        get root() {
          return this._root.value;
        }
        parent(e) {
          const t = this.pathFromRoot(e);
          return t.length > 1 ? t[t.length - 2] : null;
        }
        children(e) {
          const t = na(e, this._root);
          return t ? t.children.map((e) => e.value) : [];
        }
        firstChild(e) {
          const t = na(e, this._root);
          return t && t.children.length > 0 ? t.children[0].value : null;
        }
        siblings(e) {
          const t = ra(e, this._root);
          return t.length < 2
            ? []
            : t[t.length - 2].children
                .map((e) => e.value)
                .filter((t) => t !== e);
        }
        pathFromRoot(e) {
          return ra(e, this._root).map((e) => e.value);
        }
      }
      function na(e, t) {
        if (e === t.value) return t;
        for (const n of t.children) {
          const t = na(e, n);
          if (t) return t;
        }
        return null;
      }
      function ra(e, t) {
        if (e === t.value) return [t];
        for (const n of t.children) {
          const r = ra(e, n);
          if (r.length) return r.unshift(t), r;
        }
        return [];
      }
      class ia {
        constructor(e, t) {
          (this.value = e), (this.children = t);
        }
        toString() {
          return `TreeNode(${this.value})`;
        }
      }
      function sa(e) {
        const t = {};
        return e && e.children.forEach((e) => (t[e.value.outlet] = e)), t;
      }
      class oa extends ta {
        constructor(e, t) {
          super(e), (this.snapshot = t), da(this, e);
        }
        toString() {
          return this.snapshot.toString();
        }
      }
      function aa(e, t) {
        const n = (function (e, t) {
            const n = new ua(
              [],
              {},
              {},
              "",
              {},
              "primary",
              t,
              null,
              e.root,
              -1,
              {}
            );
            return new ha("", new ia(n, []));
          })(e, t),
          r = new xs([new Mo("", {})]),
          i = new xs({}),
          s = new xs({}),
          o = new xs({}),
          a = new xs(""),
          l = new la(r, i, o, a, s, "primary", t, n.root);
        return (l.snapshot = n.root), new oa(new ia(l, []), n);
      }
      class la {
        constructor(e, t, n, r, i, s, o, a) {
          (this.url = e),
            (this.params = t),
            (this.queryParams = n),
            (this.fragment = r),
            (this.data = i),
            (this.outlet = s),
            (this.component = o),
            (this._futureSnapshot = a);
        }
        get routeConfig() {
          return this._futureSnapshot.routeConfig;
        }
        get root() {
          return this._routerState.root;
        }
        get parent() {
          return this._routerState.parent(this);
        }
        get firstChild() {
          return this._routerState.firstChild(this);
        }
        get children() {
          return this._routerState.children(this);
        }
        get pathFromRoot() {
          return this._routerState.pathFromRoot(this);
        }
        get paramMap() {
          return (
            this._paramMap ||
              (this._paramMap = this.params.pipe(Object(le.a)((e) => bo(e)))),
            this._paramMap
          );
        }
        get queryParamMap() {
          return (
            this._queryParamMap ||
              (this._queryParamMap = this.queryParams.pipe(
                Object(le.a)((e) => bo(e))
              )),
            this._queryParamMap
          );
        }
        toString() {
          return this.snapshot
            ? this.snapshot.toString()
            : `Future(${this._futureSnapshot})`;
        }
      }
      function ca(e, t = "emptyOnly") {
        const n = e.pathFromRoot;
        let r = 0;
        if ("always" !== t)
          for (r = n.length - 1; r >= 1; ) {
            const e = n[r],
              t = n[r - 1];
            if (e.routeConfig && "" === e.routeConfig.path) r--;
            else {
              if (t.component) break;
              r--;
            }
          }
        return (function (e) {
          return e.reduce(
            (e, t) => ({
              params: Object.assign(Object.assign({}, e.params), t.params),
              data: Object.assign(Object.assign({}, e.data), t.data),
              resolve: Object.assign(
                Object.assign({}, e.resolve),
                t._resolvedData
              ),
            }),
            { params: {}, data: {}, resolve: {} }
          );
        })(n.slice(r));
      }
      class ua {
        constructor(e, t, n, r, i, s, o, a, l, c, u) {
          (this.url = e),
            (this.params = t),
            (this.queryParams = n),
            (this.fragment = r),
            (this.data = i),
            (this.outlet = s),
            (this.component = o),
            (this.routeConfig = a),
            (this._urlSegment = l),
            (this._lastPathIndex = c),
            (this._resolve = u);
        }
        get root() {
          return this._routerState.root;
        }
        get parent() {
          return this._routerState.parent(this);
        }
        get firstChild() {
          return this._routerState.firstChild(this);
        }
        get children() {
          return this._routerState.children(this);
        }
        get pathFromRoot() {
          return this._routerState.pathFromRoot(this);
        }
        get paramMap() {
          return (
            this._paramMap || (this._paramMap = bo(this.params)), this._paramMap
          );
        }
        get queryParamMap() {
          return (
            this._queryParamMap || (this._queryParamMap = bo(this.queryParams)),
            this._queryParamMap
          );
        }
        toString() {
          return `Route(url:'${this.url
            .map((e) => e.toString())
            .join("/")}', path:'${
            this.routeConfig ? this.routeConfig.path : ""
          }')`;
        }
      }
      class ha extends ta {
        constructor(e, t) {
          super(t), (this.url = e), da(this, t);
        }
        toString() {
          return fa(this._root);
        }
      }
      function da(e, t) {
        (t.value._routerState = e), t.children.forEach((t) => da(e, t));
      }
      function fa(e) {
        const t =
          e.children.length > 0 ? ` { ${e.children.map(fa).join(", ")} } ` : "";
        return `${e.value}${t}`;
      }
      function pa(e) {
        if (e.snapshot) {
          const t = e.snapshot,
            n = e._futureSnapshot;
          (e.snapshot = n),
            Oo(t.queryParams, n.queryParams) ||
              e.queryParams.next(n.queryParams),
            t.fragment !== n.fragment && e.fragment.next(n.fragment),
            Oo(t.params, n.params) || e.params.next(n.params),
            (function (e, t) {
              if (e.length !== t.length) return !1;
              for (let n = 0; n < e.length; ++n) if (!Oo(e[n], t[n])) return !1;
              return !0;
            })(t.url, n.url) || e.url.next(n.url),
            Oo(t.data, n.data) || e.data.next(n.data);
        } else
          (e.snapshot = e._futureSnapshot), e.data.next(e._futureSnapshot.data);
      }
      function ma(e, t) {
        var n, r;
        return (
          Oo(e.params, t.params) &&
          Lo((n = e.url), (r = t.url)) &&
          n.every((e, t) => Oo(e.parameters, r[t].parameters)) &&
          !(!e.parent != !t.parent) &&
          (!e.parent || ma(e.parent, t.parent))
        );
      }
      function ga(e) {
        return (
          "object" == typeof e && null != e && !e.outlets && !e.segmentPath
        );
      }
      function _a(e, t, n, r, i) {
        let s = {};
        return (
          r &&
            To(r, (e, t) => {
              s[t] = Array.isArray(e) ? e.map((e) => "" + e) : "" + e;
            }),
          new jo(
            n.root === e
              ? t
              : (function e(t, n, r) {
                  const i = {};
                  return (
                    To(t.children, (t, s) => {
                      i[s] = t === n ? r : e(t, n, r);
                    }),
                    new No(t.segments, i)
                  );
                })(n.root, e, t),
            s,
            i
          )
        );
      }
      class ya {
        constructor(e, t, n) {
          if (
            ((this.isAbsolute = e),
            (this.numberOfDoubleDots = t),
            (this.commands = n),
            e && n.length > 0 && ga(n[0]))
          )
            throw new Error("Root segment cannot have matrix parameters");
          const r = n.find(
            (e) => "object" == typeof e && null != e && e.outlets
          );
          if (r && r !== Ao(n))
            throw new Error("{outlets:{}} has to be the last command");
        }
        toRoot() {
          return (
            this.isAbsolute &&
            1 === this.commands.length &&
            "/" == this.commands[0]
          );
        }
      }
      class va {
        constructor(e, t, n) {
          (this.segmentGroup = e), (this.processChildren = t), (this.index = n);
        }
      }
      function ba(e) {
        return "object" == typeof e && null != e && e.outlets
          ? e.outlets.primary
          : "" + e;
      }
      function wa(e, t, n) {
        if (
          (e || (e = new No([], {})),
          0 === e.segments.length && e.hasChildren())
        )
          return Ca(e, t, n);
        const r = (function (e, t, n) {
            let r = 0,
              i = t;
            const s = { match: !1, pathIndex: 0, commandIndex: 0 };
            for (; i < e.segments.length; ) {
              if (r >= n.length) return s;
              const t = e.segments[i],
                o = ba(n[r]),
                a = r < n.length - 1 ? n[r + 1] : null;
              if (i > 0 && void 0 === o) break;
              if (o && a && "object" == typeof a && void 0 === a.outlets) {
                if (!Da(o, a, t)) return s;
                r += 2;
              } else {
                if (!Da(o, {}, t)) return s;
                r++;
              }
              i++;
            }
            return { match: !0, pathIndex: i, commandIndex: r };
          })(e, t, n),
          i = n.slice(r.commandIndex);
        if (r.match && r.pathIndex < e.segments.length) {
          const t = new No(e.segments.slice(0, r.pathIndex), {});
          return (
            (t.children.primary = new No(
              e.segments.slice(r.pathIndex),
              e.children
            )),
            Ca(t, 0, i)
          );
        }
        return r.match && 0 === i.length
          ? new No(e.segments, {})
          : r.match && !e.hasChildren()
          ? Sa(e, t, n)
          : r.match
          ? Ca(e, 0, i)
          : Sa(e, t, n);
      }
      function Ca(e, t, n) {
        if (0 === n.length) return new No(e.segments, {});
        {
          const r = (function (e) {
              return "object" != typeof e[0] || void 0 === e[0].outlets
                ? { primary: e }
                : e[0].outlets;
            })(n),
            i = {};
          return (
            To(r, (n, r) => {
              null !== n && (i[r] = wa(e.children[r], t, n));
            }),
            To(e.children, (e, t) => {
              void 0 === r[t] && (i[t] = e);
            }),
            new No(e.segments, i)
          );
        }
      }
      function Sa(e, t, n) {
        const r = e.segments.slice(0, t);
        let i = 0;
        for (; i < n.length; ) {
          if ("object" == typeof n[i] && void 0 !== n[i].outlets) {
            const e = Ea(n[i].outlets);
            return new No(r, e);
          }
          if (0 === i && ga(n[0])) {
            r.push(new Mo(e.segments[t].path, n[0])), i++;
            continue;
          }
          const s = ba(n[i]),
            o = i < n.length - 1 ? n[i + 1] : null;
          s && o && ga(o)
            ? (r.push(new Mo(s, xa(o))), (i += 2))
            : (r.push(new Mo(s, {})), i++);
        }
        return new No(r, {});
      }
      function Ea(e) {
        const t = {};
        return (
          To(e, (e, n) => {
            null !== e && (t[n] = Sa(new No([], {}), 0, e));
          }),
          t
        );
      }
      function xa(e) {
        const t = {};
        return To(e, (e, n) => (t[n] = "" + e)), t;
      }
      function Da(e, t, n) {
        return e == n.path && Oo(t, n.parameters);
      }
      class Ia {
        constructor(e, t, n, r) {
          (this.routeReuseStrategy = e),
            (this.futureState = t),
            (this.currState = n),
            (this.forwardEvent = r);
        }
        activate(e) {
          const t = this.futureState._root,
            n = this.currState ? this.currState._root : null;
          this.deactivateChildRoutes(t, n, e),
            pa(this.futureState.root),
            this.activateChildRoutes(t, n, e);
        }
        deactivateChildRoutes(e, t, n) {
          const r = sa(t);
          e.children.forEach((e) => {
            const t = e.value.outlet;
            this.deactivateRoutes(e, r[t], n), delete r[t];
          }),
            To(r, (e, t) => {
              this.deactivateRouteAndItsChildren(e, n);
            });
        }
        deactivateRoutes(e, t, n) {
          const r = e.value,
            i = t ? t.value : null;
          if (r === i)
            if (r.component) {
              const i = n.getContext(r.outlet);
              i && this.deactivateChildRoutes(e, t, i.children);
            } else this.deactivateChildRoutes(e, t, n);
          else i && this.deactivateRouteAndItsChildren(t, n);
        }
        deactivateRouteAndItsChildren(e, t) {
          this.routeReuseStrategy.shouldDetach(e.value.snapshot)
            ? this.detachAndStoreRouteSubtree(e, t)
            : this.deactivateRouteAndOutlet(e, t);
        }
        detachAndStoreRouteSubtree(e, t) {
          const n = t.getContext(e.value.outlet);
          if (n && n.outlet) {
            const t = n.outlet.detach(),
              r = n.children.onOutletDeactivated();
            this.routeReuseStrategy.store(e.value.snapshot, {
              componentRef: t,
              route: e,
              contexts: r,
            });
          }
        }
        deactivateRouteAndOutlet(e, t) {
          const n = t.getContext(e.value.outlet);
          if (n) {
            const r = sa(e),
              i = e.value.component ? n.children : t;
            To(r, (e, t) => this.deactivateRouteAndItsChildren(e, i)),
              n.outlet &&
                (n.outlet.deactivate(), n.children.onOutletDeactivated());
          }
        }
        activateChildRoutes(e, t, n) {
          const r = sa(t);
          e.children.forEach((e) => {
            this.activateRoutes(e, r[e.value.outlet], n),
              this.forwardEvent(new go(e.value.snapshot));
          }),
            e.children.length && this.forwardEvent(new po(e.value.snapshot));
        }
        activateRoutes(e, t, n) {
          const r = e.value,
            i = t ? t.value : null;
          if ((pa(r), r === i))
            if (r.component) {
              const i = n.getOrCreateContext(r.outlet);
              this.activateChildRoutes(e, t, i.children);
            } else this.activateChildRoutes(e, t, n);
          else if (r.component) {
            const t = n.getOrCreateContext(r.outlet);
            if (this.routeReuseStrategy.shouldAttach(r.snapshot)) {
              const e = this.routeReuseStrategy.retrieve(r.snapshot);
              this.routeReuseStrategy.store(r.snapshot, null),
                t.children.onOutletReAttached(e.contexts),
                (t.attachRef = e.componentRef),
                (t.route = e.route.value),
                t.outlet && t.outlet.attach(e.componentRef, e.route.value),
                Oa(e.route);
            } else {
              const n = (function (e) {
                  for (let t = e.parent; t; t = t.parent) {
                    const e = t.routeConfig;
                    if (e && e._loadedConfig) return e._loadedConfig;
                    if (e && e.component) return null;
                  }
                  return null;
                })(r.snapshot),
                i = n ? n.module.componentFactoryResolver : null;
              (t.attachRef = null),
                (t.route = r),
                (t.resolver = i),
                t.outlet && t.outlet.activateWith(r, i),
                this.activateChildRoutes(e, null, t.children);
            }
          } else this.activateChildRoutes(e, null, n);
        }
      }
      function Oa(e) {
        pa(e.value), e.children.forEach(Oa);
      }
      function ka(e) {
        return "function" == typeof e;
      }
      function Ra(e) {
        return e instanceof jo;
      }
      class Aa {
        constructor(e) {
          this.segmentGroup = e || null;
        }
      }
      class Ta {
        constructor(e) {
          this.urlTree = e;
        }
      }
      function Fa(e) {
        return new ue.a((t) => t.error(new Aa(e)));
      }
      function Pa(e) {
        return new ue.a((t) => t.error(new Ta(e)));
      }
      function ja(e) {
        return new ue.a((t) =>
          t.error(
            new Error(
              `Only absolute redirects can have named outlets. redirectTo: '${e}'`
            )
          )
        );
      }
      class Na {
        constructor(e, t, n, i, s) {
          (this.configLoader = t),
            (this.urlSerializer = n),
            (this.urlTree = i),
            (this.config = s),
            (this.allowRedirects = !0),
            (this.ngModule = e.get(r.NgModuleRef));
        }
        apply() {
          return this.expandSegmentGroup(
            this.ngModule,
            this.config,
            this.urlTree.root,
            "primary"
          )
            .pipe(
              Object(le.a)((e) =>
                this.createUrlTree(
                  e,
                  this.urlTree.queryParams,
                  this.urlTree.fragment
                )
              )
            )
            .pipe(
              wi((e) => {
                if (e instanceof Ta)
                  return (this.allowRedirects = !1), this.match(e.urlTree);
                if (e instanceof Aa) throw this.noMatchError(e);
                throw e;
              })
            );
        }
        match(e) {
          return this.expandSegmentGroup(
            this.ngModule,
            this.config,
            e.root,
            "primary"
          )
            .pipe(
              Object(le.a)((t) =>
                this.createUrlTree(t, e.queryParams, e.fragment)
              )
            )
            .pipe(
              wi((e) => {
                if (e instanceof Aa) throw this.noMatchError(e);
                throw e;
              })
            );
        }
        noMatchError(e) {
          return new Error(
            `Cannot match any routes. URL Segment: '${e.segmentGroup}'`
          );
        }
        createUrlTree(e, t, n) {
          const r = e.segments.length > 0 ? new No([], { primary: e }) : e;
          return new jo(r, t, n);
        }
        expandSegmentGroup(e, t, n, r) {
          return 0 === n.segments.length && n.hasChildren()
            ? this.expandChildren(e, t, n).pipe(
                Object(le.a)((e) => new No([], e))
              )
            : this.expandSegment(e, n, t, n.segments, r, !0);
        }
        expandChildren(e, t, n) {
          return (function (e, t) {
            if (0 === Object.keys(e).length) return U({});
            const n = [],
              r = [],
              i = {};
            return (
              To(e, (e, s) => {
                const o = t(s, e).pipe(Object(le.a)((e) => (i[s] = e)));
                "primary" === s ? n.push(o) : r.push(o);
              }),
              U.apply(null, n.concat(r)).pipe(
                tt(),
                Hs(),
                Object(le.a)(() => i)
              )
            );
          })(n.children, (n, r) => this.expandSegmentGroup(e, t, r, n));
        }
        expandSegment(e, t, n, r, i, s) {
          return U(...n).pipe(
            Object(le.a)((o) =>
              this.expandSegmentAgainstRoute(e, t, n, o, r, i, s).pipe(
                wi((e) => {
                  if (e instanceof Aa) return U(null);
                  throw e;
                })
              )
            ),
            tt(),
            $s((e) => !!e),
            wi((e, n) => {
              if (e instanceof Ds || "EmptyError" === e.name) {
                if (this.noLeftoversInUrl(t, r, i)) return U(new No([], {}));
                throw new Aa(t);
              }
              throw e;
            })
          );
        }
        noLeftoversInUrl(e, t, n) {
          return 0 === t.length && !e.children[n];
        }
        expandSegmentAgainstRoute(e, t, n, r, i, s, o) {
          return Ba(r) !== s
            ? Fa(t)
            : void 0 === r.redirectTo
            ? this.matchSegmentAgainstRoute(e, t, r, i)
            : o && this.allowRedirects
            ? this.expandSegmentAgainstRouteUsingRedirect(e, t, n, r, i, s)
            : Fa(t);
        }
        expandSegmentAgainstRouteUsingRedirect(e, t, n, r, i, s) {
          return "**" === r.path
            ? this.expandWildCardWithParamsAgainstRouteUsingRedirect(e, n, r, s)
            : this.expandRegularSegmentAgainstRouteUsingRedirect(
                e,
                t,
                n,
                r,
                i,
                s
              );
        }
        expandWildCardWithParamsAgainstRouteUsingRedirect(e, t, n, r) {
          const i = this.applyRedirectCommands([], n.redirectTo, {});
          return n.redirectTo.startsWith("/")
            ? Pa(i)
            : this.lineralizeSegments(n, i).pipe(
                Object(Oi.a)((n) => {
                  const i = new No(n, {});
                  return this.expandSegment(e, i, t, n, r, !1);
                })
              );
        }
        expandRegularSegmentAgainstRouteUsingRedirect(e, t, n, r, i, s) {
          const {
            matched: o,
            consumedSegments: a,
            lastChild: l,
            positionalParamSegments: c,
          } = Ma(t, r, i);
          if (!o) return Fa(t);
          const u = this.applyRedirectCommands(a, r.redirectTo, c);
          return r.redirectTo.startsWith("/")
            ? Pa(u)
            : this.lineralizeSegments(r, u).pipe(
                Object(Oi.a)((r) =>
                  this.expandSegment(e, t, n, r.concat(i.slice(l)), s, !1)
                )
              );
        }
        matchSegmentAgainstRoute(e, t, n, r) {
          if ("**" === n.path)
            return n.loadChildren
              ? this.configLoader
                  .load(e.injector, n)
                  .pipe(
                    Object(le.a)((e) => ((n._loadedConfig = e), new No(r, {})))
                  )
              : U(new No(r, {}));
          const { matched: i, consumedSegments: s, lastChild: o } = Ma(t, n, r);
          if (!i) return Fa(t);
          const a = r.slice(o);
          return this.getChildConfig(e, n, r).pipe(
            Object(Oi.a)((e) => {
              const n = e.module,
                r = e.routes,
                { segmentGroup: i, slicedSegments: o } = (function (
                  e,
                  t,
                  n,
                  r
                ) {
                  return n.length > 0 &&
                    (function (e, t, n) {
                      return n.some((n) => Va(e, t, n) && "primary" !== Ba(n));
                    })(e, n, r)
                    ? {
                        segmentGroup: La(
                          new No(
                            t,
                            (function (e, t) {
                              const n = {};
                              n.primary = t;
                              for (const r of e)
                                "" === r.path &&
                                  "primary" !== Ba(r) &&
                                  (n[Ba(r)] = new No([], {}));
                              return n;
                            })(r, new No(n, e.children))
                          )
                        ),
                        slicedSegments: [],
                      }
                    : 0 === n.length &&
                      (function (e, t, n) {
                        return n.some((n) => Va(e, t, n));
                      })(e, n, r)
                    ? {
                        segmentGroup: La(
                          new No(
                            e.segments,
                            (function (e, t, n, r) {
                              const i = {};
                              for (const s of n)
                                Va(e, t, s) &&
                                  !r[Ba(s)] &&
                                  (i[Ba(s)] = new No([], {}));
                              return Object.assign(Object.assign({}, r), i);
                            })(e, n, r, e.children)
                          )
                        ),
                        slicedSegments: n,
                      }
                    : { segmentGroup: e, slicedSegments: n };
                })(t, s, a, r);
              return 0 === o.length && i.hasChildren()
                ? this.expandChildren(n, r, i).pipe(
                    Object(le.a)((e) => new No(s, e))
                  )
                : 0 === r.length && 0 === o.length
                ? U(new No(s, {}))
                : this.expandSegment(n, i, r, o, "primary", !0).pipe(
                    Object(le.a)(
                      (e) => new No(s.concat(e.segments), e.children)
                    )
                  );
            })
          );
        }
        getChildConfig(e, t, n) {
          return t.children
            ? U(new So(t.children, e))
            : t.loadChildren
            ? void 0 !== t._loadedConfig
              ? U(t._loadedConfig)
              : (function (e, t, n) {
                  const r = t.canLoad;
                  return r && 0 !== r.length
                    ? Object(mi.a)(r)
                        .pipe(
                          Object(le.a)((r) => {
                            const i = e.get(r);
                            let s;
                            if (
                              (function (e) {
                                return e && ka(e.canLoad);
                              })(i)
                            )
                              s = i.canLoad(t, n);
                            else {
                              if (!ka(i))
                                throw new Error("Invalid CanLoad guard");
                              s = i(t, n);
                            }
                            return Fo(s);
                          })
                        )
                        .pipe(
                          tt(),
                          ((i = (e) => !0 === e),
                          (e) => e.lift(new qs(i, void 0, e)))
                        )
                    : U(!0);
                  var i;
                })(e.injector, t, n).pipe(
                  Object(Oi.a)((n) =>
                    n
                      ? this.configLoader
                          .load(e.injector, t)
                          .pipe(Object(le.a)((e) => ((t._loadedConfig = e), e)))
                      : (function (e) {
                          return new ue.a((t) =>
                            t.error(
                              wo(
                                `Cannot load children because the guard of the route "path: '${e.path}'" returned false`
                              )
                            )
                          );
                        })(t)
                  )
                )
            : U(new So([], e));
        }
        lineralizeSegments(e, t) {
          let n = [],
            r = t.root;
          for (;;) {
            if (((n = n.concat(r.segments)), 0 === r.numberOfChildren))
              return U(n);
            if (r.numberOfChildren > 1 || !r.children.primary)
              return ja(e.redirectTo);
            r = r.children.primary;
          }
        }
        applyRedirectCommands(e, t, n) {
          return this.applyRedirectCreatreUrlTree(
            t,
            this.urlSerializer.parse(t),
            e,
            n
          );
        }
        applyRedirectCreatreUrlTree(e, t, n, r) {
          const i = this.createSegmentGroup(e, t.root, n, r);
          return new jo(
            i,
            this.createQueryParams(t.queryParams, this.urlTree.queryParams),
            t.fragment
          );
        }
        createQueryParams(e, t) {
          const n = {};
          return (
            To(e, (e, r) => {
              if ("string" == typeof e && e.startsWith(":")) {
                const i = e.substring(1);
                n[r] = t[i];
              } else n[r] = e;
            }),
            n
          );
        }
        createSegmentGroup(e, t, n, r) {
          const i = this.createSegments(e, t.segments, n, r);
          let s = {};
          return (
            To(t.children, (t, i) => {
              s[i] = this.createSegmentGroup(e, t, n, r);
            }),
            new No(i, s)
          );
        }
        createSegments(e, t, n, r) {
          return t.map((t) =>
            t.path.startsWith(":")
              ? this.findPosParam(e, t, r)
              : this.findOrReturn(t, n)
          );
        }
        findPosParam(e, t, n) {
          const r = n[t.path.substring(1)];
          if (!r)
            throw new Error(
              `Cannot redirect to '${e}'. Cannot find '${t.path}'.`
            );
          return r;
        }
        findOrReturn(e, t) {
          let n = 0;
          for (const r of t) {
            if (r.path === e.path) return t.splice(n), r;
            n++;
          }
          return e;
        }
      }
      function Ma(e, t, n) {
        if ("" === t.path)
          return "full" === t.pathMatch && (e.hasChildren() || n.length > 0)
            ? {
                matched: !1,
                consumedSegments: [],
                lastChild: 0,
                positionalParamSegments: {},
              }
            : {
                matched: !0,
                consumedSegments: [],
                lastChild: 0,
                positionalParamSegments: {},
              };
        const r = (t.matcher || Co)(n, e, t);
        return r
          ? {
              matched: !0,
              consumedSegments: r.consumed,
              lastChild: r.consumed.length,
              positionalParamSegments: r.posParams,
            }
          : {
              matched: !1,
              consumedSegments: [],
              lastChild: 0,
              positionalParamSegments: {},
            };
      }
      function La(e) {
        if (1 === e.numberOfChildren && e.children.primary) {
          const t = e.children.primary;
          return new No(e.segments.concat(t.segments), t.children);
        }
        return e;
      }
      function Va(e, t, n) {
        return (
          (!(e.hasChildren() || t.length > 0) || "full" !== n.pathMatch) &&
          "" === n.path &&
          void 0 !== n.redirectTo
        );
      }
      function Ba(e) {
        return e.outlet || "primary";
      }
      class za {
        constructor(e) {
          (this.path = e), (this.route = this.path[this.path.length - 1]);
        }
      }
      class Ua {
        constructor(e, t) {
          (this.component = e), (this.route = t);
        }
      }
      function Ha(e, t, n) {
        const r = e._root;
        return (function e(
          t,
          n,
          r,
          i,
          s = { canDeactivateChecks: [], canActivateChecks: [] }
        ) {
          const o = sa(n);
          return (
            t.children.forEach((t) => {
              !(function (
                t,
                n,
                r,
                i,
                s = { canDeactivateChecks: [], canActivateChecks: [] }
              ) {
                const o = t.value,
                  a = n ? n.value : null,
                  l = r ? r.getContext(t.value.outlet) : null;
                if (a && o.routeConfig === a.routeConfig) {
                  const c = (function (e, t, n) {
                    if ("function" == typeof n) return n(e, t);
                    switch (n) {
                      case "pathParamsChange":
                        return !Lo(e.url, t.url);
                      case "pathParamsOrQueryParamsChange":
                        return (
                          !Lo(e.url, t.url) || !Oo(e.queryParams, t.queryParams)
                        );
                      case "always":
                        return !0;
                      case "paramsOrQueryParamsChange":
                        return !ma(e, t) || !Oo(e.queryParams, t.queryParams);
                      case "paramsChange":
                      default:
                        return !ma(e, t);
                    }
                  })(a, o, o.routeConfig.runGuardsAndResolvers);
                  c
                    ? s.canActivateChecks.push(new za(i))
                    : ((o.data = a.data), (o._resolvedData = a._resolvedData)),
                    e(t, n, o.component ? (l ? l.children : null) : r, i, s),
                    c &&
                      s.canDeactivateChecks.push(
                        new Ua((l && l.outlet && l.outlet.component) || null, a)
                      );
                } else
                  a && qa(n, l, s),
                    s.canActivateChecks.push(new za(i)),
                    e(t, null, o.component ? (l ? l.children : null) : r, i, s);
              })(t, o[t.value.outlet], r, i.concat([t.value]), s),
                delete o[t.value.outlet];
            }),
            To(o, (e, t) => qa(e, r.getContext(t), s)),
            s
          );
        })(r, t ? t._root : null, n, [r.value]);
      }
      function $a(e, t, n) {
        const r = (function (e) {
          if (!e) return null;
          for (let t = e.parent; t; t = t.parent) {
            const e = t.routeConfig;
            if (e && e._loadedConfig) return e._loadedConfig;
          }
          return null;
        })(t);
        return (r ? r.module.injector : n).get(e);
      }
      function qa(e, t, n) {
        const r = sa(e),
          i = e.value;
        To(r, (e, r) => {
          qa(e, i.component ? (t ? t.children.getContext(r) : null) : t, n);
        }),
          n.canDeactivateChecks.push(
            new Ua(
              i.component && t && t.outlet && t.outlet.isActivated
                ? t.outlet.component
                : null,
              i
            )
          );
      }
      const Ga = Symbol("INITIAL_VALUE");
      function Wa() {
        return Ws((e) =>
          Os(...e.map((e) => e.pipe(fe(1), rt(Ga)))).pipe(
            Zs((e, t) => {
              let n = !1;
              return t.reduce((e, r, i) => {
                if (e !== Ga) return e;
                if ((r === Ga && (n = !0), !n)) {
                  if (!1 === r) return r;
                  if (i === t.length - 1 || Ra(r)) return r;
                }
                return e;
              }, e);
            }, Ga),
            se((e) => e !== Ga),
            Object(le.a)((e) => (Ra(e) ? e : !0 === e)),
            fe(1)
          )
        );
      }
      function Qa(e, t) {
        return null !== e && t && t(new mo(e)), U(!0);
      }
      function Ka(e, t) {
        return null !== e && t && t(new fo(e)), U(!0);
      }
      function Za(e, t, n) {
        const r = t.routeConfig ? t.routeConfig.canActivate : null;
        return r && 0 !== r.length
          ? U(
              r.map((r) =>
                As(() => {
                  const i = $a(r, t, n);
                  let s;
                  if (
                    (function (e) {
                      return e && ka(e.canActivate);
                    })(i)
                  )
                    s = Fo(i.canActivate(t, e));
                  else {
                    if (!ka(i)) throw new Error("Invalid CanActivate guard");
                    s = Fo(i(t, e));
                  }
                  return s.pipe($s());
                })
              )
            ).pipe(Wa())
          : U(!0);
      }
      function Ya(e, t, n) {
        const r = t[t.length - 1],
          i = t
            .slice(0, t.length - 1)
            .reverse()
            .map((e) =>
              (function (e) {
                const t = e.routeConfig ? e.routeConfig.canActivateChild : null;
                return t && 0 !== t.length ? { node: e, guards: t } : null;
              })(e)
            )
            .filter((e) => null !== e)
            .map((t) =>
              As(() =>
                U(
                  t.guards.map((i) => {
                    const s = $a(i, t.node, n);
                    let o;
                    if (
                      (function (e) {
                        return e && ka(e.canActivateChild);
                      })(s)
                    )
                      o = Fo(s.canActivateChild(r, e));
                    else {
                      if (!ka(s))
                        throw new Error("Invalid CanActivateChild guard");
                      o = Fo(s(r, e));
                    }
                    return o.pipe($s());
                  })
                ).pipe(Wa())
              )
            );
        return U(i).pipe(Wa());
      }
      class Xa {}
      class Ja {
        constructor(e, t, n, r, i, s) {
          (this.rootComponentType = e),
            (this.config = t),
            (this.urlTree = n),
            (this.url = r),
            (this.paramsInheritanceStrategy = i),
            (this.relativeLinkResolution = s);
        }
        recognize() {
          try {
            const e = nl(
                this.urlTree.root,
                [],
                [],
                this.config,
                this.relativeLinkResolution
              ).segmentGroup,
              t = this.processSegmentGroup(this.config, e, "primary"),
              n = new ua(
                [],
                Object.freeze({}),
                Object.freeze(Object.assign({}, this.urlTree.queryParams)),
                this.urlTree.fragment,
                {},
                "primary",
                this.rootComponentType,
                null,
                this.urlTree.root,
                -1,
                {}
              ),
              r = new ia(n, t),
              i = new ha(this.url, r);
            return this.inheritParamsAndData(i._root), U(i);
          } catch (e) {
            return new ue.a((t) => t.error(e));
          }
        }
        inheritParamsAndData(e) {
          const t = e.value,
            n = ca(t, this.paramsInheritanceStrategy);
          (t.params = Object.freeze(n.params)),
            (t.data = Object.freeze(n.data)),
            e.children.forEach((e) => this.inheritParamsAndData(e));
        }
        processSegmentGroup(e, t, n) {
          return 0 === t.segments.length && t.hasChildren()
            ? this.processChildren(e, t)
            : this.processSegment(e, t, t.segments, n);
        }
        processChildren(e, t) {
          const n = Vo(t, (t, n) => this.processSegmentGroup(e, t, n));
          return (
            (function (e) {
              const t = {};
              e.forEach((e) => {
                const n = t[e.value.outlet];
                if (n) {
                  const t = n.url.map((e) => e.toString()).join("/"),
                    r = e.value.url.map((e) => e.toString()).join("/");
                  throw new Error(
                    `Two segments cannot have the same outlet name: '${t}' and '${r}'.`
                  );
                }
                t[e.value.outlet] = e.value;
              });
            })(n),
            n.sort((e, t) =>
              "primary" === e.value.outlet
                ? -1
                : "primary" === t.value.outlet
                ? 1
                : e.value.outlet.localeCompare(t.value.outlet)
            ),
            n
          );
        }
        processSegment(e, t, n, r) {
          for (const s of e)
            try {
              return this.processSegmentAgainstRoute(s, t, n, r);
            } catch (i) {
              if (!(i instanceof Xa)) throw i;
            }
          if (this.noLeftoversInUrl(t, n, r)) return [];
          throw new Xa();
        }
        noLeftoversInUrl(e, t, n) {
          return 0 === t.length && !e.children[n];
        }
        processSegmentAgainstRoute(e, t, n, r) {
          if (e.redirectTo) throw new Xa();
          if ((e.outlet || "primary") !== r) throw new Xa();
          let i,
            s = [],
            o = [];
          if ("**" === e.path) {
            const s = n.length > 0 ? Ao(n).parameters : {};
            i = new ua(
              n,
              s,
              Object.freeze(Object.assign({}, this.urlTree.queryParams)),
              this.urlTree.fragment,
              sl(e),
              r,
              e.component,
              e,
              el(t),
              tl(t) + n.length,
              ol(e)
            );
          } else {
            const a = (function (e, t, n) {
              if ("" === t.path) {
                if ("full" === t.pathMatch && (e.hasChildren() || n.length > 0))
                  throw new Xa();
                return { consumedSegments: [], lastChild: 0, parameters: {} };
              }
              const r = (t.matcher || Co)(n, e, t);
              if (!r) throw new Xa();
              const i = {};
              To(r.posParams, (e, t) => {
                i[t] = e.path;
              });
              const s =
                r.consumed.length > 0
                  ? Object.assign(
                      Object.assign({}, i),
                      r.consumed[r.consumed.length - 1].parameters
                    )
                  : i;
              return {
                consumedSegments: r.consumed,
                lastChild: r.consumed.length,
                parameters: s,
              };
            })(t, e, n);
            (s = a.consumedSegments),
              (o = n.slice(a.lastChild)),
              (i = new ua(
                s,
                a.parameters,
                Object.freeze(Object.assign({}, this.urlTree.queryParams)),
                this.urlTree.fragment,
                sl(e),
                r,
                e.component,
                e,
                el(t),
                tl(t) + s.length,
                ol(e)
              ));
          }
          const a = (function (e) {
              return e.children
                ? e.children
                : e.loadChildren
                ? e._loadedConfig.routes
                : [];
            })(e),
            { segmentGroup: l, slicedSegments: c } = nl(
              t,
              s,
              o,
              a,
              this.relativeLinkResolution
            );
          if (0 === c.length && l.hasChildren()) {
            const e = this.processChildren(a, l);
            return [new ia(i, e)];
          }
          if (0 === a.length && 0 === c.length) return [new ia(i, [])];
          const u = this.processSegment(a, l, c, "primary");
          return [new ia(i, u)];
        }
      }
      function el(e) {
        let t = e;
        for (; t._sourceSegment; ) t = t._sourceSegment;
        return t;
      }
      function tl(e) {
        let t = e,
          n = t._segmentIndexShift ? t._segmentIndexShift : 0;
        for (; t._sourceSegment; )
          (t = t._sourceSegment),
            (n += t._segmentIndexShift ? t._segmentIndexShift : 0);
        return n - 1;
      }
      function nl(e, t, n, r, i) {
        if (
          n.length > 0 &&
          (function (e, t, n) {
            return n.some((n) => rl(e, t, n) && "primary" !== il(n));
          })(e, n, r)
        ) {
          const i = new No(
            t,
            (function (e, t, n, r) {
              const i = {};
              (i.primary = r),
                (r._sourceSegment = e),
                (r._segmentIndexShift = t.length);
              for (const s of n)
                if ("" === s.path && "primary" !== il(s)) {
                  const n = new No([], {});
                  (n._sourceSegment = e),
                    (n._segmentIndexShift = t.length),
                    (i[il(s)] = n);
                }
              return i;
            })(e, t, r, new No(n, e.children))
          );
          return (
            (i._sourceSegment = e),
            (i._segmentIndexShift = t.length),
            { segmentGroup: i, slicedSegments: [] }
          );
        }
        if (
          0 === n.length &&
          (function (e, t, n) {
            return n.some((n) => rl(e, t, n));
          })(e, n, r)
        ) {
          const s = new No(
            e.segments,
            (function (e, t, n, r, i, s) {
              const o = {};
              for (const a of r)
                if (rl(e, n, a) && !i[il(a)]) {
                  const n = new No([], {});
                  (n._sourceSegment = e),
                    (n._segmentIndexShift =
                      "legacy" === s ? e.segments.length : t.length),
                    (o[il(a)] = n);
                }
              return Object.assign(Object.assign({}, i), o);
            })(e, t, n, r, e.children, i)
          );
          return (
            (s._sourceSegment = e),
            (s._segmentIndexShift = t.length),
            { segmentGroup: s, slicedSegments: n }
          );
        }
        const s = new No(e.segments, e.children);
        return (
          (s._sourceSegment = e),
          (s._segmentIndexShift = t.length),
          { segmentGroup: s, slicedSegments: n }
        );
      }
      function rl(e, t, n) {
        return (
          (!(e.hasChildren() || t.length > 0) || "full" !== n.pathMatch) &&
          "" === n.path &&
          void 0 === n.redirectTo
        );
      }
      function il(e) {
        return e.outlet || "primary";
      }
      function sl(e) {
        return e.data || {};
      }
      function ol(e) {
        return e.resolve || {};
      }
      function al(e, t, n, r) {
        const i = $a(e, t, r);
        return Fo(i.resolve ? i.resolve(t, n) : i(t, n));
      }
      function ll(e) {
        return function (t) {
          return t.pipe(
            Ws((t) => {
              const n = e(t);
              return n
                ? Object(mi.a)(n).pipe(Object(le.a)(() => t))
                : Object(mi.a)([t]);
            })
          );
        };
      }
      class cl {
        shouldDetach(e) {
          return !1;
        }
        store(e, t) {}
        shouldAttach(e) {
          return !1;
        }
        retrieve(e) {
          return null;
        }
        shouldReuseRoute(e, t) {
          return e.routeConfig === t.routeConfig;
        }
      }
      const ul = new r.InjectionToken("ROUTES");
      class hl {
        constructor(e, t, n, r) {
          (this.loader = e),
            (this.compiler = t),
            (this.onLoadStartListener = n),
            (this.onLoadEndListener = r);
        }
        load(e, t) {
          return (
            this.onLoadStartListener && this.onLoadStartListener(t),
            this.loadModuleFactory(t.loadChildren).pipe(
              Object(le.a)((n) => {
                this.onLoadEndListener && this.onLoadEndListener(t);
                const r = n.create(e);
                return new So(Ro(r.injector.get(ul)).map(Io), r);
              })
            )
          );
        }
        loadModuleFactory(e) {
          return "string" == typeof e
            ? Object(mi.a)(this.loader.load(e))
            : Fo(e()).pipe(
                Object(Oi.a)((e) =>
                  e instanceof r.NgModuleFactory
                    ? U(e)
                    : Object(mi.a)(this.compiler.compileModuleAsync(e))
                )
              );
        }
      }
      class dl {
        shouldProcessUrl(e) {
          return !0;
        }
        extract(e) {
          return e;
        }
        merge(e, t) {
          return e;
        }
      }
      function fl(e) {
        throw e;
      }
      function pl(e, t, n) {
        return t.parse("/");
      }
      function ml(e, t) {
        return U(null);
      }
      let gl = (() => {
          class e {
            constructor(e, t, n, i, s, o, a, l) {
              (this.rootComponentType = e),
                (this.urlSerializer = t),
                (this.rootContexts = n),
                (this.location = i),
                (this.config = l),
                (this.lastSuccessfulNavigation = null),
                (this.currentNavigation = null),
                (this.navigationId = 0),
                (this.isNgZoneEnabled = !1),
                (this.events = new M.a()),
                (this.errorHandler = fl),
                (this.malformedUriErrorHandler = pl),
                (this.navigated = !1),
                (this.lastSuccessfulId = -1),
                (this.hooks = {
                  beforePreactivation: ml,
                  afterPreactivation: ml,
                }),
                (this.urlHandlingStrategy = new dl()),
                (this.routeReuseStrategy = new cl()),
                (this.onSameUrlNavigation = "ignore"),
                (this.paramsInheritanceStrategy = "emptyOnly"),
                (this.urlUpdateStrategy = "deferred"),
                (this.relativeLinkResolution = "legacy"),
                (this.ngModule = s.get(r.NgModuleRef)),
                (this.console = s.get(r["\u0275Console"]));
              const c = s.get(r.NgZone);
              (this.isNgZoneEnabled = c instanceof r.NgZone),
                this.resetConfig(l),
                (this.currentUrlTree = new jo(new No([], {}), {}, null)),
                (this.rawUrlTree = this.currentUrlTree),
                (this.browserUrlTree = this.currentUrlTree),
                (this.configLoader = new hl(
                  o,
                  a,
                  (e) => this.triggerEvent(new uo(e)),
                  (e) => this.triggerEvent(new ho(e))
                )),
                (this.routerState = aa(
                  this.currentUrlTree,
                  this.rootComponentType
                )),
                (this.transitions = new xs({
                  id: 0,
                  currentUrlTree: this.currentUrlTree,
                  currentRawUrl: this.currentUrlTree,
                  extractedUrl: this.urlHandlingStrategy.extract(
                    this.currentUrlTree
                  ),
                  urlAfterRedirects: this.urlHandlingStrategy.extract(
                    this.currentUrlTree
                  ),
                  rawUrl: this.currentUrlTree,
                  extras: {},
                  resolve: null,
                  reject: null,
                  promise: Promise.resolve(!0),
                  source: "imperative",
                  restoredState: null,
                  currentSnapshot: this.routerState.snapshot,
                  targetSnapshot: null,
                  currentRouterState: this.routerState,
                  targetRouterState: null,
                  guards: { canActivateChecks: [], canDeactivateChecks: [] },
                  guardsResult: null,
                })),
                (this.navigations = this.setupNavigations(this.transitions)),
                this.processNavigations();
            }
            setupNavigations(e) {
              const t = this.events;
              return e.pipe(
                se((e) => 0 !== e.id),
                Object(le.a)((e) =>
                  Object.assign(Object.assign({}, e), {
                    extractedUrl: this.urlHandlingStrategy.extract(e.rawUrl),
                  })
                ),
                Ws((e) => {
                  let n = !1,
                    r = !1;
                  return U(e).pipe(
                    W((e) => {
                      this.currentNavigation = {
                        id: e.id,
                        initialUrl: e.currentRawUrl,
                        extractedUrl: e.extractedUrl,
                        trigger: e.source,
                        extras: e.extras,
                        previousNavigation: this.lastSuccessfulNavigation
                          ? Object.assign(
                              Object.assign({}, this.lastSuccessfulNavigation),
                              { previousNavigation: null }
                            )
                          : null,
                      };
                    }),
                    Ws((e) => {
                      const n =
                        !this.navigated ||
                        e.extractedUrl.toString() !==
                          this.browserUrlTree.toString();
                      if (
                        ("reload" === this.onSameUrlNavigation || n) &&
                        this.urlHandlingStrategy.shouldProcessUrl(e.rawUrl)
                      )
                        return U(e).pipe(
                          Ws((e) => {
                            const n = this.transitions.getValue();
                            return (
                              t.next(
                                new to(
                                  e.id,
                                  this.serializeUrl(e.extractedUrl),
                                  e.source,
                                  e.restoredState
                                )
                              ),
                              n !== this.transitions.getValue() ? he : [e]
                            );
                          }),
                          Ws((e) => Promise.resolve(e)),
                          ((r = this.ngModule.injector),
                          (i = this.configLoader),
                          (s = this.urlSerializer),
                          (o = this.config),
                          function (e) {
                            return e.pipe(
                              Ws((e) =>
                                (function (e, t, n, r, i) {
                                  return new Na(e, t, n, r, i).apply();
                                })(r, i, s, e.extractedUrl, o).pipe(
                                  Object(le.a)((t) =>
                                    Object.assign(Object.assign({}, e), {
                                      urlAfterRedirects: t,
                                    })
                                  )
                                )
                              )
                            );
                          }),
                          W((e) => {
                            this.currentNavigation = Object.assign(
                              Object.assign({}, this.currentNavigation),
                              { finalUrl: e.urlAfterRedirects }
                            );
                          }),
                          (function (e, t, n, r, i) {
                            return function (s) {
                              return s.pipe(
                                Object(Oi.a)((s) =>
                                  (function (
                                    e,
                                    t,
                                    n,
                                    r,
                                    i = "emptyOnly",
                                    s = "legacy"
                                  ) {
                                    return new Ja(e, t, n, r, i, s).recognize();
                                  })(
                                    e,
                                    t,
                                    s.urlAfterRedirects,
                                    n(s.urlAfterRedirects),
                                    r,
                                    i
                                  ).pipe(
                                    Object(le.a)((e) =>
                                      Object.assign(Object.assign({}, s), {
                                        targetSnapshot: e,
                                      })
                                    )
                                  )
                                )
                              );
                            };
                          })(
                            this.rootComponentType,
                            this.config,
                            (e) => this.serializeUrl(e),
                            this.paramsInheritanceStrategy,
                            this.relativeLinkResolution
                          ),
                          W((e) => {
                            "eager" === this.urlUpdateStrategy &&
                              (e.extras.skipLocationChange ||
                                this.setBrowserUrl(
                                  e.urlAfterRedirects,
                                  !!e.extras.replaceUrl,
                                  e.id,
                                  e.extras.state
                                ),
                              (this.browserUrlTree = e.urlAfterRedirects));
                          }),
                          W((e) => {
                            const n = new so(
                              e.id,
                              this.serializeUrl(e.extractedUrl),
                              this.serializeUrl(e.urlAfterRedirects),
                              e.targetSnapshot
                            );
                            t.next(n);
                          })
                        );
                      var r, i, s, o;
                      if (
                        n &&
                        this.rawUrlTree &&
                        this.urlHandlingStrategy.shouldProcessUrl(
                          this.rawUrlTree
                        )
                      ) {
                        const {
                            id: n,
                            extractedUrl: r,
                            source: i,
                            restoredState: s,
                            extras: o,
                          } = e,
                          a = new to(n, this.serializeUrl(r), i, s);
                        t.next(a);
                        const l = aa(r, this.rootComponentType).snapshot;
                        return U(
                          Object.assign(Object.assign({}, e), {
                            targetSnapshot: l,
                            urlAfterRedirects: r,
                            extras: Object.assign(Object.assign({}, o), {
                              skipLocationChange: !1,
                              replaceUrl: !1,
                            }),
                          })
                        );
                      }
                      return (
                        (this.rawUrlTree = e.rawUrl),
                        (this.browserUrlTree = e.urlAfterRedirects),
                        e.resolve(null),
                        he
                      );
                    }),
                    ll((e) => {
                      const {
                        targetSnapshot: t,
                        id: n,
                        extractedUrl: r,
                        rawUrl: i,
                        extras: { skipLocationChange: s, replaceUrl: o },
                      } = e;
                      return this.hooks.beforePreactivation(t, {
                        navigationId: n,
                        appliedUrlTree: r,
                        rawUrlTree: i,
                        skipLocationChange: !!s,
                        replaceUrl: !!o,
                      });
                    }),
                    W((e) => {
                      const t = new oo(
                        e.id,
                        this.serializeUrl(e.extractedUrl),
                        this.serializeUrl(e.urlAfterRedirects),
                        e.targetSnapshot
                      );
                      this.triggerEvent(t);
                    }),
                    Object(le.a)((e) =>
                      Object.assign(Object.assign({}, e), {
                        guards: Ha(
                          e.targetSnapshot,
                          e.currentSnapshot,
                          this.rootContexts
                        ),
                      })
                    ),
                    (function (e, t) {
                      return function (n) {
                        return n.pipe(
                          Object(Oi.a)((n) => {
                            const {
                              targetSnapshot: r,
                              currentSnapshot: i,
                              guards: {
                                canActivateChecks: s,
                                canDeactivateChecks: o,
                              },
                            } = n;
                            return 0 === o.length && 0 === s.length
                              ? U(
                                  Object.assign(Object.assign({}, n), {
                                    guardsResult: !0,
                                  })
                                )
                              : (function (e, t, n, r) {
                                  return Object(mi.a)(e).pipe(
                                    Object(Oi.a)((e) =>
                                      (function (e, t, n, r, i) {
                                        const s =
                                          t && t.routeConfig
                                            ? t.routeConfig.canDeactivate
                                            : null;
                                        return s && 0 !== s.length
                                          ? U(
                                              s.map((s) => {
                                                const o = $a(s, t, i);
                                                let a;
                                                if (
                                                  (function (e) {
                                                    return (
                                                      e && ka(e.canDeactivate)
                                                    );
                                                  })(o)
                                                )
                                                  a = Fo(
                                                    o.canDeactivate(e, t, n, r)
                                                  );
                                                else {
                                                  if (!ka(o))
                                                    throw new Error(
                                                      "Invalid CanDeactivate guard"
                                                    );
                                                  a = Fo(o(e, t, n, r));
                                                }
                                                return a.pipe($s());
                                              })
                                            ).pipe(Wa())
                                          : U(!0);
                                      })(e.component, e.route, n, t, r)
                                    ),
                                    $s((e) => !0 !== e, !0)
                                  );
                                })(o, r, i, e).pipe(
                                  Object(Oi.a)((n) =>
                                    n && "boolean" == typeof n
                                      ? (function (e, t, n, r) {
                                          return Object(mi.a)(t).pipe(
                                            ki((t) =>
                                              Object(mi.a)([
                                                Ka(t.route.parent, r),
                                                Qa(t.route, r),
                                                Ya(e, t.path, n),
                                                Za(e, t.route, n),
                                              ]).pipe(
                                                tt(),
                                                $s((e) => !0 !== e, !0)
                                              )
                                            ),
                                            $s((e) => !0 !== e, !0)
                                          );
                                        })(r, s, e, t)
                                      : U(n)
                                  ),
                                  Object(le.a)((e) =>
                                    Object.assign(Object.assign({}, n), {
                                      guardsResult: e,
                                    })
                                  )
                                );
                          })
                        );
                      };
                    })(this.ngModule.injector, (e) => this.triggerEvent(e)),
                    W((e) => {
                      if (Ra(e.guardsResult)) {
                        const t = wo(
                          `Redirecting to "${this.serializeUrl(
                            e.guardsResult
                          )}"`
                        );
                        throw ((t.url = e.guardsResult), t);
                      }
                    }),
                    W((e) => {
                      const t = new ao(
                        e.id,
                        this.serializeUrl(e.extractedUrl),
                        this.serializeUrl(e.urlAfterRedirects),
                        e.targetSnapshot,
                        !!e.guardsResult
                      );
                      this.triggerEvent(t);
                    }),
                    se((e) => {
                      if (!e.guardsResult) {
                        this.resetUrlToCurrentUrlTree();
                        const n = new ro(
                          e.id,
                          this.serializeUrl(e.extractedUrl),
                          ""
                        );
                        return t.next(n), e.resolve(!1), !1;
                      }
                      return !0;
                    }),
                    ll((e) => {
                      if (e.guards.canActivateChecks.length)
                        return U(e).pipe(
                          W((e) => {
                            const t = new lo(
                              e.id,
                              this.serializeUrl(e.extractedUrl),
                              this.serializeUrl(e.urlAfterRedirects),
                              e.targetSnapshot
                            );
                            this.triggerEvent(t);
                          }),
                          ((t = this.paramsInheritanceStrategy),
                          (n = this.ngModule.injector),
                          function (e) {
                            return e.pipe(
                              Object(Oi.a)((e) => {
                                const {
                                  targetSnapshot: r,
                                  guards: { canActivateChecks: i },
                                } = e;
                                return i.length
                                  ? Object(mi.a)(i).pipe(
                                      ki((e) =>
                                        (function (e, t, n, r) {
                                          return (function (e, t, n, r) {
                                            const i = Object.keys(e);
                                            if (0 === i.length) return U({});
                                            if (1 === i.length) {
                                              const s = i[0];
                                              return al(e[s], t, n, r).pipe(
                                                Object(le.a)((e) => ({
                                                  [s]: e,
                                                }))
                                              );
                                            }
                                            const s = {};
                                            return Object(mi.a)(i)
                                              .pipe(
                                                Object(Oi.a)((i) =>
                                                  al(e[i], t, n, r).pipe(
                                                    Object(le.a)(
                                                      (e) => ((s[i] = e), e)
                                                    )
                                                  )
                                                )
                                              )
                                              .pipe(
                                                Hs(),
                                                Object(le.a)(() => s)
                                              );
                                          })(e._resolve, e, t, r).pipe(
                                            Object(le.a)(
                                              (t) => (
                                                (e._resolvedData = t),
                                                (e.data = Object.assign(
                                                  Object.assign({}, e.data),
                                                  ca(e, n).resolve
                                                )),
                                                null
                                              )
                                            )
                                          );
                                        })(e.route, r, t, n)
                                      ),
                                      (function (e, t) {
                                        return arguments.length >= 2
                                          ? function (n) {
                                              return Object(Js.a)(
                                                Zs(e, t),
                                                Ts(1),
                                                Vs(t)
                                              )(n);
                                            }
                                          : function (t) {
                                              return Object(Js.a)(
                                                Zs((t, n, r) => e(t, n, r + 1)),
                                                Ts(1)
                                              )(t);
                                            };
                                      })((e, t) => e),
                                      Object(le.a)((t) => e)
                                    )
                                  : U(e);
                              })
                            );
                          }),
                          W((e) => {
                            const t = new co(
                              e.id,
                              this.serializeUrl(e.extractedUrl),
                              this.serializeUrl(e.urlAfterRedirects),
                              e.targetSnapshot
                            );
                            this.triggerEvent(t);
                          })
                        );
                      var t, n;
                    }),
                    ll((e) => {
                      const {
                        targetSnapshot: t,
                        id: n,
                        extractedUrl: r,
                        rawUrl: i,
                        extras: { skipLocationChange: s, replaceUrl: o },
                      } = e;
                      return this.hooks.afterPreactivation(t, {
                        navigationId: n,
                        appliedUrlTree: r,
                        rawUrlTree: i,
                        skipLocationChange: !!s,
                        replaceUrl: !!o,
                      });
                    }),
                    Object(le.a)((e) => {
                      const t = (function (e, t, n) {
                        const r = (function e(t, n, r) {
                          if (
                            r &&
                            t.shouldReuseRoute(n.value, r.value.snapshot)
                          ) {
                            const i = r.value;
                            i._futureSnapshot = n.value;
                            const s = (function (t, n, r) {
                              return n.children.map((n) => {
                                for (const i of r.children)
                                  if (
                                    t.shouldReuseRoute(
                                      i.value.snapshot,
                                      n.value
                                    )
                                  )
                                    return e(t, n, i);
                                return e(t, n);
                              });
                            })(t, n, r);
                            return new ia(i, s);
                          }
                          {
                            const r = t.retrieve(n.value);
                            if (r) {
                              const e = r.route;
                              return (
                                (function e(t, n) {
                                  if (
                                    t.value.routeConfig !== n.value.routeConfig
                                  )
                                    throw new Error(
                                      "Cannot reattach ActivatedRouteSnapshot created from a different route"
                                    );
                                  if (t.children.length !== n.children.length)
                                    throw new Error(
                                      "Cannot reattach ActivatedRouteSnapshot with a different number of children"
                                    );
                                  n.value._futureSnapshot = t.value;
                                  for (let r = 0; r < t.children.length; ++r)
                                    e(t.children[r], n.children[r]);
                                })(n, e),
                                e
                              );
                            }
                            {
                              const r = new la(
                                  new xs((i = n.value).url),
                                  new xs(i.params),
                                  new xs(i.queryParams),
                                  new xs(i.fragment),
                                  new xs(i.data),
                                  i.outlet,
                                  i.component,
                                  i
                                ),
                                s = n.children.map((n) => e(t, n));
                              return new ia(r, s);
                            }
                          }
                          var i;
                        })(e, t._root, n ? n._root : void 0);
                        return new oa(r, t);
                      })(
                        this.routeReuseStrategy,
                        e.targetSnapshot,
                        e.currentRouterState
                      );
                      return Object.assign(Object.assign({}, e), {
                        targetRouterState: t,
                      });
                    }),
                    W((e) => {
                      (this.currentUrlTree = e.urlAfterRedirects),
                        (this.rawUrlTree = this.urlHandlingStrategy.merge(
                          this.currentUrlTree,
                          e.rawUrl
                        )),
                        (this.routerState = e.targetRouterState),
                        "deferred" === this.urlUpdateStrategy &&
                          (e.extras.skipLocationChange ||
                            this.setBrowserUrl(
                              this.rawUrlTree,
                              !!e.extras.replaceUrl,
                              e.id,
                              e.extras.state
                            ),
                          (this.browserUrlTree = e.urlAfterRedirects));
                    }),
                    ((i = this.rootContexts),
                    (s = this.routeReuseStrategy),
                    (o = (e) => this.triggerEvent(e)),
                    Object(le.a)(
                      (e) => (
                        new Ia(
                          s,
                          e.targetRouterState,
                          e.currentRouterState,
                          o
                        ).activate(i),
                        e
                      )
                    )),
                    W({
                      next() {
                        n = !0;
                      },
                      complete() {
                        n = !0;
                      },
                    }),
                    Ei(() => {
                      if (!n && !r) {
                        this.resetUrlToCurrentUrlTree();
                        const n = new ro(
                          e.id,
                          this.serializeUrl(e.extractedUrl),
                          `Navigation ID ${e.id} is not equal to the current navigation id ${this.navigationId}`
                        );
                        t.next(n), e.resolve(!1);
                      }
                      this.currentNavigation = null;
                    }),
                    wi((n) => {
                      if (((r = !0), (i = n) && i.ngNavigationCancelingError)) {
                        const r = Ra(n.url);
                        r ||
                          ((this.navigated = !0),
                          this.resetStateAndUrl(
                            e.currentRouterState,
                            e.currentUrlTree,
                            e.rawUrl
                          ));
                        const i = new ro(
                          e.id,
                          this.serializeUrl(e.extractedUrl),
                          n.message
                        );
                        t.next(i),
                          r
                            ? setTimeout(() => {
                                const t = this.urlHandlingStrategy.merge(
                                  n.url,
                                  this.rawUrlTree
                                );
                                return this.scheduleNavigation(
                                  t,
                                  "imperative",
                                  null,
                                  {
                                    skipLocationChange:
                                      e.extras.skipLocationChange,
                                    replaceUrl:
                                      "eager" === this.urlUpdateStrategy,
                                  },
                                  {
                                    resolve: e.resolve,
                                    reject: e.reject,
                                    promise: e.promise,
                                  }
                                );
                              }, 0)
                            : e.resolve(!1);
                      } else {
                        this.resetStateAndUrl(
                          e.currentRouterState,
                          e.currentUrlTree,
                          e.rawUrl
                        );
                        const r = new io(
                          e.id,
                          this.serializeUrl(e.extractedUrl),
                          n
                        );
                        t.next(r);
                        try {
                          e.resolve(this.errorHandler(n));
                        } catch (s) {
                          e.reject(s);
                        }
                      }
                      var i;
                      return he;
                    })
                  );
                  var i, s, o;
                })
              );
            }
            resetRootComponentType(e) {
              (this.rootComponentType = e),
                (this.routerState.root.component = this.rootComponentType);
            }
            getTransition() {
              const e = this.transitions.value;
              return (e.urlAfterRedirects = this.browserUrlTree), e;
            }
            setTransition(e) {
              this.transitions.next(
                Object.assign(Object.assign({}, this.getTransition()), e)
              );
            }
            initialNavigation() {
              this.setUpLocationChangeListener(),
                0 === this.navigationId &&
                  this.navigateByUrl(this.location.path(!0), {
                    replaceUrl: !0,
                  });
            }
            setUpLocationChangeListener() {
              this.locationSubscription ||
                (this.locationSubscription = this.location.subscribe((e) => {
                  let t = this.parseUrl(e.url);
                  const n = "popstate" === e.type ? "popstate" : "hashchange",
                    r = e.state && e.state.navigationId ? e.state : null;
                  setTimeout(() => {
                    this.scheduleNavigation(t, n, r, { replaceUrl: !0 });
                  }, 0);
                }));
            }
            get url() {
              return this.serializeUrl(this.currentUrlTree);
            }
            getCurrentNavigation() {
              return this.currentNavigation;
            }
            triggerEvent(e) {
              this.events.next(e);
            }
            resetConfig(e) {
              Eo(e),
                (this.config = e.map(Io)),
                (this.navigated = !1),
                (this.lastSuccessfulId = -1);
            }
            ngOnDestroy() {
              this.dispose();
            }
            dispose() {
              this.locationSubscription &&
                (this.locationSubscription.unsubscribe(),
                (this.locationSubscription = null));
            }
            createUrlTree(e, t = {}) {
              const {
                relativeTo: n,
                queryParams: i,
                fragment: s,
                preserveQueryParams: o,
                queryParamsHandling: a,
                preserveFragment: l,
              } = t;
              Object(r.isDevMode)() &&
                o &&
                console &&
                console.warn &&
                console.warn(
                  "preserveQueryParams is deprecated, use queryParamsHandling instead."
                );
              const c = n || this.routerState.root,
                u = l ? this.currentUrlTree.fragment : s;
              let h = null;
              if (a)
                switch (a) {
                  case "merge":
                    h = Object.assign(
                      Object.assign({}, this.currentUrlTree.queryParams),
                      i
                    );
                    break;
                  case "preserve":
                    h = this.currentUrlTree.queryParams;
                    break;
                  default:
                    h = i || null;
                }
              else h = o ? this.currentUrlTree.queryParams : i || null;
              return (
                null !== h && (h = this.removeEmptyProps(h)),
                (function (e, t, n, r, i) {
                  if (0 === n.length) return _a(t.root, t.root, t, r, i);
                  const s = (function (e) {
                    if (
                      "string" == typeof e[0] &&
                      1 === e.length &&
                      "/" === e[0]
                    )
                      return new ya(!0, 0, e);
                    let t = 0,
                      n = !1;
                    const r = e.reduce((e, r, i) => {
                      if ("object" == typeof r && null != r) {
                        if (r.outlets) {
                          const t = {};
                          return (
                            To(r.outlets, (e, n) => {
                              t[n] = "string" == typeof e ? e.split("/") : e;
                            }),
                            [...e, { outlets: t }]
                          );
                        }
                        if (r.segmentPath) return [...e, r.segmentPath];
                      }
                      return "string" != typeof r
                        ? [...e, r]
                        : 0 === i
                        ? (r.split("/").forEach((r, i) => {
                            (0 == i && "." === r) ||
                              (0 == i && "" === r
                                ? (n = !0)
                                : ".." === r
                                ? t++
                                : "" != r && e.push(r));
                          }),
                          e)
                        : [...e, r];
                    }, []);
                    return new ya(n, t, r);
                  })(n);
                  if (s.toRoot()) return _a(t.root, new No([], {}), t, r, i);
                  const o = (function (e, t, n) {
                      if (e.isAbsolute) return new va(t.root, !0, 0);
                      if (-1 === n.snapshot._lastPathIndex)
                        return new va(n.snapshot._urlSegment, !0, 0);
                      const r = ga(e.commands[0]) ? 0 : 1;
                      return (function (e, t, n) {
                        let r = e,
                          i = t,
                          s = n;
                        for (; s > i; ) {
                          if (((s -= i), (r = r.parent), !r))
                            throw new Error("Invalid number of '../'");
                          i = r.segments.length;
                        }
                        return new va(r, !1, i - s);
                      })(
                        n.snapshot._urlSegment,
                        n.snapshot._lastPathIndex + r,
                        e.numberOfDoubleDots
                      );
                    })(s, t, e),
                    a = o.processChildren
                      ? Ca(o.segmentGroup, o.index, s.commands)
                      : wa(o.segmentGroup, o.index, s.commands);
                  return _a(o.segmentGroup, a, t, r, i);
                })(c, this.currentUrlTree, e, h, u)
              );
            }
            navigateByUrl(e, t = { skipLocationChange: !1 }) {
              Object(r.isDevMode)() &&
                this.isNgZoneEnabled &&
                !r.NgZone.isInAngularZone() &&
                this.console.warn(
                  "Navigation triggered outside Angular zone, did you forget to call 'ngZone.run()'?"
                );
              const n = Ra(e) ? e : this.parseUrl(e),
                i = this.urlHandlingStrategy.merge(n, this.rawUrlTree);
              return this.scheduleNavigation(i, "imperative", null, t);
            }
            navigate(e, t = { skipLocationChange: !1 }) {
              return (
                (function (e) {
                  for (let t = 0; t < e.length; t++) {
                    const n = e[t];
                    if (null == n)
                      throw new Error(
                        `The requested path contains ${n} segment at index ${t}`
                      );
                  }
                })(e),
                this.navigateByUrl(this.createUrlTree(e, t), t)
              );
            }
            serializeUrl(e) {
              return this.urlSerializer.serialize(e);
            }
            parseUrl(e) {
              let t;
              try {
                t = this.urlSerializer.parse(e);
              } catch (n) {
                t = this.malformedUriErrorHandler(n, this.urlSerializer, e);
              }
              return t;
            }
            isActive(e, t) {
              if (Ra(e)) return Po(this.currentUrlTree, e, t);
              const n = this.parseUrl(e);
              return Po(this.currentUrlTree, n, t);
            }
            removeEmptyProps(e) {
              return Object.keys(e).reduce((t, n) => {
                const r = e[n];
                return null != r && (t[n] = r), t;
              }, {});
            }
            processNavigations() {
              this.navigations.subscribe(
                (e) => {
                  (this.navigated = !0),
                    (this.lastSuccessfulId = e.id),
                    this.events.next(
                      new no(
                        e.id,
                        this.serializeUrl(e.extractedUrl),
                        this.serializeUrl(this.currentUrlTree)
                      )
                    ),
                    (this.lastSuccessfulNavigation = this.currentNavigation),
                    (this.currentNavigation = null),
                    e.resolve(!0);
                },
                (e) => {
                  this.console.warn("Unhandled Navigation Error: ");
                }
              );
            }
            scheduleNavigation(e, t, n, r, i) {
              const s = this.getTransition();
              if (
                s &&
                "imperative" !== t &&
                "imperative" === s.source &&
                s.rawUrl.toString() === e.toString()
              )
                return Promise.resolve(!0);
              if (
                s &&
                "hashchange" == t &&
                "popstate" === s.source &&
                s.rawUrl.toString() === e.toString()
              )
                return Promise.resolve(!0);
              if (
                s &&
                "popstate" == t &&
                "hashchange" === s.source &&
                s.rawUrl.toString() === e.toString()
              )
                return Promise.resolve(!0);
              let o, a, l;
              i
                ? ((o = i.resolve), (a = i.reject), (l = i.promise))
                : (l = new Promise((e, t) => {
                    (o = e), (a = t);
                  }));
              const c = ++this.navigationId;
              return (
                this.setTransition({
                  id: c,
                  source: t,
                  restoredState: n,
                  currentUrlTree: this.currentUrlTree,
                  currentRawUrl: this.rawUrlTree,
                  rawUrl: e,
                  extras: r,
                  resolve: o,
                  reject: a,
                  promise: l,
                  currentSnapshot: this.routerState.snapshot,
                  currentRouterState: this.routerState,
                }),
                l.catch((e) => Promise.reject(e))
              );
            }
            setBrowserUrl(e, t, n, r) {
              const i = this.urlSerializer.serialize(e);
              (r = r || {}),
                this.location.isCurrentPathEqualTo(i) || t
                  ? this.location.replaceState(
                      i,
                      "",
                      Object.assign(Object.assign({}, r), { navigationId: n })
                    )
                  : this.location.go(
                      i,
                      "",
                      Object.assign(Object.assign({}, r), { navigationId: n })
                    );
            }
            resetStateAndUrl(e, t, n) {
              (this.routerState = e),
                (this.currentUrlTree = t),
                (this.rawUrlTree = this.urlHandlingStrategy.merge(
                  this.currentUrlTree,
                  n
                )),
                this.resetUrlToCurrentUrlTree();
            }
            resetUrlToCurrentUrlTree() {
              this.location.replaceState(
                this.urlSerializer.serialize(this.rawUrlTree),
                "",
                { navigationId: this.lastSuccessfulId }
              );
            }
          }
          return (
            (e.ɵfac = function (e) {
              r["\u0275\u0275invalidFactory"]();
            }),
            (e.ɵdir = r["\u0275\u0275defineDirective"]({ type: e })),
            e
          );
        })(),
        _l = (() => {
          class e {
            constructor(e, t, n) {
              (this.router = e),
                (this.route = t),
                (this.locationStrategy = n),
                (this.commands = []),
                (this.subscription = e.events.subscribe((e) => {
                  e instanceof no && this.updateTargetUrlAndHref();
                }));
            }
            set routerLink(e) {
              this.commands = null != e ? (Array.isArray(e) ? e : [e]) : [];
            }
            set preserveQueryParams(e) {
              Object(r.isDevMode)() &&
                console &&
                console.warn &&
                console.warn(
                  "preserveQueryParams is deprecated, use queryParamsHandling instead."
                ),
                (this.preserve = e);
            }
            ngOnChanges(e) {
              this.updateTargetUrlAndHref();
            }
            ngOnDestroy() {
              this.subscription.unsubscribe();
            }
            onClick(e, t, n, r) {
              if (0 !== e || t || n || r) return !0;
              if ("string" == typeof this.target && "_self" != this.target)
                return !0;
              const i = {
                skipLocationChange: yl(this.skipLocationChange),
                replaceUrl: yl(this.replaceUrl),
                state: this.state,
              };
              return this.router.navigateByUrl(this.urlTree, i), !1;
            }
            updateTargetUrlAndHref() {
              this.href = this.locationStrategy.prepareExternalUrl(
                this.router.serializeUrl(this.urlTree)
              );
            }
            get urlTree() {
              return this.router.createUrlTree(this.commands, {
                relativeTo: this.route,
                queryParams: this.queryParams,
                fragment: this.fragment,
                preserveQueryParams: yl(this.preserve),
                queryParamsHandling: this.queryParamsHandling,
                preserveFragment: yl(this.preserveFragment),
              });
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(
                r["\u0275\u0275directiveInject"](gl),
                r["\u0275\u0275directiveInject"](la),
                r["\u0275\u0275directiveInject"](i.LocationStrategy)
              );
            }),
            (e.ɵdir = r["\u0275\u0275defineDirective"]({
              type: e,
              selectors: [
                ["a", "routerLink", ""],
                ["area", "routerLink", ""],
              ],
              hostVars: 2,
              hostBindings: function (e, t) {
                1 & e &&
                  r["\u0275\u0275listener"]("click", function (e) {
                    return t.onClick(
                      e.button,
                      e.ctrlKey,
                      e.metaKey,
                      e.shiftKey
                    );
                  }),
                  2 & e &&
                    (r["\u0275\u0275hostProperty"](
                      "href",
                      t.href,
                      r["\u0275\u0275sanitizeUrl"]
                    ),
                    r["\u0275\u0275attribute"]("target", t.target));
              },
              inputs: {
                routerLink: "routerLink",
                preserveQueryParams: "preserveQueryParams",
                target: "target",
                queryParams: "queryParams",
                fragment: "fragment",
                queryParamsHandling: "queryParamsHandling",
                preserveFragment: "preserveFragment",
                skipLocationChange: "skipLocationChange",
                replaceUrl: "replaceUrl",
                state: "state",
              },
              features: [r["\u0275\u0275NgOnChangesFeature"]],
            })),
            e
          );
        })();
      function yl(e) {
        return "" === e || !!e;
      }
      class vl {
        constructor() {
          (this.outlet = null),
            (this.route = null),
            (this.resolver = null),
            (this.children = new bl()),
            (this.attachRef = null);
        }
      }
      class bl {
        constructor() {
          this.contexts = new Map();
        }
        onChildOutletCreated(e, t) {
          const n = this.getOrCreateContext(e);
          (n.outlet = t), this.contexts.set(e, n);
        }
        onChildOutletDestroyed(e) {
          const t = this.getContext(e);
          t && (t.outlet = null);
        }
        onOutletDeactivated() {
          const e = this.contexts;
          return (this.contexts = new Map()), e;
        }
        onOutletReAttached(e) {
          this.contexts = e;
        }
        getOrCreateContext(e) {
          let t = this.getContext(e);
          return t || ((t = new vl()), this.contexts.set(e, t)), t;
        }
        getContext(e) {
          return this.contexts.get(e) || null;
        }
      }
      let wl = (() => {
        class e {
          constructor(e, t, n, i, s) {
            (this.parentContexts = e),
              (this.location = t),
              (this.resolver = n),
              (this.changeDetector = s),
              (this.activated = null),
              (this._activatedRoute = null),
              (this.activateEvents = new r.EventEmitter()),
              (this.deactivateEvents = new r.EventEmitter()),
              (this.name = i || "primary"),
              e.onChildOutletCreated(this.name, this);
          }
          ngOnDestroy() {
            this.parentContexts.onChildOutletDestroyed(this.name);
          }
          ngOnInit() {
            if (!this.activated) {
              const e = this.parentContexts.getContext(this.name);
              e &&
                e.route &&
                (e.attachRef
                  ? this.attach(e.attachRef, e.route)
                  : this.activateWith(e.route, e.resolver || null));
            }
          }
          get isActivated() {
            return !!this.activated;
          }
          get component() {
            if (!this.activated) throw new Error("Outlet is not activated");
            return this.activated.instance;
          }
          get activatedRoute() {
            if (!this.activated) throw new Error("Outlet is not activated");
            return this._activatedRoute;
          }
          get activatedRouteData() {
            return this._activatedRoute
              ? this._activatedRoute.snapshot.data
              : {};
          }
          detach() {
            if (!this.activated) throw new Error("Outlet is not activated");
            this.location.detach();
            const e = this.activated;
            return (this.activated = null), (this._activatedRoute = null), e;
          }
          attach(e, t) {
            (this.activated = e),
              (this._activatedRoute = t),
              this.location.insert(e.hostView);
          }
          deactivate() {
            if (this.activated) {
              const e = this.component;
              this.activated.destroy(),
                (this.activated = null),
                (this._activatedRoute = null),
                this.deactivateEvents.emit(e);
            }
          }
          activateWith(e, t) {
            if (this.isActivated)
              throw new Error("Cannot activate an already activated outlet");
            this._activatedRoute = e;
            const n = (t = t || this.resolver).resolveComponentFactory(
                e._futureSnapshot.routeConfig.component
              ),
              r = this.parentContexts.getOrCreateContext(this.name).children,
              i = new Cl(e, r, this.location.injector);
            (this.activated = this.location.createComponent(
              n,
              this.location.length,
              i
            )),
              this.changeDetector.markForCheck(),
              this.activateEvents.emit(this.activated.instance);
          }
        }
        return (
          (e.ɵfac = function (t) {
            return new (t || e)(
              r["\u0275\u0275directiveInject"](bl),
              r["\u0275\u0275directiveInject"](r.ViewContainerRef),
              r["\u0275\u0275directiveInject"](r.ComponentFactoryResolver),
              r["\u0275\u0275injectAttribute"]("name"),
              r["\u0275\u0275directiveInject"](r.ChangeDetectorRef)
            );
          }),
          (e.ɵdir = r["\u0275\u0275defineDirective"]({
            type: e,
            selectors: [["router-outlet"]],
            outputs: {
              activateEvents: "activate",
              deactivateEvents: "deactivate",
            },
            exportAs: ["outlet"],
          })),
          e
        );
      })();
      class Cl {
        constructor(e, t, n) {
          (this.route = e), (this.childContexts = t), (this.parent = n);
        }
        get(e, t) {
          return e === la
            ? this.route
            : e === bl
            ? this.childContexts
            : this.parent.get(e, t);
        }
      }
      class Sl {}
      class El {
        preload(e, t) {
          return U(null);
        }
      }
      let xl = (() => {
          class e {
            constructor(e, t, n, r, i) {
              (this.router = e),
                (this.injector = r),
                (this.preloadingStrategy = i),
                (this.loader = new hl(
                  t,
                  n,
                  (t) => e.triggerEvent(new uo(t)),
                  (t) => e.triggerEvent(new ho(t))
                ));
            }
            setUpPreloading() {
              this.subscription = this.router.events
                .pipe(
                  se((e) => e instanceof no),
                  ki(() => this.preload())
                )
                .subscribe(() => {});
            }
            preload() {
              const e = this.injector.get(r.NgModuleRef);
              return this.processRoutes(e, this.router.config);
            }
            ngOnDestroy() {
              this.subscription.unsubscribe();
            }
            processRoutes(e, t) {
              const n = [];
              for (const r of t)
                if (r.loadChildren && !r.canLoad && r._loadedConfig) {
                  const e = r._loadedConfig;
                  n.push(this.processRoutes(e.module, e.routes));
                } else
                  r.loadChildren && !r.canLoad
                    ? n.push(this.preloadConfig(e, r))
                    : r.children && n.push(this.processRoutes(e, r.children));
              return Object(mi.a)(n).pipe(
                Object(et.a)(),
                Object(le.a)((e) => {})
              );
            }
            preloadConfig(e, t) {
              return this.preloadingStrategy.preload(t, () =>
                this.loader
                  .load(e.injector, t)
                  .pipe(
                    Object(Oi.a)(
                      (e) => (
                        (t._loadedConfig = e),
                        this.processRoutes(e.module, e.routes)
                      )
                    )
                  )
              );
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(
                r["\u0275\u0275inject"](gl),
                r["\u0275\u0275inject"](r.NgModuleFactoryLoader),
                r["\u0275\u0275inject"](r.Compiler),
                r["\u0275\u0275inject"](r.Injector),
                r["\u0275\u0275inject"](Sl)
              );
            }),
            (e.ɵprov = r["\u0275\u0275defineInjectable"]({
              token: e,
              factory: e.ɵfac,
            })),
            e
          );
        })(),
        Dl = (() => {
          class e {
            constructor(e, t, n = {}) {
              (this.router = e),
                (this.viewportScroller = t),
                (this.options = n),
                (this.lastId = 0),
                (this.lastSource = "imperative"),
                (this.restoredId = 0),
                (this.store = {}),
                (n.scrollPositionRestoration =
                  n.scrollPositionRestoration || "disabled"),
                (n.anchorScrolling = n.anchorScrolling || "disabled");
            }
            init() {
              "disabled" !== this.options.scrollPositionRestoration &&
                this.viewportScroller.setHistoryScrollRestoration("manual"),
                (this.routerEventsSubscription = this.createScrollEvents()),
                (this.scrollEventsSubscription = this.consumeScrollEvents());
            }
            createScrollEvents() {
              return this.router.events.subscribe((e) => {
                e instanceof to
                  ? ((this.store[
                      this.lastId
                    ] = this.viewportScroller.getScrollPosition()),
                    (this.lastSource = e.navigationTrigger),
                    (this.restoredId = e.restoredState
                      ? e.restoredState.navigationId
                      : 0))
                  : e instanceof no &&
                    ((this.lastId = e.id),
                    this.scheduleScrollEvent(
                      e,
                      this.router.parseUrl(e.urlAfterRedirects).fragment
                    ));
              });
            }
            consumeScrollEvents() {
              return this.router.events.subscribe((e) => {
                e instanceof _o &&
                  (e.position
                    ? "top" === this.options.scrollPositionRestoration
                      ? this.viewportScroller.scrollToPosition([0, 0])
                      : "enabled" === this.options.scrollPositionRestoration &&
                        this.viewportScroller.scrollToPosition(e.position)
                    : e.anchor && "enabled" === this.options.anchorScrolling
                    ? this.viewportScroller.scrollToAnchor(e.anchor)
                    : "disabled" !== this.options.scrollPositionRestoration &&
                      this.viewportScroller.scrollToPosition([0, 0]));
              });
            }
            scheduleScrollEvent(e, t) {
              this.router.triggerEvent(
                new _o(
                  e,
                  "popstate" === this.lastSource
                    ? this.store[this.restoredId]
                    : null,
                  t
                )
              );
            }
            ngOnDestroy() {
              this.routerEventsSubscription &&
                this.routerEventsSubscription.unsubscribe(),
                this.scrollEventsSubscription &&
                  this.scrollEventsSubscription.unsubscribe();
            }
          }
          return (
            (e.ɵfac = function (e) {
              r["\u0275\u0275invalidFactory"]();
            }),
            (e.ɵdir = r["\u0275\u0275defineDirective"]({ type: e })),
            e
          );
        })();
      const Il = new r.InjectionToken("ROUTER_CONFIGURATION"),
        Ol = new r.InjectionToken("ROUTER_FORROOT_GUARD"),
        kl = [
          i.Location,
          { provide: Bo, useClass: zo },
          {
            provide: gl,
            useFactory: function (e, t, n, r, s, o, a, l = {}, c, u) {
              const h = new gl(null, e, t, n, r, s, o, Ro(a));
              if (
                (c && (h.urlHandlingStrategy = c),
                u && (h.routeReuseStrategy = u),
                l.errorHandler && (h.errorHandler = l.errorHandler),
                l.malformedUriErrorHandler &&
                  (h.malformedUriErrorHandler = l.malformedUriErrorHandler),
                l.enableTracing)
              ) {
                const e = Object(i["\u0275getDOM"])();
                h.events.subscribe((t) => {
                  e.logGroup("Router Event: " + t.constructor.name),
                    e.log(t.toString()),
                    e.log(t),
                    e.logGroupEnd();
                });
              }
              return (
                l.onSameUrlNavigation &&
                  (h.onSameUrlNavigation = l.onSameUrlNavigation),
                l.paramsInheritanceStrategy &&
                  (h.paramsInheritanceStrategy = l.paramsInheritanceStrategy),
                l.urlUpdateStrategy &&
                  (h.urlUpdateStrategy = l.urlUpdateStrategy),
                l.relativeLinkResolution &&
                  (h.relativeLinkResolution = l.relativeLinkResolution),
                h
              );
            },
            deps: [
              Bo,
              bl,
              i.Location,
              r.Injector,
              r.NgModuleFactoryLoader,
              r.Compiler,
              ul,
              Il,
              [class {}, new r.Optional()],
              [class {}, new r.Optional()],
            ],
          },
          bl,
          {
            provide: la,
            useFactory: function (e) {
              return e.routerState.root;
            },
            deps: [gl],
          },
          {
            provide: r.NgModuleFactoryLoader,
            useClass: r.SystemJsNgModuleLoader,
          },
          xl,
          El,
          class {
            preload(e, t) {
              return t().pipe(wi(() => U(null)));
            }
          },
          { provide: Il, useValue: { enableTracing: !1 } },
        ];
      function Rl() {
        return new r.NgProbeToken("Router", gl);
      }
      let Al = (() => {
        class e {
          constructor(e, t) {}
          static forRoot(t, n) {
            return {
              ngModule: e,
              providers: [
                kl,
                jl(t),
                {
                  provide: Ol,
                  useFactory: Pl,
                  deps: [[gl, new r.Optional(), new r.SkipSelf()]],
                },
                { provide: Il, useValue: n || {} },
                {
                  provide: i.LocationStrategy,
                  useFactory: Fl,
                  deps: [
                    i.PlatformLocation,
                    [new r.Inject(i.APP_BASE_HREF), new r.Optional()],
                    Il,
                  ],
                },
                {
                  provide: Dl,
                  useFactory: Tl,
                  deps: [gl, i.ViewportScroller, Il],
                },
                {
                  provide: Sl,
                  useExisting:
                    n && n.preloadingStrategy ? n.preloadingStrategy : El,
                },
                { provide: r.NgProbeToken, multi: !0, useFactory: Rl },
                [
                  Nl,
                  {
                    provide: r.APP_INITIALIZER,
                    multi: !0,
                    useFactory: Ml,
                    deps: [Nl],
                  },
                  { provide: Vl, useFactory: Ll, deps: [Nl] },
                  {
                    provide: r.APP_BOOTSTRAP_LISTENER,
                    multi: !0,
                    useExisting: Vl,
                  },
                ],
              ],
            };
          }
          static forChild(t) {
            return { ngModule: e, providers: [jl(t)] };
          }
        }
        return (
          (e.ɵmod = r["\u0275\u0275defineNgModule"]({ type: e })),
          (e.ɵinj = r["\u0275\u0275defineInjector"]({
            factory: function (t) {
              return new (t || e)(
                r["\u0275\u0275inject"](Ol, 8),
                r["\u0275\u0275inject"](gl, 8)
              );
            },
          })),
          e
        );
      })();
      function Tl(e, t, n) {
        return n.scrollOffset && t.setOffset(n.scrollOffset), new Dl(e, t, n);
      }
      function Fl(e, t, n = {}) {
        return n.useHash
          ? new i.HashLocationStrategy(e, t)
          : new i.PathLocationStrategy(e, t);
      }
      function Pl(e) {
        if (e)
          throw new Error(
            "RouterModule.forRoot() called twice. Lazy loaded modules should use RouterModule.forChild() instead."
          );
        return "guarded";
      }
      function jl(e) {
        return [
          { provide: r.ANALYZE_FOR_ENTRY_COMPONENTS, multi: !0, useValue: e },
          { provide: ul, multi: !0, useValue: e },
        ];
      }
      let Nl = (() => {
        class e {
          constructor(e) {
            (this.injector = e),
              (this.initNavigation = !1),
              (this.resultOfPreactivationDone = new M.a());
          }
          appInitializer() {
            return this.injector
              .get(i.LOCATION_INITIALIZED, Promise.resolve(null))
              .then(() => {
                let e = null;
                const t = new Promise((t) => (e = t)),
                  n = this.injector.get(gl),
                  r = this.injector.get(Il);
                if (this.isLegacyDisabled(r) || this.isLegacyEnabled(r)) e(!0);
                else if ("disabled" === r.initialNavigation)
                  n.setUpLocationChangeListener(), e(!0);
                else {
                  if ("enabled" !== r.initialNavigation)
                    throw new Error(
                      `Invalid initialNavigation options: '${r.initialNavigation}'`
                    );
                  (n.hooks.afterPreactivation = () =>
                    this.initNavigation
                      ? U(null)
                      : ((this.initNavigation = !0),
                        e(!0),
                        this.resultOfPreactivationDone)),
                    n.initialNavigation();
                }
                return t;
              });
          }
          bootstrapListener(e) {
            const t = this.injector.get(Il),
              n = this.injector.get(xl),
              i = this.injector.get(Dl),
              s = this.injector.get(gl),
              o = this.injector.get(r.ApplicationRef);
            e === o.components[0] &&
              (this.isLegacyEnabled(t)
                ? s.initialNavigation()
                : this.isLegacyDisabled(t) && s.setUpLocationChangeListener(),
              n.setUpPreloading(),
              i.init(),
              s.resetRootComponentType(o.componentTypes[0]),
              this.resultOfPreactivationDone.next(null),
              this.resultOfPreactivationDone.complete());
          }
          isLegacyEnabled(e) {
            return (
              "legacy_enabled" === e.initialNavigation ||
              !0 === e.initialNavigation ||
              void 0 === e.initialNavigation
            );
          }
          isLegacyDisabled(e) {
            return (
              "legacy_disabled" === e.initialNavigation ||
              !1 === e.initialNavigation
            );
          }
        }
        return (
          (e.ɵfac = function (t) {
            return new (t || e)(r["\u0275\u0275inject"](r.Injector));
          }),
          (e.ɵprov = r["\u0275\u0275defineInjectable"]({
            token: e,
            factory: e.ɵfac,
          })),
          e
        );
      })();
      function Ml(e) {
        return e.appInitializer.bind(e);
      }
      function Ll(e) {
        return e.bootstrapListener.bind(e);
      }
      const Vl = new r.InjectionToken("Router Initializer");
      let Bl = (() => {
          class e {
            constructor() {}
            ngOnInit() {}
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)();
            }),
            (e.ɵcmp = r["\u0275\u0275defineComponent"]({
              type: e,
              selectors: [["app-navbar"]],
              decls: 6,
              vars: 0,
              consts: [
                [1, "navbar", "container"],
                ["routerLink", "/films", 1, "logo"],
                [
                  "routerLink",
                  "/films/favorites",
                  1,
                  "uppercase_text",
                  "menu_item",
                ],
              ],
              template: function (e, t) {
                1 & e &&
                  (r["\u0275\u0275elementStart"](0, "div", 0),
                  r["\u0275\u0275elementStart"](1, "h1"),
                  r["\u0275\u0275elementStart"](2, "a", 1),
                  r["\u0275\u0275text"](3, "Popular films"),
                  r["\u0275\u0275elementEnd"](),
                  r["\u0275\u0275elementEnd"](),
                  r["\u0275\u0275elementStart"](4, "a", 2),
                  r["\u0275\u0275text"](5, "favorites"),
                  r["\u0275\u0275elementEnd"](),
                  r["\u0275\u0275elementEnd"]());
              },
              directives: [_l],
              styles: [
                ".container[_ngcontent-%COMP%]{max-width:1200px;margin:auto}.uppercase_text[_ngcontent-%COMP%]{text-transform:uppercase}.italic[_ngcontent-%COMP%]{font-style:italic}.bold[_ngcontent-%COMP%]{font-weight:700}a[_ngcontent-%COMP%]{text-decoration:none;color:#000}.added[_ngcontent-%COMP%]{background:red;background:rgba(0,128,0,.1)}.added[_ngcontent-%COMP%], .removed[_ngcontent-%COMP%]{text-align:center;padding:1rem 0;font-size:1.5rem}.removed[_ngcontent-%COMP%]{background:rgba(255,0,0,.1)}.app_header[_ngcontent-%COMP%]{margin-top:1rem!important}h1[_ngcontent-%COMP%]{padding:0;margin:0 0 0 1rem}.navbar[_ngcontent-%COMP%]{display:flex;justify-content:space-between;background-color:rgba(0,0,0,.1);align-items:center;padding:1rem 0;border-radius:5px}.navbar[_ngcontent-%COMP%]   .logo[_ngcontent-%COMP%]{font-size:2rem}.navbar[_ngcontent-%COMP%]   .menu_item[_ngcontent-%COMP%]{margin-right:4rem;border-bottom:2px solid rgba(0,0,0,.1)}.navbar[_ngcontent-%COMP%]   .menu_item[_ngcontent-%COMP%]:hover{border-bottom:2px solid #000}",
              ],
            })),
            e
          );
        })(),
        zl = (() => {
          class e {
            constructor() {
              this.title = "test-task-bacup-it";
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)();
            }),
            (e.ɵcmp = r["\u0275\u0275defineComponent"]({
              type: e,
              selectors: [["app-root"]],
              decls: 2,
              vars: 0,
              template: function (e, t) {
                1 & e &&
                  (r["\u0275\u0275element"](0, "app-navbar"),
                  r["\u0275\u0275element"](1, "router-outlet"));
              },
              directives: [Bl, wl],
              styles: [""],
            })),
            e
          );
        })();
      function Ul(e) {
        return e && "function" == typeof e.connect;
      }
      class Hl {
        constructor(e = !1, t, n = !0) {
          (this._multiple = e),
            (this._emitChanges = n),
            (this._selection = new Set()),
            (this._deselectedToEmit = []),
            (this._selectedToEmit = []),
            (this.changed = new M.a()),
            t &&
              t.length &&
              (e
                ? t.forEach((e) => this._markSelected(e))
                : this._markSelected(t[0]),
              (this._selectedToEmit.length = 0));
        }
        get selected() {
          return (
            this._selected ||
              (this._selected = Array.from(this._selection.values())),
            this._selected
          );
        }
        select(...e) {
          this._verifyValueAssignment(e),
            e.forEach((e) => this._markSelected(e)),
            this._emitChangeEvent();
        }
        deselect(...e) {
          this._verifyValueAssignment(e),
            e.forEach((e) => this._unmarkSelected(e)),
            this._emitChangeEvent();
        }
        toggle(e) {
          this.isSelected(e) ? this.deselect(e) : this.select(e);
        }
        clear() {
          this._unmarkAll(), this._emitChangeEvent();
        }
        isSelected(e) {
          return this._selection.has(e);
        }
        isEmpty() {
          return 0 === this._selection.size;
        }
        hasValue() {
          return !this.isEmpty();
        }
        sort(e) {
          this._multiple && this.selected && this._selected.sort(e);
        }
        isMultipleSelection() {
          return this._multiple;
        }
        _emitChangeEvent() {
          (this._selected = null),
            (this._selectedToEmit.length || this._deselectedToEmit.length) &&
              (this.changed.next({
                source: this,
                added: this._selectedToEmit,
                removed: this._deselectedToEmit,
              }),
              (this._deselectedToEmit = []),
              (this._selectedToEmit = []));
        }
        _markSelected(e) {
          this.isSelected(e) ||
            (this._multiple || this._unmarkAll(),
            this._selection.add(e),
            this._emitChanges && this._selectedToEmit.push(e));
        }
        _unmarkSelected(e) {
          this.isSelected(e) &&
            (this._selection.delete(e),
            this._emitChanges && this._deselectedToEmit.push(e));
        }
        _unmarkAll() {
          this.isEmpty() ||
            this._selection.forEach((e) => this._unmarkSelected(e));
        }
        _verifyValueAssignment(e) {
          if (e.length > 1 && !this._multiple)
            throw Error(
              "Cannot pass multiple values into SelectionModel with single-value mode."
            );
        }
      }
      function $l(e) {
        return (t) => t.lift(new ql(e));
      }
      class ql {
        constructor(e) {
          this.notifier = e;
        }
        call(e, t) {
          const n = new Gl(e),
            r = Object(bi.a)(n, this.notifier);
          return r && !n.seenValue ? (n.add(r), t.subscribe(n)) : n;
        }
      }
      class Gl extends yi.a {
        constructor(e) {
          super(e), (this.seenValue = !1);
        }
        notifyNext(e, t, n, r, i) {
          (this.seenValue = !0), this.complete();
        }
        notifyComplete() {}
      }
      const Wl = [[["caption"]]],
        Ql = ["caption"];
      function Kl(e) {
        return class extends e {
          constructor(...e) {
            super(...e), (this._sticky = !1), (this._hasStickyChanged = !1);
          }
          get sticky() {
            return this._sticky;
          }
          set sticky(e) {
            const t = this._sticky;
            (this._sticky = ge(e)),
              (this._hasStickyChanged = t !== this._sticky);
          }
          hasStickyChanged() {
            const e = this._hasStickyChanged;
            return (this._hasStickyChanged = !1), e;
          }
          resetStickyChanged() {
            this._hasStickyChanged = !1;
          }
        };
      }
      const Zl = new r.InjectionToken("CDK_TABLE");
      let Yl = (() => {
          class e {
            constructor(e) {
              this.template = e;
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(
                r["\u0275\u0275directiveInject"](r.TemplateRef)
              );
            }),
            (e.ɵdir = r["\u0275\u0275defineDirective"]({
              type: e,
              selectors: [["", "cdkCellDef", ""]],
            })),
            e
          );
        })(),
        Xl = (() => {
          class e {
            constructor(e) {
              this.template = e;
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(
                r["\u0275\u0275directiveInject"](r.TemplateRef)
              );
            }),
            (e.ɵdir = r["\u0275\u0275defineDirective"]({
              type: e,
              selectors: [["", "cdkHeaderCellDef", ""]],
            })),
            e
          );
        })(),
        Jl = (() => {
          class e {
            constructor(e) {
              this.template = e;
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(
                r["\u0275\u0275directiveInject"](r.TemplateRef)
              );
            }),
            (e.ɵdir = r["\u0275\u0275defineDirective"]({
              type: e,
              selectors: [["", "cdkFooterCellDef", ""]],
            })),
            e
          );
        })();
      class ec {}
      const tc = Kl(ec);
      let nc = (() => {
        class e extends tc {
          constructor(e) {
            super(), (this._table = e), (this._stickyEnd = !1);
          }
          get name() {
            return this._name;
          }
          set name(e) {
            e &&
              ((this._name = e),
              (this.cssClassFriendlyName = e.replace(/[^a-z0-9_-]/gi, "-")));
          }
          get stickyEnd() {
            return this._stickyEnd;
          }
          set stickyEnd(e) {
            const t = this._stickyEnd;
            (this._stickyEnd = ge(e)),
              (this._hasStickyChanged = t !== this._stickyEnd);
          }
        }
        return (
          (e.ɵfac = function (t) {
            return new (t || e)(r["\u0275\u0275directiveInject"](Zl, 8));
          }),
          (e.ɵdir = r["\u0275\u0275defineDirective"]({
            type: e,
            selectors: [["", "cdkColumnDef", ""]],
            contentQueries: function (e, t, n) {
              var i;
              1 & e &&
                (r["\u0275\u0275contentQuery"](n, Yl, !0),
                r["\u0275\u0275contentQuery"](n, Xl, !0),
                r["\u0275\u0275contentQuery"](n, Jl, !0)),
                2 & e &&
                  (r["\u0275\u0275queryRefresh"](
                    (i = r["\u0275\u0275loadQuery"]())
                  ) && (t.cell = i.first),
                  r["\u0275\u0275queryRefresh"](
                    (i = r["\u0275\u0275loadQuery"]())
                  ) && (t.headerCell = i.first),
                  r["\u0275\u0275queryRefresh"](
                    (i = r["\u0275\u0275loadQuery"]())
                  ) && (t.footerCell = i.first));
            },
            inputs: {
              sticky: "sticky",
              name: ["cdkColumnDef", "name"],
              stickyEnd: "stickyEnd",
            },
            features: [
              r["\u0275\u0275ProvidersFeature"]([
                { provide: "MAT_SORT_HEADER_COLUMN_DEF", useExisting: e },
              ]),
              r["\u0275\u0275InheritDefinitionFeature"],
            ],
          })),
          e
        );
      })();
      class rc {
        constructor(e, t) {
          t.nativeElement.classList.add("cdk-column-" + e.cssClassFriendlyName);
        }
      }
      let ic = (() => {
          class e extends rc {
            constructor(e, t) {
              super(e, t);
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(
                r["\u0275\u0275directiveInject"](nc),
                r["\u0275\u0275directiveInject"](r.ElementRef)
              );
            }),
            (e.ɵdir = r["\u0275\u0275defineDirective"]({
              type: e,
              selectors: [["cdk-header-cell"], ["th", "cdk-header-cell", ""]],
              hostAttrs: ["role", "columnheader", 1, "cdk-header-cell"],
              features: [r["\u0275\u0275InheritDefinitionFeature"]],
            })),
            e
          );
        })(),
        sc = (() => {
          class e extends rc {
            constructor(e, t) {
              super(e, t);
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(
                r["\u0275\u0275directiveInject"](nc),
                r["\u0275\u0275directiveInject"](r.ElementRef)
              );
            }),
            (e.ɵdir = r["\u0275\u0275defineDirective"]({
              type: e,
              selectors: [["cdk-cell"], ["td", "cdk-cell", ""]],
              hostAttrs: ["role", "gridcell", 1, "cdk-cell"],
              features: [r["\u0275\u0275InheritDefinitionFeature"]],
            })),
            e
          );
        })(),
        oc = (() => {
          class e {
            constructor(e, t) {
              (this.template = e), (this._differs = t);
            }
            ngOnChanges(e) {
              if (!this._columnsDiffer) {
                const t = (e.columns && e.columns.currentValue) || [];
                (this._columnsDiffer = this._differs.find(t).create()),
                  this._columnsDiffer.diff(t);
              }
            }
            getColumnsDiff() {
              return this._columnsDiffer.diff(this.columns);
            }
            extractCellTemplate(e) {
              return this instanceof cc
                ? e.headerCell.template
                : this instanceof dc
                ? e.footerCell.template
                : e.cell.template;
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(
                r["\u0275\u0275directiveInject"](r.TemplateRef),
                r["\u0275\u0275directiveInject"](r.IterableDiffers)
              );
            }),
            (e.ɵdir = r["\u0275\u0275defineDirective"]({
              type: e,
              features: [r["\u0275\u0275NgOnChangesFeature"]],
            })),
            e
          );
        })();
      class ac extends oc {}
      const lc = Kl(ac);
      let cc = (() => {
        class e extends lc {
          constructor(e, t, n) {
            super(e, t), (this._table = n);
          }
          ngOnChanges(e) {
            super.ngOnChanges(e);
          }
        }
        return (
          (e.ɵfac = function (t) {
            return new (t || e)(
              r["\u0275\u0275directiveInject"](r.TemplateRef),
              r["\u0275\u0275directiveInject"](r.IterableDiffers),
              r["\u0275\u0275directiveInject"](Zl, 8)
            );
          }),
          (e.ɵdir = r["\u0275\u0275defineDirective"]({
            type: e,
            selectors: [["", "cdkHeaderRowDef", ""]],
            inputs: {
              columns: ["cdkHeaderRowDef", "columns"],
              sticky: ["cdkHeaderRowDefSticky", "sticky"],
            },
            features: [
              r["\u0275\u0275InheritDefinitionFeature"],
              r["\u0275\u0275NgOnChangesFeature"],
            ],
          })),
          e
        );
      })();
      class uc extends oc {}
      const hc = Kl(uc);
      let dc = (() => {
          class e extends hc {
            constructor(e, t, n) {
              super(e, t), (this._table = n);
            }
            ngOnChanges(e) {
              super.ngOnChanges(e);
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(
                r["\u0275\u0275directiveInject"](r.TemplateRef),
                r["\u0275\u0275directiveInject"](r.IterableDiffers),
                r["\u0275\u0275directiveInject"](Zl, 8)
              );
            }),
            (e.ɵdir = r["\u0275\u0275defineDirective"]({
              type: e,
              selectors: [["", "cdkFooterRowDef", ""]],
              inputs: {
                columns: ["cdkFooterRowDef", "columns"],
                sticky: ["cdkFooterRowDefSticky", "sticky"],
              },
              features: [
                r["\u0275\u0275InheritDefinitionFeature"],
                r["\u0275\u0275NgOnChangesFeature"],
              ],
            })),
            e
          );
        })(),
        fc = (() => {
          class e extends oc {
            constructor(e, t, n) {
              super(e, t), (this._table = n);
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(
                r["\u0275\u0275directiveInject"](r.TemplateRef),
                r["\u0275\u0275directiveInject"](r.IterableDiffers),
                r["\u0275\u0275directiveInject"](Zl, 8)
              );
            }),
            (e.ɵdir = r["\u0275\u0275defineDirective"]({
              type: e,
              selectors: [["", "cdkRowDef", ""]],
              inputs: {
                columns: ["cdkRowDefColumns", "columns"],
                when: ["cdkRowDefWhen", "when"],
              },
              features: [r["\u0275\u0275InheritDefinitionFeature"]],
            })),
            e
          );
        })(),
        pc = (() => {
          class e {
            constructor(t) {
              (this._viewContainer = t), (e.mostRecentCellOutlet = this);
            }
            ngOnDestroy() {
              e.mostRecentCellOutlet === this &&
                (e.mostRecentCellOutlet = null);
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(
                r["\u0275\u0275directiveInject"](r.ViewContainerRef)
              );
            }),
            (e.ɵdir = r["\u0275\u0275defineDirective"]({
              type: e,
              selectors: [["", "cdkCellOutlet", ""]],
            })),
            (e.mostRecentCellOutlet = null),
            e
          );
        })(),
        mc = (() => {
          class e {}
          return (
            (e.ɵfac = function (t) {
              return new (t || e)();
            }),
            (e.ɵcmp = r["\u0275\u0275defineComponent"]({
              type: e,
              selectors: [["cdk-header-row"], ["tr", "cdk-header-row", ""]],
              hostAttrs: ["role", "row", 1, "cdk-header-row"],
              decls: 1,
              vars: 0,
              consts: [["cdkCellOutlet", ""]],
              template: function (e, t) {
                1 & e && r["\u0275\u0275elementContainer"](0, 0);
              },
              directives: [pc],
              encapsulation: 2,
            })),
            e
          );
        })(),
        gc = (() => {
          class e {}
          return (
            (e.ɵfac = function (t) {
              return new (t || e)();
            }),
            (e.ɵcmp = r["\u0275\u0275defineComponent"]({
              type: e,
              selectors: [["cdk-row"], ["tr", "cdk-row", ""]],
              hostAttrs: ["role", "row", 1, "cdk-row"],
              decls: 1,
              vars: 0,
              consts: [["cdkCellOutlet", ""]],
              template: function (e, t) {
                1 & e && r["\u0275\u0275elementContainer"](0, 0);
              },
              directives: [pc],
              encapsulation: 2,
            })),
            e
          );
        })();
      const _c = ["top", "bottom", "left", "right"];
      class yc {
        constructor(e, t, n, r = !0) {
          (this._isNativeHtmlTable = e),
            (this._stickCellCss = t),
            (this.direction = n),
            (this._isBrowser = r);
        }
        clearStickyPositioning(e, t) {
          for (const n of e)
            if (n.nodeType === n.ELEMENT_NODE) {
              this._removeStickyStyle(n, t);
              for (let e = 0; e < n.children.length; e++)
                this._removeStickyStyle(n.children[e], t);
            }
        }
        updateStickyColumns(e, t, n) {
          const r = t.some((e) => e) || n.some((e) => e);
          if (!e.length || !r || !this._isBrowser) return;
          const i = e[0],
            s = i.children.length,
            o = this._getCellWidths(i),
            a = this._getStickyStartColumnPositions(o, t),
            l = this._getStickyEndColumnPositions(o, n),
            c = "rtl" === this.direction;
          for (const u of e)
            for (let e = 0; e < s; e++) {
              const r = u.children[e];
              t[e] && this._addStickyStyle(r, c ? "right" : "left", a[e]),
                n[e] && this._addStickyStyle(r, c ? "left" : "right", l[e]);
            }
        }
        stickRows(e, t, n) {
          if (!this._isBrowser) return;
          const r = "bottom" === n ? e.reverse() : e;
          let i = 0;
          for (let s = 0; s < r.length; s++) {
            if (!t[s]) continue;
            const e = r[s];
            if (this._isNativeHtmlTable)
              for (let t = 0; t < e.children.length; t++)
                this._addStickyStyle(e.children[t], n, i);
            else this._addStickyStyle(e, n, i);
            if (s === r.length - 1) return;
            i += e.getBoundingClientRect().height;
          }
        }
        updateStickyFooterContainer(e, t) {
          if (!this._isNativeHtmlTable) return;
          const n = e.querySelector("tfoot");
          t.some((e) => !e)
            ? this._removeStickyStyle(n, ["bottom"])
            : this._addStickyStyle(n, "bottom", 0);
        }
        _removeStickyStyle(e, t) {
          for (const n of t) e.style[n] = "";
          (e.style.zIndex = this._getCalculatedZIndex(e)),
            _c.some((t) => !!e.style[t]) ||
              ((e.style.position = ""), e.classList.remove(this._stickCellCss));
        }
        _addStickyStyle(e, t, n) {
          e.classList.add(this._stickCellCss),
            (e.style[t] = n + "px"),
            (e.style.cssText += "position: -webkit-sticky; position: sticky; "),
            (e.style.zIndex = this._getCalculatedZIndex(e));
        }
        _getCalculatedZIndex(e) {
          const t = { top: 100, bottom: 10, left: 1, right: 1 };
          let n = 0;
          for (const r of _c) e.style[r] && (n += t[r]);
          return n ? "" + n : "";
        }
        _getCellWidths(e) {
          const t = [],
            n = e.children;
          for (let r = 0; r < n.length; r++)
            t.push(n[r].getBoundingClientRect().width);
          return t;
        }
        _getStickyStartColumnPositions(e, t) {
          const n = [];
          let r = 0;
          for (let i = 0; i < e.length; i++) t[i] && ((n[i] = r), (r += e[i]));
          return n;
        }
        _getStickyEndColumnPositions(e, t) {
          const n = [];
          let r = 0;
          for (let i = e.length; i > 0; i--) t[i] && ((n[i] = r), (r += e[i]));
          return n;
        }
      }
      function vc(e) {
        return Error(`Could not find column with id "${e}".`);
      }
      let bc = (() => {
          class e {
            constructor(e, t) {
              (this.viewContainer = e), (this.elementRef = t);
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(
                r["\u0275\u0275directiveInject"](r.ViewContainerRef),
                r["\u0275\u0275directiveInject"](r.ElementRef)
              );
            }),
            (e.ɵdir = r["\u0275\u0275defineDirective"]({
              type: e,
              selectors: [["", "rowOutlet", ""]],
            })),
            e
          );
        })(),
        wc = (() => {
          class e {
            constructor(e, t) {
              (this.viewContainer = e), (this.elementRef = t);
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(
                r["\u0275\u0275directiveInject"](r.ViewContainerRef),
                r["\u0275\u0275directiveInject"](r.ElementRef)
              );
            }),
            (e.ɵdir = r["\u0275\u0275defineDirective"]({
              type: e,
              selectors: [["", "headerRowOutlet", ""]],
            })),
            e
          );
        })(),
        Cc = (() => {
          class e {
            constructor(e, t) {
              (this.viewContainer = e), (this.elementRef = t);
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(
                r["\u0275\u0275directiveInject"](r.ViewContainerRef),
                r["\u0275\u0275directiveInject"](r.ElementRef)
              );
            }),
            (e.ɵdir = r["\u0275\u0275defineDirective"]({
              type: e,
              selectors: [["", "footerRowOutlet", ""]],
            })),
            e
          );
        })(),
        Sc = (() => {
          class e {
            constructor(e, t, n, r, i, s, o) {
              (this._differs = e),
                (this._changeDetectorRef = t),
                (this._elementRef = n),
                (this._dir = i),
                (this._platform = o),
                (this._onDestroy = new M.a()),
                (this._columnDefsByName = new Map()),
                (this._customColumnDefs = new Set()),
                (this._customRowDefs = new Set()),
                (this._customHeaderRowDefs = new Set()),
                (this._customFooterRowDefs = new Set()),
                (this._headerRowDefChanged = !0),
                (this._footerRowDefChanged = !0),
                (this._cachedRenderRowsMap = new Map()),
                (this.stickyCssClass = "cdk-table-sticky"),
                (this._multiTemplateDataRows = !1),
                (this.viewChange = new xs({ start: 0, end: Number.MAX_VALUE })),
                r ||
                  this._elementRef.nativeElement.setAttribute("role", "grid"),
                (this._document = s),
                (this._isNativeHtmlTable =
                  "TABLE" === this._elementRef.nativeElement.nodeName);
            }
            get trackBy() {
              return this._trackByFn;
            }
            set trackBy(e) {
              Object(r.isDevMode)() &&
                null != e &&
                "function" != typeof e &&
                console &&
                console.warn &&
                console.warn(
                  `trackBy must be a function, but received ${JSON.stringify(
                    e
                  )}.`
                ),
                (this._trackByFn = e);
            }
            get dataSource() {
              return this._dataSource;
            }
            set dataSource(e) {
              this._dataSource !== e && this._switchDataSource(e);
            }
            get multiTemplateDataRows() {
              return this._multiTemplateDataRows;
            }
            set multiTemplateDataRows(e) {
              (this._multiTemplateDataRows = ge(e)),
                this._rowOutlet &&
                  this._rowOutlet.viewContainer.length &&
                  this._forceRenderDataRows();
            }
            ngOnInit() {
              this._setupStickyStyler(),
                this._isNativeHtmlTable && this._applyNativeTableSections(),
                (this._dataDiffer = this._differs
                  .find([])
                  .create((e, t) =>
                    this.trackBy ? this.trackBy(t.dataIndex, t.data) : t
                  ));
            }
            ngAfterContentChecked() {
              if (
                (this._cacheRowDefs(),
                this._cacheColumnDefs(),
                !this._headerRowDefs.length &&
                  !this._footerRowDefs.length &&
                  !this._rowDefs.length)
              )
                throw Error(
                  "Missing definitions for header, footer, and row; cannot determine which columns should be rendered."
                );
              this._renderUpdatedColumns(),
                this._headerRowDefChanged &&
                  (this._forceRenderHeaderRows(),
                  (this._headerRowDefChanged = !1)),
                this._footerRowDefChanged &&
                  (this._forceRenderFooterRows(),
                  (this._footerRowDefChanged = !1)),
                this.dataSource &&
                  this._rowDefs.length > 0 &&
                  !this._renderChangeSubscription &&
                  this._observeRenderChanges(),
                this._checkStickyStates();
            }
            ngOnDestroy() {
              this._rowOutlet.viewContainer.clear(),
                this._headerRowOutlet.viewContainer.clear(),
                this._footerRowOutlet.viewContainer.clear(),
                this._cachedRenderRowsMap.clear(),
                this._onDestroy.next(),
                this._onDestroy.complete(),
                Ul(this.dataSource) && this.dataSource.disconnect(this);
            }
            renderRows() {
              this._renderRows = this._getAllRenderRows();
              const e = this._dataDiffer.diff(this._renderRows);
              if (!e) return;
              const t = this._rowOutlet.viewContainer;
              e.forEachOperation((e, n, r) => {
                if (null == e.previousIndex) this._insertRow(e.item, r);
                else if (null == r) t.remove(n);
                else {
                  const e = t.get(n);
                  t.move(e, r);
                }
              }),
                this._updateRowIndexContext(),
                e.forEachIdentityChange((e) => {
                  t.get(e.currentIndex).context.$implicit = e.item.data;
                }),
                this.updateStickyColumnStyles();
            }
            setHeaderRowDef(e) {
              (this._customHeaderRowDefs = new Set([e])),
                (this._headerRowDefChanged = !0);
            }
            setFooterRowDef(e) {
              (this._customFooterRowDefs = new Set([e])),
                (this._footerRowDefChanged = !0);
            }
            addColumnDef(e) {
              this._customColumnDefs.add(e);
            }
            removeColumnDef(e) {
              this._customColumnDefs.delete(e);
            }
            addRowDef(e) {
              this._customRowDefs.add(e);
            }
            removeRowDef(e) {
              this._customRowDefs.delete(e);
            }
            addHeaderRowDef(e) {
              this._customHeaderRowDefs.add(e),
                (this._headerRowDefChanged = !0);
            }
            removeHeaderRowDef(e) {
              this._customHeaderRowDefs.delete(e),
                (this._headerRowDefChanged = !0);
            }
            addFooterRowDef(e) {
              this._customFooterRowDefs.add(e),
                (this._footerRowDefChanged = !0);
            }
            removeFooterRowDef(e) {
              this._customFooterRowDefs.delete(e),
                (this._footerRowDefChanged = !0);
            }
            updateStickyHeaderRowStyles() {
              const e = this._getRenderedRows(this._headerRowOutlet),
                t = this._elementRef.nativeElement.querySelector("thead");
              t && (t.style.display = e.length ? "" : "none");
              const n = this._headerRowDefs.map((e) => e.sticky);
              this._stickyStyler.clearStickyPositioning(e, ["top"]),
                this._stickyStyler.stickRows(e, n, "top"),
                this._headerRowDefs.forEach((e) => e.resetStickyChanged());
            }
            updateStickyFooterRowStyles() {
              const e = this._getRenderedRows(this._footerRowOutlet),
                t = this._elementRef.nativeElement.querySelector("tfoot");
              t && (t.style.display = e.length ? "" : "none");
              const n = this._footerRowDefs.map((e) => e.sticky);
              this._stickyStyler.clearStickyPositioning(e, ["bottom"]),
                this._stickyStyler.stickRows(e, n, "bottom"),
                this._stickyStyler.updateStickyFooterContainer(
                  this._elementRef.nativeElement,
                  n
                ),
                this._footerRowDefs.forEach((e) => e.resetStickyChanged());
            }
            updateStickyColumnStyles() {
              const e = this._getRenderedRows(this._headerRowOutlet),
                t = this._getRenderedRows(this._rowOutlet),
                n = this._getRenderedRows(this._footerRowOutlet);
              this._stickyStyler.clearStickyPositioning(
                [...e, ...t, ...n],
                ["left", "right"]
              ),
                e.forEach((e, t) => {
                  this._addStickyColumnStyles([e], this._headerRowDefs[t]);
                }),
                this._rowDefs.forEach((e) => {
                  const n = [];
                  for (let r = 0; r < t.length; r++)
                    this._renderRows[r].rowDef === e && n.push(t[r]);
                  this._addStickyColumnStyles(n, e);
                }),
                n.forEach((e, t) => {
                  this._addStickyColumnStyles([e], this._footerRowDefs[t]);
                }),
                Array.from(this._columnDefsByName.values()).forEach((e) =>
                  e.resetStickyChanged()
                );
            }
            _getAllRenderRows() {
              const e = [],
                t = this._cachedRenderRowsMap;
              this._cachedRenderRowsMap = new Map();
              for (let n = 0; n < this._data.length; n++) {
                let r = this._data[n];
                const i = this._getRenderRowsForData(r, n, t.get(r));
                this._cachedRenderRowsMap.has(r) ||
                  this._cachedRenderRowsMap.set(r, new WeakMap());
                for (let t = 0; t < i.length; t++) {
                  let n = i[t];
                  const r = this._cachedRenderRowsMap.get(n.data);
                  r.has(n.rowDef)
                    ? r.get(n.rowDef).push(n)
                    : r.set(n.rowDef, [n]),
                    e.push(n);
                }
              }
              return e;
            }
            _getRenderRowsForData(e, t, n) {
              return this._getRowDefs(e, t).map((r) => {
                const i = n && n.has(r) ? n.get(r) : [];
                if (i.length) {
                  const e = i.shift();
                  return (e.dataIndex = t), e;
                }
                return { data: e, rowDef: r, dataIndex: t };
              });
            }
            _cacheColumnDefs() {
              this._columnDefsByName.clear(),
                Ec(
                  this._getOwnDefs(this._contentColumnDefs),
                  this._customColumnDefs
                ).forEach((e) => {
                  if (this._columnDefsByName.has(e.name))
                    throw Error(
                      `Duplicate column definition name provided: "${e.name}".`
                    );
                  this._columnDefsByName.set(e.name, e);
                });
            }
            _cacheRowDefs() {
              (this._headerRowDefs = Ec(
                this._getOwnDefs(this._contentHeaderRowDefs),
                this._customHeaderRowDefs
              )),
                (this._footerRowDefs = Ec(
                  this._getOwnDefs(this._contentFooterRowDefs),
                  this._customFooterRowDefs
                )),
                (this._rowDefs = Ec(
                  this._getOwnDefs(this._contentRowDefs),
                  this._customRowDefs
                ));
              const e = this._rowDefs.filter((e) => !e.when);
              if (!this.multiTemplateDataRows && e.length > 1)
                throw Error(
                  "There can only be one default row without a when predicate function."
                );
              this._defaultRowDef = e[0];
            }
            _renderUpdatedColumns() {
              const e = (e, t) => e || !!t.getColumnsDiff();
              this._rowDefs.reduce(e, !1) && this._forceRenderDataRows(),
                this._headerRowDefs.reduce(e, !1) &&
                  this._forceRenderHeaderRows(),
                this._footerRowDefs.reduce(e, !1) &&
                  this._forceRenderFooterRows();
            }
            _switchDataSource(e) {
              (this._data = []),
                Ul(this.dataSource) && this.dataSource.disconnect(this),
                this._renderChangeSubscription &&
                  (this._renderChangeSubscription.unsubscribe(),
                  (this._renderChangeSubscription = null)),
                e ||
                  (this._dataDiffer && this._dataDiffer.diff([]),
                  this._rowOutlet.viewContainer.clear()),
                (this._dataSource = e);
            }
            _observeRenderChanges() {
              if (!this.dataSource) return;
              let e;
              if (
                (Ul(this.dataSource)
                  ? (e = this.dataSource.connect(this))
                  : (t = this.dataSource) &&
                    (t instanceof ue.a ||
                      ("function" == typeof t.lift &&
                        "function" == typeof t.subscribe))
                  ? (e = this.dataSource)
                  : Array.isArray(this.dataSource) && (e = U(this.dataSource)),
                void 0 === e)
              )
                throw Error(
                  "Provided data source did not match an array, Observable, or DataSource"
                );
              var t;
              this._renderChangeSubscription = e
                .pipe($l(this._onDestroy))
                .subscribe((e) => {
                  (this._data = e || []), this.renderRows();
                });
            }
            _forceRenderHeaderRows() {
              this._headerRowOutlet.viewContainer.length > 0 &&
                this._headerRowOutlet.viewContainer.clear(),
                this._headerRowDefs.forEach((e, t) =>
                  this._renderRow(this._headerRowOutlet, e, t)
                ),
                this.updateStickyHeaderRowStyles(),
                this.updateStickyColumnStyles();
            }
            _forceRenderFooterRows() {
              this._footerRowOutlet.viewContainer.length > 0 &&
                this._footerRowOutlet.viewContainer.clear(),
                this._footerRowDefs.forEach((e, t) =>
                  this._renderRow(this._footerRowOutlet, e, t)
                ),
                this.updateStickyFooterRowStyles(),
                this.updateStickyColumnStyles();
            }
            _addStickyColumnStyles(e, t) {
              const n = Array.from(t.columns || []).map((e) => {
                  const t = this._columnDefsByName.get(e);
                  if (!t) throw vc(e);
                  return t;
                }),
                r = n.map((e) => e.sticky),
                i = n.map((e) => e.stickyEnd);
              this._stickyStyler.updateStickyColumns(e, r, i);
            }
            _getRenderedRows(e) {
              const t = [];
              for (let n = 0; n < e.viewContainer.length; n++) {
                const r = e.viewContainer.get(n);
                t.push(r.rootNodes[0]);
              }
              return t;
            }
            _getRowDefs(e, t) {
              if (1 == this._rowDefs.length) return [this._rowDefs[0]];
              let n = [];
              if (this.multiTemplateDataRows)
                n = this._rowDefs.filter((n) => !n.when || n.when(t, e));
              else {
                let r =
                  this._rowDefs.find((n) => n.when && n.when(t, e)) ||
                  this._defaultRowDef;
                r && n.push(r);
              }
              if (!n.length)
                throw (function (e) {
                  return Error(
                    "Could not find a matching row definition for theprovided row data: " +
                      JSON.stringify(e)
                  );
                })(e);
              return n;
            }
            _insertRow(e, t) {
              this._renderRow(this._rowOutlet, e.rowDef, t, {
                $implicit: e.data,
              });
            }
            _renderRow(e, t, n, r = {}) {
              e.viewContainer.createEmbeddedView(t.template, r, n);
              for (let i of this._getCellTemplates(t))
                pc.mostRecentCellOutlet &&
                  pc.mostRecentCellOutlet._viewContainer.createEmbeddedView(
                    i,
                    r
                  );
              this._changeDetectorRef.markForCheck();
            }
            _updateRowIndexContext() {
              const e = this._rowOutlet.viewContainer;
              for (let t = 0, n = e.length; t < n; t++) {
                const r = e.get(t).context;
                (r.count = n),
                  (r.first = 0 === t),
                  (r.last = t === n - 1),
                  (r.even = t % 2 == 0),
                  (r.odd = !r.even),
                  this.multiTemplateDataRows
                    ? ((r.dataIndex = this._renderRows[t].dataIndex),
                      (r.renderIndex = t))
                    : (r.index = this._renderRows[t].dataIndex);
              }
            }
            _getCellTemplates(e) {
              return e && e.columns
                ? Array.from(e.columns, (t) => {
                    const n = this._columnDefsByName.get(t);
                    if (!n) throw vc(t);
                    return e.extractCellTemplate(n);
                  })
                : [];
            }
            _applyNativeTableSections() {
              const e = this._document.createDocumentFragment(),
                t = [
                  { tag: "thead", outlet: this._headerRowOutlet },
                  { tag: "tbody", outlet: this._rowOutlet },
                  { tag: "tfoot", outlet: this._footerRowOutlet },
                ];
              for (const n of t) {
                const t = this._document.createElement(n.tag);
                t.setAttribute("role", "rowgroup"),
                  t.appendChild(n.outlet.elementRef.nativeElement),
                  e.appendChild(t);
              }
              this._elementRef.nativeElement.appendChild(e);
            }
            _forceRenderDataRows() {
              this._dataDiffer.diff([]),
                this._rowOutlet.viewContainer.clear(),
                this.renderRows(),
                this.updateStickyColumnStyles();
            }
            _checkStickyStates() {
              const e = (e, t) => e || t.hasStickyChanged();
              this._headerRowDefs.reduce(e, !1) &&
                this.updateStickyHeaderRowStyles(),
                this._footerRowDefs.reduce(e, !1) &&
                  this.updateStickyFooterRowStyles(),
                Array.from(this._columnDefsByName.values()).reduce(e, !1) &&
                  this.updateStickyColumnStyles();
            }
            _setupStickyStyler() {
              (this._stickyStyler = new yc(
                this._isNativeHtmlTable,
                this.stickyCssClass,
                this._dir ? this._dir.value : "ltr",
                this._platform.isBrowser
              )),
                (this._dir ? this._dir.change : U())
                  .pipe($l(this._onDestroy))
                  .subscribe((e) => {
                    (this._stickyStyler.direction = e),
                      this.updateStickyColumnStyles();
                  });
            }
            _getOwnDefs(e) {
              return e.filter((e) => !e._table || e._table === this);
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(
                r["\u0275\u0275directiveInject"](r.IterableDiffers),
                r["\u0275\u0275directiveInject"](r.ChangeDetectorRef),
                r["\u0275\u0275directiveInject"](r.ElementRef),
                r["\u0275\u0275injectAttribute"]("role"),
                r["\u0275\u0275directiveInject"](Ye, 8),
                r["\u0275\u0275directiveInject"](i.DOCUMENT),
                r["\u0275\u0275directiveInject"](Se)
              );
            }),
            (e.ɵcmp = r["\u0275\u0275defineComponent"]({
              type: e,
              selectors: [["cdk-table"], ["table", "cdk-table", ""]],
              contentQueries: function (e, t, n) {
                var i;
                1 & e &&
                  (r["\u0275\u0275contentQuery"](n, nc, !0),
                  r["\u0275\u0275contentQuery"](n, fc, !0),
                  r["\u0275\u0275contentQuery"](n, cc, !0),
                  r["\u0275\u0275contentQuery"](n, dc, !0)),
                  2 & e &&
                    (r["\u0275\u0275queryRefresh"](
                      (i = r["\u0275\u0275loadQuery"]())
                    ) && (t._contentColumnDefs = i),
                    r["\u0275\u0275queryRefresh"](
                      (i = r["\u0275\u0275loadQuery"]())
                    ) && (t._contentRowDefs = i),
                    r["\u0275\u0275queryRefresh"](
                      (i = r["\u0275\u0275loadQuery"]())
                    ) && (t._contentHeaderRowDefs = i),
                    r["\u0275\u0275queryRefresh"](
                      (i = r["\u0275\u0275loadQuery"]())
                    ) && (t._contentFooterRowDefs = i));
              },
              viewQuery: function (e, t) {
                var n;
                1 & e &&
                  (r["\u0275\u0275staticViewQuery"](bc, !0),
                  r["\u0275\u0275staticViewQuery"](wc, !0),
                  r["\u0275\u0275staticViewQuery"](Cc, !0)),
                  2 & e &&
                    (r["\u0275\u0275queryRefresh"](
                      (n = r["\u0275\u0275loadQuery"]())
                    ) && (t._rowOutlet = n.first),
                    r["\u0275\u0275queryRefresh"](
                      (n = r["\u0275\u0275loadQuery"]())
                    ) && (t._headerRowOutlet = n.first),
                    r["\u0275\u0275queryRefresh"](
                      (n = r["\u0275\u0275loadQuery"]())
                    ) && (t._footerRowOutlet = n.first));
              },
              hostAttrs: [1, "cdk-table"],
              inputs: {
                trackBy: "trackBy",
                dataSource: "dataSource",
                multiTemplateDataRows: "multiTemplateDataRows",
              },
              exportAs: ["cdkTable"],
              features: [
                r["\u0275\u0275ProvidersFeature"]([
                  { provide: Zl, useExisting: e },
                ]),
              ],
              ngContentSelectors: Ql,
              decls: 4,
              vars: 0,
              consts: [
                ["headerRowOutlet", ""],
                ["rowOutlet", ""],
                ["footerRowOutlet", ""],
              ],
              template: function (e, t) {
                1 & e &&
                  (r["\u0275\u0275projectionDef"](Wl),
                  r["\u0275\u0275projection"](0),
                  r["\u0275\u0275elementContainer"](1, 0),
                  r["\u0275\u0275elementContainer"](2, 1),
                  r["\u0275\u0275elementContainer"](3, 2));
              },
              directives: [wc, bc, Cc],
              encapsulation: 2,
            })),
            e
          );
        })();
      function Ec(e, t) {
        return e.concat(Array.from(t));
      }
      let xc = (() => {
        class e {}
        return (
          (e.ɵmod = r["\u0275\u0275defineNgModule"]({ type: e })),
          (e.ɵinj = r["\u0275\u0275defineInjector"]({
            factory: function (t) {
              return new (t || e)();
            },
          })),
          e
        );
      })();
      var Dc = n("VRyK");
      const Ic = [[["caption"]]],
        Oc = ["caption"];
      let kc = (() => {
        class e extends Sc {
          constructor() {
            super(...arguments), (this.stickyCssClass = "mat-table-sticky");
          }
        }
        return (
          (e.ɵfac = function (t) {
            return Rc(t || e);
          }),
          (e.ɵcmp = r["\u0275\u0275defineComponent"]({
            type: e,
            selectors: [["mat-table"], ["table", "mat-table", ""]],
            hostAttrs: [1, "mat-table"],
            exportAs: ["matTable"],
            features: [
              r["\u0275\u0275ProvidersFeature"]([
                { provide: Sc, useExisting: e },
                { provide: Zl, useExisting: e },
              ]),
              r["\u0275\u0275InheritDefinitionFeature"],
            ],
            ngContentSelectors: Oc,
            decls: 4,
            vars: 0,
            consts: [
              ["headerRowOutlet", ""],
              ["rowOutlet", ""],
              ["footerRowOutlet", ""],
            ],
            template: function (e, t) {
              1 & e &&
                (r["\u0275\u0275projectionDef"](Ic),
                r["\u0275\u0275projection"](0),
                r["\u0275\u0275elementContainer"](1, 0),
                r["\u0275\u0275elementContainer"](2, 1),
                r["\u0275\u0275elementContainer"](3, 2));
            },
            directives: [wc, bc, Cc],
            styles: [
              'mat-table{display:block}mat-header-row{min-height:56px}mat-row,mat-footer-row{min-height:48px}mat-row,mat-header-row,mat-footer-row{display:flex;border-width:0;border-bottom-width:1px;border-style:solid;align-items:center;box-sizing:border-box}mat-row::after,mat-header-row::after,mat-footer-row::after{display:inline-block;min-height:inherit;content:""}mat-cell:first-of-type,mat-header-cell:first-of-type,mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] mat-cell:first-of-type,[dir=rtl] mat-header-cell:first-of-type,[dir=rtl] mat-footer-cell:first-of-type{padding-left:0;padding-right:24px}mat-cell:last-of-type,mat-header-cell:last-of-type,mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] mat-cell:last-of-type,[dir=rtl] mat-header-cell:last-of-type,[dir=rtl] mat-footer-cell:last-of-type{padding-right:0;padding-left:24px}mat-cell,mat-header-cell,mat-footer-cell{flex:1;display:flex;align-items:center;overflow:hidden;word-wrap:break-word;min-height:inherit}table.mat-table{border-spacing:0}tr.mat-header-row{height:56px}tr.mat-row,tr.mat-footer-row{height:48px}th.mat-header-cell{text-align:left}[dir=rtl] th.mat-header-cell{text-align:right}th.mat-header-cell,td.mat-cell,td.mat-footer-cell{padding:0;border-bottom-width:1px;border-bottom-style:solid}th.mat-header-cell:first-of-type,td.mat-cell:first-of-type,td.mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] th.mat-header-cell:first-of-type,[dir=rtl] td.mat-cell:first-of-type,[dir=rtl] td.mat-footer-cell:first-of-type{padding-left:0;padding-right:24px}th.mat-header-cell:last-of-type,td.mat-cell:last-of-type,td.mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] th.mat-header-cell:last-of-type,[dir=rtl] td.mat-cell:last-of-type,[dir=rtl] td.mat-footer-cell:last-of-type{padding-right:0;padding-left:24px}\n',
            ],
            encapsulation: 2,
          })),
          e
        );
      })();
      const Rc = r["\u0275\u0275getInheritedFactory"](kc);
      let Ac = (() => {
        class e extends Yl {}
        return (
          (e.ɵfac = function (t) {
            return Tc(t || e);
          }),
          (e.ɵdir = r["\u0275\u0275defineDirective"]({
            type: e,
            selectors: [["", "matCellDef", ""]],
            features: [
              r["\u0275\u0275ProvidersFeature"]([
                { provide: Yl, useExisting: e },
              ]),
              r["\u0275\u0275InheritDefinitionFeature"],
            ],
          })),
          e
        );
      })();
      const Tc = r["\u0275\u0275getInheritedFactory"](Ac);
      let Fc = (() => {
        class e extends Xl {}
        return (
          (e.ɵfac = function (t) {
            return Pc(t || e);
          }),
          (e.ɵdir = r["\u0275\u0275defineDirective"]({
            type: e,
            selectors: [["", "matHeaderCellDef", ""]],
            features: [
              r["\u0275\u0275ProvidersFeature"]([
                { provide: Xl, useExisting: e },
              ]),
              r["\u0275\u0275InheritDefinitionFeature"],
            ],
          })),
          e
        );
      })();
      const Pc = r["\u0275\u0275getInheritedFactory"](Fc);
      let jc = (() => {
        class e extends nc {}
        return (
          (e.ɵfac = function (t) {
            return Nc(t || e);
          }),
          (e.ɵdir = r["\u0275\u0275defineDirective"]({
            type: e,
            selectors: [["", "matColumnDef", ""]],
            inputs: { sticky: "sticky", name: ["matColumnDef", "name"] },
            features: [
              r["\u0275\u0275ProvidersFeature"]([
                { provide: nc, useExisting: e },
                { provide: "MAT_SORT_HEADER_COLUMN_DEF", useExisting: e },
              ]),
              r["\u0275\u0275InheritDefinitionFeature"],
            ],
          })),
          e
        );
      })();
      const Nc = r["\u0275\u0275getInheritedFactory"](jc);
      let Mc = (() => {
          class e extends ic {
            constructor(e, t) {
              super(e, t),
                t.nativeElement.classList.add(
                  "mat-column-" + e.cssClassFriendlyName
                );
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(
                r["\u0275\u0275directiveInject"](nc),
                r["\u0275\u0275directiveInject"](r.ElementRef)
              );
            }),
            (e.ɵdir = r["\u0275\u0275defineDirective"]({
              type: e,
              selectors: [["mat-header-cell"], ["th", "mat-header-cell", ""]],
              hostAttrs: ["role", "columnheader", 1, "mat-header-cell"],
              features: [r["\u0275\u0275InheritDefinitionFeature"]],
            })),
            e
          );
        })(),
        Lc = (() => {
          class e extends sc {
            constructor(e, t) {
              super(e, t),
                t.nativeElement.classList.add(
                  "mat-column-" + e.cssClassFriendlyName
                );
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(
                r["\u0275\u0275directiveInject"](nc),
                r["\u0275\u0275directiveInject"](r.ElementRef)
              );
            }),
            (e.ɵdir = r["\u0275\u0275defineDirective"]({
              type: e,
              selectors: [["mat-cell"], ["td", "mat-cell", ""]],
              hostAttrs: ["role", "gridcell", 1, "mat-cell"],
              features: [r["\u0275\u0275InheritDefinitionFeature"]],
            })),
            e
          );
        })(),
        Vc = (() => {
          class e extends cc {}
          return (
            (e.ɵfac = function (t) {
              return Bc(t || e);
            }),
            (e.ɵdir = r["\u0275\u0275defineDirective"]({
              type: e,
              selectors: [["", "matHeaderRowDef", ""]],
              inputs: {
                columns: ["matHeaderRowDef", "columns"],
                sticky: ["matHeaderRowDefSticky", "sticky"],
              },
              features: [
                r["\u0275\u0275ProvidersFeature"]([
                  { provide: cc, useExisting: e },
                ]),
                r["\u0275\u0275InheritDefinitionFeature"],
              ],
            })),
            e
          );
        })();
      const Bc = r["\u0275\u0275getInheritedFactory"](Vc);
      let zc = (() => {
        class e extends fc {}
        return (
          (e.ɵfac = function (t) {
            return Uc(t || e);
          }),
          (e.ɵdir = r["\u0275\u0275defineDirective"]({
            type: e,
            selectors: [["", "matRowDef", ""]],
            inputs: {
              columns: ["matRowDefColumns", "columns"],
              when: ["matRowDefWhen", "when"],
            },
            features: [
              r["\u0275\u0275ProvidersFeature"]([
                { provide: fc, useExisting: e },
              ]),
              r["\u0275\u0275InheritDefinitionFeature"],
            ],
          })),
          e
        );
      })();
      const Uc = r["\u0275\u0275getInheritedFactory"](zc);
      let Hc = (() => {
        class e extends mc {}
        return (
          (e.ɵfac = function (t) {
            return $c(t || e);
          }),
          (e.ɵcmp = r["\u0275\u0275defineComponent"]({
            type: e,
            selectors: [["mat-header-row"], ["tr", "mat-header-row", ""]],
            hostAttrs: ["role", "row", 1, "mat-header-row"],
            exportAs: ["matHeaderRow"],
            features: [
              r["\u0275\u0275ProvidersFeature"]([
                { provide: mc, useExisting: e },
              ]),
              r["\u0275\u0275InheritDefinitionFeature"],
            ],
            decls: 1,
            vars: 0,
            consts: [["cdkCellOutlet", ""]],
            template: function (e, t) {
              1 & e && r["\u0275\u0275elementContainer"](0, 0);
            },
            directives: [pc],
            encapsulation: 2,
          })),
          e
        );
      })();
      const $c = r["\u0275\u0275getInheritedFactory"](Hc);
      let qc = (() => {
        class e extends gc {}
        return (
          (e.ɵfac = function (t) {
            return Gc(t || e);
          }),
          (e.ɵcmp = r["\u0275\u0275defineComponent"]({
            type: e,
            selectors: [["mat-row"], ["tr", "mat-row", ""]],
            hostAttrs: ["role", "row", 1, "mat-row"],
            exportAs: ["matRow"],
            features: [
              r["\u0275\u0275ProvidersFeature"]([
                { provide: gc, useExisting: e },
              ]),
              r["\u0275\u0275InheritDefinitionFeature"],
            ],
            decls: 1,
            vars: 0,
            consts: [["cdkCellOutlet", ""]],
            template: function (e, t) {
              1 & e && r["\u0275\u0275elementContainer"](0, 0);
            },
            directives: [pc],
            encapsulation: 2,
          })),
          e
        );
      })();
      const Gc = r["\u0275\u0275getInheritedFactory"](qc);
      let Wc = (() => {
        class e {}
        return (
          (e.ɵmod = r["\u0275\u0275defineNgModule"]({ type: e })),
          (e.ɵinj = r["\u0275\u0275defineInjector"]({
            factory: function (t) {
              return new (t || e)();
            },
            imports: [[xc, Nr], Nr],
          })),
          e
        );
      })();
      const Qc = ["mat-button", ""],
        Kc = ["*"],
        Zc = [
          "mat-button",
          "mat-flat-button",
          "mat-icon-button",
          "mat-raised-button",
          "mat-stroked-button",
          "mat-mini-fab",
          "mat-fab",
        ];
      class Yc {
        constructor(e) {
          this._elementRef = e;
        }
      }
      const Xc = Lr(Mr(Vr(Yc)));
      let Jc = (() => {
          class e extends Xc {
            constructor(e, t, n) {
              super(e),
                (this._focusMonitor = t),
                (this._animationMode = n),
                (this.isRoundButton = this._hasHostAttributes(
                  "mat-fab",
                  "mat-mini-fab"
                )),
                (this.isIconButton = this._hasHostAttributes(
                  "mat-icon-button"
                ));
              for (const r of Zc)
                this._hasHostAttributes(r) &&
                  this._getHostElement().classList.add(r);
              e.nativeElement.classList.add("mat-button-base"),
                this._focusMonitor.monitor(this._elementRef, !0),
                this.isRoundButton && (this.color = "accent");
            }
            ngOnDestroy() {
              this._focusMonitor.stopMonitoring(this._elementRef);
            }
            focus(e = "program", t) {
              this._focusMonitor.focusVia(this._getHostElement(), e, t);
            }
            _getHostElement() {
              return this._elementRef.nativeElement;
            }
            _isRippleDisabled() {
              return this.disableRipple || this.disabled;
            }
            _hasHostAttributes(...e) {
              return e.some((e) => this._getHostElement().hasAttribute(e));
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(
                r["\u0275\u0275directiveInject"](r.ElementRef),
                r["\u0275\u0275directiveInject"](Ge),
                r["\u0275\u0275directiveInject"](Dr, 8)
              );
            }),
            (e.ɵcmp = r["\u0275\u0275defineComponent"]({
              type: e,
              selectors: [
                ["button", "mat-button", ""],
                ["button", "mat-raised-button", ""],
                ["button", "mat-icon-button", ""],
                ["button", "mat-fab", ""],
                ["button", "mat-mini-fab", ""],
                ["button", "mat-stroked-button", ""],
                ["button", "mat-flat-button", ""],
              ],
              viewQuery: function (e, t) {
                var n;
                1 & e && r["\u0275\u0275viewQuery"](Yr, !0),
                  2 & e &&
                    r["\u0275\u0275queryRefresh"](
                      (n = r["\u0275\u0275loadQuery"]())
                    ) &&
                    (t.ripple = n.first);
              },
              hostAttrs: [1, "mat-focus-indicator"],
              hostVars: 3,
              hostBindings: function (e, t) {
                2 & e &&
                  (r["\u0275\u0275attribute"]("disabled", t.disabled || null),
                  r["\u0275\u0275classProp"](
                    "_mat-animation-noopable",
                    "NoopAnimations" === t._animationMode
                  ));
              },
              inputs: {
                disabled: "disabled",
                disableRipple: "disableRipple",
                color: "color",
              },
              exportAs: ["matButton"],
              features: [r["\u0275\u0275InheritDefinitionFeature"]],
              attrs: Qc,
              ngContentSelectors: Kc,
              decls: 4,
              vars: 5,
              consts: [
                [1, "mat-button-wrapper"],
                [
                  "matRipple",
                  "",
                  1,
                  "mat-button-ripple",
                  3,
                  "matRippleDisabled",
                  "matRippleCentered",
                  "matRippleTrigger",
                ],
                [1, "mat-button-focus-overlay"],
              ],
              template: function (e, t) {
                1 & e &&
                  (r["\u0275\u0275projectionDef"](),
                  r["\u0275\u0275elementStart"](0, "span", 0),
                  r["\u0275\u0275projection"](1),
                  r["\u0275\u0275elementEnd"](),
                  r["\u0275\u0275element"](2, "div", 1),
                  r["\u0275\u0275element"](3, "div", 2)),
                  2 & e &&
                    (r["\u0275\u0275advance"](2),
                    r["\u0275\u0275classProp"](
                      "mat-button-ripple-round",
                      t.isRoundButton || t.isIconButton
                    ),
                    r["\u0275\u0275property"](
                      "matRippleDisabled",
                      t._isRippleDisabled()
                    )("matRippleCentered", t.isIconButton)(
                      "matRippleTrigger",
                      t._getHostElement()
                    ));
              },
              directives: [Yr],
              styles: [
                ".mat-button .mat-button-focus-overlay,.mat-icon-button .mat-button-focus-overlay{opacity:0}.mat-button:hover .mat-button-focus-overlay,.mat-stroked-button:hover .mat-button-focus-overlay{opacity:.04}@media(hover: none){.mat-button:hover .mat-button-focus-overlay,.mat-stroked-button:hover .mat-button-focus-overlay{opacity:0}}.mat-button,.mat-icon-button,.mat-stroked-button,.mat-flat-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-button[disabled],.mat-icon-button[disabled],.mat-stroked-button[disabled],.mat-flat-button[disabled]{cursor:default}.mat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-button.cdk-program-focused .mat-button-focus-overlay,.mat-icon-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-icon-button.cdk-program-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-program-focused .mat-button-focus-overlay,.mat-flat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-flat-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-raised-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-raised-button::-moz-focus-inner{border:0}.mat-raised-button[disabled]{cursor:default}.mat-raised-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-raised-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-raised-button::-moz-focus-inner{border:0}._mat-animation-noopable.mat-raised-button{transition:none;animation:none}.mat-stroked-button{border:1px solid currentColor;padding:0 15px;line-height:34px}.mat-stroked-button .mat-button-ripple.mat-ripple,.mat-stroked-button .mat-button-focus-overlay{top:-1px;left:-1px;right:-1px;bottom:-1px}.mat-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:56px;height:56px;padding:0;flex-shrink:0}.mat-fab::-moz-focus-inner{border:0}.mat-fab[disabled]{cursor:default}.mat-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-fab{transition:none;animation:none}.mat-fab .mat-button-wrapper{padding:16px 0;display:inline-block;line-height:24px}.mat-mini-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:40px;height:40px;padding:0;flex-shrink:0}.mat-mini-fab::-moz-focus-inner{border:0}.mat-mini-fab[disabled]{cursor:default}.mat-mini-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-mini-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-mini-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-mini-fab{transition:none;animation:none}.mat-mini-fab .mat-button-wrapper{padding:8px 0;display:inline-block;line-height:24px}.mat-icon-button{padding:0;min-width:0;width:40px;height:40px;flex-shrink:0;line-height:40px;border-radius:50%}.mat-icon-button i,.mat-icon-button .mat-icon{line-height:24px}.mat-button-ripple.mat-ripple,.mat-button-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-button-ripple.mat-ripple:not(:empty){transform:translateZ(0)}.mat-button-focus-overlay{opacity:0;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1),background-color 200ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable .mat-button-focus-overlay{transition:none}.cdk-high-contrast-active .mat-button-focus-overlay{background-color:#fff}.cdk-high-contrast-black-on-white .mat-button-focus-overlay{background-color:#000}.mat-button-ripple-round{border-radius:50%;z-index:1}.mat-button .mat-button-wrapper>*,.mat-flat-button .mat-button-wrapper>*,.mat-stroked-button .mat-button-wrapper>*,.mat-raised-button .mat-button-wrapper>*,.mat-icon-button .mat-button-wrapper>*,.mat-fab .mat-button-wrapper>*,.mat-mini-fab .mat-button-wrapper>*{vertical-align:middle}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button{display:block;font-size:inherit;width:2.5em;height:2.5em}.cdk-high-contrast-active .mat-button,.cdk-high-contrast-active .mat-flat-button,.cdk-high-contrast-active .mat-raised-button,.cdk-high-contrast-active .mat-icon-button,.cdk-high-contrast-active .mat-fab,.cdk-high-contrast-active .mat-mini-fab{outline:solid 1px}\n",
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            e
          );
        })(),
        eu = (() => {
          class e {}
          return (
            (e.ɵmod = r["\u0275\u0275defineNgModule"]({ type: e })),
            (e.ɵinj = r["\u0275\u0275defineInjector"]({
              factory: function (t) {
                return new (t || e)();
              },
              imports: [[Xr, Nr], Nr],
            })),
            e
          );
        })();
      function tu(e, t, n, r) {
        return (
          Object(G.a)(n) && ((r = n), (n = void 0)),
          r
            ? tu(e, t, n).pipe(
                Object(le.a)((e) => (Object(fi.a)(e) ? r(...e) : r(e)))
              )
            : new ue.a((r) => {
                !(function e(t, n, r, i, s) {
                  let o;
                  if (
                    (function (e) {
                      return (
                        e &&
                        "function" == typeof e.addEventListener &&
                        "function" == typeof e.removeEventListener
                      );
                    })(t)
                  ) {
                    const e = t;
                    t.addEventListener(n, r, s),
                      (o = () => e.removeEventListener(n, r, s));
                  } else if (
                    (function (e) {
                      return (
                        e &&
                        "function" == typeof e.on &&
                        "function" == typeof e.off
                      );
                    })(t)
                  ) {
                    const e = t;
                    t.on(n, r), (o = () => e.off(n, r));
                  } else if (
                    (function (e) {
                      return (
                        e &&
                        "function" == typeof e.addListener &&
                        "function" == typeof e.removeListener
                      );
                    })(t)
                  ) {
                    const e = t;
                    t.addListener(n, r), (o = () => e.removeListener(n, r));
                  } else {
                    if (!t || !t.length)
                      throw new TypeError("Invalid event target");
                    for (let o = 0, a = t.length; o < a; o++)
                      e(t[o], n, r, i, s);
                  }
                  i.add(o);
                })(
                  e,
                  t,
                  function (e) {
                    r.next(
                      arguments.length > 1
                        ? Array.prototype.slice.call(arguments)
                        : e
                    );
                  },
                  r,
                  n
                );
              })
        );
      }
      class nu {
        constructor(e, t) {
          (this.compare = e), (this.keySelector = t);
        }
        call(e, t) {
          return t.subscribe(new ru(e, this.compare, this.keySelector));
        }
      }
      class ru extends $.a {
        constructor(e, t, n) {
          super(e),
            (this.keySelector = n),
            (this.hasKey = !1),
            "function" == typeof t && (this.compare = t);
        }
        compare(e, t) {
          return e === t;
        }
        _next(e) {
          let t;
          try {
            const { keySelector: n } = this;
            t = n ? n(e) : e;
          } catch (r) {
            return this.destination.error(r);
          }
          let n = !1;
          if (this.hasKey)
            try {
              const { compare: e } = this;
              n = e(this.key, t);
            } catch (r) {
              return this.destination.error(r);
            }
          else this.hasKey = !0;
          n || ((this.key = t), this.destination.next(e));
        }
      }
      class iu {
        constructor(e) {
          this.durationSelector = e;
        }
        call(e, t) {
          return t.subscribe(new su(e, this.durationSelector));
        }
      }
      class su extends yi.a {
        constructor(e, t) {
          super(e), (this.durationSelector = t), (this.hasValue = !1);
        }
        _next(e) {
          if (((this.value = e), (this.hasValue = !0), !this.throttled)) {
            let n;
            try {
              const { durationSelector: t } = this;
              n = t(e);
            } catch (t) {
              return this.destination.error(t);
            }
            const r = Object(bi.a)(this, n);
            !r || r.closed
              ? this.clearThrottle()
              : this.add((this.throttled = r));
          }
        }
        clearThrottle() {
          const { value: e, hasValue: t, throttled: n } = this;
          n && (this.remove(n), (this.throttled = null), n.unsubscribe()),
            t &&
              ((this.value = null),
              (this.hasValue = !1),
              this.destination.next(e));
        }
        notifyNext(e, t, n, r) {
          this.clearThrottle();
        }
        notifyComplete() {
          this.clearThrottle();
        }
      }
      function ou(e) {
        return !Object(fi.a)(e) && e - parseFloat(e) + 1 >= 0;
      }
      function au(e) {
        const { index: t, period: n, subscriber: r } = e;
        if ((r.next(t), !r.closed)) {
          if (-1 === n) return r.complete();
          (e.index = t + 1), this.schedule(e, n);
        }
      }
      function lu(e, t = ee) {
        return (
          (n = () =>
            (function (e = 0, t, n) {
              let r = -1;
              return (
                ou(t)
                  ? (r = Number(t) < 1 ? 1 : Number(t))
                  : Object(V.a)(t) && (n = t),
                Object(V.a)(n) || (n = ee),
                new ue.a((t) => {
                  const i = ou(e) ? e : +e - n.now();
                  return n.schedule(au, i, {
                    index: 0,
                    period: r,
                    subscriber: t,
                  });
                })
              );
            })(e, t)),
          function (e) {
            return e.lift(new iu(n));
          }
        );
        var n;
      }
      n("Ylt2");
      let cu = (() => {
          class e {
            constructor(e, t, n) {
              (this._ngZone = e),
                (this._platform = t),
                (this._scrolled = new M.a()),
                (this._globalSubscription = null),
                (this._scrolledCount = 0),
                (this.scrollContainers = new Map()),
                (this._document = n);
            }
            register(e) {
              this.scrollContainers.has(e) ||
                this.scrollContainers.set(
                  e,
                  e.elementScrolled().subscribe(() => this._scrolled.next(e))
                );
            }
            deregister(e) {
              const t = this.scrollContainers.get(e);
              t && (t.unsubscribe(), this.scrollContainers.delete(e));
            }
            scrolled(e = 20) {
              return this._platform.isBrowser
                ? new ue.a((t) => {
                    this._globalSubscription || this._addGlobalListener();
                    const n =
                      e > 0
                        ? this._scrolled.pipe(lu(e)).subscribe(t)
                        : this._scrolled.subscribe(t);
                    return (
                      this._scrolledCount++,
                      () => {
                        n.unsubscribe(),
                          this._scrolledCount--,
                          this._scrolledCount || this._removeGlobalListener();
                      }
                    );
                  })
                : U();
            }
            ngOnDestroy() {
              this._removeGlobalListener(),
                this.scrollContainers.forEach((e, t) => this.deregister(t)),
                this._scrolled.complete();
            }
            ancestorScrolled(e, t) {
              const n = this.getAncestorScrollContainers(e);
              return this.scrolled(t).pipe(se((e) => !e || n.indexOf(e) > -1));
            }
            getAncestorScrollContainers(e) {
              const t = [];
              return (
                this.scrollContainers.forEach((n, r) => {
                  this._scrollableContainsElement(r, e) && t.push(r);
                }),
                t
              );
            }
            _getDocument() {
              return this._document || document;
            }
            _getWindow() {
              return this._getDocument().defaultView || window;
            }
            _scrollableContainsElement(e, t) {
              let n = t.nativeElement,
                r = e.getElementRef().nativeElement;
              do {
                if (n == r) return !0;
              } while ((n = n.parentElement));
              return !1;
            }
            _addGlobalListener() {
              this._globalSubscription = this._ngZone.runOutsideAngular(() =>
                tu(this._getWindow().document, "scroll").subscribe(() =>
                  this._scrolled.next()
                )
              );
            }
            _removeGlobalListener() {
              this._globalSubscription &&
                (this._globalSubscription.unsubscribe(),
                (this._globalSubscription = null));
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(
                r["\u0275\u0275inject"](r.NgZone),
                r["\u0275\u0275inject"](Se),
                r["\u0275\u0275inject"](i.DOCUMENT, 8)
              );
            }),
            (e.ɵprov = Object(r["\u0275\u0275defineInjectable"])({
              factory: function () {
                return new e(
                  Object(r["\u0275\u0275inject"])(r.NgZone),
                  Object(r["\u0275\u0275inject"])(Se),
                  Object(r["\u0275\u0275inject"])(i.DOCUMENT, 8)
                );
              },
              token: e,
              providedIn: "root",
            })),
            e
          );
        })(),
        uu = (() => {
          class e {
            constructor(e, t, n) {
              (this._platform = e),
                (this._document = n),
                t.runOutsideAngular(() => {
                  const t = this._getWindow();
                  (this._change = e.isBrowser
                    ? Object(Dc.a)(tu(t, "resize"), tu(t, "orientationchange"))
                    : U()),
                    (this._invalidateCache = this.change().subscribe(() =>
                      this._updateViewportSize()
                    ));
                });
            }
            ngOnDestroy() {
              this._invalidateCache.unsubscribe();
            }
            getViewportSize() {
              this._viewportSize || this._updateViewportSize();
              const e = {
                width: this._viewportSize.width,
                height: this._viewportSize.height,
              };
              return this._platform.isBrowser || (this._viewportSize = null), e;
            }
            getViewportRect() {
              const e = this.getViewportScrollPosition(),
                { width: t, height: n } = this.getViewportSize();
              return {
                top: e.top,
                left: e.left,
                bottom: e.top + n,
                right: e.left + t,
                height: n,
                width: t,
              };
            }
            getViewportScrollPosition() {
              if (!this._platform.isBrowser) return { top: 0, left: 0 };
              const e = this._getDocument(),
                t = this._getWindow(),
                n = e.documentElement,
                r = n.getBoundingClientRect();
              return {
                top:
                  -r.top || e.body.scrollTop || t.scrollY || n.scrollTop || 0,
                left:
                  -r.left ||
                  e.body.scrollLeft ||
                  t.scrollX ||
                  n.scrollLeft ||
                  0,
              };
            }
            change(e = 20) {
              return e > 0 ? this._change.pipe(lu(e)) : this._change;
            }
            _getDocument() {
              return this._document || document;
            }
            _getWindow() {
              return this._getDocument().defaultView || window;
            }
            _updateViewportSize() {
              const e = this._getWindow();
              this._viewportSize = this._platform.isBrowser
                ? { width: e.innerWidth, height: e.innerHeight }
                : { width: 0, height: 0 };
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(
                r["\u0275\u0275inject"](Se),
                r["\u0275\u0275inject"](r.NgZone),
                r["\u0275\u0275inject"](i.DOCUMENT, 8)
              );
            }),
            (e.ɵprov = Object(r["\u0275\u0275defineInjectable"])({
              factory: function () {
                return new e(
                  Object(r["\u0275\u0275inject"])(Se),
                  Object(r["\u0275\u0275inject"])(r.NgZone),
                  Object(r["\u0275\u0275inject"])(i.DOCUMENT, 8)
                );
              },
              token: e,
              providedIn: "root",
            })),
            e
          );
        })(),
        hu = (() => {
          class e {}
          return (
            (e.ɵmod = r["\u0275\u0275defineNgModule"]({ type: e })),
            (e.ɵinj = r["\u0275\u0275defineInjector"]({
              factory: function (t) {
                return new (t || e)();
              },
            })),
            e
          );
        })(),
        du = (() => {
          class e {}
          return (
            (e.ɵmod = r["\u0275\u0275defineNgModule"]({ type: e })),
            (e.ɵinj = r["\u0275\u0275defineInjector"]({
              factory: function (t) {
                return new (t || e)();
              },
              imports: [[Xe, Ee, hu], Xe, hu],
            })),
            e
          );
        })();
      function fu() {
        throw Error("Host already has a portal attached");
      }
      class pu {
        attach(e) {
          return (
            null == e &&
              (function () {
                throw Error(
                  "Attempting to attach a portal to a null PortalOutlet"
                );
              })(),
            e.hasAttached() && fu(),
            (this._attachedHost = e),
            e.attach(this)
          );
        }
        detach() {
          let e = this._attachedHost;
          null == e
            ? (function () {
                throw Error(
                  "Attempting to detach a portal that is not attached to a host"
                );
              })()
            : ((this._attachedHost = null), e.detach());
        }
        get isAttached() {
          return null != this._attachedHost;
        }
        setAttachedHost(e) {
          this._attachedHost = e;
        }
      }
      class mu extends pu {
        constructor(e, t, n, r) {
          super(),
            (this.component = e),
            (this.viewContainerRef = t),
            (this.injector = n),
            (this.componentFactoryResolver = r);
        }
      }
      class gu extends pu {
        constructor(e, t, n) {
          super(),
            (this.templateRef = e),
            (this.viewContainerRef = t),
            (this.context = n);
        }
        get origin() {
          return this.templateRef.elementRef;
        }
        attach(e, t = this.context) {
          return (this.context = t), super.attach(e);
        }
        detach() {
          return (this.context = void 0), super.detach();
        }
      }
      class _u extends pu {
        constructor(e) {
          super(),
            (this.element = e instanceof r.ElementRef ? e.nativeElement : e);
        }
      }
      class yu extends class {
        constructor() {
          (this._isDisposed = !1), (this.attachDomPortal = null);
        }
        hasAttached() {
          return !!this._attachedPortal;
        }
        attach(e) {
          return (
            e ||
              (function () {
                throw Error("Must provide a portal to attach");
              })(),
            this.hasAttached() && fu(),
            this._isDisposed &&
              (function () {
                throw Error("This PortalOutlet has already been disposed");
              })(),
            e instanceof mu
              ? ((this._attachedPortal = e), this.attachComponentPortal(e))
              : e instanceof gu
              ? ((this._attachedPortal = e), this.attachTemplatePortal(e))
              : this.attachDomPortal && e instanceof _u
              ? ((this._attachedPortal = e), this.attachDomPortal(e))
              : void (function () {
                  throw Error(
                    "Attempting to attach an unknown Portal type. BasePortalOutlet accepts either a ComponentPortal or a TemplatePortal."
                  );
                })()
          );
        }
        detach() {
          this._attachedPortal &&
            (this._attachedPortal.setAttachedHost(null),
            (this._attachedPortal = null)),
            this._invokeDisposeFn();
        }
        dispose() {
          this.hasAttached() && this.detach(),
            this._invokeDisposeFn(),
            (this._isDisposed = !0);
        }
        setDisposeFn(e) {
          this._disposeFn = e;
        }
        _invokeDisposeFn() {
          this._disposeFn && (this._disposeFn(), (this._disposeFn = null));
        }
      } {
        constructor(e, t, n, r, i) {
          super(),
            (this.outletElement = e),
            (this._componentFactoryResolver = t),
            (this._appRef = n),
            (this._defaultInjector = r),
            (this.attachDomPortal = (e) => {
              if (!this._document)
                throw Error(
                  "Cannot attach DOM portal without _document constructor parameter"
                );
              const t = e.element;
              if (!t.parentNode)
                throw Error(
                  "DOM portal content must be attached to a parent node."
                );
              const n = this._document.createComment("dom-portal");
              t.parentNode.insertBefore(n, t),
                this.outletElement.appendChild(t),
                super.setDisposeFn(() => {
                  n.parentNode && n.parentNode.replaceChild(t, n);
                });
            }),
            (this._document = i);
        }
        attachComponentPortal(e) {
          const t = (
            e.componentFactoryResolver || this._componentFactoryResolver
          ).resolveComponentFactory(e.component);
          let n;
          return (
            e.viewContainerRef
              ? ((n = e.viewContainerRef.createComponent(
                  t,
                  e.viewContainerRef.length,
                  e.injector || e.viewContainerRef.injector
                )),
                this.setDisposeFn(() => n.destroy()))
              : ((n = t.create(e.injector || this._defaultInjector)),
                this._appRef.attachView(n.hostView),
                this.setDisposeFn(() => {
                  this._appRef.detachView(n.hostView), n.destroy();
                })),
            this.outletElement.appendChild(this._getComponentRootNode(n)),
            n
          );
        }
        attachTemplatePortal(e) {
          let t = e.viewContainerRef,
            n = t.createEmbeddedView(e.templateRef, e.context);
          return (
            n.detectChanges(),
            n.rootNodes.forEach((e) => this.outletElement.appendChild(e)),
            this.setDisposeFn(() => {
              let e = t.indexOf(n);
              -1 !== e && t.remove(e);
            }),
            n
          );
        }
        dispose() {
          super.dispose(),
            null != this.outletElement.parentNode &&
              this.outletElement.parentNode.removeChild(this.outletElement);
        }
        _getComponentRootNode(e) {
          return e.hostView.rootNodes[0];
        }
      }
      let vu = (() => {
        class e {}
        return (
          (e.ɵmod = r["\u0275\u0275defineNgModule"]({ type: e })),
          (e.ɵinj = r["\u0275\u0275defineInjector"]({
            factory: function (t) {
              return new (t || e)();
            },
          })),
          e
        );
      })();
      class bu {
        constructor(e, t) {
          (this._viewportRuler = e),
            (this._previousHTMLStyles = { top: "", left: "" }),
            (this._isEnabled = !1),
            (this._document = t);
        }
        attach() {}
        enable() {
          if (this._canBeEnabled()) {
            const e = this._document.documentElement;
            (this._previousScrollPosition = this._viewportRuler.getViewportScrollPosition()),
              (this._previousHTMLStyles.left = e.style.left || ""),
              (this._previousHTMLStyles.top = e.style.top || ""),
              (e.style.left = ve(-this._previousScrollPosition.left)),
              (e.style.top = ve(-this._previousScrollPosition.top)),
              e.classList.add("cdk-global-scrollblock"),
              (this._isEnabled = !0);
          }
        }
        disable() {
          if (this._isEnabled) {
            const e = this._document.documentElement,
              t = e.style,
              n = this._document.body.style,
              r = t.scrollBehavior || "",
              i = n.scrollBehavior || "";
            (this._isEnabled = !1),
              (t.left = this._previousHTMLStyles.left),
              (t.top = this._previousHTMLStyles.top),
              e.classList.remove("cdk-global-scrollblock"),
              (t.scrollBehavior = n.scrollBehavior = "auto"),
              window.scroll(
                this._previousScrollPosition.left,
                this._previousScrollPosition.top
              ),
              (t.scrollBehavior = r),
              (n.scrollBehavior = i);
          }
        }
        _canBeEnabled() {
          if (
            this._document.documentElement.classList.contains(
              "cdk-global-scrollblock"
            ) ||
            this._isEnabled
          )
            return !1;
          const e = this._document.body,
            t = this._viewportRuler.getViewportSize();
          return e.scrollHeight > t.height || e.scrollWidth > t.width;
        }
      }
      function wu() {
        return Error("Scroll strategy has already been attached.");
      }
      class Cu {
        constructor(e, t, n, r) {
          (this._scrollDispatcher = e),
            (this._ngZone = t),
            (this._viewportRuler = n),
            (this._config = r),
            (this._scrollSubscription = null),
            (this._detach = () => {
              this.disable(),
                this._overlayRef.hasAttached() &&
                  this._ngZone.run(() => this._overlayRef.detach());
            });
        }
        attach(e) {
          if (this._overlayRef) throw wu();
          this._overlayRef = e;
        }
        enable() {
          if (this._scrollSubscription) return;
          const e = this._scrollDispatcher.scrolled(0);
          this._config && this._config.threshold && this._config.threshold > 1
            ? ((this._initialScrollPosition = this._viewportRuler.getViewportScrollPosition().top),
              (this._scrollSubscription = e.subscribe(() => {
                const e = this._viewportRuler.getViewportScrollPosition().top;
                Math.abs(e - this._initialScrollPosition) >
                this._config.threshold
                  ? this._detach()
                  : this._overlayRef.updatePosition();
              })))
            : (this._scrollSubscription = e.subscribe(this._detach));
        }
        disable() {
          this._scrollSubscription &&
            (this._scrollSubscription.unsubscribe(),
            (this._scrollSubscription = null));
        }
        detach() {
          this.disable(), (this._overlayRef = null);
        }
      }
      class Su {
        enable() {}
        disable() {}
        attach() {}
      }
      function Eu(e, t) {
        return t.some(
          (t) =>
            e.bottom < t.top ||
            e.top > t.bottom ||
            e.right < t.left ||
            e.left > t.right
        );
      }
      function xu(e, t) {
        return t.some(
          (t) =>
            e.top < t.top ||
            e.bottom > t.bottom ||
            e.left < t.left ||
            e.right > t.right
        );
      }
      class Du {
        constructor(e, t, n, r) {
          (this._scrollDispatcher = e),
            (this._viewportRuler = t),
            (this._ngZone = n),
            (this._config = r),
            (this._scrollSubscription = null);
        }
        attach(e) {
          if (this._overlayRef) throw wu();
          this._overlayRef = e;
        }
        enable() {
          this._scrollSubscription ||
            (this._scrollSubscription = this._scrollDispatcher
              .scrolled(this._config ? this._config.scrollThrottle : 0)
              .subscribe(() => {
                if (
                  (this._overlayRef.updatePosition(),
                  this._config && this._config.autoClose)
                ) {
                  const e = this._overlayRef.overlayElement.getBoundingClientRect(),
                    {
                      width: t,
                      height: n,
                    } = this._viewportRuler.getViewportSize();
                  Eu(e, [
                    {
                      width: t,
                      height: n,
                      bottom: n,
                      right: t,
                      top: 0,
                      left: 0,
                    },
                  ]) &&
                    (this.disable(),
                    this._ngZone.run(() => this._overlayRef.detach()));
                }
              }));
        }
        disable() {
          this._scrollSubscription &&
            (this._scrollSubscription.unsubscribe(),
            (this._scrollSubscription = null));
        }
        detach() {
          this.disable(), (this._overlayRef = null);
        }
      }
      let Iu = (() => {
        class e {
          constructor(e, t, n, r) {
            (this._scrollDispatcher = e),
              (this._viewportRuler = t),
              (this._ngZone = n),
              (this.noop = () => new Su()),
              (this.close = (e) =>
                new Cu(
                  this._scrollDispatcher,
                  this._ngZone,
                  this._viewportRuler,
                  e
                )),
              (this.block = () => new bu(this._viewportRuler, this._document)),
              (this.reposition = (e) =>
                new Du(
                  this._scrollDispatcher,
                  this._viewportRuler,
                  this._ngZone,
                  e
                )),
              (this._document = r);
          }
        }
        return (
          (e.ɵfac = function (t) {
            return new (t || e)(
              r["\u0275\u0275inject"](cu),
              r["\u0275\u0275inject"](uu),
              r["\u0275\u0275inject"](r.NgZone),
              r["\u0275\u0275inject"](i.DOCUMENT)
            );
          }),
          (e.ɵprov = Object(r["\u0275\u0275defineInjectable"])({
            factory: function () {
              return new e(
                Object(r["\u0275\u0275inject"])(cu),
                Object(r["\u0275\u0275inject"])(uu),
                Object(r["\u0275\u0275inject"])(r.NgZone),
                Object(r["\u0275\u0275inject"])(i.DOCUMENT)
              );
            },
            token: e,
            providedIn: "root",
          })),
          e
        );
      })();
      class Ou {
        constructor(e) {
          if (
            ((this.scrollStrategy = new Su()),
            (this.panelClass = ""),
            (this.hasBackdrop = !1),
            (this.backdropClass = "cdk-overlay-dark-backdrop"),
            (this.disposeOnNavigation = !1),
            e)
          ) {
            const t = Object.keys(e);
            for (const n of t) void 0 !== e[n] && (this[n] = e[n]);
          }
        }
      }
      class ku {
        constructor(e, t, n, r, i) {
          (this.offsetX = n),
            (this.offsetY = r),
            (this.panelClass = i),
            (this.originX = e.originX),
            (this.originY = e.originY),
            (this.overlayX = t.overlayX),
            (this.overlayY = t.overlayY);
        }
      }
      class Ru {
        constructor(e, t) {
          (this.connectionPair = e), (this.scrollableViewProperties = t);
        }
      }
      function Au(e, t) {
        if ("top" !== t && "bottom" !== t && "center" !== t)
          throw Error(
            `ConnectedPosition: Invalid ${e} "${t}". Expected "top", "bottom" or "center".`
          );
      }
      function Tu(e, t) {
        if ("start" !== t && "end" !== t && "center" !== t)
          throw Error(
            `ConnectedPosition: Invalid ${e} "${t}". Expected "start", "end" or "center".`
          );
      }
      let Fu = (() => {
        class e {
          constructor(e) {
            (this._attachedOverlays = []),
              (this._keydownListener = (e) => {
                const t = this._attachedOverlays;
                for (let n = t.length - 1; n > -1; n--)
                  if (t[n]._keydownEvents.observers.length > 0) {
                    t[n]._keydownEvents.next(e);
                    break;
                  }
              }),
              (this._document = e);
          }
          ngOnDestroy() {
            this._detach();
          }
          add(e) {
            this.remove(e),
              this._isAttached ||
                (this._document.body.addEventListener(
                  "keydown",
                  this._keydownListener
                ),
                (this._isAttached = !0)),
              this._attachedOverlays.push(e);
          }
          remove(e) {
            const t = this._attachedOverlays.indexOf(e);
            t > -1 && this._attachedOverlays.splice(t, 1),
              0 === this._attachedOverlays.length && this._detach();
          }
          _detach() {
            this._isAttached &&
              (this._document.body.removeEventListener(
                "keydown",
                this._keydownListener
              ),
              (this._isAttached = !1));
          }
        }
        return (
          (e.ɵfac = function (t) {
            return new (t || e)(r["\u0275\u0275inject"](i.DOCUMENT));
          }),
          (e.ɵprov = Object(r["\u0275\u0275defineInjectable"])({
            factory: function () {
              return new e(Object(r["\u0275\u0275inject"])(i.DOCUMENT));
            },
            token: e,
            providedIn: "root",
          })),
          e
        );
      })();
      const Pu = !(
        "undefined" == typeof window ||
        !window ||
        (!window.__karma__ && !window.jasmine)
      );
      let ju = (() => {
        class e {
          constructor(e, t) {
            (this._platform = t), (this._document = e);
          }
          ngOnDestroy() {
            const e = this._containerElement;
            e && e.parentNode && e.parentNode.removeChild(e);
          }
          getContainerElement() {
            return (
              this._containerElement || this._createContainer(),
              this._containerElement
            );
          }
          _createContainer() {
            const e = this._platform
              ? this._platform.isBrowser
              : "undefined" != typeof window;
            if (e || Pu) {
              const e = this._document.querySelectorAll(
                '.cdk-overlay-container[platform="server"], .cdk-overlay-container[platform="test"]'
              );
              for (let t = 0; t < e.length; t++)
                e[t].parentNode.removeChild(e[t]);
            }
            const t = this._document.createElement("div");
            t.classList.add("cdk-overlay-container"),
              Pu
                ? t.setAttribute("platform", "test")
                : e || t.setAttribute("platform", "server"),
              this._document.body.appendChild(t),
              (this._containerElement = t);
          }
        }
        return (
          (e.ɵfac = function (t) {
            return new (t || e)(
              r["\u0275\u0275inject"](i.DOCUMENT),
              r["\u0275\u0275inject"](Se)
            );
          }),
          (e.ɵprov = Object(r["\u0275\u0275defineInjectable"])({
            factory: function () {
              return new e(
                Object(r["\u0275\u0275inject"])(i.DOCUMENT),
                Object(r["\u0275\u0275inject"])(Se)
              );
            },
            token: e,
            providedIn: "root",
          })),
          e
        );
      })();
      class Nu {
        constructor(e, t, n, r, i, s, o, a) {
          (this._portalOutlet = e),
            (this._host = t),
            (this._pane = n),
            (this._config = r),
            (this._ngZone = i),
            (this._keyboardDispatcher = s),
            (this._document = o),
            (this._location = a),
            (this._backdropElement = null),
            (this._backdropClick = new M.a()),
            (this._attachments = new M.a()),
            (this._detachments = new M.a()),
            (this._locationChanges = L.a.EMPTY),
            (this._backdropClickHandler = (e) => this._backdropClick.next(e)),
            (this._keydownEvents = new M.a()),
            r.scrollStrategy &&
              ((this._scrollStrategy = r.scrollStrategy),
              this._scrollStrategy.attach(this)),
            (this._positionStrategy = r.positionStrategy);
        }
        get overlayElement() {
          return this._pane;
        }
        get backdropElement() {
          return this._backdropElement;
        }
        get hostElement() {
          return this._host;
        }
        attach(e) {
          let t = this._portalOutlet.attach(e);
          return (
            !this._host.parentElement &&
              this._previousHostParent &&
              this._previousHostParent.appendChild(this._host),
            this._positionStrategy && this._positionStrategy.attach(this),
            this._updateStackingOrder(),
            this._updateElementSize(),
            this._updateElementDirection(),
            this._scrollStrategy && this._scrollStrategy.enable(),
            this._ngZone.onStable
              .asObservable()
              .pipe(fe(1))
              .subscribe(() => {
                this.hasAttached() && this.updatePosition();
              }),
            this._togglePointerEvents(!0),
            this._config.hasBackdrop && this._attachBackdrop(),
            this._config.panelClass &&
              this._toggleClasses(this._pane, this._config.panelClass, !0),
            this._attachments.next(),
            this._keyboardDispatcher.add(this),
            this._config.disposeOnNavigation &&
              this._location &&
              (this._locationChanges = this._location.subscribe(() =>
                this.dispose()
              )),
            t
          );
        }
        detach() {
          if (!this.hasAttached()) return;
          this.detachBackdrop(),
            this._togglePointerEvents(!1),
            this._positionStrategy &&
              this._positionStrategy.detach &&
              this._positionStrategy.detach(),
            this._scrollStrategy && this._scrollStrategy.disable();
          const e = this._portalOutlet.detach();
          return (
            this._detachments.next(),
            this._keyboardDispatcher.remove(this),
            this._detachContentWhenStable(),
            this._locationChanges.unsubscribe(),
            e
          );
        }
        dispose() {
          const e = this.hasAttached();
          this._positionStrategy && this._positionStrategy.dispose(),
            this._disposeScrollStrategy(),
            this.detachBackdrop(),
            this._locationChanges.unsubscribe(),
            this._keyboardDispatcher.remove(this),
            this._portalOutlet.dispose(),
            this._attachments.complete(),
            this._backdropClick.complete(),
            this._keydownEvents.complete(),
            this._host &&
              this._host.parentNode &&
              (this._host.parentNode.removeChild(this._host),
              (this._host = null)),
            (this._previousHostParent = this._pane = null),
            e && this._detachments.next(),
            this._detachments.complete();
        }
        hasAttached() {
          return this._portalOutlet.hasAttached();
        }
        backdropClick() {
          return this._backdropClick.asObservable();
        }
        attachments() {
          return this._attachments.asObservable();
        }
        detachments() {
          return this._detachments.asObservable();
        }
        keydownEvents() {
          return this._keydownEvents.asObservable();
        }
        getConfig() {
          return this._config;
        }
        updatePosition() {
          this._positionStrategy && this._positionStrategy.apply();
        }
        updatePositionStrategy(e) {
          e !== this._positionStrategy &&
            (this._positionStrategy && this._positionStrategy.dispose(),
            (this._positionStrategy = e),
            this.hasAttached() && (e.attach(this), this.updatePosition()));
        }
        updateSize(e) {
          (this._config = Object.assign(Object.assign({}, this._config), e)),
            this._updateElementSize();
        }
        setDirection(e) {
          (this._config = Object.assign(Object.assign({}, this._config), {
            direction: e,
          })),
            this._updateElementDirection();
        }
        addPanelClass(e) {
          this._pane && this._toggleClasses(this._pane, e, !0);
        }
        removePanelClass(e) {
          this._pane && this._toggleClasses(this._pane, e, !1);
        }
        getDirection() {
          const e = this._config.direction;
          return e ? ("string" == typeof e ? e : e.value) : "ltr";
        }
        updateScrollStrategy(e) {
          e !== this._scrollStrategy &&
            (this._disposeScrollStrategy(),
            (this._scrollStrategy = e),
            this.hasAttached() && (e.attach(this), e.enable()));
        }
        _updateElementDirection() {
          this._host.setAttribute("dir", this.getDirection());
        }
        _updateElementSize() {
          if (!this._pane) return;
          const e = this._pane.style;
          (e.width = ve(this._config.width)),
            (e.height = ve(this._config.height)),
            (e.minWidth = ve(this._config.minWidth)),
            (e.minHeight = ve(this._config.minHeight)),
            (e.maxWidth = ve(this._config.maxWidth)),
            (e.maxHeight = ve(this._config.maxHeight));
        }
        _togglePointerEvents(e) {
          this._pane.style.pointerEvents = e ? "auto" : "none";
        }
        _attachBackdrop() {
          (this._backdropElement = this._document.createElement("div")),
            this._backdropElement.classList.add("cdk-overlay-backdrop"),
            this._config.backdropClass &&
              this._toggleClasses(
                this._backdropElement,
                this._config.backdropClass,
                !0
              ),
            this._host.parentElement.insertBefore(
              this._backdropElement,
              this._host
            ),
            this._backdropElement.addEventListener(
              "click",
              this._backdropClickHandler
            ),
            "undefined" != typeof requestAnimationFrame
              ? this._ngZone.runOutsideAngular(() => {
                  requestAnimationFrame(() => {
                    this._backdropElement &&
                      this._backdropElement.classList.add(
                        "cdk-overlay-backdrop-showing"
                      );
                  });
                })
              : this._backdropElement.classList.add(
                  "cdk-overlay-backdrop-showing"
                );
        }
        _updateStackingOrder() {
          this._host.nextSibling &&
            this._host.parentNode.appendChild(this._host);
        }
        detachBackdrop() {
          let e,
            t = this._backdropElement;
          if (!t) return;
          let n = () => {
            t &&
              (t.removeEventListener("click", this._backdropClickHandler),
              t.removeEventListener("transitionend", n),
              t.parentNode && t.parentNode.removeChild(t)),
              this._backdropElement == t && (this._backdropElement = null),
              this._config.backdropClass &&
                this._toggleClasses(t, this._config.backdropClass, !1),
              clearTimeout(e);
          };
          t.classList.remove("cdk-overlay-backdrop-showing"),
            this._ngZone.runOutsideAngular(() => {
              t.addEventListener("transitionend", n);
            }),
            (t.style.pointerEvents = "none"),
            (e = this._ngZone.runOutsideAngular(() => setTimeout(n, 500)));
        }
        _toggleClasses(e, t, n) {
          const r = e.classList;
          ye(t).forEach((e) => {
            e && (n ? r.add(e) : r.remove(e));
          });
        }
        _detachContentWhenStable() {
          this._ngZone.runOutsideAngular(() => {
            const e = this._ngZone.onStable
              .asObservable()
              .pipe($l(Object(Dc.a)(this._attachments, this._detachments)))
              .subscribe(() => {
                (this._pane &&
                  this._host &&
                  0 !== this._pane.children.length) ||
                  (this._pane &&
                    this._config.panelClass &&
                    this._toggleClasses(
                      this._pane,
                      this._config.panelClass,
                      !1
                    ),
                  this._host &&
                    this._host.parentElement &&
                    ((this._previousHostParent = this._host.parentElement),
                    this._previousHostParent.removeChild(this._host)),
                  e.unsubscribe());
              });
          });
        }
        _disposeScrollStrategy() {
          const e = this._scrollStrategy;
          e && (e.disable(), e.detach && e.detach());
        }
      }
      const Mu = /([A-Za-z%]+)$/;
      class Lu {
        constructor(e, t, n, r, i) {
          (this._viewportRuler = t),
            (this._document = n),
            (this._platform = r),
            (this._overlayContainer = i),
            (this._lastBoundingBoxSize = { width: 0, height: 0 }),
            (this._isPushed = !1),
            (this._canPush = !0),
            (this._growAfterOpen = !1),
            (this._hasFlexibleDimensions = !0),
            (this._positionLocked = !1),
            (this._viewportMargin = 0),
            (this._scrollables = []),
            (this._preferredPositions = []),
            (this._positionChanges = new M.a()),
            (this._resizeSubscription = L.a.EMPTY),
            (this._offsetX = 0),
            (this._offsetY = 0),
            (this._appliedPanelClasses = []),
            (this.positionChanges = this._positionChanges.asObservable()),
            this.setOrigin(e);
        }
        get positions() {
          return this._preferredPositions;
        }
        attach(e) {
          if (this._overlayRef && e !== this._overlayRef)
            throw Error(
              "This position strategy is already attached to an overlay"
            );
          this._validatePositions(),
            e.hostElement.classList.add(
              "cdk-overlay-connected-position-bounding-box"
            ),
            (this._overlayRef = e),
            (this._boundingBox = e.hostElement),
            (this._pane = e.overlayElement),
            (this._isDisposed = !1),
            (this._isInitialRender = !0),
            (this._lastPosition = null),
            this._resizeSubscription.unsubscribe(),
            (this._resizeSubscription = this._viewportRuler
              .change()
              .subscribe(() => {
                (this._isInitialRender = !0), this.apply();
              }));
        }
        apply() {
          if (this._isDisposed || !this._platform.isBrowser) return;
          if (
            !this._isInitialRender &&
            this._positionLocked &&
            this._lastPosition
          )
            return void this.reapplyLastPosition();
          this._clearPanelClasses(),
            this._resetOverlayElementStyles(),
            this._resetBoundingBoxStyles(),
            (this._viewportRect = this._getNarrowedViewportRect()),
            (this._originRect = this._getOriginRect()),
            (this._overlayRect = this._pane.getBoundingClientRect());
          const e = this._originRect,
            t = this._overlayRect,
            n = this._viewportRect,
            r = [];
          let i;
          for (let s of this._preferredPositions) {
            let o = this._getOriginPoint(e, s),
              a = this._getOverlayPoint(o, t, s),
              l = this._getOverlayFit(a, t, n, s);
            if (l.isCompletelyWithinViewport)
              return (this._isPushed = !1), void this._applyPosition(s, o);
            this._canFitWithFlexibleDimensions(l, a, n)
              ? r.push({
                  position: s,
                  origin: o,
                  overlayRect: t,
                  boundingBoxRect: this._calculateBoundingBoxRect(o, s),
                })
              : (!i || i.overlayFit.visibleArea < l.visibleArea) &&
                (i = {
                  overlayFit: l,
                  overlayPoint: a,
                  originPoint: o,
                  position: s,
                  overlayRect: t,
                });
          }
          if (r.length) {
            let e = null,
              t = -1;
            for (const n of r) {
              const r =
                n.boundingBoxRect.width *
                n.boundingBoxRect.height *
                (n.position.weight || 1);
              r > t && ((t = r), (e = n));
            }
            return (
              (this._isPushed = !1),
              void this._applyPosition(e.position, e.origin)
            );
          }
          if (this._canPush)
            return (
              (this._isPushed = !0),
              void this._applyPosition(i.position, i.originPoint)
            );
          this._applyPosition(i.position, i.originPoint);
        }
        detach() {
          this._clearPanelClasses(),
            (this._lastPosition = null),
            (this._previousPushAmount = null),
            this._resizeSubscription.unsubscribe();
        }
        dispose() {
          this._isDisposed ||
            (this._boundingBox &&
              Vu(this._boundingBox.style, {
                top: "",
                left: "",
                right: "",
                bottom: "",
                height: "",
                width: "",
                alignItems: "",
                justifyContent: "",
              }),
            this._pane && this._resetOverlayElementStyles(),
            this._overlayRef &&
              this._overlayRef.hostElement.classList.remove(
                "cdk-overlay-connected-position-bounding-box"
              ),
            this.detach(),
            this._positionChanges.complete(),
            (this._overlayRef = this._boundingBox = null),
            (this._isDisposed = !0));
        }
        reapplyLastPosition() {
          if (
            !this._isDisposed &&
            (!this._platform || this._platform.isBrowser)
          ) {
            (this._originRect = this._getOriginRect()),
              (this._overlayRect = this._pane.getBoundingClientRect()),
              (this._viewportRect = this._getNarrowedViewportRect());
            const e = this._lastPosition || this._preferredPositions[0],
              t = this._getOriginPoint(this._originRect, e);
            this._applyPosition(e, t);
          }
        }
        withScrollableContainers(e) {
          return (this._scrollables = e), this;
        }
        withPositions(e) {
          return (
            (this._preferredPositions = e),
            -1 === e.indexOf(this._lastPosition) && (this._lastPosition = null),
            this._validatePositions(),
            this
          );
        }
        withViewportMargin(e) {
          return (this._viewportMargin = e), this;
        }
        withFlexibleDimensions(e = !0) {
          return (this._hasFlexibleDimensions = e), this;
        }
        withGrowAfterOpen(e = !0) {
          return (this._growAfterOpen = e), this;
        }
        withPush(e = !0) {
          return (this._canPush = e), this;
        }
        withLockedPosition(e = !0) {
          return (this._positionLocked = e), this;
        }
        setOrigin(e) {
          return (this._origin = e), this;
        }
        withDefaultOffsetX(e) {
          return (this._offsetX = e), this;
        }
        withDefaultOffsetY(e) {
          return (this._offsetY = e), this;
        }
        withTransformOriginOn(e) {
          return (this._transformOriginSelector = e), this;
        }
        _getOriginPoint(e, t) {
          let n, r;
          if ("center" == t.originX) n = e.left + e.width / 2;
          else {
            const r = this._isRtl() ? e.right : e.left,
              i = this._isRtl() ? e.left : e.right;
            n = "start" == t.originX ? r : i;
          }
          return (
            (r =
              "center" == t.originY
                ? e.top + e.height / 2
                : "top" == t.originY
                ? e.top
                : e.bottom),
            { x: n, y: r }
          );
        }
        _getOverlayPoint(e, t, n) {
          let r, i;
          return (
            (r =
              "center" == n.overlayX
                ? -t.width / 2
                : "start" === n.overlayX
                ? this._isRtl()
                  ? -t.width
                  : 0
                : this._isRtl()
                ? 0
                : -t.width),
            (i =
              "center" == n.overlayY
                ? -t.height / 2
                : "top" == n.overlayY
                ? 0
                : -t.height),
            { x: e.x + r, y: e.y + i }
          );
        }
        _getOverlayFit(e, t, n, r) {
          let { x: i, y: s } = e,
            o = this._getOffset(r, "x"),
            a = this._getOffset(r, "y");
          o && (i += o), a && (s += a);
          let l = 0 - s,
            c = s + t.height - n.height,
            u = this._subtractOverflows(t.width, 0 - i, i + t.width - n.width),
            h = this._subtractOverflows(t.height, l, c),
            d = u * h;
          return {
            visibleArea: d,
            isCompletelyWithinViewport: t.width * t.height === d,
            fitsInViewportVertically: h === t.height,
            fitsInViewportHorizontally: u == t.width,
          };
        }
        _canFitWithFlexibleDimensions(e, t, n) {
          if (this._hasFlexibleDimensions) {
            const r = n.bottom - t.y,
              i = n.right - t.x,
              s = Bu(this._overlayRef.getConfig().minHeight),
              o = Bu(this._overlayRef.getConfig().minWidth),
              a = e.fitsInViewportHorizontally || (null != o && o <= i);
            return (e.fitsInViewportVertically || (null != s && s <= r)) && a;
          }
          return !1;
        }
        _pushOverlayOnScreen(e, t, n) {
          if (this._previousPushAmount && this._positionLocked)
            return {
              x: e.x + this._previousPushAmount.x,
              y: e.y + this._previousPushAmount.y,
            };
          const r = this._viewportRect,
            i = Math.max(e.x + t.width - r.right, 0),
            s = Math.max(e.y + t.height - r.bottom, 0),
            o = Math.max(r.top - n.top - e.y, 0),
            a = Math.max(r.left - n.left - e.x, 0);
          let l = 0,
            c = 0;
          return (
            (l =
              t.width <= r.width
                ? a || -i
                : e.x < this._viewportMargin
                ? r.left - n.left - e.x
                : 0),
            (c =
              t.height <= r.height
                ? o || -s
                : e.y < this._viewportMargin
                ? r.top - n.top - e.y
                : 0),
            (this._previousPushAmount = { x: l, y: c }),
            { x: e.x + l, y: e.y + c }
          );
        }
        _applyPosition(e, t) {
          if (
            (this._setTransformOrigin(e),
            this._setOverlayElementStyles(t, e),
            this._setBoundingBoxStyles(t, e),
            e.panelClass && this._addPanelClasses(e.panelClass),
            (this._lastPosition = e),
            this._positionChanges.observers.length)
          ) {
            const t = this._getScrollVisibility(),
              n = new Ru(e, t);
            this._positionChanges.next(n);
          }
          this._isInitialRender = !1;
        }
        _setTransformOrigin(e) {
          if (!this._transformOriginSelector) return;
          const t = this._boundingBox.querySelectorAll(
            this._transformOriginSelector
          );
          let n,
            r = e.overlayY;
          n =
            "center" === e.overlayX
              ? "center"
              : this._isRtl()
              ? "start" === e.overlayX
                ? "right"
                : "left"
              : "start" === e.overlayX
              ? "left"
              : "right";
          for (let i = 0; i < t.length; i++)
            t[i].style.transformOrigin = `${n} ${r}`;
        }
        _calculateBoundingBoxRect(e, t) {
          const n = this._viewportRect,
            r = this._isRtl();
          let i, s, o, a, l, c;
          if ("top" === t.overlayY)
            (s = e.y), (i = n.height - s + this._viewportMargin);
          else if ("bottom" === t.overlayY)
            (o = n.height - e.y + 2 * this._viewportMargin),
              (i = n.height - o + this._viewportMargin);
          else {
            const t = Math.min(n.bottom - e.y + n.top, e.y),
              r = this._lastBoundingBoxSize.height;
            (i = 2 * t),
              (s = e.y - t),
              i > r &&
                !this._isInitialRender &&
                !this._growAfterOpen &&
                (s = e.y - r / 2);
          }
          if (("end" === t.overlayX && !r) || ("start" === t.overlayX && r))
            (c = n.width - e.x + this._viewportMargin),
              (a = e.x - this._viewportMargin);
          else if (
            ("start" === t.overlayX && !r) ||
            ("end" === t.overlayX && r)
          )
            (l = e.x), (a = n.right - e.x);
          else {
            const t = Math.min(n.right - e.x + n.left, e.x),
              r = this._lastBoundingBoxSize.width;
            (a = 2 * t),
              (l = e.x - t),
              a > r &&
                !this._isInitialRender &&
                !this._growAfterOpen &&
                (l = e.x - r / 2);
          }
          return { top: s, left: l, bottom: o, right: c, width: a, height: i };
        }
        _setBoundingBoxStyles(e, t) {
          const n = this._calculateBoundingBoxRect(e, t);
          this._isInitialRender ||
            this._growAfterOpen ||
            ((n.height = Math.min(n.height, this._lastBoundingBoxSize.height)),
            (n.width = Math.min(n.width, this._lastBoundingBoxSize.width)));
          const r = {};
          if (this._hasExactPosition())
            (r.top = r.left = "0"),
              (r.bottom = r.right = r.maxHeight = r.maxWidth = ""),
              (r.width = r.height = "100%");
          else {
            const e = this._overlayRef.getConfig().maxHeight,
              i = this._overlayRef.getConfig().maxWidth;
            (r.height = ve(n.height)),
              (r.top = ve(n.top)),
              (r.bottom = ve(n.bottom)),
              (r.width = ve(n.width)),
              (r.left = ve(n.left)),
              (r.right = ve(n.right)),
              (r.alignItems =
                "center" === t.overlayX
                  ? "center"
                  : "end" === t.overlayX
                  ? "flex-end"
                  : "flex-start"),
              (r.justifyContent =
                "center" === t.overlayY
                  ? "center"
                  : "bottom" === t.overlayY
                  ? "flex-end"
                  : "flex-start"),
              e && (r.maxHeight = ve(e)),
              i && (r.maxWidth = ve(i));
          }
          (this._lastBoundingBoxSize = n), Vu(this._boundingBox.style, r);
        }
        _resetBoundingBoxStyles() {
          Vu(this._boundingBox.style, {
            top: "0",
            left: "0",
            right: "0",
            bottom: "0",
            height: "",
            width: "",
            alignItems: "",
            justifyContent: "",
          });
        }
        _resetOverlayElementStyles() {
          Vu(this._pane.style, {
            top: "",
            left: "",
            bottom: "",
            right: "",
            position: "",
            transform: "",
          });
        }
        _setOverlayElementStyles(e, t) {
          const n = {},
            r = this._hasExactPosition(),
            i = this._hasFlexibleDimensions,
            s = this._overlayRef.getConfig();
          if (r) {
            const r = this._viewportRuler.getViewportScrollPosition();
            Vu(n, this._getExactOverlayY(t, e, r)),
              Vu(n, this._getExactOverlayX(t, e, r));
          } else n.position = "static";
          let o = "",
            a = this._getOffset(t, "x"),
            l = this._getOffset(t, "y");
          a && (o += `translateX(${a}px) `),
            l && (o += `translateY(${l}px)`),
            (n.transform = o.trim()),
            s.maxHeight &&
              (r ? (n.maxHeight = ve(s.maxHeight)) : i && (n.maxHeight = "")),
            s.maxWidth &&
              (r ? (n.maxWidth = ve(s.maxWidth)) : i && (n.maxWidth = "")),
            Vu(this._pane.style, n);
        }
        _getExactOverlayY(e, t, n) {
          let r = { top: "", bottom: "" },
            i = this._getOverlayPoint(t, this._overlayRect, e);
          this._isPushed &&
            (i = this._pushOverlayOnScreen(i, this._overlayRect, n));
          let s = this._overlayContainer
            .getContainerElement()
            .getBoundingClientRect().top;
          return (
            (i.y -= s),
            "bottom" === e.overlayY
              ? (r.bottom =
                  this._document.documentElement.clientHeight -
                  (i.y + this._overlayRect.height) +
                  "px")
              : (r.top = ve(i.y)),
            r
          );
        }
        _getExactOverlayX(e, t, n) {
          let r,
            i = { left: "", right: "" },
            s = this._getOverlayPoint(t, this._overlayRect, e);
          return (
            this._isPushed &&
              (s = this._pushOverlayOnScreen(s, this._overlayRect, n)),
            (r = this._isRtl()
              ? "end" === e.overlayX
                ? "left"
                : "right"
              : "end" === e.overlayX
              ? "right"
              : "left"),
            "right" === r
              ? (i.right =
                  this._document.documentElement.clientWidth -
                  (s.x + this._overlayRect.width) +
                  "px")
              : (i.left = ve(s.x)),
            i
          );
        }
        _getScrollVisibility() {
          const e = this._getOriginRect(),
            t = this._pane.getBoundingClientRect(),
            n = this._scrollables.map((e) =>
              e.getElementRef().nativeElement.getBoundingClientRect()
            );
          return {
            isOriginClipped: xu(e, n),
            isOriginOutsideView: Eu(e, n),
            isOverlayClipped: xu(t, n),
            isOverlayOutsideView: Eu(t, n),
          };
        }
        _subtractOverflows(e, ...t) {
          return t.reduce((e, t) => e - Math.max(t, 0), e);
        }
        _getNarrowedViewportRect() {
          const e = this._document.documentElement.clientWidth,
            t = this._document.documentElement.clientHeight,
            n = this._viewportRuler.getViewportScrollPosition();
          return {
            top: n.top + this._viewportMargin,
            left: n.left + this._viewportMargin,
            right: n.left + e - this._viewportMargin,
            bottom: n.top + t - this._viewportMargin,
            width: e - 2 * this._viewportMargin,
            height: t - 2 * this._viewportMargin,
          };
        }
        _isRtl() {
          return "rtl" === this._overlayRef.getDirection();
        }
        _hasExactPosition() {
          return !this._hasFlexibleDimensions || this._isPushed;
        }
        _getOffset(e, t) {
          return "x" === t
            ? null == e.offsetX
              ? this._offsetX
              : e.offsetX
            : null == e.offsetY
            ? this._offsetY
            : e.offsetY;
        }
        _validatePositions() {
          if (!this._preferredPositions.length)
            throw Error(
              "FlexibleConnectedPositionStrategy: At least one position is required."
            );
          this._preferredPositions.forEach((e) => {
            Tu("originX", e.originX),
              Au("originY", e.originY),
              Tu("overlayX", e.overlayX),
              Au("overlayY", e.overlayY);
          });
        }
        _addPanelClasses(e) {
          this._pane &&
            ye(e).forEach((e) => {
              "" !== e &&
                -1 === this._appliedPanelClasses.indexOf(e) &&
                (this._appliedPanelClasses.push(e),
                this._pane.classList.add(e));
            });
        }
        _clearPanelClasses() {
          this._pane &&
            (this._appliedPanelClasses.forEach((e) => {
              this._pane.classList.remove(e);
            }),
            (this._appliedPanelClasses = []));
        }
        _getOriginRect() {
          const e = this._origin;
          if (e instanceof r.ElementRef)
            return e.nativeElement.getBoundingClientRect();
          if (e instanceof Element) return e.getBoundingClientRect();
          const t = e.width || 0,
            n = e.height || 0;
          return {
            top: e.y,
            bottom: e.y + n,
            left: e.x,
            right: e.x + t,
            height: n,
            width: t,
          };
        }
      }
      function Vu(e, t) {
        for (let n in t) t.hasOwnProperty(n) && (e[n] = t[n]);
        return e;
      }
      function Bu(e) {
        if ("number" != typeof e && null != e) {
          const [t, n] = e.split(Mu);
          return n && "px" !== n ? null : parseFloat(t);
        }
        return e || null;
      }
      class zu {
        constructor(e, t, n, r, i, s, o) {
          (this._preferredPositions = []),
            (this._positionStrategy = new Lu(n, r, i, s, o)
              .withFlexibleDimensions(!1)
              .withPush(!1)
              .withViewportMargin(0)),
            this.withFallbackPosition(e, t);
        }
        get _isRtl() {
          return "rtl" === this._overlayRef.getDirection();
        }
        get onPositionChange() {
          return this._positionStrategy.positionChanges;
        }
        get positions() {
          return this._preferredPositions;
        }
        attach(e) {
          (this._overlayRef = e),
            this._positionStrategy.attach(e),
            this._direction &&
              (e.setDirection(this._direction), (this._direction = null));
        }
        dispose() {
          this._positionStrategy.dispose();
        }
        detach() {
          this._positionStrategy.detach();
        }
        apply() {
          this._positionStrategy.apply();
        }
        recalculateLastPosition() {
          this._positionStrategy.reapplyLastPosition();
        }
        withScrollableContainers(e) {
          this._positionStrategy.withScrollableContainers(e);
        }
        withFallbackPosition(e, t, n, r) {
          const i = new ku(e, t, n, r);
          return (
            this._preferredPositions.push(i),
            this._positionStrategy.withPositions(this._preferredPositions),
            this
          );
        }
        withDirection(e) {
          return (
            this._overlayRef
              ? this._overlayRef.setDirection(e)
              : (this._direction = e),
            this
          );
        }
        withOffsetX(e) {
          return this._positionStrategy.withDefaultOffsetX(e), this;
        }
        withOffsetY(e) {
          return this._positionStrategy.withDefaultOffsetY(e), this;
        }
        withLockedPosition(e) {
          return this._positionStrategy.withLockedPosition(e), this;
        }
        withPositions(e) {
          return (
            (this._preferredPositions = e.slice()),
            this._positionStrategy.withPositions(this._preferredPositions),
            this
          );
        }
        setOrigin(e) {
          return this._positionStrategy.setOrigin(e), this;
        }
      }
      class Uu {
        constructor() {
          (this._cssPosition = "static"),
            (this._topOffset = ""),
            (this._bottomOffset = ""),
            (this._leftOffset = ""),
            (this._rightOffset = ""),
            (this._alignItems = ""),
            (this._justifyContent = ""),
            (this._width = ""),
            (this._height = "");
        }
        attach(e) {
          const t = e.getConfig();
          (this._overlayRef = e),
            this._width && !t.width && e.updateSize({ width: this._width }),
            this._height && !t.height && e.updateSize({ height: this._height }),
            e.hostElement.classList.add("cdk-global-overlay-wrapper"),
            (this._isDisposed = !1);
        }
        top(e = "") {
          return (
            (this._bottomOffset = ""),
            (this._topOffset = e),
            (this._alignItems = "flex-start"),
            this
          );
        }
        left(e = "") {
          return (
            (this._rightOffset = ""),
            (this._leftOffset = e),
            (this._justifyContent = "flex-start"),
            this
          );
        }
        bottom(e = "") {
          return (
            (this._topOffset = ""),
            (this._bottomOffset = e),
            (this._alignItems = "flex-end"),
            this
          );
        }
        right(e = "") {
          return (
            (this._leftOffset = ""),
            (this._rightOffset = e),
            (this._justifyContent = "flex-end"),
            this
          );
        }
        width(e = "") {
          return (
            this._overlayRef
              ? this._overlayRef.updateSize({ width: e })
              : (this._width = e),
            this
          );
        }
        height(e = "") {
          return (
            this._overlayRef
              ? this._overlayRef.updateSize({ height: e })
              : (this._height = e),
            this
          );
        }
        centerHorizontally(e = "") {
          return this.left(e), (this._justifyContent = "center"), this;
        }
        centerVertically(e = "") {
          return this.top(e), (this._alignItems = "center"), this;
        }
        apply() {
          if (!this._overlayRef || !this._overlayRef.hasAttached()) return;
          const e = this._overlayRef.overlayElement.style,
            t = this._overlayRef.hostElement.style,
            n = this._overlayRef.getConfig(),
            { width: r, height: i, maxWidth: s, maxHeight: o } = n,
            a = !(
              ("100%" !== r && "100vw" !== r) ||
              (s && "100%" !== s && "100vw" !== s)
            ),
            l = !(
              ("100%" !== i && "100vh" !== i) ||
              (o && "100%" !== o && "100vh" !== o)
            );
          (e.position = this._cssPosition),
            (e.marginLeft = a ? "0" : this._leftOffset),
            (e.marginTop = l ? "0" : this._topOffset),
            (e.marginBottom = this._bottomOffset),
            (e.marginRight = this._rightOffset),
            a
              ? (t.justifyContent = "flex-start")
              : "center" === this._justifyContent
              ? (t.justifyContent = "center")
              : "rtl" === this._overlayRef.getConfig().direction
              ? "flex-start" === this._justifyContent
                ? (t.justifyContent = "flex-end")
                : "flex-end" === this._justifyContent &&
                  (t.justifyContent = "flex-start")
              : (t.justifyContent = this._justifyContent),
            (t.alignItems = l ? "flex-start" : this._alignItems);
        }
        dispose() {
          if (this._isDisposed || !this._overlayRef) return;
          const e = this._overlayRef.overlayElement.style,
            t = this._overlayRef.hostElement,
            n = t.style;
          t.classList.remove("cdk-global-overlay-wrapper"),
            (n.justifyContent = n.alignItems = e.marginTop = e.marginBottom = e.marginLeft = e.marginRight = e.position =
              ""),
            (this._overlayRef = null),
            (this._isDisposed = !0);
        }
      }
      let Hu = (() => {
          class e {
            constructor(e, t, n, r) {
              (this._viewportRuler = e),
                (this._document = t),
                (this._platform = n),
                (this._overlayContainer = r);
            }
            global() {
              return new Uu();
            }
            connectedTo(e, t, n) {
              return new zu(
                t,
                n,
                e,
                this._viewportRuler,
                this._document,
                this._platform,
                this._overlayContainer
              );
            }
            flexibleConnectedTo(e) {
              return new Lu(
                e,
                this._viewportRuler,
                this._document,
                this._platform,
                this._overlayContainer
              );
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(
                r["\u0275\u0275inject"](uu),
                r["\u0275\u0275inject"](i.DOCUMENT),
                r["\u0275\u0275inject"](Se),
                r["\u0275\u0275inject"](ju)
              );
            }),
            (e.ɵprov = Object(r["\u0275\u0275defineInjectable"])({
              factory: function () {
                return new e(
                  Object(r["\u0275\u0275inject"])(uu),
                  Object(r["\u0275\u0275inject"])(i.DOCUMENT),
                  Object(r["\u0275\u0275inject"])(Se),
                  Object(r["\u0275\u0275inject"])(ju)
                );
              },
              token: e,
              providedIn: "root",
            })),
            e
          );
        })(),
        $u = 0,
        qu = (() => {
          class e {
            constructor(e, t, n, r, i, s, o, a, l, c) {
              (this.scrollStrategies = e),
                (this._overlayContainer = t),
                (this._componentFactoryResolver = n),
                (this._positionBuilder = r),
                (this._keyboardDispatcher = i),
                (this._injector = s),
                (this._ngZone = o),
                (this._document = a),
                (this._directionality = l),
                (this._location = c);
            }
            create(e) {
              const t = this._createHostElement(),
                n = this._createPaneElement(t),
                r = this._createPortalOutlet(n),
                i = new Ou(e);
              return (
                (i.direction = i.direction || this._directionality.value),
                new Nu(
                  r,
                  t,
                  n,
                  i,
                  this._ngZone,
                  this._keyboardDispatcher,
                  this._document,
                  this._location
                )
              );
            }
            position() {
              return this._positionBuilder;
            }
            _createPaneElement(e) {
              const t = this._document.createElement("div");
              return (
                (t.id = "cdk-overlay-" + $u++),
                t.classList.add("cdk-overlay-pane"),
                e.appendChild(t),
                t
              );
            }
            _createHostElement() {
              const e = this._document.createElement("div");
              return (
                this._overlayContainer.getContainerElement().appendChild(e), e
              );
            }
            _createPortalOutlet(e) {
              return (
                this._appRef ||
                  (this._appRef = this._injector.get(r.ApplicationRef)),
                new yu(
                  e,
                  this._componentFactoryResolver,
                  this._appRef,
                  this._injector,
                  this._document
                )
              );
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(
                r["\u0275\u0275inject"](Iu),
                r["\u0275\u0275inject"](ju),
                r["\u0275\u0275inject"](r.ComponentFactoryResolver),
                r["\u0275\u0275inject"](Hu),
                r["\u0275\u0275inject"](Fu),
                r["\u0275\u0275inject"](r.Injector),
                r["\u0275\u0275inject"](r.NgZone),
                r["\u0275\u0275inject"](i.DOCUMENT),
                r["\u0275\u0275inject"](Ye),
                r["\u0275\u0275inject"](i.Location, 8)
              );
            }),
            (e.ɵprov = r["\u0275\u0275defineInjectable"]({
              token: e,
              factory: e.ɵfac,
            })),
            e
          );
        })();
      const Gu = [
          {
            originX: "start",
            originY: "bottom",
            overlayX: "start",
            overlayY: "top",
          },
          {
            originX: "start",
            originY: "top",
            overlayX: "start",
            overlayY: "bottom",
          },
          {
            originX: "end",
            originY: "top",
            overlayX: "end",
            overlayY: "bottom",
          },
          {
            originX: "end",
            originY: "bottom",
            overlayX: "end",
            overlayY: "top",
          },
        ],
        Wu = new r.InjectionToken("cdk-connected-overlay-scroll-strategy");
      let Qu = (() => {
          class e {
            constructor(e) {
              this.elementRef = e;
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(
                r["\u0275\u0275directiveInject"](r.ElementRef)
              );
            }),
            (e.ɵdir = r["\u0275\u0275defineDirective"]({
              type: e,
              selectors: [
                ["", "cdk-overlay-origin", ""],
                ["", "overlay-origin", ""],
                ["", "cdkOverlayOrigin", ""],
              ],
              exportAs: ["cdkOverlayOrigin"],
            })),
            e
          );
        })(),
        Ku = (() => {
          class e {
            constructor(e, t, n, i, s) {
              (this._overlay = e),
                (this._dir = s),
                (this._hasBackdrop = !1),
                (this._lockPosition = !1),
                (this._growAfterOpen = !1),
                (this._flexibleDimensions = !1),
                (this._push = !1),
                (this._backdropSubscription = L.a.EMPTY),
                (this.viewportMargin = 0),
                (this.open = !1),
                (this.backdropClick = new r.EventEmitter()),
                (this.positionChange = new r.EventEmitter()),
                (this.attach = new r.EventEmitter()),
                (this.detach = new r.EventEmitter()),
                (this.overlayKeydown = new r.EventEmitter()),
                (this._templatePortal = new gu(t, n)),
                (this._scrollStrategyFactory = i),
                (this.scrollStrategy = this._scrollStrategyFactory());
            }
            get offsetX() {
              return this._offsetX;
            }
            set offsetX(e) {
              (this._offsetX = e),
                this._position && this._updatePositionStrategy(this._position);
            }
            get offsetY() {
              return this._offsetY;
            }
            set offsetY(e) {
              (this._offsetY = e),
                this._position && this._updatePositionStrategy(this._position);
            }
            get hasBackdrop() {
              return this._hasBackdrop;
            }
            set hasBackdrop(e) {
              this._hasBackdrop = ge(e);
            }
            get lockPosition() {
              return this._lockPosition;
            }
            set lockPosition(e) {
              this._lockPosition = ge(e);
            }
            get flexibleDimensions() {
              return this._flexibleDimensions;
            }
            set flexibleDimensions(e) {
              this._flexibleDimensions = ge(e);
            }
            get growAfterOpen() {
              return this._growAfterOpen;
            }
            set growAfterOpen(e) {
              this._growAfterOpen = ge(e);
            }
            get push() {
              return this._push;
            }
            set push(e) {
              this._push = ge(e);
            }
            get overlayRef() {
              return this._overlayRef;
            }
            get dir() {
              return this._dir ? this._dir.value : "ltr";
            }
            ngOnDestroy() {
              this._overlayRef && this._overlayRef.dispose(),
                this._backdropSubscription.unsubscribe();
            }
            ngOnChanges(e) {
              this._position &&
                (this._updatePositionStrategy(this._position),
                this._overlayRef.updateSize({
                  width: this.width,
                  minWidth: this.minWidth,
                  height: this.height,
                  minHeight: this.minHeight,
                }),
                e.origin && this.open && this._position.apply()),
                e.open &&
                  (this.open ? this._attachOverlay() : this._detachOverlay());
            }
            _createOverlay() {
              (this.positions && this.positions.length) ||
                (this.positions = Gu),
                (this._overlayRef = this._overlay.create(this._buildConfig())),
                this._overlayRef.keydownEvents().subscribe((e) => {
                  this.overlayKeydown.next(e),
                    27 !== e.keyCode ||
                      H(e) ||
                      (e.preventDefault(), this._detachOverlay());
                });
            }
            _buildConfig() {
              const e = (this._position =
                  this.positionStrategy || this._createPositionStrategy()),
                t = new Ou({
                  direction: this._dir,
                  positionStrategy: e,
                  scrollStrategy: this.scrollStrategy,
                  hasBackdrop: this.hasBackdrop,
                });
              return (
                (this.width || 0 === this.width) && (t.width = this.width),
                (this.height || 0 === this.height) && (t.height = this.height),
                (this.minWidth || 0 === this.minWidth) &&
                  (t.minWidth = this.minWidth),
                (this.minHeight || 0 === this.minHeight) &&
                  (t.minHeight = this.minHeight),
                this.backdropClass && (t.backdropClass = this.backdropClass),
                this.panelClass && (t.panelClass = this.panelClass),
                t
              );
            }
            _updatePositionStrategy(e) {
              const t = this.positions.map((e) => ({
                originX: e.originX,
                originY: e.originY,
                overlayX: e.overlayX,
                overlayY: e.overlayY,
                offsetX: e.offsetX || this.offsetX,
                offsetY: e.offsetY || this.offsetY,
                panelClass: e.panelClass || void 0,
              }));
              return e
                .setOrigin(this.origin.elementRef)
                .withPositions(t)
                .withFlexibleDimensions(this.flexibleDimensions)
                .withPush(this.push)
                .withGrowAfterOpen(this.growAfterOpen)
                .withViewportMargin(this.viewportMargin)
                .withLockedPosition(this.lockPosition)
                .withTransformOriginOn(this.transformOriginSelector);
            }
            _createPositionStrategy() {
              const e = this._overlay
                .position()
                .flexibleConnectedTo(this.origin.elementRef);
              return (
                this._updatePositionStrategy(e),
                e.positionChanges.subscribe((e) => this.positionChange.emit(e)),
                e
              );
            }
            _attachOverlay() {
              this._overlayRef
                ? (this._overlayRef.getConfig().hasBackdrop = this.hasBackdrop)
                : this._createOverlay(),
                this._overlayRef.hasAttached() ||
                  (this._overlayRef.attach(this._templatePortal),
                  this.attach.emit()),
                this.hasBackdrop
                  ? (this._backdropSubscription = this._overlayRef
                      .backdropClick()
                      .subscribe((e) => {
                        this.backdropClick.emit(e);
                      }))
                  : this._backdropSubscription.unsubscribe();
            }
            _detachOverlay() {
              this._overlayRef &&
                (this._overlayRef.detach(), this.detach.emit()),
                this._backdropSubscription.unsubscribe();
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(
                r["\u0275\u0275directiveInject"](qu),
                r["\u0275\u0275directiveInject"](r.TemplateRef),
                r["\u0275\u0275directiveInject"](r.ViewContainerRef),
                r["\u0275\u0275directiveInject"](Wu),
                r["\u0275\u0275directiveInject"](Ye, 8)
              );
            }),
            (e.ɵdir = r["\u0275\u0275defineDirective"]({
              type: e,
              selectors: [
                ["", "cdk-connected-overlay", ""],
                ["", "connected-overlay", ""],
                ["", "cdkConnectedOverlay", ""],
              ],
              inputs: {
                viewportMargin: [
                  "cdkConnectedOverlayViewportMargin",
                  "viewportMargin",
                ],
                open: ["cdkConnectedOverlayOpen", "open"],
                scrollStrategy: [
                  "cdkConnectedOverlayScrollStrategy",
                  "scrollStrategy",
                ],
                offsetX: ["cdkConnectedOverlayOffsetX", "offsetX"],
                offsetY: ["cdkConnectedOverlayOffsetY", "offsetY"],
                hasBackdrop: ["cdkConnectedOverlayHasBackdrop", "hasBackdrop"],
                lockPosition: [
                  "cdkConnectedOverlayLockPosition",
                  "lockPosition",
                ],
                flexibleDimensions: [
                  "cdkConnectedOverlayFlexibleDimensions",
                  "flexibleDimensions",
                ],
                growAfterOpen: [
                  "cdkConnectedOverlayGrowAfterOpen",
                  "growAfterOpen",
                ],
                push: ["cdkConnectedOverlayPush", "push"],
                positions: ["cdkConnectedOverlayPositions", "positions"],
                origin: ["cdkConnectedOverlayOrigin", "origin"],
                positionStrategy: [
                  "cdkConnectedOverlayPositionStrategy",
                  "positionStrategy",
                ],
                width: ["cdkConnectedOverlayWidth", "width"],
                height: ["cdkConnectedOverlayHeight", "height"],
                minWidth: ["cdkConnectedOverlayMinWidth", "minWidth"],
                minHeight: ["cdkConnectedOverlayMinHeight", "minHeight"],
                backdropClass: [
                  "cdkConnectedOverlayBackdropClass",
                  "backdropClass",
                ],
                panelClass: ["cdkConnectedOverlayPanelClass", "panelClass"],
                transformOriginSelector: [
                  "cdkConnectedOverlayTransformOriginOn",
                  "transformOriginSelector",
                ],
              },
              outputs: {
                backdropClick: "backdropClick",
                positionChange: "positionChange",
                attach: "attach",
                detach: "detach",
                overlayKeydown: "overlayKeydown",
              },
              exportAs: ["cdkConnectedOverlay"],
              features: [r["\u0275\u0275NgOnChangesFeature"]],
            })),
            e
          );
        })();
      const Zu = {
        provide: Wu,
        deps: [qu],
        useFactory: function (e) {
          return () => e.scrollStrategies.reposition();
        },
      };
      let Yu = (() => {
        class e {}
        return (
          (e.ɵmod = r["\u0275\u0275defineNgModule"]({ type: e })),
          (e.ɵinj = r["\u0275\u0275defineInjector"]({
            factory: function (t) {
              return new (t || e)();
            },
            providers: [qu, Zu],
            imports: [[Xe, vu, du], du],
          })),
          e
        );
      })();
      const Xu = ["underline"],
        Ju = ["connectionContainer"],
        eh = ["inputContainer"],
        th = ["label"];
      function nh(e, t) {
        1 & e &&
          (r["\u0275\u0275elementContainerStart"](0),
          r["\u0275\u0275elementStart"](1, "div", 14),
          r["\u0275\u0275element"](2, "div", 15),
          r["\u0275\u0275element"](3, "div", 16),
          r["\u0275\u0275element"](4, "div", 17),
          r["\u0275\u0275elementEnd"](),
          r["\u0275\u0275elementStart"](5, "div", 18),
          r["\u0275\u0275element"](6, "div", 15),
          r["\u0275\u0275element"](7, "div", 16),
          r["\u0275\u0275element"](8, "div", 17),
          r["\u0275\u0275elementEnd"](),
          r["\u0275\u0275elementContainerEnd"]());
      }
      function rh(e, t) {
        1 & e &&
          (r["\u0275\u0275elementStart"](0, "div", 19),
          r["\u0275\u0275projection"](1, 1),
          r["\u0275\u0275elementEnd"]());
      }
      function ih(e, t) {
        if (
          (1 & e &&
            (r["\u0275\u0275elementContainerStart"](0),
            r["\u0275\u0275projection"](1, 2),
            r["\u0275\u0275elementStart"](2, "span"),
            r["\u0275\u0275text"](3),
            r["\u0275\u0275elementEnd"](),
            r["\u0275\u0275elementContainerEnd"]()),
          2 & e)
        ) {
          const e = r["\u0275\u0275nextContext"](2);
          r["\u0275\u0275advance"](3),
            r["\u0275\u0275textInterpolate"](e._control.placeholder);
        }
      }
      function sh(e, t) {
        1 & e && r["\u0275\u0275projection"](0, 3, ["*ngSwitchCase", "true"]);
      }
      function oh(e, t) {
        1 & e &&
          (r["\u0275\u0275elementStart"](0, "span", 23),
          r["\u0275\u0275text"](1, " *"),
          r["\u0275\u0275elementEnd"]());
      }
      function ah(e, t) {
        if (1 & e) {
          const e = r["\u0275\u0275getCurrentView"]();
          r["\u0275\u0275elementStart"](0, "label", 20, 21),
            r["\u0275\u0275listener"]("cdkObserveContent", function () {
              return (
                r["\u0275\u0275restoreView"](e),
                r["\u0275\u0275nextContext"]().updateOutlineGap()
              );
            }),
            r["\u0275\u0275template"](2, ih, 4, 1, "ng-container", 12),
            r["\u0275\u0275template"](3, sh, 1, 0, void 0, 12),
            r["\u0275\u0275template"](4, oh, 2, 0, "span", 22),
            r["\u0275\u0275elementEnd"]();
        }
        if (2 & e) {
          const e = r["\u0275\u0275nextContext"]();
          r["\u0275\u0275classProp"](
            "mat-empty",
            e._control.empty && !e._shouldAlwaysFloat
          )("mat-form-field-empty", e._control.empty && !e._shouldAlwaysFloat)(
            "mat-accent",
            "accent" == e.color
          )("mat-warn", "warn" == e.color),
            r["\u0275\u0275property"](
              "cdkObserveContentDisabled",
              "outline" != e.appearance
            )("id", e._labelId)("ngSwitch", e._hasLabel()),
            r["\u0275\u0275attribute"]("for", e._control.id)(
              "aria-owns",
              e._control.id
            ),
            r["\u0275\u0275advance"](2),
            r["\u0275\u0275property"]("ngSwitchCase", !1),
            r["\u0275\u0275advance"](1),
            r["\u0275\u0275property"]("ngSwitchCase", !0),
            r["\u0275\u0275advance"](1),
            r["\u0275\u0275property"](
              "ngIf",
              !e.hideRequiredMarker &&
                e._control.required &&
                !e._control.disabled
            );
        }
      }
      function lh(e, t) {
        1 & e &&
          (r["\u0275\u0275elementStart"](0, "div", 24),
          r["\u0275\u0275projection"](1, 4),
          r["\u0275\u0275elementEnd"]());
      }
      function ch(e, t) {
        if (
          (1 & e &&
            (r["\u0275\u0275elementStart"](0, "div", 25, 26),
            r["\u0275\u0275element"](2, "span", 27),
            r["\u0275\u0275elementEnd"]()),
          2 & e)
        ) {
          const e = r["\u0275\u0275nextContext"]();
          r["\u0275\u0275advance"](2),
            r["\u0275\u0275classProp"]("mat-accent", "accent" == e.color)(
              "mat-warn",
              "warn" == e.color
            );
        }
      }
      function uh(e, t) {
        if (
          (1 & e &&
            (r["\u0275\u0275elementStart"](0, "div"),
            r["\u0275\u0275projection"](1, 5),
            r["\u0275\u0275elementEnd"]()),
          2 & e)
        ) {
          const e = r["\u0275\u0275nextContext"]();
          r["\u0275\u0275property"](
            "@transitionMessages",
            e._subscriptAnimationState
          );
        }
      }
      function hh(e, t) {
        if (
          (1 & e &&
            (r["\u0275\u0275elementStart"](0, "div", 31),
            r["\u0275\u0275text"](1),
            r["\u0275\u0275elementEnd"]()),
          2 & e)
        ) {
          const e = r["\u0275\u0275nextContext"](2);
          r["\u0275\u0275property"]("id", e._hintLabelId),
            r["\u0275\u0275advance"](1),
            r["\u0275\u0275textInterpolate"](e.hintLabel);
        }
      }
      function dh(e, t) {
        if (
          (1 & e &&
            (r["\u0275\u0275elementStart"](0, "div", 28),
            r["\u0275\u0275template"](1, hh, 2, 2, "div", 29),
            r["\u0275\u0275projection"](2, 6),
            r["\u0275\u0275element"](3, "div", 30),
            r["\u0275\u0275projection"](4, 7),
            r["\u0275\u0275elementEnd"]()),
          2 & e)
        ) {
          const e = r["\u0275\u0275nextContext"]();
          r["\u0275\u0275property"](
            "@transitionMessages",
            e._subscriptAnimationState
          ),
            r["\u0275\u0275advance"](1),
            r["\u0275\u0275property"]("ngIf", e.hintLabel);
        }
      }
      const fh = [
          "*",
          [["", "matPrefix", ""]],
          [["mat-placeholder"]],
          [["mat-label"]],
          [["", "matSuffix", ""]],
          [["mat-error"]],
          [["mat-hint", 3, "align", "end"]],
          [["mat-hint", "align", "end"]],
        ],
        ph = [
          "*",
          "[matPrefix]",
          "mat-placeholder",
          "mat-label",
          "[matSuffix]",
          "mat-error",
          "mat-hint:not([align='end'])",
          "mat-hint[align='end']",
        ];
      let mh = 0,
        gh = (() => {
          class e {
            constructor() {
              this.id = "mat-error-" + mh++;
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)();
            }),
            (e.ɵdir = r["\u0275\u0275defineDirective"]({
              type: e,
              selectors: [["mat-error"]],
              hostAttrs: ["role", "alert", 1, "mat-error"],
              hostVars: 1,
              hostBindings: function (e, t) {
                2 & e && r["\u0275\u0275attribute"]("id", t.id);
              },
              inputs: { id: "id" },
            })),
            e
          );
        })();
      const _h = {
        transitionMessages: st("transitionMessages", [
          ct("enter", lt({ opacity: 1, transform: "translateY(0%)" })),
          ht("void => enter", [
            lt({ opacity: 0, transform: "translateY(-100%)" }),
            ot("300ms cubic-bezier(0.55, 0, 0.55, 0.2)"),
          ]),
        ]),
      };
      let yh = (() => {
        class e {}
        return (
          (e.ɵfac = function (t) {
            return new (t || e)();
          }),
          (e.ɵdir = r["\u0275\u0275defineDirective"]({ type: e })),
          e
        );
      })();
      function vh(e) {
        return Error(`A hint was already declared for 'align="${e}"'.`);
      }
      let bh = 0,
        wh = (() => {
          class e {
            constructor() {
              (this.align = "start"), (this.id = "mat-hint-" + bh++);
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)();
            }),
            (e.ɵdir = r["\u0275\u0275defineDirective"]({
              type: e,
              selectors: [["mat-hint"]],
              hostAttrs: [1, "mat-hint"],
              hostVars: 4,
              hostBindings: function (e, t) {
                2 & e &&
                  (r["\u0275\u0275attribute"]("id", t.id)("align", null),
                  r["\u0275\u0275classProp"]("mat-right", "end" == t.align));
              },
              inputs: { align: "align", id: "id" },
            })),
            e
          );
        })(),
        Ch = (() => {
          class e {}
          return (
            (e.ɵfac = function (t) {
              return new (t || e)();
            }),
            (e.ɵdir = r["\u0275\u0275defineDirective"]({
              type: e,
              selectors: [["mat-label"]],
            })),
            e
          );
        })(),
        Sh = (() => {
          class e {}
          return (
            (e.ɵfac = function (t) {
              return new (t || e)();
            }),
            (e.ɵdir = r["\u0275\u0275defineDirective"]({
              type: e,
              selectors: [["mat-placeholder"]],
            })),
            e
          );
        })(),
        Eh = (() => {
          class e {}
          return (
            (e.ɵfac = function (t) {
              return new (t || e)();
            }),
            (e.ɵdir = r["\u0275\u0275defineDirective"]({
              type: e,
              selectors: [["", "matPrefix", ""]],
            })),
            e
          );
        })(),
        xh = (() => {
          class e {}
          return (
            (e.ɵfac = function (t) {
              return new (t || e)();
            }),
            (e.ɵdir = r["\u0275\u0275defineDirective"]({
              type: e,
              selectors: [["", "matSuffix", ""]],
            })),
            e
          );
        })(),
        Dh = 0;
      class Ih {
        constructor(e) {
          this._elementRef = e;
        }
      }
      const Oh = Lr(Ih, "primary"),
        kh = new r.InjectionToken("MAT_FORM_FIELD_DEFAULT_OPTIONS"),
        Rh = new r.InjectionToken("MatFormField");
      let Ah = (() => {
          class e extends Oh {
            constructor(e, t, n, r, i, s, o, a) {
              super(e),
                (this._elementRef = e),
                (this._changeDetectorRef = t),
                (this._dir = r),
                (this._defaults = i),
                (this._platform = s),
                (this._ngZone = o),
                (this._outlineGapCalculationNeededImmediately = !1),
                (this._outlineGapCalculationNeededOnStable = !1),
                (this._destroyed = new M.a()),
                (this._showAlwaysAnimate = !1),
                (this._subscriptAnimationState = ""),
                (this._hintLabel = ""),
                (this._hintLabelId = "mat-hint-" + Dh++),
                (this._labelId = "mat-form-field-label-" + Dh++),
                (this._labelOptions = n || {}),
                (this.floatLabel = this._getDefaultFloatLabelState()),
                (this._animationsEnabled = "NoopAnimations" !== a),
                (this.appearance = i && i.appearance ? i.appearance : "legacy"),
                (this._hideRequiredMarker =
                  !(!i || null == i.hideRequiredMarker) &&
                  i.hideRequiredMarker);
            }
            get appearance() {
              return this._appearance;
            }
            set appearance(e) {
              const t = this._appearance;
              (this._appearance =
                e || (this._defaults && this._defaults.appearance) || "legacy"),
                "outline" === this._appearance &&
                  t !== e &&
                  (this._outlineGapCalculationNeededOnStable = !0);
            }
            get hideRequiredMarker() {
              return this._hideRequiredMarker;
            }
            set hideRequiredMarker(e) {
              this._hideRequiredMarker = ge(e);
            }
            get _shouldAlwaysFloat() {
              return "always" === this.floatLabel && !this._showAlwaysAnimate;
            }
            get _canLabelFloat() {
              return "never" !== this.floatLabel;
            }
            get hintLabel() {
              return this._hintLabel;
            }
            set hintLabel(e) {
              (this._hintLabel = e), this._processHints();
            }
            get floatLabel() {
              return "legacy" !== this.appearance &&
                "never" === this._floatLabel
                ? "auto"
                : this._floatLabel;
            }
            set floatLabel(e) {
              e !== this._floatLabel &&
                ((this._floatLabel = e || this._getDefaultFloatLabelState()),
                this._changeDetectorRef.markForCheck());
            }
            get _control() {
              return (
                this._explicitFormFieldControl ||
                this._controlNonStatic ||
                this._controlStatic
              );
            }
            set _control(e) {
              this._explicitFormFieldControl = e;
            }
            get _labelChild() {
              return this._labelChildNonStatic || this._labelChildStatic;
            }
            getConnectedOverlayOrigin() {
              return this._connectionContainerRef || this._elementRef;
            }
            ngAfterContentInit() {
              this._validateControlChild();
              const e = this._control;
              e.controlType &&
                this._elementRef.nativeElement.classList.add(
                  "mat-form-field-type-" + e.controlType
                ),
                e.stateChanges.pipe(rt(null)).subscribe(() => {
                  this._validatePlaceholders(),
                    this._syncDescribedByIds(),
                    this._changeDetectorRef.markForCheck();
                }),
                e.ngControl &&
                  e.ngControl.valueChanges &&
                  e.ngControl.valueChanges
                    .pipe($l(this._destroyed))
                    .subscribe(() => this._changeDetectorRef.markForCheck()),
                this._ngZone.runOutsideAngular(() => {
                  this._ngZone.onStable
                    .asObservable()
                    .pipe($l(this._destroyed))
                    .subscribe(() => {
                      this._outlineGapCalculationNeededOnStable &&
                        this.updateOutlineGap();
                    });
                }),
                Object(Dc.a)(
                  this._prefixChildren.changes,
                  this._suffixChildren.changes
                ).subscribe(() => {
                  (this._outlineGapCalculationNeededOnStable = !0),
                    this._changeDetectorRef.markForCheck();
                }),
                this._hintChildren.changes.pipe(rt(null)).subscribe(() => {
                  this._processHints(), this._changeDetectorRef.markForCheck();
                }),
                this._errorChildren.changes.pipe(rt(null)).subscribe(() => {
                  this._syncDescribedByIds(),
                    this._changeDetectorRef.markForCheck();
                }),
                this._dir &&
                  this._dir.change.pipe($l(this._destroyed)).subscribe(() => {
                    "function" == typeof requestAnimationFrame
                      ? this._ngZone.runOutsideAngular(() => {
                          requestAnimationFrame(() => this.updateOutlineGap());
                        })
                      : this.updateOutlineGap();
                  });
            }
            ngAfterContentChecked() {
              this._validateControlChild(),
                this._outlineGapCalculationNeededImmediately &&
                  this.updateOutlineGap();
            }
            ngAfterViewInit() {
              (this._subscriptAnimationState = "enter"),
                this._changeDetectorRef.detectChanges();
            }
            ngOnDestroy() {
              this._destroyed.next(), this._destroyed.complete();
            }
            _shouldForward(e) {
              const t = this._control ? this._control.ngControl : null;
              return t && t[e];
            }
            _hasPlaceholder() {
              return !!(
                (this._control && this._control.placeholder) ||
                this._placeholderChild
              );
            }
            _hasLabel() {
              return !!this._labelChild;
            }
            _shouldLabelFloat() {
              return (
                this._canLabelFloat &&
                (this._control.shouldLabelFloat || this._shouldAlwaysFloat)
              );
            }
            _hideControlPlaceholder() {
              return (
                ("legacy" === this.appearance && !this._hasLabel()) ||
                (this._hasLabel() && !this._shouldLabelFloat())
              );
            }
            _hasFloatingLabel() {
              return (
                this._hasLabel() ||
                ("legacy" === this.appearance && this._hasPlaceholder())
              );
            }
            _getDisplayedMessages() {
              return this._errorChildren &&
                this._errorChildren.length > 0 &&
                this._control.errorState
                ? "error"
                : "hint";
            }
            _animateAndLockLabel() {
              this._hasFloatingLabel() &&
                this._canLabelFloat &&
                (this._animationsEnabled &&
                  this._label &&
                  ((this._showAlwaysAnimate = !0),
                  tu(this._label.nativeElement, "transitionend")
                    .pipe(fe(1))
                    .subscribe(() => {
                      this._showAlwaysAnimate = !1;
                    })),
                (this.floatLabel = "always"),
                this._changeDetectorRef.markForCheck());
            }
            _validatePlaceholders() {
              if (this._control.placeholder && this._placeholderChild)
                throw Error(
                  "Placeholder attribute and child element were both specified."
                );
            }
            _processHints() {
              this._validateHints(), this._syncDescribedByIds();
            }
            _validateHints() {
              if (this._hintChildren) {
                let e, t;
                this._hintChildren.forEach((n) => {
                  if ("start" === n.align) {
                    if (e || this.hintLabel) throw vh("start");
                    e = n;
                  } else if ("end" === n.align) {
                    if (t) throw vh("end");
                    t = n;
                  }
                });
              }
            }
            _getDefaultFloatLabelState() {
              return (
                (this._defaults && this._defaults.floatLabel) ||
                this._labelOptions.float ||
                "auto"
              );
            }
            _syncDescribedByIds() {
              if (this._control) {
                let e = [];
                if ("hint" === this._getDisplayedMessages()) {
                  const t = this._hintChildren
                      ? this._hintChildren.find((e) => "start" === e.align)
                      : null,
                    n = this._hintChildren
                      ? this._hintChildren.find((e) => "end" === e.align)
                      : null;
                  t
                    ? e.push(t.id)
                    : this._hintLabel && e.push(this._hintLabelId),
                    n && e.push(n.id);
                } else
                  this._errorChildren &&
                    (e = this._errorChildren.map((e) => e.id));
                this._control.setDescribedByIds(e);
              }
            }
            _validateControlChild() {
              if (!this._control)
                throw Error(
                  "mat-form-field must contain a MatFormFieldControl."
                );
            }
            updateOutlineGap() {
              const e = this._label ? this._label.nativeElement : null;
              if (
                "outline" !== this.appearance ||
                !e ||
                !e.children.length ||
                !e.textContent.trim()
              )
                return;
              if (!this._platform.isBrowser) return;
              if (!this._isAttachedToDOM())
                return void (this._outlineGapCalculationNeededImmediately = !0);
              let t = 0,
                n = 0;
              const r = this._connectionContainerRef.nativeElement,
                i = r.querySelectorAll(".mat-form-field-outline-start"),
                s = r.querySelectorAll(".mat-form-field-outline-gap");
              if (this._label && this._label.nativeElement.children.length) {
                const i = r.getBoundingClientRect();
                if (0 === i.width && 0 === i.height)
                  return (
                    (this._outlineGapCalculationNeededOnStable = !0),
                    void (this._outlineGapCalculationNeededImmediately = !1)
                  );
                const s = this._getStartEnd(i),
                  o = this._getStartEnd(e.children[0].getBoundingClientRect());
                let a = 0;
                for (const t of e.children) a += t.offsetWidth;
                (t = Math.abs(o - s) - 5), (n = a > 0 ? 0.75 * a + 10 : 0);
              }
              for (let o = 0; o < i.length; o++) i[o].style.width = t + "px";
              for (let o = 0; o < s.length; o++) s[o].style.width = n + "px";
              this._outlineGapCalculationNeededOnStable = this._outlineGapCalculationNeededImmediately = !1;
            }
            _getStartEnd(e) {
              return this._dir && "rtl" === this._dir.value ? e.right : e.left;
            }
            _isAttachedToDOM() {
              const e = this._elementRef.nativeElement;
              if (e.getRootNode) {
                const t = e.getRootNode();
                return t && t !== e;
              }
              return document.documentElement.contains(e);
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(
                r["\u0275\u0275directiveInject"](r.ElementRef),
                r["\u0275\u0275directiveInject"](r.ChangeDetectorRef),
                r["\u0275\u0275directiveInject"](di, 8),
                r["\u0275\u0275directiveInject"](Ye, 8),
                r["\u0275\u0275directiveInject"](kh, 8),
                r["\u0275\u0275directiveInject"](Se),
                r["\u0275\u0275directiveInject"](r.NgZone),
                r["\u0275\u0275directiveInject"](Dr, 8)
              );
            }),
            (e.ɵcmp = r["\u0275\u0275defineComponent"]({
              type: e,
              selectors: [["mat-form-field"]],
              contentQueries: function (e, t, n) {
                var i;
                1 & e &&
                  (r["\u0275\u0275contentQuery"](n, yh, !0),
                  r["\u0275\u0275staticContentQuery"](n, yh, !0),
                  r["\u0275\u0275contentQuery"](n, Ch, !0),
                  r["\u0275\u0275staticContentQuery"](n, Ch, !0),
                  r["\u0275\u0275contentQuery"](n, Sh, !0),
                  r["\u0275\u0275contentQuery"](n, gh, !0),
                  r["\u0275\u0275contentQuery"](n, wh, !0),
                  r["\u0275\u0275contentQuery"](n, Eh, !0),
                  r["\u0275\u0275contentQuery"](n, xh, !0)),
                  2 & e &&
                    (r["\u0275\u0275queryRefresh"](
                      (i = r["\u0275\u0275loadQuery"]())
                    ) && (t._controlNonStatic = i.first),
                    r["\u0275\u0275queryRefresh"](
                      (i = r["\u0275\u0275loadQuery"]())
                    ) && (t._controlStatic = i.first),
                    r["\u0275\u0275queryRefresh"](
                      (i = r["\u0275\u0275loadQuery"]())
                    ) && (t._labelChildNonStatic = i.first),
                    r["\u0275\u0275queryRefresh"](
                      (i = r["\u0275\u0275loadQuery"]())
                    ) && (t._labelChildStatic = i.first),
                    r["\u0275\u0275queryRefresh"](
                      (i = r["\u0275\u0275loadQuery"]())
                    ) && (t._placeholderChild = i.first),
                    r["\u0275\u0275queryRefresh"](
                      (i = r["\u0275\u0275loadQuery"]())
                    ) && (t._errorChildren = i),
                    r["\u0275\u0275queryRefresh"](
                      (i = r["\u0275\u0275loadQuery"]())
                    ) && (t._hintChildren = i),
                    r["\u0275\u0275queryRefresh"](
                      (i = r["\u0275\u0275loadQuery"]())
                    ) && (t._prefixChildren = i),
                    r["\u0275\u0275queryRefresh"](
                      (i = r["\u0275\u0275loadQuery"]())
                    ) && (t._suffixChildren = i));
              },
              viewQuery: function (e, t) {
                var n;
                1 & e &&
                  (r["\u0275\u0275viewQuery"](Xu, !0),
                  r["\u0275\u0275staticViewQuery"](Ju, !0),
                  r["\u0275\u0275viewQuery"](eh, !0),
                  r["\u0275\u0275viewQuery"](th, !0)),
                  2 & e &&
                    (r["\u0275\u0275queryRefresh"](
                      (n = r["\u0275\u0275loadQuery"]())
                    ) && (t.underlineRef = n.first),
                    r["\u0275\u0275queryRefresh"](
                      (n = r["\u0275\u0275loadQuery"]())
                    ) && (t._connectionContainerRef = n.first),
                    r["\u0275\u0275queryRefresh"](
                      (n = r["\u0275\u0275loadQuery"]())
                    ) && (t._inputContainerRef = n.first),
                    r["\u0275\u0275queryRefresh"](
                      (n = r["\u0275\u0275loadQuery"]())
                    ) && (t._label = n.first));
              },
              hostAttrs: [1, "mat-form-field"],
              hostVars: 44,
              hostBindings: function (e, t) {
                2 & e &&
                  r["\u0275\u0275classProp"](
                    "mat-form-field-appearance-standard",
                    "standard" == t.appearance
                  )("mat-form-field-appearance-fill", "fill" == t.appearance)(
                    "mat-form-field-appearance-outline",
                    "outline" == t.appearance
                  )(
                    "mat-form-field-appearance-legacy",
                    "legacy" == t.appearance
                  )("mat-form-field-invalid", t._control.errorState)(
                    "mat-form-field-can-float",
                    t._canLabelFloat
                  )("mat-form-field-should-float", t._shouldLabelFloat())(
                    "mat-form-field-has-label",
                    t._hasFloatingLabel()
                  )(
                    "mat-form-field-hide-placeholder",
                    t._hideControlPlaceholder()
                  )("mat-form-field-disabled", t._control.disabled)(
                    "mat-form-field-autofilled",
                    t._control.autofilled
                  )("mat-focused", t._control.focused)(
                    "mat-accent",
                    "accent" == t.color
                  )("mat-warn", "warn" == t.color)(
                    "ng-untouched",
                    t._shouldForward("untouched")
                  )("ng-touched", t._shouldForward("touched"))(
                    "ng-pristine",
                    t._shouldForward("pristine")
                  )("ng-dirty", t._shouldForward("dirty"))(
                    "ng-valid",
                    t._shouldForward("valid")
                  )("ng-invalid", t._shouldForward("invalid"))(
                    "ng-pending",
                    t._shouldForward("pending")
                  )("_mat-animation-noopable", !t._animationsEnabled);
              },
              inputs: {
                color: "color",
                floatLabel: "floatLabel",
                appearance: "appearance",
                hideRequiredMarker: "hideRequiredMarker",
                hintLabel: "hintLabel",
              },
              exportAs: ["matFormField"],
              features: [
                r["\u0275\u0275ProvidersFeature"]([
                  { provide: Rh, useExisting: e },
                ]),
                r["\u0275\u0275InheritDefinitionFeature"],
              ],
              ngContentSelectors: ph,
              decls: 15,
              vars: 8,
              consts: [
                [1, "mat-form-field-wrapper"],
                [1, "mat-form-field-flex", 3, "click"],
                ["connectionContainer", ""],
                [4, "ngIf"],
                ["class", "mat-form-field-prefix", 4, "ngIf"],
                [1, "mat-form-field-infix"],
                ["inputContainer", ""],
                [1, "mat-form-field-label-wrapper"],
                [
                  "class",
                  "mat-form-field-label",
                  3,
                  "cdkObserveContentDisabled",
                  "id",
                  "mat-empty",
                  "mat-form-field-empty",
                  "mat-accent",
                  "mat-warn",
                  "ngSwitch",
                  "cdkObserveContent",
                  4,
                  "ngIf",
                ],
                ["class", "mat-form-field-suffix", 4, "ngIf"],
                ["class", "mat-form-field-underline", 4, "ngIf"],
                [1, "mat-form-field-subscript-wrapper", 3, "ngSwitch"],
                [4, "ngSwitchCase"],
                ["class", "mat-form-field-hint-wrapper", 4, "ngSwitchCase"],
                [1, "mat-form-field-outline"],
                [1, "mat-form-field-outline-start"],
                [1, "mat-form-field-outline-gap"],
                [1, "mat-form-field-outline-end"],
                [1, "mat-form-field-outline", "mat-form-field-outline-thick"],
                [1, "mat-form-field-prefix"],
                [
                  1,
                  "mat-form-field-label",
                  3,
                  "cdkObserveContentDisabled",
                  "id",
                  "ngSwitch",
                  "cdkObserveContent",
                ],
                ["label", ""],
                [
                  "class",
                  "mat-placeholder-required mat-form-field-required-marker",
                  "aria-hidden",
                  "true",
                  4,
                  "ngIf",
                ],
                [
                  "aria-hidden",
                  "true",
                  1,
                  "mat-placeholder-required",
                  "mat-form-field-required-marker",
                ],
                [1, "mat-form-field-suffix"],
                [1, "mat-form-field-underline"],
                ["underline", ""],
                [1, "mat-form-field-ripple"],
                [1, "mat-form-field-hint-wrapper"],
                ["class", "mat-hint", 3, "id", 4, "ngIf"],
                [1, "mat-form-field-hint-spacer"],
                [1, "mat-hint", 3, "id"],
              ],
              template: function (e, t) {
                1 & e &&
                  (r["\u0275\u0275projectionDef"](fh),
                  r["\u0275\u0275elementStart"](0, "div", 0),
                  r["\u0275\u0275elementStart"](1, "div", 1, 2),
                  r["\u0275\u0275listener"]("click", function (e) {
                    return (
                      t._control.onContainerClick &&
                      t._control.onContainerClick(e)
                    );
                  }),
                  r["\u0275\u0275template"](3, nh, 9, 0, "ng-container", 3),
                  r["\u0275\u0275template"](4, rh, 2, 0, "div", 4),
                  r["\u0275\u0275elementStart"](5, "div", 5, 6),
                  r["\u0275\u0275projection"](7),
                  r["\u0275\u0275elementStart"](8, "span", 7),
                  r["\u0275\u0275template"](9, ah, 5, 16, "label", 8),
                  r["\u0275\u0275elementEnd"](),
                  r["\u0275\u0275elementEnd"](),
                  r["\u0275\u0275template"](10, lh, 2, 0, "div", 9),
                  r["\u0275\u0275elementEnd"](),
                  r["\u0275\u0275template"](11, ch, 3, 4, "div", 10),
                  r["\u0275\u0275elementStart"](12, "div", 11),
                  r["\u0275\u0275template"](13, uh, 2, 1, "div", 12),
                  r["\u0275\u0275template"](14, dh, 5, 2, "div", 13),
                  r["\u0275\u0275elementEnd"](),
                  r["\u0275\u0275elementEnd"]()),
                  2 & e &&
                    (r["\u0275\u0275advance"](3),
                    r["\u0275\u0275property"](
                      "ngIf",
                      "outline" == t.appearance
                    ),
                    r["\u0275\u0275advance"](1),
                    r["\u0275\u0275property"]("ngIf", t._prefixChildren.length),
                    r["\u0275\u0275advance"](5),
                    r["\u0275\u0275property"]("ngIf", t._hasFloatingLabel()),
                    r["\u0275\u0275advance"](1),
                    r["\u0275\u0275property"]("ngIf", t._suffixChildren.length),
                    r["\u0275\u0275advance"](1),
                    r["\u0275\u0275property"](
                      "ngIf",
                      "outline" != t.appearance
                    ),
                    r["\u0275\u0275advance"](1),
                    r["\u0275\u0275property"](
                      "ngSwitch",
                      t._getDisplayedMessages()
                    ),
                    r["\u0275\u0275advance"](1),
                    r["\u0275\u0275property"]("ngSwitchCase", "error"),
                    r["\u0275\u0275advance"](1),
                    r["\u0275\u0275property"]("ngSwitchCase", "hint"));
              },
              directives: [i.NgIf, i.NgSwitch, i.NgSwitchCase, Te],
              styles: [
                ".mat-form-field{display:inline-block;position:relative;text-align:left}[dir=rtl] .mat-form-field{text-align:right}.mat-form-field-wrapper{position:relative}.mat-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-form-field-prefix,.mat-form-field-suffix{white-space:nowrap;flex:none;position:relative}.mat-form-field-infix{display:block;position:relative;flex:auto;min-width:0;width:180px}.cdk-high-contrast-active .mat-form-field-infix{border-image:linear-gradient(transparent, transparent)}.mat-form-field-label-wrapper{position:absolute;left:0;box-sizing:content-box;width:100%;height:100%;overflow:hidden;pointer-events:none}[dir=rtl] .mat-form-field-label-wrapper{left:auto;right:0}.mat-form-field-label{position:absolute;left:0;font:inherit;pointer-events:none;width:100%;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),width 400ms cubic-bezier(0.25, 0.8, 0.25, 1);display:none}[dir=rtl] .mat-form-field-label{transform-origin:100% 0;left:auto;right:0}.mat-form-field-empty.mat-form-field-label,.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label{display:block}.mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:block;transition:none}.mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-can-float .mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:block}.mat-form-field-label:not(.mat-form-field-empty){transition:none}.mat-form-field-underline{position:absolute;width:100%;pointer-events:none;transform:scale3d(1, 1.0001, 1)}.mat-form-field-ripple{position:absolute;left:0;width:100%;transform-origin:50%;transform:scaleX(0.5);opacity:0;transition:background-color 300ms cubic-bezier(0.55, 0, 0.55, 0.2)}.mat-form-field.mat-focused .mat-form-field-ripple,.mat-form-field.mat-form-field-invalid .mat-form-field-ripple{opacity:1;transform:scaleX(1);transition:transform 300ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 300ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-subscript-wrapper{position:absolute;box-sizing:border-box;width:100%;overflow:hidden}.mat-form-field-subscript-wrapper .mat-icon,.mat-form-field-label-wrapper .mat-icon{width:1em;height:1em;font-size:inherit;vertical-align:baseline}.mat-form-field-hint-wrapper{display:flex}.mat-form-field-hint-spacer{flex:1 0 1em}.mat-error{display:block}.mat-form-field-control-wrapper{position:relative}.mat-form-field._mat-animation-noopable .mat-form-field-label,.mat-form-field._mat-animation-noopable .mat-form-field-ripple{transition:none}\n",
                '.mat-form-field-appearance-fill .mat-form-field-flex{border-radius:4px 4px 0 0;padding:.75em .75em 0 .75em}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-flex{outline:solid 1px}.mat-form-field-appearance-fill .mat-form-field-underline::before{content:"";display:block;position:absolute;bottom:0;height:1px;width:100%}.mat-form-field-appearance-fill .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-fill:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-fill._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}.mat-form-field-appearance-fill .mat-form-field-subscript-wrapper{padding:0 1em}\n',
                '.mat-input-element{font:inherit;background:transparent;color:currentColor;border:none;outline:none;padding:0;margin:0;width:100%;max-width:100%;vertical-align:bottom;text-align:inherit}.mat-input-element:-moz-ui-invalid{box-shadow:none}.mat-input-element::-ms-clear,.mat-input-element::-ms-reveal{display:none}.mat-input-element,.mat-input-element::-webkit-search-cancel-button,.mat-input-element::-webkit-search-decoration,.mat-input-element::-webkit-search-results-button,.mat-input-element::-webkit-search-results-decoration{-webkit-appearance:none}.mat-input-element::-webkit-contacts-auto-fill-button,.mat-input-element::-webkit-caps-lock-indicator,.mat-input-element::-webkit-credentials-auto-fill-button{visibility:hidden}.mat-input-element[type=date],.mat-input-element[type=datetime],.mat-input-element[type=datetime-local],.mat-input-element[type=month],.mat-input-element[type=week],.mat-input-element[type=time]{line-height:1}.mat-input-element[type=date]::after,.mat-input-element[type=datetime]::after,.mat-input-element[type=datetime-local]::after,.mat-input-element[type=month]::after,.mat-input-element[type=week]::after,.mat-input-element[type=time]::after{content:" ";white-space:pre;width:1px}.mat-input-element::-webkit-inner-spin-button,.mat-input-element::-webkit-calendar-picker-indicator,.mat-input-element::-webkit-clear-button{font-size:.75em}.mat-input-element::placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-moz-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-moz-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-webkit-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-webkit-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element:-ms-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element:-ms-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-form-field-hide-placeholder .mat-input-element::placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}textarea.mat-input-element{resize:vertical;overflow:auto}textarea.mat-input-element.cdk-textarea-autosize{resize:none}textarea.mat-input-element{padding:2px 0;margin:-2px 0}select.mat-input-element{-moz-appearance:none;-webkit-appearance:none;position:relative;background-color:transparent;display:inline-flex;box-sizing:border-box;padding-top:1em;top:-1em;margin-bottom:-1em}select.mat-input-element::-ms-expand{display:none}select.mat-input-element::-moz-focus-inner{border:0}select.mat-input-element:not(:disabled){cursor:pointer}select.mat-input-element::-ms-value{color:inherit;background:none}.mat-focused .cdk-high-contrast-active select.mat-input-element::-ms-value{color:inherit}.mat-form-field-type-mat-native-select .mat-form-field-infix::after{content:"";width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;position:absolute;top:50%;right:0;margin-top:-2.5px;pointer-events:none}[dir=rtl] .mat-form-field-type-mat-native-select .mat-form-field-infix::after{right:auto;left:0}.mat-form-field-type-mat-native-select .mat-input-element{padding-right:15px}[dir=rtl] .mat-form-field-type-mat-native-select .mat-input-element{padding-right:0;padding-left:15px}.mat-form-field-type-mat-native-select .mat-form-field-label-wrapper{max-width:calc(100% - 10px)}.mat-form-field-type-mat-native-select.mat-form-field-appearance-outline .mat-form-field-infix::after{margin-top:-5px}.mat-form-field-type-mat-native-select.mat-form-field-appearance-fill .mat-form-field-infix::after{margin-top:-10px}\n',
                ".mat-form-field-appearance-legacy .mat-form-field-label{transform:perspective(100px);-ms-transform:none}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon{width:1em}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button{font:inherit;vertical-align:baseline}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button .mat-icon{font-size:inherit}.mat-form-field-appearance-legacy .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-legacy .mat-form-field-ripple{top:0;height:2px;overflow:hidden}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-legacy.mat-form-field-invalid:not(.mat-focused) .mat-form-field-ripple{height:1px}\n",
                ".mat-form-field-appearance-outline .mat-form-field-wrapper{margin:.25em 0}.mat-form-field-appearance-outline .mat-form-field-flex{padding:0 .75em 0 .75em;margin-top:-0.25em;position:relative}.mat-form-field-appearance-outline .mat-form-field-prefix,.mat-form-field-appearance-outline .mat-form-field-suffix{top:.25em}.mat-form-field-appearance-outline .mat-form-field-outline{display:flex;position:absolute;top:.25em;left:0;right:0;bottom:0;pointer-events:none}.mat-form-field-appearance-outline .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-end{border:1px solid currentColor;min-width:5px}.mat-form-field-appearance-outline .mat-form-field-outline-start{border-radius:5px 0 0 5px;border-right-style:none}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-start{border-right-style:solid;border-left-style:none;border-radius:0 5px 5px 0}.mat-form-field-appearance-outline .mat-form-field-outline-end{border-radius:0 5px 5px 0;border-left-style:none;flex-grow:1}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-end{border-left-style:solid;border-right-style:none;border-radius:5px 0 0 5px}.mat-form-field-appearance-outline .mat-form-field-outline-gap{border-radius:.000001px;border:1px solid currentColor;border-left-style:none;border-right-style:none}.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-outline-gap{border-top-color:transparent}.mat-form-field-appearance-outline .mat-form-field-outline-thick{opacity:0}.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-end,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-gap{border-width:2px}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline{opacity:0;transition:opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline{opacity:0;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline .mat-form-field-subscript-wrapper{padding:0 1em}.mat-form-field-appearance-outline._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-start,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-end,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-gap{transition:none}\n",
                ".mat-form-field-appearance-standard .mat-form-field-flex{padding-top:.75em}.mat-form-field-appearance-standard .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-standard .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-ripple{height:0;border-top:2px}.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-standard:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-standard._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}\n",
              ],
              encapsulation: 2,
              data: { animation: [_h.transitionMessages] },
              changeDetection: 0,
            })),
            e
          );
        })(),
        Th = (() => {
          class e {}
          return (
            (e.ɵmod = r["\u0275\u0275defineNgModule"]({ type: e })),
            (e.ɵinj = r["\u0275\u0275defineInjector"]({
              factory: function (t) {
                return new (t || e)();
              },
              imports: [[i.CommonModule, Nr, Fe], Nr],
            })),
            e
          );
        })();
      const Fh = new r.InjectionToken("NgValueAccessor"),
        Ph = {
          provide: Fh,
          useExisting: Object(r.forwardRef)(() => jh),
          multi: !0,
        };
      let jh = (() => {
        class e {
          constructor(e, t) {
            (this._renderer = e),
              (this._elementRef = t),
              (this.onChange = (e) => {}),
              (this.onTouched = () => {});
          }
          writeValue(e) {
            this._renderer.setProperty(
              this._elementRef.nativeElement,
              "checked",
              e
            );
          }
          registerOnChange(e) {
            this.onChange = e;
          }
          registerOnTouched(e) {
            this.onTouched = e;
          }
          setDisabledState(e) {
            this._renderer.setProperty(
              this._elementRef.nativeElement,
              "disabled",
              e
            );
          }
        }
        return (
          (e.ɵfac = function (t) {
            return new (t || e)(
              r["\u0275\u0275directiveInject"](r.Renderer2),
              r["\u0275\u0275directiveInject"](r.ElementRef)
            );
          }),
          (e.ɵdir = r["\u0275\u0275defineDirective"]({
            type: e,
            selectors: [
              ["input", "type", "checkbox", "formControlName", ""],
              ["input", "type", "checkbox", "formControl", ""],
              ["input", "type", "checkbox", "ngModel", ""],
            ],
            hostBindings: function (e, t) {
              1 & e &&
                r["\u0275\u0275listener"]("change", function (e) {
                  return t.onChange(e.target.checked);
                })("blur", function () {
                  return t.onTouched();
                });
            },
            features: [r["\u0275\u0275ProvidersFeature"]([Ph])],
          })),
          e
        );
      })();
      const Nh = {
          provide: Fh,
          useExisting: Object(r.forwardRef)(() => Lh),
          multi: !0,
        },
        Mh = new r.InjectionToken("CompositionEventMode");
      let Lh = (() => {
          class e {
            constructor(e, t, n) {
              (this._renderer = e),
                (this._elementRef = t),
                (this._compositionMode = n),
                (this.onChange = (e) => {}),
                (this.onTouched = () => {}),
                (this._composing = !1),
                null == this._compositionMode &&
                  (this._compositionMode = !(function () {
                    const e = Object(i["\u0275getDOM"])()
                      ? Object(i["\u0275getDOM"])().getUserAgent()
                      : "";
                    return /android (\d+)/.test(e.toLowerCase());
                  })());
            }
            writeValue(e) {
              this._renderer.setProperty(
                this._elementRef.nativeElement,
                "value",
                null == e ? "" : e
              );
            }
            registerOnChange(e) {
              this.onChange = e;
            }
            registerOnTouched(e) {
              this.onTouched = e;
            }
            setDisabledState(e) {
              this._renderer.setProperty(
                this._elementRef.nativeElement,
                "disabled",
                e
              );
            }
            _handleInput(e) {
              (!this._compositionMode ||
                (this._compositionMode && !this._composing)) &&
                this.onChange(e);
            }
            _compositionStart() {
              this._composing = !0;
            }
            _compositionEnd(e) {
              (this._composing = !1), this._compositionMode && this.onChange(e);
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(
                r["\u0275\u0275directiveInject"](r.Renderer2),
                r["\u0275\u0275directiveInject"](r.ElementRef),
                r["\u0275\u0275directiveInject"](Mh, 8)
              );
            }),
            (e.ɵdir = r["\u0275\u0275defineDirective"]({
              type: e,
              selectors: [
                ["input", "formControlName", "", 3, "type", "checkbox"],
                ["textarea", "formControlName", ""],
                ["input", "formControl", "", 3, "type", "checkbox"],
                ["textarea", "formControl", ""],
                ["input", "ngModel", "", 3, "type", "checkbox"],
                ["textarea", "ngModel", ""],
                ["", "ngDefaultControl", ""],
              ],
              hostBindings: function (e, t) {
                1 & e &&
                  r["\u0275\u0275listener"]("input", function (e) {
                    return t._handleInput(e.target.value);
                  })("blur", function () {
                    return t.onTouched();
                  })("compositionstart", function () {
                    return t._compositionStart();
                  })("compositionend", function (e) {
                    return t._compositionEnd(e.target.value);
                  });
              },
              features: [r["\u0275\u0275ProvidersFeature"]([Nh])],
            })),
            e
          );
        })(),
        Vh = (() => {
          class e {
            get value() {
              return this.control ? this.control.value : null;
            }
            get valid() {
              return this.control ? this.control.valid : null;
            }
            get invalid() {
              return this.control ? this.control.invalid : null;
            }
            get pending() {
              return this.control ? this.control.pending : null;
            }
            get disabled() {
              return this.control ? this.control.disabled : null;
            }
            get enabled() {
              return this.control ? this.control.enabled : null;
            }
            get errors() {
              return this.control ? this.control.errors : null;
            }
            get pristine() {
              return this.control ? this.control.pristine : null;
            }
            get dirty() {
              return this.control ? this.control.dirty : null;
            }
            get touched() {
              return this.control ? this.control.touched : null;
            }
            get status() {
              return this.control ? this.control.status : null;
            }
            get untouched() {
              return this.control ? this.control.untouched : null;
            }
            get statusChanges() {
              return this.control ? this.control.statusChanges : null;
            }
            get valueChanges() {
              return this.control ? this.control.valueChanges : null;
            }
            get path() {
              return null;
            }
            reset(e) {
              this.control && this.control.reset(e);
            }
            hasError(e, t) {
              return !!this.control && this.control.hasError(e, t);
            }
            getError(e, t) {
              return this.control ? this.control.getError(e, t) : null;
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)();
            }),
            (e.ɵdir = r["\u0275\u0275defineDirective"]({ type: e })),
            e
          );
        })(),
        Bh = (() => {
          class e extends Vh {
            get formDirective() {
              return null;
            }
            get path() {
              return null;
            }
          }
          return (
            (e.ɵfac = function (t) {
              return zh(t || e);
            }),
            (e.ɵdir = r["\u0275\u0275defineDirective"]({
              type: e,
              features: [r["\u0275\u0275InheritDefinitionFeature"]],
            })),
            e
          );
        })();
      const zh = r["\u0275\u0275getInheritedFactory"](Bh);
      function Uh() {
        throw new Error("unimplemented");
      }
      class Hh extends Vh {
        constructor() {
          super(...arguments),
            (this._parent = null),
            (this.name = null),
            (this.valueAccessor = null),
            (this._rawValidators = []),
            (this._rawAsyncValidators = []);
        }
        get validator() {
          return Uh();
        }
        get asyncValidator() {
          return Uh();
        }
      }
      let $h = (() => {
        class e extends class {
          constructor(e) {
            this._cd = e;
          }
          get ngClassUntouched() {
            return !!this._cd.control && this._cd.control.untouched;
          }
          get ngClassTouched() {
            return !!this._cd.control && this._cd.control.touched;
          }
          get ngClassPristine() {
            return !!this._cd.control && this._cd.control.pristine;
          }
          get ngClassDirty() {
            return !!this._cd.control && this._cd.control.dirty;
          }
          get ngClassValid() {
            return !!this._cd.control && this._cd.control.valid;
          }
          get ngClassInvalid() {
            return !!this._cd.control && this._cd.control.invalid;
          }
          get ngClassPending() {
            return !!this._cd.control && this._cd.control.pending;
          }
        } {
          constructor(e) {
            super(e);
          }
        }
        return (
          (e.ɵfac = function (t) {
            return new (t || e)(r["\u0275\u0275directiveInject"](Hh, 2));
          }),
          (e.ɵdir = r["\u0275\u0275defineDirective"]({
            type: e,
            selectors: [
              ["", "formControlName", ""],
              ["", "ngModel", ""],
              ["", "formControl", ""],
            ],
            hostVars: 14,
            hostBindings: function (e, t) {
              2 & e &&
                r["\u0275\u0275classProp"]("ng-untouched", t.ngClassUntouched)(
                  "ng-touched",
                  t.ngClassTouched
                )("ng-pristine", t.ngClassPristine)("ng-dirty", t.ngClassDirty)(
                  "ng-valid",
                  t.ngClassValid
                )("ng-invalid", t.ngClassInvalid)(
                  "ng-pending",
                  t.ngClassPending
                );
            },
            features: [r["\u0275\u0275InheritDefinitionFeature"]],
          })),
          e
        );
      })();
      function qh(e) {
        return null == e || 0 === e.length;
      }
      const Gh = new r.InjectionToken("NgValidators"),
        Wh = new r.InjectionToken("NgAsyncValidators"),
        Qh = /^(?=.{1,254}$)(?=.{1,64}@)[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+)*@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;
      class Kh {
        static min(e) {
          return (t) => {
            if (qh(t.value) || qh(e)) return null;
            const n = parseFloat(t.value);
            return !isNaN(n) && n < e
              ? { min: { min: e, actual: t.value } }
              : null;
          };
        }
        static max(e) {
          return (t) => {
            if (qh(t.value) || qh(e)) return null;
            const n = parseFloat(t.value);
            return !isNaN(n) && n > e
              ? { max: { max: e, actual: t.value } }
              : null;
          };
        }
        static required(e) {
          return qh(e.value) ? { required: !0 } : null;
        }
        static requiredTrue(e) {
          return !0 === e.value ? null : { required: !0 };
        }
        static email(e) {
          return qh(e.value) || Qh.test(e.value) ? null : { email: !0 };
        }
        static minLength(e) {
          return (t) => {
            if (qh(t.value)) return null;
            const n = t.value ? t.value.length : 0;
            return n < e
              ? { minlength: { requiredLength: e, actualLength: n } }
              : null;
          };
        }
        static maxLength(e) {
          return (t) => {
            const n = t.value ? t.value.length : 0;
            return n > e
              ? { maxlength: { requiredLength: e, actualLength: n } }
              : null;
          };
        }
        static pattern(e) {
          if (!e) return Kh.nullValidator;
          let t, n;
          return (
            "string" == typeof e
              ? ((n = ""),
                "^" !== e.charAt(0) && (n += "^"),
                (n += e),
                "$" !== e.charAt(e.length - 1) && (n += "$"),
                (t = new RegExp(n)))
              : ((n = e.toString()), (t = e)),
            (e) => {
              if (qh(e.value)) return null;
              const r = e.value;
              return t.test(r)
                ? null
                : { pattern: { requiredPattern: n, actualValue: r } };
            }
          );
        }
        static nullValidator(e) {
          return null;
        }
        static compose(e) {
          if (!e) return null;
          const t = e.filter(Zh);
          return 0 == t.length
            ? null
            : function (e) {
                return Xh(
                  (function (e, t) {
                    return t.map((t) => t(e));
                  })(e, t)
                );
              };
        }
        static composeAsync(e) {
          if (!e) return null;
          const t = e.filter(Zh);
          return 0 == t.length
            ? null
            : function (e) {
                return gi(
                  (function (e, t) {
                    return t.map((t) => t(e));
                  })(e, t).map(Yh)
                ).pipe(Object(le.a)(Xh));
              };
        }
      }
      function Zh(e) {
        return null != e;
      }
      function Yh(e) {
        const t = Object(r["\u0275isPromise"])(e) ? Object(mi.a)(e) : e;
        if (!Object(r["\u0275isObservable"])(t))
          throw new Error(
            "Expected validator to return Promise or Observable."
          );
        return t;
      }
      function Xh(e) {
        let t = {};
        return (
          e.forEach((e) => {
            t = null != e ? Object.assign(Object.assign({}, t), e) : t;
          }),
          0 === Object.keys(t).length ? null : t
        );
      }
      function Jh(e) {
        return e.validate ? (t) => e.validate(t) : e;
      }
      function ed(e) {
        return e.validate ? (t) => e.validate(t) : e;
      }
      const td = {
        provide: Fh,
        useExisting: Object(r.forwardRef)(() => nd),
        multi: !0,
      };
      let nd = (() => {
        class e {
          constructor(e, t) {
            (this._renderer = e),
              (this._elementRef = t),
              (this.onChange = (e) => {}),
              (this.onTouched = () => {});
          }
          writeValue(e) {
            this._renderer.setProperty(
              this._elementRef.nativeElement,
              "value",
              null == e ? "" : e
            );
          }
          registerOnChange(e) {
            this.onChange = (t) => {
              e("" == t ? null : parseFloat(t));
            };
          }
          registerOnTouched(e) {
            this.onTouched = e;
          }
          setDisabledState(e) {
            this._renderer.setProperty(
              this._elementRef.nativeElement,
              "disabled",
              e
            );
          }
        }
        return (
          (e.ɵfac = function (t) {
            return new (t || e)(
              r["\u0275\u0275directiveInject"](r.Renderer2),
              r["\u0275\u0275directiveInject"](r.ElementRef)
            );
          }),
          (e.ɵdir = r["\u0275\u0275defineDirective"]({
            type: e,
            selectors: [
              ["input", "type", "number", "formControlName", ""],
              ["input", "type", "number", "formControl", ""],
              ["input", "type", "number", "ngModel", ""],
            ],
            hostBindings: function (e, t) {
              1 & e &&
                r["\u0275\u0275listener"]("change", function (e) {
                  return t.onChange(e.target.value);
                })("input", function (e) {
                  return t.onChange(e.target.value);
                })("blur", function () {
                  return t.onTouched();
                });
            },
            features: [r["\u0275\u0275ProvidersFeature"]([td])],
          })),
          e
        );
      })();
      const rd = {
        provide: Fh,
        useExisting: Object(r.forwardRef)(() => sd),
        multi: !0,
      };
      let id = (() => {
          class e {
            constructor() {
              this._accessors = [];
            }
            add(e, t) {
              this._accessors.push([e, t]);
            }
            remove(e) {
              for (let t = this._accessors.length - 1; t >= 0; --t)
                if (this._accessors[t][1] === e)
                  return void this._accessors.splice(t, 1);
            }
            select(e) {
              this._accessors.forEach((t) => {
                this._isSameGroup(t, e) &&
                  t[1] !== e &&
                  t[1].fireUncheck(e.value);
              });
            }
            _isSameGroup(e, t) {
              return (
                !!e[0].control &&
                e[0]._parent === t._control._parent &&
                e[1].name === t.name
              );
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)();
            }),
            (e.ɵprov = r["\u0275\u0275defineInjectable"]({
              token: e,
              factory: e.ɵfac,
            })),
            e
          );
        })(),
        sd = (() => {
          class e {
            constructor(e, t, n, r) {
              (this._renderer = e),
                (this._elementRef = t),
                (this._registry = n),
                (this._injector = r),
                (this.onChange = () => {}),
                (this.onTouched = () => {});
            }
            ngOnInit() {
              (this._control = this._injector.get(Hh)),
                this._checkName(),
                this._registry.add(this._control, this);
            }
            ngOnDestroy() {
              this._registry.remove(this);
            }
            writeValue(e) {
              (this._state = e === this.value),
                this._renderer.setProperty(
                  this._elementRef.nativeElement,
                  "checked",
                  this._state
                );
            }
            registerOnChange(e) {
              (this._fn = e),
                (this.onChange = () => {
                  e(this.value), this._registry.select(this);
                });
            }
            fireUncheck(e) {
              this.writeValue(e);
            }
            registerOnTouched(e) {
              this.onTouched = e;
            }
            setDisabledState(e) {
              this._renderer.setProperty(
                this._elementRef.nativeElement,
                "disabled",
                e
              );
            }
            _checkName() {
              this.name &&
                this.formControlName &&
                this.name !== this.formControlName &&
                this._throwNameError(),
                !this.name &&
                  this.formControlName &&
                  (this.name = this.formControlName);
            }
            _throwNameError() {
              throw new Error(
                '\n      If you define both a name and a formControlName attribute on your radio button, their values\n      must match. Ex: <input type="radio" formControlName="food" name="food">\n    '
              );
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(
                r["\u0275\u0275directiveInject"](r.Renderer2),
                r["\u0275\u0275directiveInject"](r.ElementRef),
                r["\u0275\u0275directiveInject"](id),
                r["\u0275\u0275directiveInject"](r.Injector)
              );
            }),
            (e.ɵdir = r["\u0275\u0275defineDirective"]({
              type: e,
              selectors: [
                ["input", "type", "radio", "formControlName", ""],
                ["input", "type", "radio", "formControl", ""],
                ["input", "type", "radio", "ngModel", ""],
              ],
              hostBindings: function (e, t) {
                1 & e &&
                  r["\u0275\u0275listener"]("change", function () {
                    return t.onChange();
                  })("blur", function () {
                    return t.onTouched();
                  });
              },
              inputs: {
                name: "name",
                formControlName: "formControlName",
                value: "value",
              },
              features: [r["\u0275\u0275ProvidersFeature"]([rd])],
            })),
            e
          );
        })();
      const od = {
        provide: Fh,
        useExisting: Object(r.forwardRef)(() => ad),
        multi: !0,
      };
      let ad = (() => {
        class e {
          constructor(e, t) {
            (this._renderer = e),
              (this._elementRef = t),
              (this.onChange = (e) => {}),
              (this.onTouched = () => {});
          }
          writeValue(e) {
            this._renderer.setProperty(
              this._elementRef.nativeElement,
              "value",
              parseFloat(e)
            );
          }
          registerOnChange(e) {
            this.onChange = (t) => {
              e("" == t ? null : parseFloat(t));
            };
          }
          registerOnTouched(e) {
            this.onTouched = e;
          }
          setDisabledState(e) {
            this._renderer.setProperty(
              this._elementRef.nativeElement,
              "disabled",
              e
            );
          }
        }
        return (
          (e.ɵfac = function (t) {
            return new (t || e)(
              r["\u0275\u0275directiveInject"](r.Renderer2),
              r["\u0275\u0275directiveInject"](r.ElementRef)
            );
          }),
          (e.ɵdir = r["\u0275\u0275defineDirective"]({
            type: e,
            selectors: [
              ["input", "type", "range", "formControlName", ""],
              ["input", "type", "range", "formControl", ""],
              ["input", "type", "range", "ngModel", ""],
            ],
            hostBindings: function (e, t) {
              1 & e &&
                r["\u0275\u0275listener"]("change", function (e) {
                  return t.onChange(e.target.value);
                })("input", function (e) {
                  return t.onChange(e.target.value);
                })("blur", function () {
                  return t.onTouched();
                });
            },
            features: [r["\u0275\u0275ProvidersFeature"]([od])],
          })),
          e
        );
      })();
      const ld =
          '\n    <div [formGroup]="myGroup">\n      <input formControlName="firstName">\n    </div>\n\n    In your class:\n\n    this.myGroup = new FormGroup({\n       firstName: new FormControl()\n    });',
        cd =
          '\n    <div [formGroup]="myGroup">\n       <div formGroupName="person">\n          <input formControlName="firstName">\n       </div>\n    </div>\n\n    In your class:\n\n    this.myGroup = new FormGroup({\n       person: new FormGroup({ firstName: new FormControl() })\n    });',
        ud =
          '\n    <form>\n       <div ngModelGroup="person">\n          <input [(ngModel)]="person.name" name="firstName">\n       </div>\n    </form>',
        hd = {
          provide: Fh,
          useExisting: Object(r.forwardRef)(() => dd),
          multi: !0,
        };
      let dd = (() => {
        class e {
          constructor(e, t) {
            (this._renderer = e),
              (this._elementRef = t),
              (this._optionMap = new Map()),
              (this._idCounter = 0),
              (this.onChange = (e) => {}),
              (this.onTouched = () => {}),
              (this._compareWith = r["\u0275looseIdentical"]);
          }
          set compareWith(e) {
            if ("function" != typeof e)
              throw new Error(
                "compareWith must be a function, but received " +
                  JSON.stringify(e)
              );
            this._compareWith = e;
          }
          writeValue(e) {
            this.value = e;
            const t = this._getOptionId(e);
            null == t &&
              this._renderer.setProperty(
                this._elementRef.nativeElement,
                "selectedIndex",
                -1
              );
            const n = (function (e, t) {
              return null == e
                ? "" + t
                : (t && "object" == typeof t && (t = "Object"),
                  `${e}: ${t}`.slice(0, 50));
            })(t, e);
            this._renderer.setProperty(
              this._elementRef.nativeElement,
              "value",
              n
            );
          }
          registerOnChange(e) {
            this.onChange = (t) => {
              (this.value = this._getOptionValue(t)), e(this.value);
            };
          }
          registerOnTouched(e) {
            this.onTouched = e;
          }
          setDisabledState(e) {
            this._renderer.setProperty(
              this._elementRef.nativeElement,
              "disabled",
              e
            );
          }
          _registerOption() {
            return (this._idCounter++).toString();
          }
          _getOptionId(e) {
            for (const t of Array.from(this._optionMap.keys()))
              if (this._compareWith(this._optionMap.get(t), e)) return t;
            return null;
          }
          _getOptionValue(e) {
            const t = (function (e) {
              return e.split(":")[0];
            })(e);
            return this._optionMap.has(t) ? this._optionMap.get(t) : e;
          }
        }
        return (
          (e.ɵfac = function (t) {
            return new (t || e)(
              r["\u0275\u0275directiveInject"](r.Renderer2),
              r["\u0275\u0275directiveInject"](r.ElementRef)
            );
          }),
          (e.ɵdir = r["\u0275\u0275defineDirective"]({
            type: e,
            selectors: [
              ["select", "formControlName", "", 3, "multiple", ""],
              ["select", "formControl", "", 3, "multiple", ""],
              ["select", "ngModel", "", 3, "multiple", ""],
            ],
            hostBindings: function (e, t) {
              1 & e &&
                r["\u0275\u0275listener"]("change", function (e) {
                  return t.onChange(e.target.value);
                })("blur", function () {
                  return t.onTouched();
                });
            },
            inputs: { compareWith: "compareWith" },
            features: [r["\u0275\u0275ProvidersFeature"]([hd])],
          })),
          e
        );
      })();
      const fd = {
        provide: Fh,
        useExisting: Object(r.forwardRef)(() => pd),
        multi: !0,
      };
      let pd = (() => {
        class e {
          constructor(e, t) {
            (this._renderer = e),
              (this._elementRef = t),
              (this._optionMap = new Map()),
              (this._idCounter = 0),
              (this.onChange = (e) => {}),
              (this.onTouched = () => {}),
              (this._compareWith = r["\u0275looseIdentical"]);
          }
          set compareWith(e) {
            if ("function" != typeof e)
              throw new Error(
                "compareWith must be a function, but received " +
                  JSON.stringify(e)
              );
            this._compareWith = e;
          }
          writeValue(e) {
            let t;
            if (((this.value = e), Array.isArray(e))) {
              const n = e.map((e) => this._getOptionId(e));
              t = (e, t) => {
                e._setSelected(n.indexOf(t.toString()) > -1);
              };
            } else
              t = (e, t) => {
                e._setSelected(!1);
              };
            this._optionMap.forEach(t);
          }
          registerOnChange(e) {
            this.onChange = (t) => {
              const n = [];
              if (t.hasOwnProperty("selectedOptions")) {
                const e = t.selectedOptions;
                for (let t = 0; t < e.length; t++) {
                  const r = e.item(t),
                    i = this._getOptionValue(r.value);
                  n.push(i);
                }
              } else {
                const e = t.options;
                for (let t = 0; t < e.length; t++) {
                  const r = e.item(t);
                  if (r.selected) {
                    const e = this._getOptionValue(r.value);
                    n.push(e);
                  }
                }
              }
              (this.value = n), e(n);
            };
          }
          registerOnTouched(e) {
            this.onTouched = e;
          }
          setDisabledState(e) {
            this._renderer.setProperty(
              this._elementRef.nativeElement,
              "disabled",
              e
            );
          }
          _registerOption(e) {
            const t = (this._idCounter++).toString();
            return this._optionMap.set(t, e), t;
          }
          _getOptionId(e) {
            for (const t of Array.from(this._optionMap.keys()))
              if (this._compareWith(this._optionMap.get(t)._value, e)) return t;
            return null;
          }
          _getOptionValue(e) {
            const t = (function (e) {
              return e.split(":")[0];
            })(e);
            return this._optionMap.has(t) ? this._optionMap.get(t)._value : e;
          }
        }
        return (
          (e.ɵfac = function (t) {
            return new (t || e)(
              r["\u0275\u0275directiveInject"](r.Renderer2),
              r["\u0275\u0275directiveInject"](r.ElementRef)
            );
          }),
          (e.ɵdir = r["\u0275\u0275defineDirective"]({
            type: e,
            selectors: [
              ["select", "multiple", "", "formControlName", ""],
              ["select", "multiple", "", "formControl", ""],
              ["select", "multiple", "", "ngModel", ""],
            ],
            hostBindings: function (e, t) {
              1 & e &&
                r["\u0275\u0275listener"]("change", function (e) {
                  return t.onChange(e.target);
                })("blur", function () {
                  return t.onTouched();
                });
            },
            inputs: { compareWith: "compareWith" },
            features: [r["\u0275\u0275ProvidersFeature"]([fd])],
          })),
          e
        );
      })();
      function md(e, t) {
        return [...t.path, e];
      }
      function gd(e, t) {
        e || bd(t, "Cannot find control with"),
          t.valueAccessor || bd(t, "No value accessor for form control with"),
          (e.validator = Kh.compose([e.validator, t.validator])),
          (e.asyncValidator = Kh.composeAsync([
            e.asyncValidator,
            t.asyncValidator,
          ])),
          t.valueAccessor.writeValue(e.value),
          (function (e, t) {
            t.valueAccessor.registerOnChange((n) => {
              (e._pendingValue = n),
                (e._pendingChange = !0),
                (e._pendingDirty = !0),
                "change" === e.updateOn && _d(e, t);
            });
          })(e, t),
          (function (e, t) {
            e.registerOnChange((e, n) => {
              t.valueAccessor.writeValue(e), n && t.viewToModelUpdate(e);
            });
          })(e, t),
          (function (e, t) {
            t.valueAccessor.registerOnTouched(() => {
              (e._pendingTouched = !0),
                "blur" === e.updateOn && e._pendingChange && _d(e, t),
                "submit" !== e.updateOn && e.markAsTouched();
            });
          })(e, t),
          t.valueAccessor.setDisabledState &&
            e.registerOnDisabledChange((e) => {
              t.valueAccessor.setDisabledState(e);
            }),
          t._rawValidators.forEach((t) => {
            t.registerOnValidatorChange &&
              t.registerOnValidatorChange(() => e.updateValueAndValidity());
          }),
          t._rawAsyncValidators.forEach((t) => {
            t.registerOnValidatorChange &&
              t.registerOnValidatorChange(() => e.updateValueAndValidity());
          });
      }
      function _d(e, t) {
        e._pendingDirty && e.markAsDirty(),
          e.setValue(e._pendingValue, { emitModelToViewChange: !1 }),
          t.viewToModelUpdate(e._pendingValue),
          (e._pendingChange = !1);
      }
      function yd(e, t) {
        null == e && bd(t, "Cannot find control with"),
          (e.validator = Kh.compose([e.validator, t.validator])),
          (e.asyncValidator = Kh.composeAsync([
            e.asyncValidator,
            t.asyncValidator,
          ]));
      }
      function vd(e) {
        return bd(
          e,
          "There is no FormControl instance attached to form control element with"
        );
      }
      function bd(e, t) {
        let n;
        throw (
          ((n =
            e.path.length > 1
              ? `path: '${e.path.join(" -> ")}'`
              : e.path[0]
              ? `name: '${e.path}'`
              : "unspecified name attribute"),
          new Error(`${t} ${n}`))
        );
      }
      function wd(e) {
        return null != e ? Kh.compose(e.map(Jh)) : null;
      }
      function Cd(e) {
        return null != e ? Kh.composeAsync(e.map(ed)) : null;
      }
      const Sd = [jh, ad, nd, dd, pd, sd];
      function Ed(e, t) {
        e._syncPendingControls(),
          t.forEach((e) => {
            const t = e.control;
            "submit" === t.updateOn &&
              t._pendingChange &&
              (e.viewToModelUpdate(t._pendingValue), (t._pendingChange = !1));
          });
      }
      function xd(e, t) {
        const n = e.indexOf(t);
        n > -1 && e.splice(n, 1);
      }
      function Dd(e) {
        const t = Od(e) ? e.validators : e;
        return Array.isArray(t) ? wd(t) : t || null;
      }
      function Id(e, t) {
        const n = Od(t) ? t.asyncValidators : e;
        return Array.isArray(n) ? Cd(n) : n || null;
      }
      function Od(e) {
        return null != e && !Array.isArray(e) && "object" == typeof e;
      }
      class kd {
        constructor(e, t) {
          (this.validator = e),
            (this.asyncValidator = t),
            (this._onCollectionChange = () => {}),
            (this.pristine = !0),
            (this.touched = !1),
            (this._onDisabledChange = []);
        }
        get parent() {
          return this._parent;
        }
        get valid() {
          return "VALID" === this.status;
        }
        get invalid() {
          return "INVALID" === this.status;
        }
        get pending() {
          return "PENDING" == this.status;
        }
        get disabled() {
          return "DISABLED" === this.status;
        }
        get enabled() {
          return "DISABLED" !== this.status;
        }
        get dirty() {
          return !this.pristine;
        }
        get untouched() {
          return !this.touched;
        }
        get updateOn() {
          return this._updateOn
            ? this._updateOn
            : this.parent
            ? this.parent.updateOn
            : "change";
        }
        setValidators(e) {
          this.validator = Dd(e);
        }
        setAsyncValidators(e) {
          this.asyncValidator = Id(e);
        }
        clearValidators() {
          this.validator = null;
        }
        clearAsyncValidators() {
          this.asyncValidator = null;
        }
        markAsTouched(e = {}) {
          (this.touched = !0),
            this._parent && !e.onlySelf && this._parent.markAsTouched(e);
        }
        markAllAsTouched() {
          this.markAsTouched({ onlySelf: !0 }),
            this._forEachChild((e) => e.markAllAsTouched());
        }
        markAsUntouched(e = {}) {
          (this.touched = !1),
            (this._pendingTouched = !1),
            this._forEachChild((e) => {
              e.markAsUntouched({ onlySelf: !0 });
            }),
            this._parent && !e.onlySelf && this._parent._updateTouched(e);
        }
        markAsDirty(e = {}) {
          (this.pristine = !1),
            this._parent && !e.onlySelf && this._parent.markAsDirty(e);
        }
        markAsPristine(e = {}) {
          (this.pristine = !0),
            (this._pendingDirty = !1),
            this._forEachChild((e) => {
              e.markAsPristine({ onlySelf: !0 });
            }),
            this._parent && !e.onlySelf && this._parent._updatePristine(e);
        }
        markAsPending(e = {}) {
          (this.status = "PENDING"),
            !1 !== e.emitEvent && this.statusChanges.emit(this.status),
            this._parent && !e.onlySelf && this._parent.markAsPending(e);
        }
        disable(e = {}) {
          const t = this._parentMarkedDirty(e.onlySelf);
          (this.status = "DISABLED"),
            (this.errors = null),
            this._forEachChild((t) => {
              t.disable(Object.assign(Object.assign({}, e), { onlySelf: !0 }));
            }),
            this._updateValue(),
            !1 !== e.emitEvent &&
              (this.valueChanges.emit(this.value),
              this.statusChanges.emit(this.status)),
            this._updateAncestors(
              Object.assign(Object.assign({}, e), { skipPristineCheck: t })
            ),
            this._onDisabledChange.forEach((e) => e(!0));
        }
        enable(e = {}) {
          const t = this._parentMarkedDirty(e.onlySelf);
          (this.status = "VALID"),
            this._forEachChild((t) => {
              t.enable(Object.assign(Object.assign({}, e), { onlySelf: !0 }));
            }),
            this.updateValueAndValidity({
              onlySelf: !0,
              emitEvent: e.emitEvent,
            }),
            this._updateAncestors(
              Object.assign(Object.assign({}, e), { skipPristineCheck: t })
            ),
            this._onDisabledChange.forEach((e) => e(!1));
        }
        _updateAncestors(e) {
          this._parent &&
            !e.onlySelf &&
            (this._parent.updateValueAndValidity(e),
            e.skipPristineCheck || this._parent._updatePristine(),
            this._parent._updateTouched());
        }
        setParent(e) {
          this._parent = e;
        }
        updateValueAndValidity(e = {}) {
          this._setInitialStatus(),
            this._updateValue(),
            this.enabled &&
              (this._cancelExistingSubscription(),
              (this.errors = this._runValidator()),
              (this.status = this._calculateStatus()),
              ("VALID" !== this.status && "PENDING" !== this.status) ||
                this._runAsyncValidator(e.emitEvent)),
            !1 !== e.emitEvent &&
              (this.valueChanges.emit(this.value),
              this.statusChanges.emit(this.status)),
            this._parent &&
              !e.onlySelf &&
              this._parent.updateValueAndValidity(e);
        }
        _updateTreeValidity(e = { emitEvent: !0 }) {
          this._forEachChild((t) => t._updateTreeValidity(e)),
            this.updateValueAndValidity({
              onlySelf: !0,
              emitEvent: e.emitEvent,
            });
        }
        _setInitialStatus() {
          this.status = this._allControlsDisabled() ? "DISABLED" : "VALID";
        }
        _runValidator() {
          return this.validator ? this.validator(this) : null;
        }
        _runAsyncValidator(e) {
          if (this.asyncValidator) {
            this.status = "PENDING";
            const t = Yh(this.asyncValidator(this));
            this._asyncValidationSubscription = t.subscribe((t) =>
              this.setErrors(t, { emitEvent: e })
            );
          }
        }
        _cancelExistingSubscription() {
          this._asyncValidationSubscription &&
            this._asyncValidationSubscription.unsubscribe();
        }
        setErrors(e, t = {}) {
          (this.errors = e), this._updateControlsErrors(!1 !== t.emitEvent);
        }
        get(e) {
          return (function (e, t, n) {
            if (null == t) return null;
            if (
              (Array.isArray(t) || (t = t.split(".")),
              Array.isArray(t) && 0 === t.length)
            )
              return null;
            let r = e;
            return (
              t.forEach((e) => {
                r =
                  r instanceof Ad
                    ? r.controls.hasOwnProperty(e)
                      ? r.controls[e]
                      : null
                    : (r instanceof Td && r.at(e)) || null;
              }),
              r
            );
          })(this, e);
        }
        getError(e, t) {
          const n = t ? this.get(t) : this;
          return n && n.errors ? n.errors[e] : null;
        }
        hasError(e, t) {
          return !!this.getError(e, t);
        }
        get root() {
          let e = this;
          for (; e._parent; ) e = e._parent;
          return e;
        }
        _updateControlsErrors(e) {
          (this.status = this._calculateStatus()),
            e && this.statusChanges.emit(this.status),
            this._parent && this._parent._updateControlsErrors(e);
        }
        _initObservables() {
          (this.valueChanges = new r.EventEmitter()),
            (this.statusChanges = new r.EventEmitter());
        }
        _calculateStatus() {
          return this._allControlsDisabled()
            ? "DISABLED"
            : this.errors
            ? "INVALID"
            : this._anyControlsHaveStatus("PENDING")
            ? "PENDING"
            : this._anyControlsHaveStatus("INVALID")
            ? "INVALID"
            : "VALID";
        }
        _anyControlsHaveStatus(e) {
          return this._anyControls((t) => t.status === e);
        }
        _anyControlsDirty() {
          return this._anyControls((e) => e.dirty);
        }
        _anyControlsTouched() {
          return this._anyControls((e) => e.touched);
        }
        _updatePristine(e = {}) {
          (this.pristine = !this._anyControlsDirty()),
            this._parent && !e.onlySelf && this._parent._updatePristine(e);
        }
        _updateTouched(e = {}) {
          (this.touched = this._anyControlsTouched()),
            this._parent && !e.onlySelf && this._parent._updateTouched(e);
        }
        _isBoxedValue(e) {
          return (
            "object" == typeof e &&
            null !== e &&
            2 === Object.keys(e).length &&
            "value" in e &&
            "disabled" in e
          );
        }
        _registerOnCollectionChange(e) {
          this._onCollectionChange = e;
        }
        _setUpdateStrategy(e) {
          Od(e) && null != e.updateOn && (this._updateOn = e.updateOn);
        }
        _parentMarkedDirty(e) {
          return (
            !e &&
            this._parent &&
            this._parent.dirty &&
            !this._parent._anyControlsDirty()
          );
        }
      }
      class Rd extends kd {
        constructor(e = null, t, n) {
          super(Dd(t), Id(n, t)),
            (this._onChange = []),
            this._applyFormState(e),
            this._setUpdateStrategy(t),
            this.updateValueAndValidity({ onlySelf: !0, emitEvent: !1 }),
            this._initObservables();
        }
        setValue(e, t = {}) {
          (this.value = this._pendingValue = e),
            this._onChange.length &&
              !1 !== t.emitModelToViewChange &&
              this._onChange.forEach((e) =>
                e(this.value, !1 !== t.emitViewToModelChange)
              ),
            this.updateValueAndValidity(t);
        }
        patchValue(e, t = {}) {
          this.setValue(e, t);
        }
        reset(e = null, t = {}) {
          this._applyFormState(e),
            this.markAsPristine(t),
            this.markAsUntouched(t),
            this.setValue(this.value, t),
            (this._pendingChange = !1);
        }
        _updateValue() {}
        _anyControls(e) {
          return !1;
        }
        _allControlsDisabled() {
          return this.disabled;
        }
        registerOnChange(e) {
          this._onChange.push(e);
        }
        _clearChangeFns() {
          (this._onChange = []),
            (this._onDisabledChange = []),
            (this._onCollectionChange = () => {});
        }
        registerOnDisabledChange(e) {
          this._onDisabledChange.push(e);
        }
        _forEachChild(e) {}
        _syncPendingControls() {
          return !(
            "submit" !== this.updateOn ||
            (this._pendingDirty && this.markAsDirty(),
            this._pendingTouched && this.markAsTouched(),
            !this._pendingChange) ||
            (this.setValue(this._pendingValue, {
              onlySelf: !0,
              emitModelToViewChange: !1,
            }),
            0)
          );
        }
        _applyFormState(e) {
          this._isBoxedValue(e)
            ? ((this.value = this._pendingValue = e.value),
              e.disabled
                ? this.disable({ onlySelf: !0, emitEvent: !1 })
                : this.enable({ onlySelf: !0, emitEvent: !1 }))
            : (this.value = this._pendingValue = e);
        }
      }
      class Ad extends kd {
        constructor(e, t, n) {
          super(Dd(t), Id(n, t)),
            (this.controls = e),
            this._initObservables(),
            this._setUpdateStrategy(t),
            this._setUpControls(),
            this.updateValueAndValidity({ onlySelf: !0, emitEvent: !1 });
        }
        registerControl(e, t) {
          return this.controls[e]
            ? this.controls[e]
            : ((this.controls[e] = t),
              t.setParent(this),
              t._registerOnCollectionChange(this._onCollectionChange),
              t);
        }
        addControl(e, t) {
          this.registerControl(e, t),
            this.updateValueAndValidity(),
            this._onCollectionChange();
        }
        removeControl(e) {
          this.controls[e] &&
            this.controls[e]._registerOnCollectionChange(() => {}),
            delete this.controls[e],
            this.updateValueAndValidity(),
            this._onCollectionChange();
        }
        setControl(e, t) {
          this.controls[e] &&
            this.controls[e]._registerOnCollectionChange(() => {}),
            delete this.controls[e],
            t && this.registerControl(e, t),
            this.updateValueAndValidity(),
            this._onCollectionChange();
        }
        contains(e) {
          return this.controls.hasOwnProperty(e) && this.controls[e].enabled;
        }
        setValue(e, t = {}) {
          this._checkAllValuesPresent(e),
            Object.keys(e).forEach((n) => {
              this._throwIfControlMissing(n),
                this.controls[n].setValue(e[n], {
                  onlySelf: !0,
                  emitEvent: t.emitEvent,
                });
            }),
            this.updateValueAndValidity(t);
        }
        patchValue(e, t = {}) {
          Object.keys(e).forEach((n) => {
            this.controls[n] &&
              this.controls[n].patchValue(e[n], {
                onlySelf: !0,
                emitEvent: t.emitEvent,
              });
          }),
            this.updateValueAndValidity(t);
        }
        reset(e = {}, t = {}) {
          this._forEachChild((n, r) => {
            n.reset(e[r], { onlySelf: !0, emitEvent: t.emitEvent });
          }),
            this._updatePristine(t),
            this._updateTouched(t),
            this.updateValueAndValidity(t);
        }
        getRawValue() {
          return this._reduceChildren(
            {},
            (e, t, n) => (
              (e[n] = t instanceof Rd ? t.value : t.getRawValue()), e
            )
          );
        }
        _syncPendingControls() {
          let e = this._reduceChildren(
            !1,
            (e, t) => !!t._syncPendingControls() || e
          );
          return e && this.updateValueAndValidity({ onlySelf: !0 }), e;
        }
        _throwIfControlMissing(e) {
          if (!Object.keys(this.controls).length)
            throw new Error(
              "\n        There are no form controls registered with this group yet.  If you're using ngModel,\n        you may want to check next tick (e.g. use setTimeout).\n      "
            );
          if (!this.controls[e])
            throw new Error(`Cannot find form control with name: ${e}.`);
        }
        _forEachChild(e) {
          Object.keys(this.controls).forEach((t) => e(this.controls[t], t));
        }
        _setUpControls() {
          this._forEachChild((e) => {
            e.setParent(this),
              e._registerOnCollectionChange(this._onCollectionChange);
          });
        }
        _updateValue() {
          this.value = this._reduceValue();
        }
        _anyControls(e) {
          let t = !1;
          return (
            this._forEachChild((n, r) => {
              t = t || (this.contains(r) && e(n));
            }),
            t
          );
        }
        _reduceValue() {
          return this._reduceChildren(
            {},
            (e, t, n) => ((t.enabled || this.disabled) && (e[n] = t.value), e)
          );
        }
        _reduceChildren(e, t) {
          let n = e;
          return (
            this._forEachChild((e, r) => {
              n = t(n, e, r);
            }),
            n
          );
        }
        _allControlsDisabled() {
          for (const e of Object.keys(this.controls))
            if (this.controls[e].enabled) return !1;
          return Object.keys(this.controls).length > 0 || this.disabled;
        }
        _checkAllValuesPresent(e) {
          this._forEachChild((t, n) => {
            if (void 0 === e[n])
              throw new Error(
                `Must supply a value for form control with name: '${n}'.`
              );
          });
        }
      }
      class Td extends kd {
        constructor(e, t, n) {
          super(Dd(t), Id(n, t)),
            (this.controls = e),
            this._initObservables(),
            this._setUpdateStrategy(t),
            this._setUpControls(),
            this.updateValueAndValidity({ onlySelf: !0, emitEvent: !1 });
        }
        at(e) {
          return this.controls[e];
        }
        push(e) {
          this.controls.push(e),
            this._registerControl(e),
            this.updateValueAndValidity(),
            this._onCollectionChange();
        }
        insert(e, t) {
          this.controls.splice(e, 0, t),
            this._registerControl(t),
            this.updateValueAndValidity();
        }
        removeAt(e) {
          this.controls[e] &&
            this.controls[e]._registerOnCollectionChange(() => {}),
            this.controls.splice(e, 1),
            this.updateValueAndValidity();
        }
        setControl(e, t) {
          this.controls[e] &&
            this.controls[e]._registerOnCollectionChange(() => {}),
            this.controls.splice(e, 1),
            t && (this.controls.splice(e, 0, t), this._registerControl(t)),
            this.updateValueAndValidity(),
            this._onCollectionChange();
        }
        get length() {
          return this.controls.length;
        }
        setValue(e, t = {}) {
          this._checkAllValuesPresent(e),
            e.forEach((e, n) => {
              this._throwIfControlMissing(n),
                this.at(n).setValue(e, {
                  onlySelf: !0,
                  emitEvent: t.emitEvent,
                });
            }),
            this.updateValueAndValidity(t);
        }
        patchValue(e, t = {}) {
          e.forEach((e, n) => {
            this.at(n) &&
              this.at(n).patchValue(e, {
                onlySelf: !0,
                emitEvent: t.emitEvent,
              });
          }),
            this.updateValueAndValidity(t);
        }
        reset(e = [], t = {}) {
          this._forEachChild((n, r) => {
            n.reset(e[r], { onlySelf: !0, emitEvent: t.emitEvent });
          }),
            this._updatePristine(t),
            this._updateTouched(t),
            this.updateValueAndValidity(t);
        }
        getRawValue() {
          return this.controls.map((e) =>
            e instanceof Rd ? e.value : e.getRawValue()
          );
        }
        clear() {
          this.controls.length < 1 ||
            (this._forEachChild((e) => e._registerOnCollectionChange(() => {})),
            this.controls.splice(0),
            this.updateValueAndValidity());
        }
        _syncPendingControls() {
          let e = this.controls.reduce(
            (e, t) => !!t._syncPendingControls() || e,
            !1
          );
          return e && this.updateValueAndValidity({ onlySelf: !0 }), e;
        }
        _throwIfControlMissing(e) {
          if (!this.controls.length)
            throw new Error(
              "\n        There are no form controls registered with this array yet.  If you're using ngModel,\n        you may want to check next tick (e.g. use setTimeout).\n      "
            );
          if (!this.at(e))
            throw new Error("Cannot find form control at index " + e);
        }
        _forEachChild(e) {
          this.controls.forEach((t, n) => {
            e(t, n);
          });
        }
        _updateValue() {
          this.value = this.controls
            .filter((e) => e.enabled || this.disabled)
            .map((e) => e.value);
        }
        _anyControls(e) {
          return this.controls.some((t) => t.enabled && e(t));
        }
        _setUpControls() {
          this._forEachChild((e) => this._registerControl(e));
        }
        _checkAllValuesPresent(e) {
          this._forEachChild((t, n) => {
            if (void 0 === e[n])
              throw new Error(
                `Must supply a value for form control at index: ${n}.`
              );
          });
        }
        _allControlsDisabled() {
          for (const e of this.controls) if (e.enabled) return !1;
          return this.controls.length > 0 || this.disabled;
        }
        _registerControl(e) {
          e.setParent(this),
            e._registerOnCollectionChange(this._onCollectionChange);
        }
      }
      const Fd = { provide: Bh, useExisting: Object(r.forwardRef)(() => jd) },
        Pd = (() => Promise.resolve(null))();
      let jd = (() => {
          class e extends Bh {
            constructor(e, t) {
              super(),
                (this.submitted = !1),
                (this._directives = []),
                (this.ngSubmit = new r.EventEmitter()),
                (this.form = new Ad({}, wd(e), Cd(t)));
            }
            ngAfterViewInit() {
              this._setUpdateStrategy();
            }
            get formDirective() {
              return this;
            }
            get control() {
              return this.form;
            }
            get path() {
              return [];
            }
            get controls() {
              return this.form.controls;
            }
            addControl(e) {
              Pd.then(() => {
                const t = this._findContainer(e.path);
                (e.control = t.registerControl(e.name, e.control)),
                  gd(e.control, e),
                  e.control.updateValueAndValidity({ emitEvent: !1 }),
                  this._directives.push(e);
              });
            }
            getControl(e) {
              return this.form.get(e.path);
            }
            removeControl(e) {
              Pd.then(() => {
                const t = this._findContainer(e.path);
                t && t.removeControl(e.name), xd(this._directives, e);
              });
            }
            addFormGroup(e) {
              Pd.then(() => {
                const t = this._findContainer(e.path),
                  n = new Ad({});
                yd(n, e),
                  t.registerControl(e.name, n),
                  n.updateValueAndValidity({ emitEvent: !1 });
              });
            }
            removeFormGroup(e) {
              Pd.then(() => {
                const t = this._findContainer(e.path);
                t && t.removeControl(e.name);
              });
            }
            getFormGroup(e) {
              return this.form.get(e.path);
            }
            updateModel(e, t) {
              Pd.then(() => {
                this.form.get(e.path).setValue(t);
              });
            }
            setValue(e) {
              this.control.setValue(e);
            }
            onSubmit(e) {
              return (
                (this.submitted = !0),
                Ed(this.form, this._directives),
                this.ngSubmit.emit(e),
                !1
              );
            }
            onReset() {
              this.resetForm();
            }
            resetForm(e) {
              this.form.reset(e), (this.submitted = !1);
            }
            _setUpdateStrategy() {
              this.options &&
                null != this.options.updateOn &&
                (this.form._updateOn = this.options.updateOn);
            }
            _findContainer(e) {
              return e.pop(), e.length ? this.form.get(e) : this.form;
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(
                r["\u0275\u0275directiveInject"](Gh, 10),
                r["\u0275\u0275directiveInject"](Wh, 10)
              );
            }),
            (e.ɵdir = r["\u0275\u0275defineDirective"]({
              type: e,
              selectors: [
                ["form", 3, "ngNoForm", "", 3, "formGroup", ""],
                ["ng-form"],
                ["", "ngForm", ""],
              ],
              hostBindings: function (e, t) {
                1 & e &&
                  r["\u0275\u0275listener"]("submit", function (e) {
                    return t.onSubmit(e);
                  })("reset", function () {
                    return t.onReset();
                  });
              },
              inputs: { options: ["ngFormOptions", "options"] },
              outputs: { ngSubmit: "ngSubmit" },
              exportAs: ["ngForm"],
              features: [
                r["\u0275\u0275ProvidersFeature"]([Fd]),
                r["\u0275\u0275InheritDefinitionFeature"],
              ],
            })),
            e
          );
        })(),
        Nd = (() => {
          class e extends Bh {
            ngOnInit() {
              this._checkParentType(), this.formDirective.addFormGroup(this);
            }
            ngOnDestroy() {
              this.formDirective && this.formDirective.removeFormGroup(this);
            }
            get control() {
              return this.formDirective.getFormGroup(this);
            }
            get path() {
              return md(
                null == this.name ? this.name : this.name.toString(),
                this._parent
              );
            }
            get formDirective() {
              return this._parent ? this._parent.formDirective : null;
            }
            get validator() {
              return wd(this._validators);
            }
            get asyncValidator() {
              return Cd(this._asyncValidators);
            }
            _checkParentType() {}
          }
          return (
            (e.ɵfac = function (t) {
              return Md(t || e);
            }),
            (e.ɵdir = r["\u0275\u0275defineDirective"]({
              type: e,
              features: [r["\u0275\u0275InheritDefinitionFeature"]],
            })),
            e
          );
        })();
      const Md = r["\u0275\u0275getInheritedFactory"](Nd);
      class Ld {
        static modelParentException() {
          throw new Error(
            `\n      ngModel cannot be used to register form controls with a parent formGroup directive.  Try using\n      formGroup's partner directive "formControlName" instead.  Example:\n\n      ${ld}\n\n      Or, if you'd like to avoid registering this form control, indicate that it's standalone in ngModelOptions:\n\n      Example:\n\n      \n    <div [formGroup]="myGroup">\n       <input formControlName="firstName">\n       <input [(ngModel)]="showMoreControls" [ngModelOptions]="{standalone: true}">\n    </div>\n  `
          );
        }
        static formGroupNameException() {
          throw new Error(
            `\n      ngModel cannot be used to register form controls with a parent formGroupName or formArrayName directive.\n\n      Option 1: Use formControlName instead of ngModel (reactive strategy):\n\n      ${cd}\n\n      Option 2:  Update ngModel's parent be ngModelGroup (template-driven strategy):\n\n      ${ud}`
          );
        }
        static missingNameException() {
          throw new Error(
            'If ngModel is used within a form tag, either the name attribute must be set or the form\n      control must be defined as \'standalone\' in ngModelOptions.\n\n      Example 1: <input [(ngModel)]="person.firstName" name="first">\n      Example 2: <input [(ngModel)]="person.firstName" [ngModelOptions]="{standalone: true}">'
          );
        }
        static modelGroupParentException() {
          throw new Error(
            `\n      ngModelGroup cannot be used with a parent formGroup directive.\n\n      Option 1: Use formGroupName instead of ngModelGroup (reactive strategy):\n\n      ${cd}\n\n      Option 2:  Use a regular form tag instead of the formGroup directive (template-driven strategy):\n\n      ${ud}`
          );
        }
      }
      const Vd = { provide: Bh, useExisting: Object(r.forwardRef)(() => Bd) };
      let Bd = (() => {
        class e extends Nd {
          constructor(e, t, n) {
            super(),
              (this._parent = e),
              (this._validators = t),
              (this._asyncValidators = n);
          }
          _checkParentType() {
            this._parent instanceof e ||
              this._parent instanceof jd ||
              Ld.modelGroupParentException();
          }
        }
        return (
          (e.ɵfac = function (t) {
            return new (t || e)(
              r["\u0275\u0275directiveInject"](Bh, 5),
              r["\u0275\u0275directiveInject"](Gh, 10),
              r["\u0275\u0275directiveInject"](Wh, 10)
            );
          }),
          (e.ɵdir = r["\u0275\u0275defineDirective"]({
            type: e,
            selectors: [["", "ngModelGroup", ""]],
            inputs: { name: ["ngModelGroup", "name"] },
            exportAs: ["ngModelGroup"],
            features: [
              r["\u0275\u0275ProvidersFeature"]([Vd]),
              r["\u0275\u0275InheritDefinitionFeature"],
            ],
          })),
          e
        );
      })();
      const zd = { provide: Hh, useExisting: Object(r.forwardRef)(() => Hd) },
        Ud = (() => Promise.resolve(null))();
      let Hd = (() => {
        class e extends Hh {
          constructor(e, t, n, i) {
            super(),
              (this.control = new Rd()),
              (this._registered = !1),
              (this.update = new r.EventEmitter()),
              (this._parent = e),
              (this._rawValidators = t || []),
              (this._rawAsyncValidators = n || []),
              (this.valueAccessor = (function (e, t) {
                if (!t) return null;
                Array.isArray(t) ||
                  bd(
                    e,
                    "Value accessor was not provided as an array for form control with"
                  );
                let n = void 0,
                  r = void 0,
                  i = void 0;
                return (
                  t.forEach((t) => {
                    var s;
                    t.constructor === Lh
                      ? (n = t)
                      : ((s = t),
                        Sd.some((e) => s.constructor === e)
                          ? (r &&
                              bd(
                                e,
                                "More than one built-in value accessor matches form control with"
                              ),
                            (r = t))
                          : (i &&
                              bd(
                                e,
                                "More than one custom value accessor matches form control with"
                              ),
                            (i = t)));
                  }),
                  i ||
                    r ||
                    n ||
                    (bd(e, "No valid value accessor for form control with"),
                    null)
                );
              })(this, i));
          }
          ngOnChanges(e) {
            this._checkForErrors(),
              this._registered || this._setUpControl(),
              "isDisabled" in e && this._updateDisabled(e),
              (function (e, t) {
                if (!e.hasOwnProperty("model")) return !1;
                const n = e.model;
                return (
                  !!n.isFirstChange() ||
                  !Object(r["\u0275looseIdentical"])(t, n.currentValue)
                );
              })(e, this.viewModel) &&
                (this._updateValue(this.model), (this.viewModel = this.model));
          }
          ngOnDestroy() {
            this.formDirective && this.formDirective.removeControl(this);
          }
          get path() {
            return this._parent ? md(this.name, this._parent) : [this.name];
          }
          get formDirective() {
            return this._parent ? this._parent.formDirective : null;
          }
          get validator() {
            return wd(this._rawValidators);
          }
          get asyncValidator() {
            return Cd(this._rawAsyncValidators);
          }
          viewToModelUpdate(e) {
            (this.viewModel = e), this.update.emit(e);
          }
          _setUpControl() {
            this._setUpdateStrategy(),
              this._isStandalone()
                ? this._setUpStandalone()
                : this.formDirective.addControl(this),
              (this._registered = !0);
          }
          _setUpdateStrategy() {
            this.options &&
              null != this.options.updateOn &&
              (this.control._updateOn = this.options.updateOn);
          }
          _isStandalone() {
            return (
              !this._parent || !(!this.options || !this.options.standalone)
            );
          }
          _setUpStandalone() {
            gd(this.control, this),
              this.control.updateValueAndValidity({ emitEvent: !1 });
          }
          _checkForErrors() {
            this._isStandalone() || this._checkParentType(), this._checkName();
          }
          _checkParentType() {
            !(this._parent instanceof Bd) && this._parent instanceof Nd
              ? Ld.formGroupNameException()
              : this._parent instanceof Bd ||
                this._parent instanceof jd ||
                Ld.modelParentException();
          }
          _checkName() {
            this.options &&
              this.options.name &&
              (this.name = this.options.name),
              this._isStandalone() || this.name || Ld.missingNameException();
          }
          _updateValue(e) {
            Ud.then(() => {
              this.control.setValue(e, { emitViewToModelChange: !1 });
            });
          }
          _updateDisabled(e) {
            const t = e.isDisabled.currentValue,
              n = "" === t || (t && "false" !== t);
            Ud.then(() => {
              n && !this.control.disabled
                ? this.control.disable()
                : !n && this.control.disabled && this.control.enable();
            });
          }
        }
        return (
          (e.ɵfac = function (t) {
            return new (t || e)(
              r["\u0275\u0275directiveInject"](Bh, 9),
              r["\u0275\u0275directiveInject"](Gh, 10),
              r["\u0275\u0275directiveInject"](Wh, 10),
              r["\u0275\u0275directiveInject"](Fh, 10)
            );
          }),
          (e.ɵdir = r["\u0275\u0275defineDirective"]({
            type: e,
            selectors: [
              [
                "",
                "ngModel",
                "",
                3,
                "formControlName",
                "",
                3,
                "formControl",
                "",
              ],
            ],
            inputs: {
              name: "name",
              isDisabled: ["disabled", "isDisabled"],
              model: ["ngModel", "model"],
              options: ["ngModelOptions", "options"],
            },
            outputs: { update: "ngModelChange" },
            exportAs: ["ngModel"],
            features: [
              r["\u0275\u0275ProvidersFeature"]([zd]),
              r["\u0275\u0275InheritDefinitionFeature"],
              r["\u0275\u0275NgOnChangesFeature"],
            ],
          })),
          e
        );
      })();
      const $d = { provide: Bh, useExisting: Object(r.forwardRef)(() => qd) };
      let qd = (() => {
          class e extends Bh {
            constructor(e, t) {
              super(),
                (this._validators = e),
                (this._asyncValidators = t),
                (this.submitted = !1),
                (this.directives = []),
                (this.form = null),
                (this.ngSubmit = new r.EventEmitter());
            }
            ngOnChanges(e) {
              this._checkFormPresent(),
                e.hasOwnProperty("form") &&
                  (this._updateValidators(),
                  this._updateDomValue(),
                  this._updateRegistrations());
            }
            get formDirective() {
              return this;
            }
            get control() {
              return this.form;
            }
            get path() {
              return [];
            }
            addControl(e) {
              const t = this.form.get(e.path);
              return (
                gd(t, e),
                t.updateValueAndValidity({ emitEvent: !1 }),
                this.directives.push(e),
                t
              );
            }
            getControl(e) {
              return this.form.get(e.path);
            }
            removeControl(e) {
              xd(this.directives, e);
            }
            addFormGroup(e) {
              const t = this.form.get(e.path);
              yd(t, e), t.updateValueAndValidity({ emitEvent: !1 });
            }
            removeFormGroup(e) {}
            getFormGroup(e) {
              return this.form.get(e.path);
            }
            addFormArray(e) {
              const t = this.form.get(e.path);
              yd(t, e), t.updateValueAndValidity({ emitEvent: !1 });
            }
            removeFormArray(e) {}
            getFormArray(e) {
              return this.form.get(e.path);
            }
            updateModel(e, t) {
              this.form.get(e.path).setValue(t);
            }
            onSubmit(e) {
              return (
                (this.submitted = !0),
                Ed(this.form, this.directives),
                this.ngSubmit.emit(e),
                !1
              );
            }
            onReset() {
              this.resetForm();
            }
            resetForm(e) {
              this.form.reset(e), (this.submitted = !1);
            }
            _updateDomValue() {
              this.directives.forEach((e) => {
                const t = this.form.get(e.path);
                e.control !== t &&
                  ((function (e, t) {
                    t.valueAccessor.registerOnChange(() => vd(t)),
                      t.valueAccessor.registerOnTouched(() => vd(t)),
                      t._rawValidators.forEach((e) => {
                        e.registerOnValidatorChange &&
                          e.registerOnValidatorChange(null);
                      }),
                      t._rawAsyncValidators.forEach((e) => {
                        e.registerOnValidatorChange &&
                          e.registerOnValidatorChange(null);
                      }),
                      e && e._clearChangeFns();
                  })(e.control, e),
                  t && gd(t, e),
                  (e.control = t));
              }),
                this.form._updateTreeValidity({ emitEvent: !1 });
            }
            _updateRegistrations() {
              this.form._registerOnCollectionChange(() =>
                this._updateDomValue()
              ),
                this._oldForm &&
                  this._oldForm._registerOnCollectionChange(() => {}),
                (this._oldForm = this.form);
            }
            _updateValidators() {
              const e = wd(this._validators);
              this.form.validator = Kh.compose([this.form.validator, e]);
              const t = Cd(this._asyncValidators);
              this.form.asyncValidator = Kh.composeAsync([
                this.form.asyncValidator,
                t,
              ]);
            }
            _checkFormPresent() {
              this.form ||
                class {
                  static controlParentException() {
                    throw new Error(
                      "formControlName must be used with a parent formGroup directive.  You'll want to add a formGroup\n       directive and pass it an existing FormGroup instance (you can create one in your class).\n\n      Example:\n\n      " +
                        ld
                    );
                  }
                  static ngModelGroupException() {
                    throw new Error(
                      `formControlName cannot be used with an ngModelGroup parent. It is only compatible with parents\n       that also have a "form" prefix: formGroupName, formArrayName, or formGroup.\n\n       Option 1:  Update the parent to be formGroupName (reactive form strategy)\n\n        ${cd}\n\n        Option 2: Use ngModel instead of formControlName (template-driven strategy)\n\n        ${ud}`
                    );
                  }
                  static missingFormException() {
                    throw new Error(
                      "formGroup expects a FormGroup instance. Please pass one in.\n\n       Example:\n\n       " +
                        ld
                    );
                  }
                  static groupParentException() {
                    throw new Error(
                      "formGroupName must be used with a parent formGroup directive.  You'll want to add a formGroup\n      directive and pass it an existing FormGroup instance (you can create one in your class).\n\n      Example:\n\n      " +
                        cd
                    );
                  }
                  static arrayParentException() {
                    throw new Error(
                      'formArrayName must be used with a parent formGroup directive.  You\'ll want to add a formGroup\n       directive and pass it an existing FormGroup instance (you can create one in your class).\n\n        Example:\n\n        \n    <div [formGroup]="myGroup">\n      <div formArrayName="cities">\n        <div *ngFor="let city of cityArray.controls; index as i">\n          <input [formControlName]="i">\n        </div>\n      </div>\n    </div>\n\n    In your class:\n\n    this.cityArray = new FormArray([new FormControl(\'SF\')]);\n    this.myGroup = new FormGroup({\n      cities: this.cityArray\n    });'
                    );
                  }
                  static disabledAttrWarning() {
                    console.warn(
                      "\n      It looks like you're using the disabled attribute with a reactive form directive. If you set disabled to true\n      when you set up this control in your component class, the disabled attribute will actually be set in the DOM for\n      you. We recommend using this approach to avoid 'changed after checked' errors.\n       \n      Example: \n      form = new FormGroup({\n        first: new FormControl({value: 'Nancy', disabled: true}, Validators.required),\n        last: new FormControl('Drew', Validators.required)\n      });\n    "
                    );
                  }
                  static ngModelWarning(e) {
                    console.warn(
                      `\n    It looks like you're using ngModel on the same form field as ${e}. \n    Support for using the ngModel input property and ngModelChange event with \n    reactive form directives has been deprecated in Angular v6 and will be removed \n    in Angular v7.\n    \n    For more information on this, see our API docs here:\n    https://angular.io/api/forms/${
                        "formControl" === e
                          ? "FormControlDirective"
                          : "FormControlName"
                      }#use-with-ngmodel\n    `
                    );
                  }
                }.missingFormException();
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(
                r["\u0275\u0275directiveInject"](Gh, 10),
                r["\u0275\u0275directiveInject"](Wh, 10)
              );
            }),
            (e.ɵdir = r["\u0275\u0275defineDirective"]({
              type: e,
              selectors: [["", "formGroup", ""]],
              hostBindings: function (e, t) {
                1 & e &&
                  r["\u0275\u0275listener"]("submit", function (e) {
                    return t.onSubmit(e);
                  })("reset", function () {
                    return t.onReset();
                  });
              },
              inputs: { form: ["formGroup", "form"] },
              outputs: { ngSubmit: "ngSubmit" },
              exportAs: ["ngForm"],
              features: [
                r["\u0275\u0275ProvidersFeature"]([$d]),
                r["\u0275\u0275InheritDefinitionFeature"],
                r["\u0275\u0275NgOnChangesFeature"],
              ],
            })),
            e
          );
        })(),
        Gd = (() => {
          class e {}
          return (
            (e.ɵmod = r["\u0275\u0275defineNgModule"]({ type: e })),
            (e.ɵinj = r["\u0275\u0275defineInjector"]({
              factory: function (t) {
                return new (t || e)();
              },
            })),
            e
          );
        })(),
        Wd = (() => {
          class e {}
          return (
            (e.ɵmod = r["\u0275\u0275defineNgModule"]({ type: e })),
            (e.ɵinj = r["\u0275\u0275defineInjector"]({
              factory: function (t) {
                return new (t || e)();
              },
              providers: [id],
              imports: [Gd],
            })),
            e
          );
        })();
      const Qd = ["trigger"],
        Kd = ["panel"];
      function Zd(e, t) {
        if (
          (1 & e &&
            (r["\u0275\u0275elementStart"](0, "span", 8),
            r["\u0275\u0275text"](1),
            r["\u0275\u0275elementEnd"]()),
          2 & e)
        ) {
          const e = r["\u0275\u0275nextContext"]();
          r["\u0275\u0275advance"](1),
            r["\u0275\u0275textInterpolate"](e.placeholder || "\xa0");
        }
      }
      function Yd(e, t) {
        if (
          (1 & e &&
            (r["\u0275\u0275elementStart"](0, "span"),
            r["\u0275\u0275text"](1),
            r["\u0275\u0275elementEnd"]()),
          2 & e)
        ) {
          const e = r["\u0275\u0275nextContext"](2);
          r["\u0275\u0275advance"](1),
            r["\u0275\u0275textInterpolate"](e.triggerValue || "\xa0");
        }
      }
      function Xd(e, t) {
        1 & e && r["\u0275\u0275projection"](0, 0, ["*ngSwitchCase", "true"]);
      }
      function Jd(e, t) {
        if (
          (1 & e &&
            (r["\u0275\u0275elementStart"](0, "span", 9),
            r["\u0275\u0275template"](1, Yd, 2, 1, "span", 10),
            r["\u0275\u0275template"](2, Xd, 1, 0, void 0, 11),
            r["\u0275\u0275elementEnd"]()),
          2 & e)
        ) {
          const e = r["\u0275\u0275nextContext"]();
          r["\u0275\u0275property"]("ngSwitch", !!e.customTrigger),
            r["\u0275\u0275advance"](2),
            r["\u0275\u0275property"]("ngSwitchCase", !0);
        }
      }
      function ef(e, t) {
        if (1 & e) {
          const e = r["\u0275\u0275getCurrentView"]();
          r["\u0275\u0275elementStart"](0, "div", 12),
            r["\u0275\u0275elementStart"](1, "div", 13, 14),
            r["\u0275\u0275listener"]("@transformPanel.done", function (t) {
              return (
                r["\u0275\u0275restoreView"](e),
                r["\u0275\u0275nextContext"]()._panelDoneAnimatingStream.next(
                  t.toState
                )
              );
            })("keydown", function (t) {
              return (
                r["\u0275\u0275restoreView"](e),
                r["\u0275\u0275nextContext"]()._handleKeydown(t)
              );
            }),
            r["\u0275\u0275projection"](3, 1),
            r["\u0275\u0275elementEnd"](),
            r["\u0275\u0275elementEnd"]();
        }
        if (2 & e) {
          const e = r["\u0275\u0275nextContext"]();
          r["\u0275\u0275property"]("@transformPanelWrap", void 0),
            r["\u0275\u0275advance"](1),
            r["\u0275\u0275classMapInterpolate1"](
              "mat-select-panel ",
              e._getPanelTheme(),
              ""
            ),
            r["\u0275\u0275styleProp"]("transform-origin", e._transformOrigin)(
              "font-size",
              e._triggerFontSize,
              "px"
            ),
            r["\u0275\u0275property"]("ngClass", e.panelClass)(
              "@transformPanel",
              e.multiple ? "showing-multiple" : "showing"
            ),
            r["\u0275\u0275attribute"]("id", e.id + "-panel");
        }
      }
      const tf = [[["mat-select-trigger"]], "*"],
        nf = ["mat-select-trigger", "*"],
        rf = {
          transformPanelWrap: st("transformPanelWrap", [
            ht("* => void", ft("@transformPanel", [dt()], { optional: !0 })),
          ]),
          transformPanel: st("transformPanel", [
            ct(
              "void",
              lt({ transform: "scaleY(0.8)", minWidth: "100%", opacity: 0 })
            ),
            ct(
              "showing",
              lt({
                opacity: 1,
                minWidth: "calc(100% + 32px)",
                transform: "scaleY(1)",
              })
            ),
            ct(
              "showing-multiple",
              lt({
                opacity: 1,
                minWidth: "calc(100% + 64px)",
                transform: "scaleY(1)",
              })
            ),
            ht("void => *", ot("120ms cubic-bezier(0, 0, 0.2, 1)")),
            ht("* => void", ot("100ms 25ms linear", lt({ opacity: 0 }))),
          ]),
        };
      let sf = 0;
      const of = new r.InjectionToken("mat-select-scroll-strategy"),
        af = new r.InjectionToken("MAT_SELECT_CONFIG"),
        lf = {
          provide: of,
          deps: [qu],
          useFactory: function (e) {
            return () => e.scrollStrategies.reposition();
          },
        };
      class cf {
        constructor(e, t) {
          (this.source = e), (this.value = t);
        }
      }
      class uf {
        constructor(e, t, n, r, i) {
          (this._elementRef = e),
            (this._defaultErrorStateMatcher = t),
            (this._parentForm = n),
            (this._parentFormGroup = r),
            (this.ngControl = i);
        }
      }
      const hf = Vr(Br(Mr(zr(uf))));
      let df = (() => {
          class e {}
          return (
            (e.ɵfac = function (t) {
              return new (t || e)();
            }),
            (e.ɵdir = r["\u0275\u0275defineDirective"]({
              type: e,
              selectors: [["mat-select-trigger"]],
            })),
            e
          );
        })(),
        ff = (() => {
          class e extends hf {
            constructor(e, t, n, i, s, o, a, l, c, u, h, d, f, p) {
              super(s, i, a, l, u),
                (this._viewportRuler = e),
                (this._changeDetectorRef = t),
                (this._ngZone = n),
                (this._dir = o),
                (this._parentFormField = c),
                (this.ngControl = u),
                (this._liveAnnouncer = f),
                (this._panelOpen = !1),
                (this._required = !1),
                (this._scrollTop = 0),
                (this._multiple = !1),
                (this._compareWith = (e, t) => e === t),
                (this._uid = "mat-select-" + sf++),
                (this._destroy = new M.a()),
                (this._triggerFontSize = 0),
                (this._onChange = () => {}),
                (this._onTouched = () => {}),
                (this._optionIds = ""),
                (this._transformOrigin = "top"),
                (this._panelDoneAnimatingStream = new M.a()),
                (this._offsetY = 0),
                (this._positions = [
                  {
                    originX: "start",
                    originY: "top",
                    overlayX: "start",
                    overlayY: "top",
                  },
                  {
                    originX: "start",
                    originY: "bottom",
                    overlayX: "start",
                    overlayY: "bottom",
                  },
                ]),
                (this._disableOptionCentering = !1),
                (this._focused = !1),
                (this.controlType = "mat-select"),
                (this.ariaLabel = ""),
                (this.optionSelectionChanges = As(() => {
                  const e = this.options;
                  return e
                    ? e.changes.pipe(
                        rt(e),
                        Ws(() =>
                          Object(Dc.a)(...e.map((e) => e.onSelectionChange))
                        )
                      )
                    : this._ngZone.onStable.asObservable().pipe(
                        fe(1),
                        Ws(() => this.optionSelectionChanges)
                      );
                })),
                (this.openedChange = new r.EventEmitter()),
                (this._openedStream = this.openedChange.pipe(
                  se((e) => e),
                  Object(le.a)(() => {})
                )),
                (this._closedStream = this.openedChange.pipe(
                  se((e) => !e),
                  Object(le.a)(() => {})
                )),
                (this.selectionChange = new r.EventEmitter()),
                (this.valueChange = new r.EventEmitter()),
                this.ngControl && (this.ngControl.valueAccessor = this),
                (this._scrollStrategyFactory = d),
                (this._scrollStrategy = this._scrollStrategyFactory()),
                (this.tabIndex = parseInt(h) || 0),
                (this.id = this.id),
                p &&
                  (null != p.disableOptionCentering &&
                    (this.disableOptionCentering = p.disableOptionCentering),
                  null != p.typeaheadDebounceInterval &&
                    (this.typeaheadDebounceInterval =
                      p.typeaheadDebounceInterval));
            }
            get focused() {
              return this._focused || this._panelOpen;
            }
            get placeholder() {
              return this._placeholder;
            }
            set placeholder(e) {
              (this._placeholder = e), this.stateChanges.next();
            }
            get required() {
              return this._required;
            }
            set required(e) {
              (this._required = ge(e)), this.stateChanges.next();
            }
            get multiple() {
              return this._multiple;
            }
            set multiple(e) {
              if (this._selectionModel)
                throw Error(
                  "Cannot change `multiple` mode of select after initialization."
                );
              this._multiple = ge(e);
            }
            get disableOptionCentering() {
              return this._disableOptionCentering;
            }
            set disableOptionCentering(e) {
              this._disableOptionCentering = ge(e);
            }
            get compareWith() {
              return this._compareWith;
            }
            set compareWith(e) {
              if ("function" != typeof e)
                throw Error("`compareWith` must be a function.");
              (this._compareWith = e),
                this._selectionModel && this._initializeSelection();
            }
            get value() {
              return this._value;
            }
            set value(e) {
              e !== this._value && (this.writeValue(e), (this._value = e));
            }
            get typeaheadDebounceInterval() {
              return this._typeaheadDebounceInterval;
            }
            set typeaheadDebounceInterval(e) {
              this._typeaheadDebounceInterval = _e(e);
            }
            get id() {
              return this._id;
            }
            set id(e) {
              (this._id = e || this._uid), this.stateChanges.next();
            }
            ngOnInit() {
              (this._selectionModel = new Hl(this.multiple)),
                this.stateChanges.next(),
                this._panelDoneAnimatingStream
                  .pipe(
                    (e) => e.lift(new nu(void 0, void 0)),
                    $l(this._destroy)
                  )
                  .subscribe(() => {
                    this.panelOpen
                      ? ((this._scrollTop = 0), this.openedChange.emit(!0))
                      : (this.openedChange.emit(!1),
                        (this.overlayDir.offsetX = 0),
                        this._changeDetectorRef.markForCheck());
                  }),
                this._viewportRuler
                  .change()
                  .pipe($l(this._destroy))
                  .subscribe(() => {
                    this._panelOpen &&
                      ((this._triggerRect = this.trigger.nativeElement.getBoundingClientRect()),
                      this._changeDetectorRef.markForCheck());
                  });
            }
            ngAfterContentInit() {
              this._initKeyManager(),
                this._selectionModel.changed
                  .pipe($l(this._destroy))
                  .subscribe((e) => {
                    e.added.forEach((e) => e.select()),
                      e.removed.forEach((e) => e.deselect());
                  }),
                this.options.changes
                  .pipe(rt(null), $l(this._destroy))
                  .subscribe(() => {
                    this._resetOptions(), this._initializeSelection();
                  });
            }
            ngDoCheck() {
              this.ngControl && this.updateErrorState();
            }
            ngOnChanges(e) {
              e.disabled && this.stateChanges.next(),
                e.typeaheadDebounceInterval &&
                  this._keyManager &&
                  this._keyManager.withTypeAhead(
                    this._typeaheadDebounceInterval
                  );
            }
            ngOnDestroy() {
              this._destroy.next(),
                this._destroy.complete(),
                this.stateChanges.complete();
            }
            toggle() {
              this.panelOpen ? this.close() : this.open();
            }
            open() {
              !this.disabled &&
                this.options &&
                this.options.length &&
                !this._panelOpen &&
                ((this._triggerRect = this.trigger.nativeElement.getBoundingClientRect()),
                (this._triggerFontSize = parseInt(
                  getComputedStyle(this.trigger.nativeElement).fontSize || "0"
                )),
                (this._panelOpen = !0),
                this._keyManager.withHorizontalOrientation(null),
                this._calculateOverlayPosition(),
                this._highlightCorrectOption(),
                this._changeDetectorRef.markForCheck(),
                this._ngZone.onStable
                  .asObservable()
                  .pipe(fe(1))
                  .subscribe(() => {
                    this._triggerFontSize &&
                      this.overlayDir.overlayRef &&
                      this.overlayDir.overlayRef.overlayElement &&
                      (this.overlayDir.overlayRef.overlayElement.style.fontSize =
                        this._triggerFontSize + "px");
                  }));
            }
            close() {
              this._panelOpen &&
                ((this._panelOpen = !1),
                this._keyManager.withHorizontalOrientation(
                  this._isRtl() ? "rtl" : "ltr"
                ),
                this._changeDetectorRef.markForCheck(),
                this._onTouched());
            }
            writeValue(e) {
              this.options && this._setSelectionByValue(e);
            }
            registerOnChange(e) {
              this._onChange = e;
            }
            registerOnTouched(e) {
              this._onTouched = e;
            }
            setDisabledState(e) {
              (this.disabled = e),
                this._changeDetectorRef.markForCheck(),
                this.stateChanges.next();
            }
            get panelOpen() {
              return this._panelOpen;
            }
            get selected() {
              return this.multiple
                ? this._selectionModel.selected
                : this._selectionModel.selected[0];
            }
            get triggerValue() {
              if (this.empty) return "";
              if (this._multiple) {
                const e = this._selectionModel.selected.map((e) => e.viewValue);
                return this._isRtl() && e.reverse(), e.join(", ");
              }
              return this._selectionModel.selected[0].viewValue;
            }
            _isRtl() {
              return !!this._dir && "rtl" === this._dir.value;
            }
            _handleKeydown(e) {
              this.disabled ||
                (this.panelOpen
                  ? this._handleOpenKeydown(e)
                  : this._handleClosedKeydown(e));
            }
            _handleClosedKeydown(e) {
              const t = e.keyCode,
                n = 40 === t || 38 === t || 37 === t || 39 === t,
                r = 13 === t || 32 === t,
                i = this._keyManager;
              if (
                (!i.isTyping() && r && !H(e)) ||
                ((this.multiple || e.altKey) && n)
              )
                e.preventDefault(), this.open();
              else if (!this.multiple) {
                const n = this.selected;
                36 === t || 35 === t
                  ? (36 === t ? i.setFirstItemActive() : i.setLastItemActive(),
                    e.preventDefault())
                  : i.onKeydown(e);
                const r = this.selected;
                r && n !== r && this._liveAnnouncer.announce(r.viewValue, 1e4);
              }
            }
            _handleOpenKeydown(e) {
              const t = this._keyManager,
                n = e.keyCode,
                r = 40 === n || 38 === n,
                i = t.isTyping();
              if (36 === n || 35 === n)
                e.preventDefault(),
                  36 === n ? t.setFirstItemActive() : t.setLastItemActive();
              else if (r && e.altKey) e.preventDefault(), this.close();
              else if (i || (13 !== n && 32 !== n) || !t.activeItem || H(e))
                if (!i && this._multiple && 65 === n && e.ctrlKey) {
                  e.preventDefault();
                  const t = this.options.some(
                    (e) => !e.disabled && !e.selected
                  );
                  this.options.forEach((e) => {
                    e.disabled || (t ? e.select() : e.deselect());
                  });
                } else {
                  const n = t.activeItemIndex;
                  t.onKeydown(e),
                    this._multiple &&
                      r &&
                      e.shiftKey &&
                      t.activeItem &&
                      t.activeItemIndex !== n &&
                      t.activeItem._selectViaInteraction();
                }
              else e.preventDefault(), t.activeItem._selectViaInteraction();
            }
            _onFocus() {
              this.disabled || ((this._focused = !0), this.stateChanges.next());
            }
            _onBlur() {
              (this._focused = !1),
                this.disabled ||
                  this.panelOpen ||
                  (this._onTouched(),
                  this._changeDetectorRef.markForCheck(),
                  this.stateChanges.next());
            }
            _onAttached() {
              this.overlayDir.positionChange.pipe(fe(1)).subscribe(() => {
                this._changeDetectorRef.detectChanges(),
                  this._calculateOverlayOffsetX(),
                  (this.panel.nativeElement.scrollTop = this._scrollTop);
              });
            }
            _getPanelTheme() {
              return this._parentFormField
                ? "mat-" + this._parentFormField.color
                : "";
            }
            get empty() {
              return !this._selectionModel || this._selectionModel.isEmpty();
            }
            _initializeSelection() {
              Promise.resolve().then(() => {
                this._setSelectionByValue(
                  this.ngControl ? this.ngControl.value : this._value
                ),
                  this.stateChanges.next();
              });
            }
            _setSelectionByValue(e) {
              if (this.multiple && e) {
                if (!Array.isArray(e))
                  throw Error(
                    "Value must be an array in multiple-selection mode."
                  );
                this._selectionModel.clear(),
                  e.forEach((e) => this._selectValue(e)),
                  this._sortValues();
              } else {
                this._selectionModel.clear();
                const t = this._selectValue(e);
                t
                  ? this._keyManager.setActiveItem(t)
                  : this.panelOpen || this._keyManager.setActiveItem(-1);
              }
              this._changeDetectorRef.markForCheck();
            }
            _selectValue(e) {
              const t = this.options.find((t) => {
                try {
                  return null != t.value && this._compareWith(t.value, e);
                } catch (n) {
                  return Object(r.isDevMode)() && console.warn(n), !1;
                }
              });
              return t && this._selectionModel.select(t), t;
            }
            _initKeyManager() {
              (this._keyManager = new Ve(this.options)
                .withTypeAhead(this._typeaheadDebounceInterval)
                .withVerticalOrientation()
                .withHorizontalOrientation(this._isRtl() ? "rtl" : "ltr")
                .withAllowedModifierKeys(["shiftKey"])),
                this._keyManager.tabOut
                  .pipe($l(this._destroy))
                  .subscribe(() => {
                    this.panelOpen &&
                      (!this.multiple &&
                        this._keyManager.activeItem &&
                        this._keyManager.activeItem._selectViaInteraction(),
                      this.focus(),
                      this.close());
                  }),
                this._keyManager.change
                  .pipe($l(this._destroy))
                  .subscribe(() => {
                    this._panelOpen && this.panel
                      ? this._scrollActiveOptionIntoView()
                      : this._panelOpen ||
                        this.multiple ||
                        !this._keyManager.activeItem ||
                        this._keyManager.activeItem._selectViaInteraction();
                  });
            }
            _resetOptions() {
              const e = Object(Dc.a)(this.options.changes, this._destroy);
              this.optionSelectionChanges.pipe($l(e)).subscribe((e) => {
                this._onSelect(e.source, e.isUserInput),
                  e.isUserInput &&
                    !this.multiple &&
                    this._panelOpen &&
                    (this.close(), this.focus());
              }),
                Object(Dc.a)(...this.options.map((e) => e._stateChanges))
                  .pipe($l(e))
                  .subscribe(() => {
                    this._changeDetectorRef.markForCheck(),
                      this.stateChanges.next();
                  }),
                this._setOptionIds();
            }
            _onSelect(e, t) {
              const n = this._selectionModel.isSelected(e);
              null != e.value || this._multiple
                ? (n !== e.selected &&
                    (e.selected
                      ? this._selectionModel.select(e)
                      : this._selectionModel.deselect(e)),
                  t && this._keyManager.setActiveItem(e),
                  this.multiple && (this._sortValues(), t && this.focus()))
                : (e.deselect(),
                  this._selectionModel.clear(),
                  this._propagateChanges(e.value)),
                n !== this._selectionModel.isSelected(e) &&
                  this._propagateChanges(),
                this.stateChanges.next();
            }
            _sortValues() {
              if (this.multiple) {
                const e = this.options.toArray();
                this._selectionModel.sort((t, n) =>
                  this.sortComparator
                    ? this.sortComparator(t, n, e)
                    : e.indexOf(t) - e.indexOf(n)
                ),
                  this.stateChanges.next();
              }
            }
            _propagateChanges(e) {
              let t = null;
              (t = this.multiple
                ? this.selected.map((e) => e.value)
                : this.selected
                ? this.selected.value
                : e),
                (this._value = t),
                this.valueChange.emit(t),
                this._onChange(t),
                this.selectionChange.emit(new cf(this, t)),
                this._changeDetectorRef.markForCheck();
            }
            _setOptionIds() {
              this._optionIds = this.options.map((e) => e.id).join(" ");
            }
            _highlightCorrectOption() {
              this._keyManager &&
                (this.empty
                  ? this._keyManager.setFirstItemActive()
                  : this._keyManager.setActiveItem(
                      this._selectionModel.selected[0]
                    ));
            }
            _scrollActiveOptionIntoView() {
              const e = this._keyManager.activeItemIndex || 0,
                t = ui(e, this.options, this.optionGroups);
              this.panel.nativeElement.scrollTop = (function (e, t, n, r) {
                const i = e * t;
                return i < n
                  ? i
                  : i + t > n + 256
                  ? Math.max(0, i - 256 + t)
                  : n;
              })(
                e + t,
                this._getItemHeight(),
                this.panel.nativeElement.scrollTop
              );
            }
            focus(e) {
              this._elementRef.nativeElement.focus(e);
            }
            _getOptionIndex(e) {
              return this.options.reduce(
                (t, n, r) => (void 0 !== t ? t : e === n ? r : void 0),
                void 0
              );
            }
            _calculateOverlayPosition() {
              const e = this._getItemHeight(),
                t = this._getItemCount(),
                n = Math.min(t * e, 256),
                r = t * e - n;
              let i = this.empty
                ? 0
                : this._getOptionIndex(this._selectionModel.selected[0]);
              i += ui(i, this.options, this.optionGroups);
              const s = n / 2;
              (this._scrollTop = this._calculateOverlayScroll(i, s, r)),
                (this._offsetY = this._calculateOverlayOffsetY(i, s, r)),
                this._checkOverlayWithinViewport(r);
            }
            _calculateOverlayScroll(e, t, n) {
              const r = this._getItemHeight();
              return Math.min(Math.max(0, r * e - t + r / 2), n);
            }
            _getAriaLabel() {
              return this.ariaLabelledby
                ? null
                : this.ariaLabel || this.placeholder;
            }
            _getAriaLabelledby() {
              return this.ariaLabelledby
                ? this.ariaLabelledby
                : (this._parentFormField &&
                    this._parentFormField._hasFloatingLabel() &&
                    !this._getAriaLabel() &&
                    this._parentFormField._labelId) ||
                    null;
            }
            _getAriaActiveDescendant() {
              return this.panelOpen &&
                this._keyManager &&
                this._keyManager.activeItem
                ? this._keyManager.activeItem.id
                : null;
            }
            _calculateOverlayOffsetX() {
              const e = this.overlayDir.overlayRef.overlayElement.getBoundingClientRect(),
                t = this._viewportRuler.getViewportSize(),
                n = this._isRtl(),
                r = this.multiple ? 56 : 32;
              let i;
              if (this.multiple) i = 40;
              else {
                let e = this._selectionModel.selected[0] || this.options.first;
                i = e && e.group ? 32 : 16;
              }
              n || (i *= -1);
              const s = 0 - (e.left + i - (n ? r : 0)),
                o = e.right + i - t.width + (n ? 0 : r);
              s > 0 ? (i += s + 8) : o > 0 && (i -= o + 8),
                (this.overlayDir.offsetX = Math.round(i)),
                this.overlayDir.overlayRef.updatePosition();
            }
            _calculateOverlayOffsetY(e, t, n) {
              const r = this._getItemHeight(),
                i = (r - this._triggerRect.height) / 2,
                s = Math.floor(256 / r);
              let o;
              return this._disableOptionCentering
                ? 0
                : ((o =
                    0 === this._scrollTop
                      ? e * r
                      : this._scrollTop === n
                      ? (e - (this._getItemCount() - s)) * r +
                        (r - ((this._getItemCount() * r - 256) % r))
                      : t - r / 2),
                  Math.round(-1 * o - i));
            }
            _checkOverlayWithinViewport(e) {
              const t = this._getItemHeight(),
                n = this._viewportRuler.getViewportSize(),
                r = this._triggerRect.top - 8,
                i = n.height - this._triggerRect.bottom - 8,
                s = Math.abs(this._offsetY),
                o =
                  Math.min(this._getItemCount() * t, 256) -
                  s -
                  this._triggerRect.height;
              o > i
                ? this._adjustPanelUp(o, i)
                : s > r
                ? this._adjustPanelDown(s, r, e)
                : (this._transformOrigin = this._getOriginBasedOnOption());
            }
            _adjustPanelUp(e, t) {
              const n = Math.round(e - t);
              (this._scrollTop -= n),
                (this._offsetY -= n),
                (this._transformOrigin = this._getOriginBasedOnOption()),
                this._scrollTop <= 0 &&
                  ((this._scrollTop = 0),
                  (this._offsetY = 0),
                  (this._transformOrigin = "50% bottom 0px"));
            }
            _adjustPanelDown(e, t, n) {
              const r = Math.round(e - t);
              if (
                ((this._scrollTop += r),
                (this._offsetY += r),
                (this._transformOrigin = this._getOriginBasedOnOption()),
                this._scrollTop >= n)
              )
                return (
                  (this._scrollTop = n),
                  (this._offsetY = 0),
                  void (this._transformOrigin = "50% top 0px")
                );
            }
            _getOriginBasedOnOption() {
              const e = this._getItemHeight(),
                t = (e - this._triggerRect.height) / 2;
              return `50% ${Math.abs(this._offsetY) - t + e / 2}px 0px`;
            }
            _getItemCount() {
              return this.options.length + this.optionGroups.length;
            }
            _getItemHeight() {
              return 3 * this._triggerFontSize;
            }
            setDescribedByIds(e) {
              this._ariaDescribedby = e.join(" ");
            }
            onContainerClick() {
              this.focus(), this.open();
            }
            get shouldLabelFloat() {
              return this._panelOpen || !this.empty;
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(
                r["\u0275\u0275directiveInject"](uu),
                r["\u0275\u0275directiveInject"](r.ChangeDetectorRef),
                r["\u0275\u0275directiveInject"](r.NgZone),
                r["\u0275\u0275directiveInject"](Hr),
                r["\u0275\u0275directiveInject"](r.ElementRef),
                r["\u0275\u0275directiveInject"](Ye, 8),
                r["\u0275\u0275directiveInject"](jd, 8),
                r["\u0275\u0275directiveInject"](qd, 8),
                r["\u0275\u0275directiveInject"](Rh, 8),
                r["\u0275\u0275directiveInject"](Hh, 10),
                r["\u0275\u0275injectAttribute"]("tabindex"),
                r["\u0275\u0275directiveInject"](of),
                r["\u0275\u0275directiveInject"](Ue),
                r["\u0275\u0275directiveInject"](af, 8)
              );
            }),
            (e.ɵcmp = r["\u0275\u0275defineComponent"]({
              type: e,
              selectors: [["mat-select"]],
              contentQueries: function (e, t, n) {
                var i;
                1 & e &&
                  (r["\u0275\u0275contentQuery"](n, df, !0),
                  r["\u0275\u0275contentQuery"](n, ci, !0),
                  r["\u0275\u0275contentQuery"](n, ii, !0)),
                  2 & e &&
                    (r["\u0275\u0275queryRefresh"](
                      (i = r["\u0275\u0275loadQuery"]())
                    ) && (t.customTrigger = i.first),
                    r["\u0275\u0275queryRefresh"](
                      (i = r["\u0275\u0275loadQuery"]())
                    ) && (t.options = i),
                    r["\u0275\u0275queryRefresh"](
                      (i = r["\u0275\u0275loadQuery"]())
                    ) && (t.optionGroups = i));
              },
              viewQuery: function (e, t) {
                var n;
                1 & e &&
                  (r["\u0275\u0275viewQuery"](Qd, !0),
                  r["\u0275\u0275viewQuery"](Kd, !0),
                  r["\u0275\u0275viewQuery"](Ku, !0)),
                  2 & e &&
                    (r["\u0275\u0275queryRefresh"](
                      (n = r["\u0275\u0275loadQuery"]())
                    ) && (t.trigger = n.first),
                    r["\u0275\u0275queryRefresh"](
                      (n = r["\u0275\u0275loadQuery"]())
                    ) && (t.panel = n.first),
                    r["\u0275\u0275queryRefresh"](
                      (n = r["\u0275\u0275loadQuery"]())
                    ) && (t.overlayDir = n.first));
              },
              hostAttrs: ["role", "listbox", 1, "mat-select"],
              hostVars: 19,
              hostBindings: function (e, t) {
                1 & e &&
                  r["\u0275\u0275listener"]("keydown", function (e) {
                    return t._handleKeydown(e);
                  })("focus", function () {
                    return t._onFocus();
                  })("blur", function () {
                    return t._onBlur();
                  }),
                  2 & e &&
                    (r["\u0275\u0275attribute"]("id", t.id)(
                      "tabindex",
                      t.tabIndex
                    )("aria-label", t._getAriaLabel())(
                      "aria-labelledby",
                      t._getAriaLabelledby()
                    )("aria-required", t.required.toString())(
                      "aria-disabled",
                      t.disabled.toString()
                    )("aria-invalid", t.errorState)(
                      "aria-owns",
                      t.panelOpen ? t._optionIds : null
                    )("aria-multiselectable", t.multiple)(
                      "aria-describedby",
                      t._ariaDescribedby || null
                    )("aria-activedescendant", t._getAriaActiveDescendant()),
                    r["\u0275\u0275classProp"](
                      "mat-select-disabled",
                      t.disabled
                    )("mat-select-invalid", t.errorState)(
                      "mat-select-required",
                      t.required
                    )("mat-select-empty", t.empty));
              },
              inputs: {
                disabled: "disabled",
                disableRipple: "disableRipple",
                tabIndex: "tabIndex",
                ariaLabel: ["aria-label", "ariaLabel"],
                id: "id",
                disableOptionCentering: "disableOptionCentering",
                typeaheadDebounceInterval: "typeaheadDebounceInterval",
                placeholder: "placeholder",
                required: "required",
                multiple: "multiple",
                compareWith: "compareWith",
                value: "value",
                panelClass: "panelClass",
                ariaLabelledby: ["aria-labelledby", "ariaLabelledby"],
                errorStateMatcher: "errorStateMatcher",
                sortComparator: "sortComparator",
              },
              outputs: {
                openedChange: "openedChange",
                _openedStream: "opened",
                _closedStream: "closed",
                selectionChange: "selectionChange",
                valueChange: "valueChange",
              },
              exportAs: ["matSelect"],
              features: [
                r["\u0275\u0275ProvidersFeature"]([
                  { provide: yh, useExisting: e },
                  { provide: li, useExisting: e },
                ]),
                r["\u0275\u0275InheritDefinitionFeature"],
                r["\u0275\u0275NgOnChangesFeature"],
              ],
              ngContentSelectors: nf,
              decls: 9,
              vars: 9,
              consts: [
                [
                  "cdk-overlay-origin",
                  "",
                  "aria-hidden",
                  "true",
                  1,
                  "mat-select-trigger",
                  3,
                  "click",
                ],
                ["origin", "cdkOverlayOrigin", "trigger", ""],
                [1, "mat-select-value", 3, "ngSwitch"],
                ["class", "mat-select-placeholder", 4, "ngSwitchCase"],
                [
                  "class",
                  "mat-select-value-text",
                  3,
                  "ngSwitch",
                  4,
                  "ngSwitchCase",
                ],
                [1, "mat-select-arrow-wrapper"],
                [1, "mat-select-arrow"],
                [
                  "cdk-connected-overlay",
                  "",
                  "cdkConnectedOverlayLockPosition",
                  "",
                  "cdkConnectedOverlayHasBackdrop",
                  "",
                  "cdkConnectedOverlayBackdropClass",
                  "cdk-overlay-transparent-backdrop",
                  3,
                  "cdkConnectedOverlayScrollStrategy",
                  "cdkConnectedOverlayOrigin",
                  "cdkConnectedOverlayOpen",
                  "cdkConnectedOverlayPositions",
                  "cdkConnectedOverlayMinWidth",
                  "cdkConnectedOverlayOffsetY",
                  "backdropClick",
                  "attach",
                  "detach",
                ],
                [1, "mat-select-placeholder"],
                [1, "mat-select-value-text", 3, "ngSwitch"],
                [4, "ngSwitchDefault"],
                [4, "ngSwitchCase"],
                [1, "mat-select-panel-wrap"],
                [3, "ngClass", "keydown"],
                ["panel", ""],
              ],
              template: function (e, t) {
                if (
                  (1 & e &&
                    (r["\u0275\u0275projectionDef"](tf),
                    r["\u0275\u0275elementStart"](0, "div", 0, 1),
                    r["\u0275\u0275listener"]("click", function () {
                      return t.toggle();
                    }),
                    r["\u0275\u0275elementStart"](3, "div", 2),
                    r["\u0275\u0275template"](4, Zd, 2, 1, "span", 3),
                    r["\u0275\u0275template"](5, Jd, 3, 2, "span", 4),
                    r["\u0275\u0275elementEnd"](),
                    r["\u0275\u0275elementStart"](6, "div", 5),
                    r["\u0275\u0275element"](7, "div", 6),
                    r["\u0275\u0275elementEnd"](),
                    r["\u0275\u0275elementEnd"](),
                    r["\u0275\u0275template"](8, ef, 4, 11, "ng-template", 7),
                    r["\u0275\u0275listener"]("backdropClick", function () {
                      return t.close();
                    })("attach", function () {
                      return t._onAttached();
                    })("detach", function () {
                      return t.close();
                    })),
                  2 & e)
                ) {
                  const e = r["\u0275\u0275reference"](1);
                  r["\u0275\u0275advance"](3),
                    r["\u0275\u0275property"]("ngSwitch", t.empty),
                    r["\u0275\u0275advance"](1),
                    r["\u0275\u0275property"]("ngSwitchCase", !0),
                    r["\u0275\u0275advance"](1),
                    r["\u0275\u0275property"]("ngSwitchCase", !1),
                    r["\u0275\u0275advance"](3),
                    r["\u0275\u0275property"](
                      "cdkConnectedOverlayScrollStrategy",
                      t._scrollStrategy
                    )("cdkConnectedOverlayOrigin", e)(
                      "cdkConnectedOverlayOpen",
                      t.panelOpen
                    )("cdkConnectedOverlayPositions", t._positions)(
                      "cdkConnectedOverlayMinWidth",
                      null == t._triggerRect ? null : t._triggerRect.width
                    )("cdkConnectedOverlayOffsetY", t._offsetY);
                }
              },
              directives: [
                Qu,
                i.NgSwitch,
                i.NgSwitchCase,
                Ku,
                i.NgSwitchDefault,
                i.NgClass,
              ],
              styles: [
                ".mat-select{display:inline-block;width:100%;outline:none}.mat-select-trigger{display:inline-table;cursor:pointer;position:relative;box-sizing:border-box}.mat-select-disabled .mat-select-trigger{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-select-value{display:table-cell;max-width:0;width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.mat-select-value-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-select-arrow-wrapper{display:table-cell;vertical-align:middle}.mat-form-field-appearance-fill .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-outline .mat-select-arrow-wrapper{transform:translateY(-25%)}.mat-form-field-appearance-standard.mat-form-field-has-label .mat-select:not(.mat-select-empty) .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:none}.mat-select-arrow{width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;margin:0 4px}.mat-select-panel-wrap{flex-basis:100%}.mat-select-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;padding-top:0;padding-bottom:0;max-height:256px;min-width:100%;border-radius:4px}.cdk-high-contrast-active .mat-select-panel{outline:solid 1px}.mat-select-panel .mat-optgroup-label,.mat-select-panel .mat-option{font-size:inherit;line-height:3em;height:3em}.mat-form-field-type-mat-select:not(.mat-form-field-disabled) .mat-form-field-flex{cursor:pointer}.mat-form-field-type-mat-select .mat-form-field-label{width:calc(100% - 18px)}.mat-select-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable .mat-select-placeholder{transition:none}.mat-form-field-hide-placeholder .mat-select-placeholder{color:transparent;-webkit-text-fill-color:transparent;transition:none;display:block}\n",
              ],
              encapsulation: 2,
              data: { animation: [rf.transformPanelWrap, rf.transformPanel] },
              changeDetection: 0,
            })),
            e
          );
        })(),
        pf = (() => {
          class e {}
          return (
            (e.ɵmod = r["\u0275\u0275defineNgModule"]({ type: e })),
            (e.ɵinj = r["\u0275\u0275defineInjector"]({
              factory: function (t) {
                return new (t || e)();
              },
              providers: [lf],
              imports: [[i.CommonModule, Yu, hi, Nr], hu, Th, hi, Nr],
            })),
            e
          );
        })();
      class mf {
        constructor(e) {
          this.total = e;
        }
        call(e, t) {
          return t.subscribe(new gf(e, this.total));
        }
      }
      class gf extends $.a {
        constructor(e, t) {
          super(e), (this.total = t), (this.count = 0);
        }
        _next(e) {
          ++this.count > this.total && this.destination.next(e);
        }
      }
      const _f = new Set();
      let yf,
        vf = (() => {
          class e {
            constructor(e) {
              (this._platform = e),
                (this._matchMedia =
                  this._platform.isBrowser && window.matchMedia
                    ? window.matchMedia.bind(window)
                    : bf);
            }
            matchMedia(e) {
              return (
                this._platform.WEBKIT &&
                  (function (e) {
                    if (!_f.has(e))
                      try {
                        yf ||
                          ((yf = document.createElement("style")),
                          yf.setAttribute("type", "text/css"),
                          document.head.appendChild(yf)),
                          yf.sheet &&
                            (yf.sheet.insertRule(
                              `@media ${e} {.fx-query-test{ }}`,
                              0
                            ),
                            _f.add(e));
                      } catch (t) {
                        console.error(t);
                      }
                  })(e),
                this._matchMedia(e)
              );
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(r["\u0275\u0275inject"](Se));
            }),
            (e.ɵprov = Object(r["\u0275\u0275defineInjectable"])({
              factory: function () {
                return new e(Object(r["\u0275\u0275inject"])(Se));
              },
              token: e,
              providedIn: "root",
            })),
            e
          );
        })();
      function bf(e) {
        return {
          matches: "all" === e || "" === e,
          media: e,
          addListener: () => {},
          removeListener: () => {},
        };
      }
      let wf = (() => {
        class e {
          constructor(e, t) {
            (this._mediaMatcher = e),
              (this._zone = t),
              (this._queries = new Map()),
              (this._destroySubject = new M.a());
          }
          ngOnDestroy() {
            this._destroySubject.next(), this._destroySubject.complete();
          }
          isMatched(e) {
            return Cf(ye(e)).some((e) => this._registerQuery(e).mql.matches);
          }
          observe(e) {
            let t = Os(Cf(ye(e)).map((e) => this._registerQuery(e).observable));
            return (
              (t = nt(
                t.pipe(fe(1)),
                t.pipe((e) => e.lift(new mf(1)), te(0))
              )),
              t.pipe(
                Object(le.a)((e) => {
                  const t = { matches: !1, breakpoints: {} };
                  return (
                    e.forEach((e) => {
                      (t.matches = t.matches || e.matches),
                        (t.breakpoints[e.query] = e.matches);
                    }),
                    t
                  );
                })
              )
            );
          }
          _registerQuery(e) {
            if (this._queries.has(e)) return this._queries.get(e);
            const t = this._mediaMatcher.matchMedia(e),
              n = {
                observable: new ue.a((e) => {
                  const n = (t) => this._zone.run(() => e.next(t));
                  return (
                    t.addListener(n),
                    () => {
                      t.removeListener(n);
                    }
                  );
                }).pipe(
                  rt(t),
                  Object(le.a)((t) => ({ query: e, matches: t.matches })),
                  $l(this._destroySubject)
                ),
                mql: t,
              };
            return this._queries.set(e, n), n;
          }
        }
        return (
          (e.ɵfac = function (t) {
            return new (t || e)(
              r["\u0275\u0275inject"](vf),
              r["\u0275\u0275inject"](r.NgZone)
            );
          }),
          (e.ɵprov = Object(r["\u0275\u0275defineInjectable"])({
            factory: function () {
              return new e(
                Object(r["\u0275\u0275inject"])(vf),
                Object(r["\u0275\u0275inject"])(r.NgZone)
              );
            },
            token: e,
            providedIn: "root",
          })),
          e
        );
      })();
      function Cf(e) {
        return e
          .map((e) => e.split(","))
          .reduce((e, t) => e.concat(t))
          .map((e) => e.trim());
      }
      const Sf = {
          tooltipState: st("state", [
            ct(
              "initial, void, hidden",
              lt({ opacity: 0, transform: "scale(0)" })
            ),
            ct("visible", lt({ transform: "scale(1)" })),
            ht(
              "* => visible",
              ot(
                "200ms cubic-bezier(0, 0, 0.2, 1)",
                ut([
                  lt({ opacity: 0, transform: "scale(0)", offset: 0 }),
                  lt({ opacity: 0.5, transform: "scale(0.99)", offset: 0.5 }),
                  lt({ opacity: 1, transform: "scale(1)", offset: 1 }),
                ])
              )
            ),
            ht(
              "* => hidden",
              ot("100ms cubic-bezier(0, 0, 0.2, 1)", lt({ opacity: 0 }))
            ),
          ]),
        },
        Ef = ke({ passive: !0 });
      function xf(e) {
        return Error(`Tooltip position "${e}" is invalid.`);
      }
      const Df = new r.InjectionToken("mat-tooltip-scroll-strategy"),
        If = {
          provide: Df,
          deps: [qu],
          useFactory: function (e) {
            return () => e.scrollStrategies.reposition({ scrollThrottle: 20 });
          },
        },
        Of = new r.InjectionToken("mat-tooltip-default-options", {
          providedIn: "root",
          factory: function () {
            return { showDelay: 0, hideDelay: 0, touchendHideDelay: 1500 };
          },
        });
      let kf = (() => {
          class e {
            constructor(e, t, n, r, i, s, o, a, l, c, u, h) {
              (this._overlay = e),
                (this._elementRef = t),
                (this._scrollDispatcher = n),
                (this._viewContainerRef = r),
                (this._ngZone = i),
                (this._platform = s),
                (this._ariaDescriber = o),
                (this._focusMonitor = a),
                (this._dir = c),
                (this._defaultOptions = u),
                (this._position = "below"),
                (this._disabled = !1),
                (this.showDelay = this._defaultOptions.showDelay),
                (this.hideDelay = this._defaultOptions.hideDelay),
                (this.touchGestures = "auto"),
                (this._message = ""),
                (this._passiveListeners = new Map()),
                (this._destroyed = new M.a()),
                (this._handleKeydown = (e) => {
                  this._isTooltipVisible() &&
                    27 === e.keyCode &&
                    !H(e) &&
                    (e.preventDefault(),
                    e.stopPropagation(),
                    this._ngZone.run(() => this.hide(0)));
                }),
                (this._scrollStrategy = l),
                u &&
                  (u.position && (this.position = u.position),
                  u.touchGestures && (this.touchGestures = u.touchGestures)),
                a
                  .monitor(t)
                  .pipe($l(this._destroyed))
                  .subscribe((e) => {
                    e
                      ? "keyboard" === e && i.run(() => this.show())
                      : i.run(() => this.hide(0));
                  }),
                i.runOutsideAngular(() => {
                  t.nativeElement.addEventListener(
                    "keydown",
                    this._handleKeydown
                  );
                });
            }
            get position() {
              return this._position;
            }
            set position(e) {
              e !== this._position &&
                ((this._position = e),
                this._overlayRef &&
                  (this._updatePosition(),
                  this._tooltipInstance && this._tooltipInstance.show(0),
                  this._overlayRef.updatePosition()));
            }
            get disabled() {
              return this._disabled;
            }
            set disabled(e) {
              (this._disabled = ge(e)), this._disabled && this.hide(0);
            }
            get message() {
              return this._message;
            }
            set message(e) {
              this._ariaDescriber.removeDescription(
                this._elementRef.nativeElement,
                this._message
              ),
                (this._message = null != e ? ("" + e).trim() : ""),
                !this._message && this._isTooltipVisible()
                  ? this.hide(0)
                  : (this._updateTooltipMessage(),
                    this._ngZone.runOutsideAngular(() => {
                      Promise.resolve().then(() => {
                        this._ariaDescriber.describe(
                          this._elementRef.nativeElement,
                          this.message
                        );
                      });
                    }));
            }
            get tooltipClass() {
              return this._tooltipClass;
            }
            set tooltipClass(e) {
              (this._tooltipClass = e),
                this._tooltipInstance &&
                  this._setTooltipClass(this._tooltipClass);
            }
            ngOnInit() {
              this._setupPointerEvents();
            }
            ngOnDestroy() {
              const e = this._elementRef.nativeElement;
              clearTimeout(this._touchstartTimeout),
                this._overlayRef &&
                  (this._overlayRef.dispose(), (this._tooltipInstance = null)),
                e.removeEventListener("keydown", this._handleKeydown),
                this._passiveListeners.forEach((t, n) => {
                  e.removeEventListener(n, t, Ef);
                }),
                this._passiveListeners.clear(),
                this._destroyed.next(),
                this._destroyed.complete(),
                this._ariaDescriber.removeDescription(e, this.message),
                this._focusMonitor.stopMonitoring(e);
            }
            show(e = this.showDelay) {
              if (
                this.disabled ||
                !this.message ||
                (this._isTooltipVisible() &&
                  !this._tooltipInstance._showTimeoutId &&
                  !this._tooltipInstance._hideTimeoutId)
              )
                return;
              const t = this._createOverlay();
              this._detach(),
                (this._portal =
                  this._portal || new mu(Rf, this._viewContainerRef)),
                (this._tooltipInstance = t.attach(this._portal).instance),
                this._tooltipInstance
                  .afterHidden()
                  .pipe($l(this._destroyed))
                  .subscribe(() => this._detach()),
                this._setTooltipClass(this._tooltipClass),
                this._updateTooltipMessage(),
                this._tooltipInstance.show(e);
            }
            hide(e = this.hideDelay) {
              this._tooltipInstance && this._tooltipInstance.hide(e);
            }
            toggle() {
              this._isTooltipVisible() ? this.hide() : this.show();
            }
            _isTooltipVisible() {
              return (
                !!this._tooltipInstance && this._tooltipInstance.isVisible()
              );
            }
            _createOverlay() {
              if (this._overlayRef) return this._overlayRef;
              const e = this._scrollDispatcher.getAncestorScrollContainers(
                  this._elementRef
                ),
                t = this._overlay
                  .position()
                  .flexibleConnectedTo(this._elementRef)
                  .withTransformOriginOn(".mat-tooltip")
                  .withFlexibleDimensions(!1)
                  .withViewportMargin(8)
                  .withScrollableContainers(e);
              return (
                t.positionChanges.pipe($l(this._destroyed)).subscribe((e) => {
                  this._tooltipInstance &&
                    e.scrollableViewProperties.isOverlayClipped &&
                    this._tooltipInstance.isVisible() &&
                    this._ngZone.run(() => this.hide(0));
                }),
                (this._overlayRef = this._overlay.create({
                  direction: this._dir,
                  positionStrategy: t,
                  panelClass: "mat-tooltip-panel",
                  scrollStrategy: this._scrollStrategy(),
                })),
                this._updatePosition(),
                this._overlayRef
                  .detachments()
                  .pipe($l(this._destroyed))
                  .subscribe(() => this._detach()),
                this._overlayRef
              );
            }
            _detach() {
              this._overlayRef &&
                this._overlayRef.hasAttached() &&
                this._overlayRef.detach(),
                (this._tooltipInstance = null);
            }
            _updatePosition() {
              const e = this._overlayRef.getConfig().positionStrategy,
                t = this._getOrigin(),
                n = this._getOverlayPosition();
              e.withPositions([
                Object.assign(Object.assign({}, t.main), n.main),
                Object.assign(Object.assign({}, t.fallback), n.fallback),
              ]);
            }
            _getOrigin() {
              const e = !this._dir || "ltr" == this._dir.value,
                t = this.position;
              let n;
              if ("above" == t || "below" == t)
                n = {
                  originX: "center",
                  originY: "above" == t ? "top" : "bottom",
                };
              else if (
                "before" == t ||
                ("left" == t && e) ||
                ("right" == t && !e)
              )
                n = { originX: "start", originY: "center" };
              else {
                if (
                  !("after" == t || ("right" == t && e) || ("left" == t && !e))
                )
                  throw xf(t);
                n = { originX: "end", originY: "center" };
              }
              const { x: r, y: i } = this._invertPosition(n.originX, n.originY);
              return { main: n, fallback: { originX: r, originY: i } };
            }
            _getOverlayPosition() {
              const e = !this._dir || "ltr" == this._dir.value,
                t = this.position;
              let n;
              if ("above" == t) n = { overlayX: "center", overlayY: "bottom" };
              else if ("below" == t)
                n = { overlayX: "center", overlayY: "top" };
              else if (
                "before" == t ||
                ("left" == t && e) ||
                ("right" == t && !e)
              )
                n = { overlayX: "end", overlayY: "center" };
              else {
                if (
                  !("after" == t || ("right" == t && e) || ("left" == t && !e))
                )
                  throw xf(t);
                n = { overlayX: "start", overlayY: "center" };
              }
              const { x: r, y: i } = this._invertPosition(
                n.overlayX,
                n.overlayY
              );
              return { main: n, fallback: { overlayX: r, overlayY: i } };
            }
            _updateTooltipMessage() {
              this._tooltipInstance &&
                ((this._tooltipInstance.message = this.message),
                this._tooltipInstance._markForCheck(),
                this._ngZone.onMicrotaskEmpty
                  .asObservable()
                  .pipe(fe(1), $l(this._destroyed))
                  .subscribe(() => {
                    this._tooltipInstance && this._overlayRef.updatePosition();
                  }));
            }
            _setTooltipClass(e) {
              this._tooltipInstance &&
                ((this._tooltipInstance.tooltipClass = e),
                this._tooltipInstance._markForCheck());
            }
            _invertPosition(e, t) {
              return (
                "above" === this.position || "below" === this.position
                  ? "top" === t
                    ? (t = "bottom")
                    : "bottom" === t && (t = "top")
                  : "end" === e
                  ? (e = "start")
                  : "start" === e && (e = "end"),
                { x: e, y: t }
              );
            }
            _setupPointerEvents() {
              if (this._platform.IOS || this._platform.ANDROID) {
                if ("off" !== this.touchGestures) {
                  this._disableNativeGesturesIfNecessary();
                  const e = () => {
                    clearTimeout(this._touchstartTimeout),
                      this.hide(this._defaultOptions.touchendHideDelay);
                  };
                  this._passiveListeners
                    .set("touchend", e)
                    .set("touchcancel", e)
                    .set("touchstart", () => {
                      clearTimeout(this._touchstartTimeout),
                        (this._touchstartTimeout = setTimeout(
                          () => this.show(),
                          500
                        ));
                    });
                }
              } else
                this._passiveListeners
                  .set("mouseenter", () => this.show())
                  .set("mouseleave", () => this.hide());
              this._passiveListeners.forEach((e, t) => {
                this._elementRef.nativeElement.addEventListener(t, e, Ef);
              });
            }
            _disableNativeGesturesIfNecessary() {
              const e = this._elementRef.nativeElement,
                t = e.style,
                n = this.touchGestures;
              "off" !== n &&
                (("on" === n ||
                  ("INPUT" !== e.nodeName && "TEXTAREA" !== e.nodeName)) &&
                  (t.userSelect = t.msUserSelect = t.webkitUserSelect = t.MozUserSelect =
                    "none"),
                ("on" !== n && e.draggable) || (t.webkitUserDrag = "none"),
                (t.touchAction = "none"),
                (t.webkitTapHighlightColor = "transparent"));
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(
                r["\u0275\u0275directiveInject"](qu),
                r["\u0275\u0275directiveInject"](r.ElementRef),
                r["\u0275\u0275directiveInject"](cu),
                r["\u0275\u0275directiveInject"](r.ViewContainerRef),
                r["\u0275\u0275directiveInject"](r.NgZone),
                r["\u0275\u0275directiveInject"](Se),
                r["\u0275\u0275directiveInject"](Le),
                r["\u0275\u0275directiveInject"](Ge),
                r["\u0275\u0275directiveInject"](Df),
                r["\u0275\u0275directiveInject"](Ye, 8),
                r["\u0275\u0275directiveInject"](Of, 8),
                r["\u0275\u0275directiveInject"](r.ElementRef)
              );
            }),
            (e.ɵdir = r["\u0275\u0275defineDirective"]({
              type: e,
              selectors: [["", "matTooltip", ""]],
              inputs: {
                showDelay: ["matTooltipShowDelay", "showDelay"],
                hideDelay: ["matTooltipHideDelay", "hideDelay"],
                touchGestures: ["matTooltipTouchGestures", "touchGestures"],
                position: ["matTooltipPosition", "position"],
                disabled: ["matTooltipDisabled", "disabled"],
                message: ["matTooltip", "message"],
                tooltipClass: ["matTooltipClass", "tooltipClass"],
              },
              exportAs: ["matTooltip"],
            })),
            e
          );
        })(),
        Rf = (() => {
          class e {
            constructor(e, t) {
              (this._changeDetectorRef = e),
                (this._breakpointObserver = t),
                (this._visibility = "initial"),
                (this._closeOnInteraction = !1),
                (this._onHide = new M.a()),
                (this._isHandset = this._breakpointObserver.observe(
                  "(max-width: 599.99px) and (orientation: portrait), (max-width: 959.99px) and (orientation: landscape)"
                ));
            }
            show(e) {
              this._hideTimeoutId &&
                (clearTimeout(this._hideTimeoutId),
                (this._hideTimeoutId = null)),
                (this._closeOnInteraction = !0),
                (this._showTimeoutId = setTimeout(() => {
                  (this._visibility = "visible"),
                    (this._showTimeoutId = null),
                    this._markForCheck();
                }, e));
            }
            hide(e) {
              this._showTimeoutId &&
                (clearTimeout(this._showTimeoutId),
                (this._showTimeoutId = null)),
                (this._hideTimeoutId = setTimeout(() => {
                  (this._visibility = "hidden"),
                    (this._hideTimeoutId = null),
                    this._markForCheck();
                }, e));
            }
            afterHidden() {
              return this._onHide.asObservable();
            }
            isVisible() {
              return "visible" === this._visibility;
            }
            ngOnDestroy() {
              this._onHide.complete();
            }
            _animationStart() {
              this._closeOnInteraction = !1;
            }
            _animationDone(e) {
              const t = e.toState;
              "hidden" !== t || this.isVisible() || this._onHide.next(),
                ("visible" !== t && "hidden" !== t) ||
                  (this._closeOnInteraction = !0);
            }
            _handleBodyInteraction() {
              this._closeOnInteraction && this.hide(0);
            }
            _markForCheck() {
              this._changeDetectorRef.markForCheck();
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(
                r["\u0275\u0275directiveInject"](r.ChangeDetectorRef),
                r["\u0275\u0275directiveInject"](wf)
              );
            }),
            (e.ɵcmp = r["\u0275\u0275defineComponent"]({
              type: e,
              selectors: [["mat-tooltip-component"]],
              hostAttrs: ["aria-hidden", "true"],
              hostVars: 2,
              hostBindings: function (e, t) {
                1 & e &&
                  r["\u0275\u0275listener"](
                    "click",
                    function () {
                      return t._handleBodyInteraction();
                    },
                    !1,
                    r["\u0275\u0275resolveBody"]
                  ),
                  2 & e &&
                    r["\u0275\u0275styleProp"](
                      "zoom",
                      "visible" === t._visibility ? 1 : null
                    );
              },
              decls: 3,
              vars: 7,
              consts: [[1, "mat-tooltip", 3, "ngClass"]],
              template: function (e, t) {
                if (
                  (1 & e &&
                    (r["\u0275\u0275elementStart"](0, "div", 0),
                    r["\u0275\u0275listener"]("@state.start", function () {
                      return t._animationStart();
                    })("@state.done", function (e) {
                      return t._animationDone(e);
                    }),
                    r["\u0275\u0275pipe"](1, "async"),
                    r["\u0275\u0275text"](2),
                    r["\u0275\u0275elementEnd"]()),
                  2 & e)
                ) {
                  var n;
                  const e =
                    null == (n = r["\u0275\u0275pipeBind1"](1, 5, t._isHandset))
                      ? null
                      : n.matches;
                  r["\u0275\u0275classProp"]("mat-tooltip-handset", e),
                    r["\u0275\u0275property"]("ngClass", t.tooltipClass)(
                      "@state",
                      t._visibility
                    ),
                    r["\u0275\u0275advance"](2),
                    r["\u0275\u0275textInterpolate"](t.message);
                }
              },
              directives: [i.NgClass],
              pipes: [i.AsyncPipe],
              styles: [
                ".mat-tooltip-panel{pointer-events:none !important}.mat-tooltip{color:#fff;border-radius:4px;margin:14px;max-width:250px;padding-left:8px;padding-right:8px;overflow:hidden;text-overflow:ellipsis}.cdk-high-contrast-active .mat-tooltip{outline:solid 1px}.mat-tooltip-handset{margin:24px;padding-left:16px;padding-right:16px}\n",
              ],
              encapsulation: 2,
              data: { animation: [Sf.tooltipState] },
              changeDetection: 0,
            })),
            e
          );
        })(),
        Af = (() => {
          class e {}
          return (
            (e.ɵmod = r["\u0275\u0275defineNgModule"]({ type: e })),
            (e.ɵinj = r["\u0275\u0275defineInjector"]({
              factory: function (t) {
                return new (t || e)();
              },
              providers: [If],
              imports: [[Ke, i.CommonModule, Yu, Nr], Nr, hu],
            })),
            e
          );
        })();
      function Tf(e, t) {
        if (
          (1 & e &&
            (r["\u0275\u0275elementStart"](0, "mat-option", 19),
            r["\u0275\u0275text"](1),
            r["\u0275\u0275elementEnd"]()),
          2 & e)
        ) {
          const e = t.$implicit;
          r["\u0275\u0275property"]("value", e),
            r["\u0275\u0275advance"](1),
            r["\u0275\u0275textInterpolate1"](" ", e, " ");
        }
      }
      function Ff(e, t) {
        if (1 & e) {
          const e = r["\u0275\u0275getCurrentView"]();
          r["\u0275\u0275elementStart"](0, "mat-form-field", 16),
            r["\u0275\u0275elementStart"](1, "mat-select", 17),
            r["\u0275\u0275listener"]("selectionChange", function (t) {
              return (
                r["\u0275\u0275restoreView"](e),
                r["\u0275\u0275nextContext"](2)._changePageSize(t.value)
              );
            }),
            r["\u0275\u0275template"](2, Tf, 2, 2, "mat-option", 18),
            r["\u0275\u0275elementEnd"](),
            r["\u0275\u0275elementEnd"]();
        }
        if (2 & e) {
          const e = r["\u0275\u0275nextContext"](2);
          r["\u0275\u0275property"]("color", e.color),
            r["\u0275\u0275advance"](1),
            r["\u0275\u0275property"]("value", e.pageSize)(
              "disabled",
              e.disabled
            )("aria-label", e._intl.itemsPerPageLabel),
            r["\u0275\u0275advance"](1),
            r["\u0275\u0275property"]("ngForOf", e._displayedPageSizeOptions);
        }
      }
      function Pf(e, t) {
        if (
          (1 & e &&
            (r["\u0275\u0275elementStart"](0, "div", 20),
            r["\u0275\u0275text"](1),
            r["\u0275\u0275elementEnd"]()),
          2 & e)
        ) {
          const e = r["\u0275\u0275nextContext"](2);
          r["\u0275\u0275advance"](1),
            r["\u0275\u0275textInterpolate"](e.pageSize);
        }
      }
      function jf(e, t) {
        if (
          (1 & e &&
            (r["\u0275\u0275elementStart"](0, "div", 12),
            r["\u0275\u0275elementStart"](1, "div", 13),
            r["\u0275\u0275text"](2),
            r["\u0275\u0275elementEnd"](),
            r["\u0275\u0275template"](3, Ff, 3, 5, "mat-form-field", 14),
            r["\u0275\u0275template"](4, Pf, 2, 1, "div", 15),
            r["\u0275\u0275elementEnd"]()),
          2 & e)
        ) {
          const e = r["\u0275\u0275nextContext"]();
          r["\u0275\u0275advance"](2),
            r["\u0275\u0275textInterpolate1"](
              " ",
              e._intl.itemsPerPageLabel,
              " "
            ),
            r["\u0275\u0275advance"](1),
            r["\u0275\u0275property"](
              "ngIf",
              e._displayedPageSizeOptions.length > 1
            ),
            r["\u0275\u0275advance"](1),
            r["\u0275\u0275property"](
              "ngIf",
              e._displayedPageSizeOptions.length <= 1
            );
        }
      }
      function Nf(e, t) {
        if (1 & e) {
          const e = r["\u0275\u0275getCurrentView"]();
          r["\u0275\u0275elementStart"](0, "button", 21),
            r["\u0275\u0275listener"]("click", function () {
              return (
                r["\u0275\u0275restoreView"](e),
                r["\u0275\u0275nextContext"]().firstPage()
              );
            }),
            r["\u0275\u0275namespaceSVG"](),
            r["\u0275\u0275elementStart"](1, "svg", 7),
            r["\u0275\u0275element"](2, "path", 22),
            r["\u0275\u0275elementEnd"](),
            r["\u0275\u0275elementEnd"]();
        }
        if (2 & e) {
          const e = r["\u0275\u0275nextContext"]();
          r["\u0275\u0275property"]("matTooltip", e._intl.firstPageLabel)(
            "matTooltipDisabled",
            e._previousButtonsDisabled()
          )("matTooltipPosition", "above")(
            "disabled",
            e._previousButtonsDisabled()
          ),
            r["\u0275\u0275attribute"]("aria-label", e._intl.firstPageLabel);
        }
      }
      function Mf(e, t) {
        if (1 & e) {
          const e = r["\u0275\u0275getCurrentView"]();
          r["\u0275\u0275namespaceSVG"](),
            r["\u0275\u0275namespaceHTML"](),
            r["\u0275\u0275elementStart"](0, "button", 23),
            r["\u0275\u0275listener"]("click", function () {
              return (
                r["\u0275\u0275restoreView"](e),
                r["\u0275\u0275nextContext"]().lastPage()
              );
            }),
            r["\u0275\u0275namespaceSVG"](),
            r["\u0275\u0275elementStart"](1, "svg", 7),
            r["\u0275\u0275element"](2, "path", 24),
            r["\u0275\u0275elementEnd"](),
            r["\u0275\u0275elementEnd"]();
        }
        if (2 & e) {
          const e = r["\u0275\u0275nextContext"]();
          r["\u0275\u0275property"]("matTooltip", e._intl.lastPageLabel)(
            "matTooltipDisabled",
            e._nextButtonsDisabled()
          )("matTooltipPosition", "above")(
            "disabled",
            e._nextButtonsDisabled()
          ),
            r["\u0275\u0275attribute"]("aria-label", e._intl.lastPageLabel);
        }
      }
      let Lf = (() => {
        class e {
          constructor() {
            (this.changes = new M.a()),
              (this.itemsPerPageLabel = "Items per page:"),
              (this.nextPageLabel = "Next page"),
              (this.previousPageLabel = "Previous page"),
              (this.firstPageLabel = "First page"),
              (this.lastPageLabel = "Last page"),
              (this.getRangeLabel = (e, t, n) => {
                if (0 == n || 0 == t) return "0 of " + n;
                const r = e * t;
                return `${r + 1} \u2013 ${
                  r < (n = Math.max(n, 0)) ? Math.min(r + t, n) : r + t
                } of ${n}`;
              });
          }
        }
        return (
          (e.ɵfac = function (t) {
            return new (t || e)();
          }),
          (e.ɵprov = Object(r["\u0275\u0275defineInjectable"])({
            factory: function () {
              return new e();
            },
            token: e,
            providedIn: "root",
          })),
          e
        );
      })();
      const Vf = {
          provide: Lf,
          deps: [[new r.Optional(), new r.SkipSelf(), Lf]],
          useFactory: function (e) {
            return e || new Lf();
          },
        },
        Bf = new r.InjectionToken("MAT_PAGINATOR_DEFAULT_OPTIONS");
      class zf {}
      const Uf = Mr(Ur(zf));
      let Hf = (() => {
          class e extends Uf {
            constructor(e, t, n) {
              if (
                (super(),
                (this._intl = e),
                (this._changeDetectorRef = t),
                (this._pageIndex = 0),
                (this._length = 0),
                (this._pageSizeOptions = []),
                (this._hidePageSize = !1),
                (this._showFirstLastButtons = !1),
                (this.page = new r.EventEmitter()),
                (this._intlChanges = e.changes.subscribe(() =>
                  this._changeDetectorRef.markForCheck()
                )),
                n)
              ) {
                const {
                  pageSize: e,
                  pageSizeOptions: t,
                  hidePageSize: r,
                  showFirstLastButtons: i,
                } = n;
                null != e && (this._pageSize = e),
                  null != t && (this._pageSizeOptions = t),
                  null != r && (this._hidePageSize = r),
                  null != i && (this._showFirstLastButtons = i);
              }
            }
            get pageIndex() {
              return this._pageIndex;
            }
            set pageIndex(e) {
              (this._pageIndex = Math.max(_e(e), 0)),
                this._changeDetectorRef.markForCheck();
            }
            get length() {
              return this._length;
            }
            set length(e) {
              (this._length = _e(e)), this._changeDetectorRef.markForCheck();
            }
            get pageSize() {
              return this._pageSize;
            }
            set pageSize(e) {
              (this._pageSize = Math.max(_e(e), 0)),
                this._updateDisplayedPageSizeOptions();
            }
            get pageSizeOptions() {
              return this._pageSizeOptions;
            }
            set pageSizeOptions(e) {
              (this._pageSizeOptions = (e || []).map((e) => _e(e))),
                this._updateDisplayedPageSizeOptions();
            }
            get hidePageSize() {
              return this._hidePageSize;
            }
            set hidePageSize(e) {
              this._hidePageSize = ge(e);
            }
            get showFirstLastButtons() {
              return this._showFirstLastButtons;
            }
            set showFirstLastButtons(e) {
              this._showFirstLastButtons = ge(e);
            }
            ngOnInit() {
              (this._initialized = !0),
                this._updateDisplayedPageSizeOptions(),
                this._markInitialized();
            }
            ngOnDestroy() {
              this._intlChanges.unsubscribe();
            }
            nextPage() {
              if (!this.hasNextPage()) return;
              const e = this.pageIndex;
              this.pageIndex++, this._emitPageEvent(e);
            }
            previousPage() {
              if (!this.hasPreviousPage()) return;
              const e = this.pageIndex;
              this.pageIndex--, this._emitPageEvent(e);
            }
            firstPage() {
              if (!this.hasPreviousPage()) return;
              const e = this.pageIndex;
              (this.pageIndex = 0), this._emitPageEvent(e);
            }
            lastPage() {
              if (!this.hasNextPage()) return;
              const e = this.pageIndex;
              (this.pageIndex = this.getNumberOfPages() - 1),
                this._emitPageEvent(e);
            }
            hasPreviousPage() {
              return this.pageIndex >= 1 && 0 != this.pageSize;
            }
            hasNextPage() {
              const e = this.getNumberOfPages() - 1;
              return this.pageIndex < e && 0 != this.pageSize;
            }
            getNumberOfPages() {
              return this.pageSize ? Math.ceil(this.length / this.pageSize) : 0;
            }
            _changePageSize(e) {
              const t = this.pageIndex;
              (this.pageIndex =
                Math.floor((this.pageIndex * this.pageSize) / e) || 0),
                (this.pageSize = e),
                this._emitPageEvent(t);
            }
            _nextButtonsDisabled() {
              return this.disabled || !this.hasNextPage();
            }
            _previousButtonsDisabled() {
              return this.disabled || !this.hasPreviousPage();
            }
            _updateDisplayedPageSizeOptions() {
              this._initialized &&
                (this.pageSize ||
                  (this._pageSize =
                    0 != this.pageSizeOptions.length
                      ? this.pageSizeOptions[0]
                      : 50),
                (this._displayedPageSizeOptions = this.pageSizeOptions.slice()),
                -1 === this._displayedPageSizeOptions.indexOf(this.pageSize) &&
                  this._displayedPageSizeOptions.push(this.pageSize),
                this._displayedPageSizeOptions.sort((e, t) => e - t),
                this._changeDetectorRef.markForCheck());
            }
            _emitPageEvent(e) {
              this.page.emit({
                previousPageIndex: e,
                pageIndex: this.pageIndex,
                pageSize: this.pageSize,
                length: this.length,
              });
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(
                r["\u0275\u0275directiveInject"](Lf),
                r["\u0275\u0275directiveInject"](r.ChangeDetectorRef),
                r["\u0275\u0275directiveInject"](Bf, 8)
              );
            }),
            (e.ɵcmp = r["\u0275\u0275defineComponent"]({
              type: e,
              selectors: [["mat-paginator"]],
              hostAttrs: [1, "mat-paginator"],
              inputs: {
                disabled: "disabled",
                pageIndex: "pageIndex",
                length: "length",
                pageSize: "pageSize",
                pageSizeOptions: "pageSizeOptions",
                hidePageSize: "hidePageSize",
                showFirstLastButtons: "showFirstLastButtons",
                color: "color",
              },
              outputs: { page: "page" },
              exportAs: ["matPaginator"],
              features: [r["\u0275\u0275InheritDefinitionFeature"]],
              decls: 14,
              vars: 14,
              consts: [
                [1, "mat-paginator-outer-container"],
                [1, "mat-paginator-container"],
                ["class", "mat-paginator-page-size", 4, "ngIf"],
                [1, "mat-paginator-range-actions"],
                [1, "mat-paginator-range-label"],
                [
                  "mat-icon-button",
                  "",
                  "type",
                  "button",
                  "class",
                  "mat-paginator-navigation-first",
                  3,
                  "matTooltip",
                  "matTooltipDisabled",
                  "matTooltipPosition",
                  "disabled",
                  "click",
                  4,
                  "ngIf",
                ],
                [
                  "mat-icon-button",
                  "",
                  "type",
                  "button",
                  1,
                  "mat-paginator-navigation-previous",
                  3,
                  "matTooltip",
                  "matTooltipDisabled",
                  "matTooltipPosition",
                  "disabled",
                  "click",
                ],
                [
                  "viewBox",
                  "0 0 24 24",
                  "focusable",
                  "false",
                  1,
                  "mat-paginator-icon",
                ],
                ["d", "M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z"],
                [
                  "mat-icon-button",
                  "",
                  "type",
                  "button",
                  1,
                  "mat-paginator-navigation-next",
                  3,
                  "matTooltip",
                  "matTooltipDisabled",
                  "matTooltipPosition",
                  "disabled",
                  "click",
                ],
                ["d", "M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z"],
                [
                  "mat-icon-button",
                  "",
                  "type",
                  "button",
                  "class",
                  "mat-paginator-navigation-last",
                  3,
                  "matTooltip",
                  "matTooltipDisabled",
                  "matTooltipPosition",
                  "disabled",
                  "click",
                  4,
                  "ngIf",
                ],
                [1, "mat-paginator-page-size"],
                [1, "mat-paginator-page-size-label"],
                [
                  "class",
                  "mat-paginator-page-size-select",
                  3,
                  "color",
                  4,
                  "ngIf",
                ],
                ["class", "mat-paginator-page-size-value", 4, "ngIf"],
                [1, "mat-paginator-page-size-select", 3, "color"],
                [3, "value", "disabled", "aria-label", "selectionChange"],
                [3, "value", 4, "ngFor", "ngForOf"],
                [3, "value"],
                [1, "mat-paginator-page-size-value"],
                [
                  "mat-icon-button",
                  "",
                  "type",
                  "button",
                  1,
                  "mat-paginator-navigation-first",
                  3,
                  "matTooltip",
                  "matTooltipDisabled",
                  "matTooltipPosition",
                  "disabled",
                  "click",
                ],
                [
                  "d",
                  "M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z",
                ],
                [
                  "mat-icon-button",
                  "",
                  "type",
                  "button",
                  1,
                  "mat-paginator-navigation-last",
                  3,
                  "matTooltip",
                  "matTooltipDisabled",
                  "matTooltipPosition",
                  "disabled",
                  "click",
                ],
                [
                  "d",
                  "M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z",
                ],
              ],
              template: function (e, t) {
                1 & e &&
                  (r["\u0275\u0275elementStart"](0, "div", 0),
                  r["\u0275\u0275elementStart"](1, "div", 1),
                  r["\u0275\u0275template"](2, jf, 5, 3, "div", 2),
                  r["\u0275\u0275elementStart"](3, "div", 3),
                  r["\u0275\u0275elementStart"](4, "div", 4),
                  r["\u0275\u0275text"](5),
                  r["\u0275\u0275elementEnd"](),
                  r["\u0275\u0275template"](6, Nf, 3, 5, "button", 5),
                  r["\u0275\u0275elementStart"](7, "button", 6),
                  r["\u0275\u0275listener"]("click", function () {
                    return t.previousPage();
                  }),
                  r["\u0275\u0275namespaceSVG"](),
                  r["\u0275\u0275elementStart"](8, "svg", 7),
                  r["\u0275\u0275element"](9, "path", 8),
                  r["\u0275\u0275elementEnd"](),
                  r["\u0275\u0275elementEnd"](),
                  r["\u0275\u0275namespaceHTML"](),
                  r["\u0275\u0275elementStart"](10, "button", 9),
                  r["\u0275\u0275listener"]("click", function () {
                    return t.nextPage();
                  }),
                  r["\u0275\u0275namespaceSVG"](),
                  r["\u0275\u0275elementStart"](11, "svg", 7),
                  r["\u0275\u0275element"](12, "path", 10),
                  r["\u0275\u0275elementEnd"](),
                  r["\u0275\u0275elementEnd"](),
                  r["\u0275\u0275template"](13, Mf, 3, 5, "button", 11),
                  r["\u0275\u0275elementEnd"](),
                  r["\u0275\u0275elementEnd"](),
                  r["\u0275\u0275elementEnd"]()),
                  2 & e &&
                    (r["\u0275\u0275advance"](2),
                    r["\u0275\u0275property"]("ngIf", !t.hidePageSize),
                    r["\u0275\u0275advance"](3),
                    r["\u0275\u0275textInterpolate1"](
                      " ",
                      t._intl.getRangeLabel(t.pageIndex, t.pageSize, t.length),
                      " "
                    ),
                    r["\u0275\u0275advance"](1),
                    r["\u0275\u0275property"]("ngIf", t.showFirstLastButtons),
                    r["\u0275\u0275advance"](1),
                    r["\u0275\u0275property"](
                      "matTooltip",
                      t._intl.previousPageLabel
                    )("matTooltipDisabled", t._previousButtonsDisabled())(
                      "matTooltipPosition",
                      "above"
                    )("disabled", t._previousButtonsDisabled()),
                    r["\u0275\u0275attribute"](
                      "aria-label",
                      t._intl.previousPageLabel
                    ),
                    r["\u0275\u0275advance"](3),
                    r["\u0275\u0275property"](
                      "matTooltip",
                      t._intl.nextPageLabel
                    )("matTooltipDisabled", t._nextButtonsDisabled())(
                      "matTooltipPosition",
                      "above"
                    )("disabled", t._nextButtonsDisabled()),
                    r["\u0275\u0275attribute"](
                      "aria-label",
                      t._intl.nextPageLabel
                    ),
                    r["\u0275\u0275advance"](3),
                    r["\u0275\u0275property"]("ngIf", t.showFirstLastButtons));
              },
              directives: [i.NgIf, Jc, kf, Ah, ff, i.NgForOf, ci],
              styles: [
                ".mat-paginator{display:block}.mat-paginator-outer-container{display:flex}.mat-paginator-container{display:flex;align-items:center;justify-content:flex-end;min-height:56px;padding:0 8px;flex-wrap:wrap-reverse;width:100%}.mat-paginator-page-size{display:flex;align-items:baseline;margin-right:8px}[dir=rtl] .mat-paginator-page-size{margin-right:0;margin-left:8px}.mat-paginator-page-size-label{margin:0 4px}.mat-paginator-page-size-select{margin:6px 4px 0 4px;width:56px}.mat-paginator-page-size-select.mat-form-field-appearance-outline{width:64px}.mat-paginator-page-size-select.mat-form-field-appearance-fill{width:64px}.mat-paginator-range-label{margin:0 32px 0 24px}.mat-paginator-range-actions{display:flex;align-items:center}.mat-paginator-icon{width:28px;fill:currentColor}[dir=rtl] .mat-paginator-icon{transform:rotate(180deg)}\n",
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            e
          );
        })(),
        $f = (() => {
          class e {}
          return (
            (e.ɵmod = r["\u0275\u0275defineNgModule"]({ type: e })),
            (e.ɵinj = r["\u0275\u0275defineInjector"]({
              factory: function (t) {
                return new (t || e)();
              },
              providers: [Vf],
              imports: [[i.CommonModule, eu, pf, Af]],
            })),
            e
          );
        })(),
        qf = (() => {
          class e {
            constructor(e) {
              (this.http = e),
                (this.req_params = {
                  api_key: "3eb71cd42f58980962014e01b5dfda44",
                  lang: "en-US",
                }),
                (this.urlPopularFilms =
                  "https://api.themoviedb.org/3/movie/popular"),
                (this.urlGenres =
                  "https://api.themoviedb.org/3/genre/movie/list"),
                (this.urlFilm = "https://api.themoviedb.org/3/movie/"),
                (this.urlSearchFilm =
                  "https://api.themoviedb.org/3/search/movie");
            }
            getPageOfFilms(e) {
              return this.http.get(this.urlPopularFilms, {
                params: new ji()
                  .set("api_key", this.req_params.api_key)
                  .set("language", this.req_params.lang)
                  .set("page", "" + e),
              });
            }
            getGenres() {
              return this.http.get(this.urlGenres, {
                params: new ji()
                  .set("api_key", this.req_params.api_key)
                  .set("language", this.req_params.lang),
              });
            }
            getFilmWithAppendParam(e, t) {
              return this.http.get(this.urlFilm + "" + e, {
                params: new ji()
                  .set("api_key", this.req_params.api_key)
                  .set("language", this.req_params.lang)
                  .set("append_to_response", t),
              });
            }
            getFilmRecs(e, t) {
              return this.http.get(this.urlFilm + "" + e + "/recommendations", {
                params: new ji()
                  .set("api_key", this.req_params.api_key)
                  .set("language", this.req_params.lang)
                  .set("page", "" + t),
              });
            }
            getFilmSimilars(e, t) {
              return this.http.get(this.urlFilm + "" + e + "/similar", {
                params: new ji()
                  .set("api_key", this.req_params.api_key)
                  .set("language", this.req_params.lang)
                  .set("page", "" + t),
              });
            }
            searchFilms(e, t) {
              return this.http.get(this.urlSearchFilm, {
                params: new ji()
                  .set("api_key", this.req_params.api_key)
                  .set("language", this.req_params.lang)
                  .set("query", e)
                  .set("page", "" + t),
              });
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(r["\u0275\u0275inject"](Gi));
            }),
            (e.ɵprov = r["\u0275\u0275defineInjectable"]({
              token: e,
              factory: e.ɵfac,
              providedIn: "root",
            })),
            e
          );
        })();
      class Gf {
        constructor(e) {
          e
            ? (this.setStrOfGenres(e.genres),
              this.setStrOfCompanies(e),
              this.setStrOfCountries(e),
              (this.title = e.title),
              (this.tagline = e.title),
              (this.runtime = e.runtime),
              (this.original_language = e.original_language),
              (this.release_date = e.release_date),
              (this.status = e.status),
              (this.budget = e.budget),
              (this.vote_average = e.vote_average),
              (this.vote_count = e.vote_count),
              (this.img_url =
                "https://image.tmdb.org/t/p/w300" + e.poster_path),
              (this.bg_img_url =
                "https://image.tmdb.org/t/p/w1280" + e.backdrop_path),
              (this.overview = e.overview),
              (this.recoms_count = e.recommendations.total_results),
              (this.similars_count = e.similar.total_results),
              (this.recoms_pages_count = e.recommendations.total_pages),
              (this.similar_pages_count = e.similar.total_pages),
              (this.id = e.id),
              (this.recommendations = new Array(0)))
            : ((this.runtime = ""),
              (this.original_language = ""),
              (this.release_date = ""),
              (this.status = ""),
              (this.budget = ""),
              (this.vote_average = 0),
              (this.vote_count = ""),
              (this.title = ""),
              (this.tagline = ""),
              (this.genres = ""),
              (this.production_companies = null),
              (this.production_countries = ""),
              (this.img_url = "https://image.tmdb.org/t/p/w300"),
              (this.bg_img_url = "https://image.tmdb.org/t/p/w1280"),
              (this.overview = ""),
              (this.recoms_count = 0),
              (this.similars_count = 0),
              (this.recoms_pages_count = 0),
              (this.similar_pages_count = 0),
              (this.recommendations = new Array(0)),
              (this.id = -1));
        }
        setStrOfGenres(e) {
          (this.genres = ""),
            e.forEach((e) => {
              this.genres =
                "" === this.genres ? e.name : this.genres + ", " + e.name;
            });
        }
        setStrOfCompanies(e) {
          (this.production_companies = new Array(
            e.production_companies.length
          )),
            e.production_companies.forEach((e, t) => {
              this.production_companies[t] =
                "" !== e.origin_country
                  ? e.name + "(" + e.origin_country + ")"
                  : e.name;
            });
        }
        setStrOfCountries(e) {
          e.production_countries.forEach((e) => {
            this.production_countries =
              "" === this.production_countries
                ? e.iso_3166_1
                : this.production_countries + ", " + e.iso_3166_1;
          });
        }
        getRecomsCount() {
          return this.recoms_count;
        }
        getSimilarsCount() {
          return this.similars_count;
        }
        getSimilarPagesCount() {
          return this.similar_pages_count;
        }
        getRecomsPagesCount() {
          return this.recoms_pages_count;
        }
        addObjToRecoms(e) {
          for (let n = 0; n < this.recommendations.length; n++)
            if (this.recommendations[n] && this.recommendations[n].id === e.id)
              return !1;
          let t = this.recommendations.length;
          return (
            this.recommendations.push({
              id: e.id,
              title: e.title,
              poster_path: "https://image.tmdb.org/t/p/w92" + e.poster_path,
            }) > t
          );
        }
      }
      class Wf {
        constructor(e, t) {
          e &&
            ((this.id = e.id),
            (this.title = e.title),
            (this.genres_names = e.genre_names)),
            t &&
              ((this.id = t.id),
              (this.title = t.title),
              (this.genres_names = t.genres));
        }
      }
      var Qf = n("sriv");
      let Kf = (() => {
          class e {
            constructor(e) {
              this.flashMessageService = e;
            }
            showAddMessage() {
              this.flashMessageService.show("Film is added to favorites", {
                cssClass: "added",
                timeout: 2e3,
              });
            }
            showRemoveMessage() {
              this.flashMessageService.show("Film is removed from favorites", {
                cssClass: "removed",
                timeout: 2e3,
              });
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(
                r["\u0275\u0275inject"](Qf.FlashMessagesService)
              );
            }),
            (e.ɵprov = r["\u0275\u0275defineInjectable"]({
              token: e,
              factory: e.ɵfac,
              providedIn: "root",
            })),
            e
          );
        })(),
        Zf = (() => {
          class e {
            constructor() {
              null === localStorage.getItem("films") &&
                localStorage.setItem("films", JSON.stringify(new Array()));
            }
            addFavoriteFilm(e) {
              let t = this.getAllFavoriteFilms();
              t.push(e), localStorage.setItem("films", JSON.stringify(t));
            }
            getAllFavoriteFilms() {
              return JSON.parse(localStorage.getItem("films"));
            }
            removeFavoriteFilm(e) {
              let t = this.getAllFavoriteFilms();
              for (let n = 0; n < t.length; n++)
                if (t[n].id === e.id)
                  return (
                    t.splice(n, 1),
                    void localStorage.setItem("films", JSON.stringify(t))
                  );
            }
            isFavorite(e) {
              let t = this.getAllFavoriteFilms();
              for (let n = 0; n < t.length; n++)
                if (t[n].id === e.id) return !0;
              return !1;
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)();
            }),
            (e.ɵprov = r["\u0275\u0275defineInjectable"]({
              token: e,
              factory: e.ɵfac,
              providedIn: "root",
            })),
            e
          );
        })();
      function Yf(e, t) {
        if (
          (1 & e &&
            (r["\u0275\u0275elementStart"](0, "div"),
            r["\u0275\u0275text"](1),
            r["\u0275\u0275elementEnd"]()),
          2 & e)
        ) {
          const e = t.$implicit;
          r["\u0275\u0275advance"](1),
            r["\u0275\u0275textInterpolate1"](" ", e, " ");
        }
      }
      function Xf(e, t) {
        if (1 & e) {
          const e = r["\u0275\u0275getCurrentView"]();
          r["\u0275\u0275elementStart"](0, "div", 23),
            r["\u0275\u0275element"](1, "img", 24),
            r["\u0275\u0275elementStart"](2, "button", 25),
            r["\u0275\u0275listener"]("click", function () {
              r["\u0275\u0275restoreView"](e);
              const n = t.$implicit;
              return r["\u0275\u0275nextContext"]().onRecFilmClick(
                null == n ? null : n.id
              );
            }),
            r["\u0275\u0275text"](3),
            r["\u0275\u0275elementEnd"](),
            r["\u0275\u0275elementEnd"]();
        }
        if (2 & e) {
          const e = t.$implicit;
          r["\u0275\u0275advance"](1),
            r["\u0275\u0275propertyInterpolate"](
              "src",
              null == e ? null : e.poster_path,
              r["\u0275\u0275sanitizeUrl"]
            ),
            r["\u0275\u0275advance"](2),
            r["\u0275\u0275textInterpolate1"](
              " ",
              null == e ? null : e.title,
              " "
            );
        }
      }
      const Jf = function (e) {
        return { background: e };
      };
      let ep = (() => {
        class e {
          constructor(e, t, n, r, i, s) {
            (this.appFlashMessageService = e),
              (this.filmsService = t),
              (this.route = n),
              (this.router = r),
              (this.location = i),
              (this.localStorageService = s),
              (this.btn_state = {
                favorite: !1,
                text: "Add to favorites",
                icon_name: "add",
              }),
              (this.film_info = new Gf());
          }
          ngOnInit() {
            (this.router.routeReuseStrategy.shouldReuseRoute = () => !1),
              (this.film_id = this.route.snapshot.params.id),
              this.filmsService
                .getFilmWithAppendParam(this.film_id, "recommendations,similar")
                .subscribe((e) => {
                  (this.film_info = new Gf(e)),
                    this.setBtnState(
                      this.localStorageService.isFavorite(
                        new Wf(null, this.film_info)
                      )
                    ),
                    this.addRandomFilmToStorage(7);
                });
          }
          addRandomFilmToStorage(e) {
            0 !== e &&
              this.filmsService
                .getFilmRecs(
                  this.film_id,
                  this.getRandomNumOfPage(this.film_info.getRecomsPagesCount())
                )
                .subscribe((t) => {
                  this.film_info.addObjToRecoms(
                    t.results[this.getRandomNumOfFilmForArr(t.results.length)]
                  ),
                    this.addRandomFilmToStorage(--e);
                });
          }
          setBtnState(e) {
            e
              ? ((this.btn_state.favorite = !0),
                (this.btn_state.text = "Remove from favorites"),
                (this.btn_state.icon_name = "remove"))
              : ((this.btn_state.favorite = !1),
                (this.btn_state.text = "Add to favorites"),
                (this.btn_state.icon_name = "add"));
          }
          changeBtnState() {
            this.btn_state.favorite
              ? ((this.btn_state.favorite = !1),
                (this.btn_state.text = "Add to favorites "),
                (this.btn_state.icon_name = "add"))
              : ((this.btn_state.favorite = !0),
                (this.btn_state.text = "Remove from favorites"),
                (this.btn_state.icon_name = "remove"));
          }
          getRandomNumOfFilm(e) {
            return Math.floor(Math.random() * e) + 1;
          }
          getRandomNumOfFilmForArr(e) {
            return Math.floor(Math.random() * e);
          }
          getRandomNumOfPage(e) {
            return Math.floor(Math.random() * e) + 1;
          }
          addOrRemoveFavorite() {
            this.btn_state.favorite
              ? (this.localStorageService.removeFavoriteFilm(
                  new Wf(null, this.film_info)
                ),
                this.appFlashMessageService.showRemoveMessage())
              : (this.localStorageService.addFavoriteFilm(
                  new Wf(null, this.film_info)
                ),
                this.appFlashMessageService.showAddMessage()),
              this.changeBtnState();
          }
          onRecFilmClick(e) {
            (this.film_id = e.toString()),
              this.location.replaceState("/films/info/" + this.film_id),
              this.router.navigateByUrl("/films/info/" + this.film_id);
          }
        }
        return (
          (e.ɵfac = function (t) {
            return new (t || e)(
              r["\u0275\u0275directiveInject"](Kf),
              r["\u0275\u0275directiveInject"](qf),
              r["\u0275\u0275directiveInject"](la),
              r["\u0275\u0275directiveInject"](gl),
              r["\u0275\u0275directiveInject"](i.Location),
              r["\u0275\u0275directiveInject"](Zf)
            );
          }),
          (e.ɵcmp = r["\u0275\u0275defineComponent"]({
            type: e,
            selectors: [["app-film-info"]],
            decls: 59,
            vars: 28,
            consts: [
              [1, "film_info"],
              [1, "container"],
              [1, "film_info_showcase_container", 3, "ngStyle"],
              [1, "film_info_showcase"],
              [1, "film_info_first_col"],
              ["alt", "poster is absent", 3, "src"],
              ["mat-raised-button", "", "color", "white", 3, "click"],
              [1, "film_info_sec_col", "app_header"],
              [1, "bold"],
              [1, "film_info_third_col", "app_header"],
              [1, "rating"],
              [1, "digit_rating"],
              [1, "ratio"],
              [1, "vote_average"],
              [1, "vote_count"],
              [1, "rating_string"],
              [1, "production_companies"],
              [1, "app_header"],
              [4, "ngFor", "ngForOf"],
              [1, "film_info_overview"],
              [1, "film_info_rec_list"],
              [1, "film_info_rec_list_cont"],
              ["class", "rec_film", 4, "ngFor", "ngForOf"],
              [1, "rec_film"],
              ["alt", "", 3, "src"],
              [3, "click"],
            ],
            template: function (e, t) {
              1 & e &&
                (r["\u0275\u0275elementStart"](0, "div", 0),
                r["\u0275\u0275elementStart"](1, "div", 1),
                r["\u0275\u0275element"](2, "flash-messages"),
                r["\u0275\u0275elementStart"](3, "div", 2),
                r["\u0275\u0275elementStart"](4, "div", 3),
                r["\u0275\u0275elementStart"](5, "div", 4),
                r["\u0275\u0275element"](6, "img", 5),
                r["\u0275\u0275elementStart"](7, "button", 6),
                r["\u0275\u0275listener"]("click", function () {
                  return t.addOrRemoveFavorite();
                }),
                r["\u0275\u0275text"](8),
                r["\u0275\u0275elementStart"](9, "mat-icon"),
                r["\u0275\u0275text"](10),
                r["\u0275\u0275elementEnd"](),
                r["\u0275\u0275elementEnd"](),
                r["\u0275\u0275elementEnd"](),
                r["\u0275\u0275elementStart"](11, "div", 7),
                r["\u0275\u0275elementStart"](12, "h2"),
                r["\u0275\u0275text"](13),
                r["\u0275\u0275elementEnd"](),
                r["\u0275\u0275elementStart"](14, "h3"),
                r["\u0275\u0275text"](15),
                r["\u0275\u0275elementEnd"](),
                r["\u0275\u0275elementStart"](16, "h4", 8),
                r["\u0275\u0275text"](17, "About film"),
                r["\u0275\u0275elementEnd"](),
                r["\u0275\u0275elementStart"](18, "div"),
                r["\u0275\u0275text"](19),
                r["\u0275\u0275elementEnd"](),
                r["\u0275\u0275elementStart"](20, "div"),
                r["\u0275\u0275text"](21),
                r["\u0275\u0275elementEnd"](),
                r["\u0275\u0275elementStart"](22, "div"),
                r["\u0275\u0275text"](23),
                r["\u0275\u0275elementEnd"](),
                r["\u0275\u0275elementStart"](24, "div"),
                r["\u0275\u0275text"](25),
                r["\u0275\u0275pipe"](26, "currency"),
                r["\u0275\u0275elementEnd"](),
                r["\u0275\u0275elementStart"](27, "div"),
                r["\u0275\u0275text"](28),
                r["\u0275\u0275elementEnd"](),
                r["\u0275\u0275elementStart"](29, "div"),
                r["\u0275\u0275text"](30),
                r["\u0275\u0275pipe"](31, "date"),
                r["\u0275\u0275elementEnd"](),
                r["\u0275\u0275elementStart"](32, "div"),
                r["\u0275\u0275text"](33),
                r["\u0275\u0275elementEnd"](),
                r["\u0275\u0275elementEnd"](),
                r["\u0275\u0275elementStart"](34, "div", 9),
                r["\u0275\u0275elementStart"](35, "div", 10),
                r["\u0275\u0275elementStart"](36, "div", 11),
                r["\u0275\u0275elementStart"](37, "span", 12),
                r["\u0275\u0275elementStart"](38, "span", 13),
                r["\u0275\u0275text"](39),
                r["\u0275\u0275elementEnd"](),
                r["\u0275\u0275text"](40, "/10 "),
                r["\u0275\u0275elementEnd"](),
                r["\u0275\u0275elementStart"](41, "span", 14),
                r["\u0275\u0275text"](42),
                r["\u0275\u0275elementEnd"](),
                r["\u0275\u0275elementEnd"](),
                r["\u0275\u0275elementStart"](43, "div", 15),
                r["\u0275\u0275element"](44, "span"),
                r["\u0275\u0275elementEnd"](),
                r["\u0275\u0275elementEnd"](),
                r["\u0275\u0275elementStart"](45, "div", 16),
                r["\u0275\u0275elementStart"](46, "h3", 17),
                r["\u0275\u0275text"](47, "Production companies:"),
                r["\u0275\u0275elementEnd"](),
                r["\u0275\u0275template"](48, Yf, 2, 1, "div", 18),
                r["\u0275\u0275elementEnd"](),
                r["\u0275\u0275elementEnd"](),
                r["\u0275\u0275elementEnd"](),
                r["\u0275\u0275elementEnd"](),
                r["\u0275\u0275elementStart"](49, "div", 19),
                r["\u0275\u0275elementStart"](50, "h1", 17),
                r["\u0275\u0275text"](51, "Overview"),
                r["\u0275\u0275elementEnd"](),
                r["\u0275\u0275elementStart"](52, "p"),
                r["\u0275\u0275text"](53),
                r["\u0275\u0275elementEnd"](),
                r["\u0275\u0275elementEnd"](),
                r["\u0275\u0275elementStart"](54, "div", 20),
                r["\u0275\u0275elementStart"](55, "h1", 17),
                r["\u0275\u0275text"](56, "Recommendations list"),
                r["\u0275\u0275elementEnd"](),
                r["\u0275\u0275elementStart"](57, "div", 21),
                r["\u0275\u0275template"](58, Xf, 4, 2, "div", 22),
                r["\u0275\u0275elementEnd"](),
                r["\u0275\u0275elementEnd"](),
                r["\u0275\u0275elementEnd"](),
                r["\u0275\u0275elementEnd"]()),
                2 & e &&
                  (r["\u0275\u0275advance"](3),
                  r["\u0275\u0275property"](
                    "ngStyle",
                    r["\u0275\u0275pureFunction1"](
                      26,
                      Jf,
                      "url(" +
                        (null == t.film_info ? null : t.film_info.bg_img_url) +
                        ") no-repeat center center/cover"
                    )
                  ),
                  r["\u0275\u0275advance"](3),
                  r["\u0275\u0275propertyInterpolate"](
                    "src",
                    null == t.film_info ? null : t.film_info.img_url,
                    r["\u0275\u0275sanitizeUrl"]
                  ),
                  r["\u0275\u0275advance"](2),
                  r["\u0275\u0275textInterpolate1"](" ", t.btn_state.text, ""),
                  r["\u0275\u0275advance"](2),
                  r["\u0275\u0275textInterpolate"](t.btn_state.icon_name),
                  r["\u0275\u0275advance"](3),
                  r["\u0275\u0275textInterpolate"](
                    null == t.film_info ? null : t.film_info.title
                  ),
                  r["\u0275\u0275advance"](2),
                  r["\u0275\u0275textInterpolate"](
                    null == t.film_info ? null : t.film_info.tagline
                  ),
                  r["\u0275\u0275advance"](4),
                  r["\u0275\u0275textInterpolate1"](
                    "Genre: ",
                    t.film_info.genres,
                    ""
                  ),
                  r["\u0275\u0275advance"](2),
                  r["\u0275\u0275textInterpolate1"](
                    "Language: ",
                    null == t.film_info ? null : t.film_info.original_language,
                    ""
                  ),
                  r["\u0275\u0275advance"](2),
                  r["\u0275\u0275textInterpolate1"](
                    "Runtime: ",
                    null == t.film_info ? null : t.film_info.runtime,
                    " min"
                  ),
                  r["\u0275\u0275advance"](2),
                  r["\u0275\u0275textInterpolate1"](
                    "Budget: ",
                    r["\u0275\u0275pipeBind2"](
                      26,
                      21,
                      null == t.film_info ? null : t.film_info.budget,
                      "USD"
                    ),
                    ""
                  ),
                  r["\u0275\u0275advance"](3),
                  r["\u0275\u0275textInterpolate1"](
                    "Countries: ",
                    t.film_info.production_countries,
                    ""
                  ),
                  r["\u0275\u0275advance"](2),
                  r["\u0275\u0275textInterpolate1"](
                    "Release date: ",
                    r["\u0275\u0275pipeBind1"](
                      31,
                      24,
                      null == t.film_info ? null : t.film_info.release_date
                    ),
                    ""
                  ),
                  r["\u0275\u0275advance"](3),
                  r["\u0275\u0275textInterpolate1"](
                    "Status: ",
                    null == t.film_info ? null : t.film_info.status,
                    ""
                  ),
                  r["\u0275\u0275advance"](6),
                  r["\u0275\u0275textInterpolate"](
                    null == t.film_info ? null : t.film_info.vote_average
                  ),
                  r["\u0275\u0275advance"](3),
                  r["\u0275\u0275textInterpolate"](
                    null == t.film_info ? null : t.film_info.vote_count
                  ),
                  r["\u0275\u0275advance"](2),
                  r["\u0275\u0275styleMapInterpolate1"](
                    "width: ",
                    10 *
                      (null == t.film_info ? null : t.film_info.vote_average),
                    "%;"
                  ),
                  r["\u0275\u0275advance"](4),
                  r["\u0275\u0275property"](
                    "ngForOf",
                    t.film_info.production_companies
                  ),
                  r["\u0275\u0275advance"](5),
                  r["\u0275\u0275textInterpolate"](
                    null == t.film_info ? null : t.film_info.overview
                  ),
                  r["\u0275\u0275advance"](5),
                  r["\u0275\u0275property"](
                    "ngForOf",
                    t.film_info.recommendations
                  ));
            },
            directives: [
              Qf.FlashMessagesComponent,
              i.NgStyle,
              Jc,
              Cs,
              i.NgForOf,
            ],
            pipes: [i.CurrencyPipe, i.DatePipe],
            styles: [
              '.film_info_showcase_container[_ngcontent-%COMP%]{position:relative;color:#000}.film_info_showcase_container[_ngcontent-%COMP%]:before{position:absolute;content:"";width:100%;height:100%;background:hsla(0,0%,100%,.8)}.film_info_showcase[_ngcontent-%COMP%]{position:relative;z-index:1;display:grid;grid-template-columns:1fr 1fr .5fr;grid-template-rows:auto;grid-template-areas:"first_col sec_col third_col";-moz-column-gap:1rem;column-gap:1rem;border-bottom:2px solid orange}.film_info_first_col[_ngcontent-%COMP%]{grid-area:first_col;display:flex;flex-direction:column;max-width:300px}.film_info_first_col[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{align-self:center}.film_info_first_col[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{align-self:center;margin-top:1rem;width:100%}.film_info_sec_col[_ngcontent-%COMP%]{grid-area:sec_col}.film_info_third_col[_ngcontent-%COMP%]{grid-area:third_col}.film_info_third_col[_ngcontent-%COMP%]   .production_companies[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%]{line-height:1rem}.film_info_third_col[_ngcontent-%COMP%]   .rating[_ngcontent-%COMP%]{width:80%;display:flex;flex-direction:column;align-items:flex-start}.film_info_third_col[_ngcontent-%COMP%]   .ratio[_ngcontent-%COMP%]{font-weight:700;font-size:1rem}.film_info_third_col[_ngcontent-%COMP%]   .vote_average[_ngcontent-%COMP%]{color:orange}.film_info_third_col[_ngcontent-%COMP%]   .vote_count[_ngcontent-%COMP%]{font-size:.8rem}.film_info_rec_list_cont[_ngcontent-%COMP%]{display:flex;justify-content:flex-start;flex-wrap:wrap}.film_info_rec_list_cont[_ngcontent-%COMP%]   .rec_film[_ngcontent-%COMP%]{width:92px;text-align:center;margin-right:1rem}.film_info_rec_list_cont[_ngcontent-%COMP%]   .rec_film[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{background:none;border:none;outline:none;cursor:pointer}.rating_string[_ngcontent-%COMP%]{position:relative;width:100%;height:1rem;background:grey}.rating_string[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{position:absolute;height:100%;background:orange;left:0}@media screen and (max-width:790px){.film_info_showcase[_ngcontent-%COMP%]{grid-template-areas:"first_col sec_col sec_col" "first_col third_col third_col"}.film_info_third_col[_ngcontent-%COMP%]{text-align:center;padding-bottom:1rem}.film_info_third_col[_ngcontent-%COMP%]   .rating[_ngcontent-%COMP%]{width:50%;margin:auto}.film_info_sec_col[_ngcontent-%COMP%]{position:relative;text-align:center;padding-bottom:1rem}.film_info_sec_col[_ngcontent-%COMP%]:before{position:absolute;content:"";width:50%;height:100%;left:25%;border-bottom:1px solid orange}}@media screen and (max-width:507px){.film_info_showcase[_ngcontent-%COMP%]{grid-template-areas:"first_col first_col first_col" "sec_col sec_col sec_col" "third_col third_col third_col"}.film_info_first_col[_ngcontent-%COMP%]{justify-self:center}.film_info_overview[_ngcontent-%COMP%], .film_info_rec_list[_ngcontent-%COMP%]{text-align:center}.film_info_rec_list_cont[_ngcontent-%COMP%]{justify-content:center}}',
            ],
          })),
          e
        );
      })();
      class tp {
        constructor(e, t) {
          (this.filmsService = e),
            (this.localStorageService = t),
            (this.filmsSubject = new xs([])),
            (this.filmsCountSubject = new xs(1e3)),
            (this.length = this.filmsCountSubject.asObservable());
        }
        addGenresToFilmsArr(e, t) {
          t.genres.forEach((t) => {
            e.forEach((e, n) => {
              e.genre_ids.forEach((n, r) => {
                n === t.id &&
                  (e.genre_names = e.genre_names
                    ? e.genre_names + "," + t.name
                    : t.name);
              });
            });
          });
        }
        findAndCheckFavorites(e) {
          e.forEach((e) => {
            e.favorite = !!this.localStorageService.isFavorite(new Wf(e));
          });
        }
        loadFilms(e, t, n) {
          this.filmsService.getPageOfFilms(e).subscribe((e) => {
            let r = e.results.slice(t, n);
            this.filmsService.getGenres().subscribe((e) => {
              this.addGenresToFilmsArr(r, e),
                this.findAndCheckFavorites(r),
                this.filmsSubject.next(r);
            });
          });
        }
        loadFilmsAndTheirCount(e, t, n) {
          this.filmsService.getPageOfFilms(e).subscribe((e) => {
            let r = e.results.slice(t, n);
            this.filmsService.getGenres().subscribe((e) => {
              this.addGenresToFilmsArr(r, e),
                this.findAndCheckFavorites(r),
                this.filmsSubject.next(r);
            }),
              this.filmsCountSubject.next(e.total_results);
          });
        }
        searchFilmsAndTheirCount(e, t, n) {
          this.filmsService.searchFilms(e).subscribe((e) => {
            let r = e.results.slice(t, n);
            this.filmsService.getGenres().subscribe((e) => {
              this.addGenresToFilmsArr(r, e),
                this.findAndCheckFavorites(r),
                this.filmsSubject.next(r);
            }),
              this.filmsCountSubject.next(e.total_results);
          });
        }
        searchFilms(e, t, n, r) {
          this.filmsService.searchFilms(e, t).subscribe((e) => {
            let t = e.results.slice(n, r);
            this.filmsService.getGenres().subscribe((e) => {
              this.addGenresToFilmsArr(t, e),
                this.findAndCheckFavorites(t),
                this.filmsSubject.next(t);
            });
          });
        }
        connect(e) {
          return this.filmsSubject.asObservable();
        }
        disconnect(e) {
          this.filmsSubject.complete();
        }
      }
      const np = ke({ passive: !0 });
      let rp = (() => {
          class e {
            constructor(e, t) {
              (this._platform = e),
                (this._ngZone = t),
                (this._monitoredElements = new Map());
            }
            monitor(e) {
              if (!this._platform.isBrowser) return he;
              const t = be(e),
                n = this._monitoredElements.get(t);
              if (n) return n.subject.asObservable();
              const r = new M.a(),
                i = "cdk-text-field-autofilled",
                s = (e) => {
                  "cdk-text-field-autofill-start" !== e.animationName ||
                  t.classList.contains(i)
                    ? "cdk-text-field-autofill-end" === e.animationName &&
                      t.classList.contains(i) &&
                      (t.classList.remove(i),
                      this._ngZone.run(() =>
                        r.next({ target: e.target, isAutofilled: !1 })
                      ))
                    : (t.classList.add(i),
                      this._ngZone.run(() =>
                        r.next({ target: e.target, isAutofilled: !0 })
                      ));
                };
              return (
                this._ngZone.runOutsideAngular(() => {
                  t.addEventListener("animationstart", s, np),
                    t.classList.add("cdk-text-field-autofill-monitored");
                }),
                this._monitoredElements.set(t, {
                  subject: r,
                  unlisten: () => {
                    t.removeEventListener("animationstart", s, np);
                  },
                }),
                r.asObservable()
              );
            }
            stopMonitoring(e) {
              const t = be(e),
                n = this._monitoredElements.get(t);
              n &&
                (n.unlisten(),
                n.subject.complete(),
                t.classList.remove("cdk-text-field-autofill-monitored"),
                t.classList.remove("cdk-text-field-autofilled"),
                this._monitoredElements.delete(t));
            }
            ngOnDestroy() {
              this._monitoredElements.forEach((e, t) => this.stopMonitoring(t));
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(
                r["\u0275\u0275inject"](Se),
                r["\u0275\u0275inject"](r.NgZone)
              );
            }),
            (e.ɵprov = Object(r["\u0275\u0275defineInjectable"])({
              factory: function () {
                return new e(
                  Object(r["\u0275\u0275inject"])(Se),
                  Object(r["\u0275\u0275inject"])(r.NgZone)
                );
              },
              token: e,
              providedIn: "root",
            })),
            e
          );
        })(),
        ip = (() => {
          class e {}
          return (
            (e.ɵmod = r["\u0275\u0275defineNgModule"]({ type: e })),
            (e.ɵinj = r["\u0275\u0275defineInjector"]({
              factory: function (t) {
                return new (t || e)();
              },
              imports: [[Ee]],
            })),
            e
          );
        })();
      const sp = new r.InjectionToken("MAT_INPUT_VALUE_ACCESSOR"),
        op = [
          "button",
          "checkbox",
          "file",
          "hidden",
          "image",
          "radio",
          "range",
          "reset",
          "submit",
        ];
      let ap = 0;
      class lp {
        constructor(e, t, n, r) {
          (this._defaultErrorStateMatcher = e),
            (this._parentForm = t),
            (this._parentFormGroup = n),
            (this.ngControl = r);
        }
      }
      const cp = zr(lp);
      let up = (() => {
          class e extends cp {
            constructor(e, t, n, r, i, s, o, a, l) {
              super(s, r, i, n),
                (this._elementRef = e),
                (this._platform = t),
                (this.ngControl = n),
                (this._autofillMonitor = a),
                (this._uid = "mat-input-" + ap++),
                (this.focused = !1),
                (this.stateChanges = new M.a()),
                (this.controlType = "mat-input"),
                (this.autofilled = !1),
                (this._disabled = !1),
                (this._required = !1),
                (this._type = "text"),
                (this._readonly = !1),
                (this._neverEmptyInputTypes = [
                  "date",
                  "datetime",
                  "datetime-local",
                  "month",
                  "time",
                  "week",
                ].filter((e) => De().has(e)));
              const c = this._elementRef.nativeElement,
                u = c.nodeName.toLowerCase();
              (this._inputValueAccessor = o || c),
                (this._previousNativeValue = this.value),
                (this.id = this.id),
                t.IOS &&
                  l.runOutsideAngular(() => {
                    e.nativeElement.addEventListener("keyup", (e) => {
                      let t = e.target;
                      t.value ||
                        t.selectionStart ||
                        t.selectionEnd ||
                        (t.setSelectionRange(1, 1), t.setSelectionRange(0, 0));
                    });
                  }),
                (this._isServer = !this._platform.isBrowser),
                (this._isNativeSelect = "select" === u),
                (this._isTextarea = "textarea" === u),
                this._isNativeSelect &&
                  (this.controlType = c.multiple
                    ? "mat-native-select-multiple"
                    : "mat-native-select");
            }
            get disabled() {
              return this.ngControl && null !== this.ngControl.disabled
                ? this.ngControl.disabled
                : this._disabled;
            }
            set disabled(e) {
              (this._disabled = ge(e)),
                this.focused && ((this.focused = !1), this.stateChanges.next());
            }
            get id() {
              return this._id;
            }
            set id(e) {
              this._id = e || this._uid;
            }
            get required() {
              return this._required;
            }
            set required(e) {
              this._required = ge(e);
            }
            get type() {
              return this._type;
            }
            set type(e) {
              (this._type = e || "text"),
                this._validateType(),
                !this._isTextarea &&
                  De().has(this._type) &&
                  (this._elementRef.nativeElement.type = this._type);
            }
            get value() {
              return this._inputValueAccessor.value;
            }
            set value(e) {
              e !== this.value &&
                ((this._inputValueAccessor.value = e),
                this.stateChanges.next());
            }
            get readonly() {
              return this._readonly;
            }
            set readonly(e) {
              this._readonly = ge(e);
            }
            ngOnInit() {
              this._platform.isBrowser &&
                this._autofillMonitor
                  .monitor(this._elementRef.nativeElement)
                  .subscribe((e) => {
                    (this.autofilled = e.isAutofilled),
                      this.stateChanges.next();
                  });
            }
            ngOnChanges() {
              this.stateChanges.next();
            }
            ngOnDestroy() {
              this.stateChanges.complete(),
                this._platform.isBrowser &&
                  this._autofillMonitor.stopMonitoring(
                    this._elementRef.nativeElement
                  );
            }
            ngDoCheck() {
              this.ngControl && this.updateErrorState(),
                this._dirtyCheckNativeValue();
            }
            focus(e) {
              this._elementRef.nativeElement.focus(e);
            }
            _focusChanged(e) {
              e === this.focused ||
                (this.readonly && e) ||
                ((this.focused = e), this.stateChanges.next());
            }
            _onInput() {}
            _dirtyCheckNativeValue() {
              const e = this._elementRef.nativeElement.value;
              this._previousNativeValue !== e &&
                ((this._previousNativeValue = e), this.stateChanges.next());
            }
            _validateType() {
              if (op.indexOf(this._type) > -1)
                throw Error(
                  `Input type "${this._type}" isn't supported by matInput.`
                );
            }
            _isNeverEmpty() {
              return this._neverEmptyInputTypes.indexOf(this._type) > -1;
            }
            _isBadInput() {
              let e = this._elementRef.nativeElement.validity;
              return e && e.badInput;
            }
            get empty() {
              return !(
                this._isNeverEmpty() ||
                this._elementRef.nativeElement.value ||
                this._isBadInput() ||
                this.autofilled
              );
            }
            get shouldLabelFloat() {
              if (this._isNativeSelect) {
                const e = this._elementRef.nativeElement,
                  t = e.options[0];
                return (
                  this.focused ||
                  e.multiple ||
                  !this.empty ||
                  !!(e.selectedIndex > -1 && t && t.label)
                );
              }
              return this.focused || !this.empty;
            }
            setDescribedByIds(e) {
              this._ariaDescribedby = e.join(" ");
            }
            onContainerClick() {
              this.focused || this.focus();
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(
                r["\u0275\u0275directiveInject"](r.ElementRef),
                r["\u0275\u0275directiveInject"](Se),
                r["\u0275\u0275directiveInject"](Hh, 10),
                r["\u0275\u0275directiveInject"](jd, 8),
                r["\u0275\u0275directiveInject"](qd, 8),
                r["\u0275\u0275directiveInject"](Hr),
                r["\u0275\u0275directiveInject"](sp, 10),
                r["\u0275\u0275directiveInject"](rp),
                r["\u0275\u0275directiveInject"](r.NgZone)
              );
            }),
            (e.ɵdir = r["\u0275\u0275defineDirective"]({
              type: e,
              selectors: [
                ["input", "matInput", ""],
                ["textarea", "matInput", ""],
                ["select", "matNativeControl", ""],
                ["input", "matNativeControl", ""],
                ["textarea", "matNativeControl", ""],
              ],
              hostAttrs: [
                1,
                "mat-input-element",
                "mat-form-field-autofill-control",
              ],
              hostVars: 10,
              hostBindings: function (e, t) {
                1 & e &&
                  r["\u0275\u0275listener"]("focus", function () {
                    return t._focusChanged(!0);
                  })("blur", function () {
                    return t._focusChanged(!1);
                  })("input", function () {
                    return t._onInput();
                  }),
                  2 & e &&
                    (r["\u0275\u0275hostProperty"]("disabled", t.disabled)(
                      "required",
                      t.required
                    ),
                    r["\u0275\u0275attribute"]("id", t.id)(
                      "placeholder",
                      t.placeholder
                    )("readonly", (t.readonly && !t._isNativeSelect) || null)(
                      "aria-describedby",
                      t._ariaDescribedby || null
                    )("aria-invalid", t.errorState)(
                      "aria-required",
                      t.required.toString()
                    ),
                    r["\u0275\u0275classProp"](
                      "mat-input-server",
                      t._isServer
                    ));
              },
              inputs: {
                id: "id",
                disabled: "disabled",
                required: "required",
                type: "type",
                value: "value",
                readonly: "readonly",
                placeholder: "placeholder",
                errorStateMatcher: "errorStateMatcher",
              },
              exportAs: ["matInput"],
              features: [
                r["\u0275\u0275ProvidersFeature"]([
                  { provide: yh, useExisting: e },
                ]),
                r["\u0275\u0275InheritDefinitionFeature"],
                r["\u0275\u0275NgOnChangesFeature"],
              ],
            })),
            e
          );
        })(),
        hp = (() => {
          class e {}
          return (
            (e.ɵmod = r["\u0275\u0275defineNgModule"]({ type: e })),
            (e.ɵinj = r["\u0275\u0275defineInjector"]({
              factory: function (t) {
                return new (t || e)();
              },
              providers: [Hr],
              imports: [[ip, Th], ip, Th],
            })),
            e
          );
        })();
      function dp(e, t) {
        if (1 & e) {
          const e = r["\u0275\u0275getCurrentView"]();
          r["\u0275\u0275elementStart"](0, "button", 16),
            r["\u0275\u0275listener"]("click", function () {
              return (
                r["\u0275\u0275restoreView"](e),
                r["\u0275\u0275nextContext"]().onCloseSearchButton()
              );
            }),
            r["\u0275\u0275elementStart"](1, "mat-icon"),
            r["\u0275\u0275text"](2, "close"),
            r["\u0275\u0275elementEnd"](),
            r["\u0275\u0275elementEnd"]();
        }
      }
      function fp(e, t) {
        1 & e &&
          (r["\u0275\u0275elementStart"](0, "mat-header-cell"),
          r["\u0275\u0275text"](1, "Title"),
          r["\u0275\u0275elementEnd"]());
      }
      function pp(e, t) {
        if (
          (1 & e &&
            (r["\u0275\u0275elementStart"](0, "mat-cell"),
            r["\u0275\u0275elementStart"](1, "a", 17),
            r["\u0275\u0275text"](2),
            r["\u0275\u0275elementEnd"](),
            r["\u0275\u0275elementEnd"]()),
          2 & e)
        ) {
          const e = t.$implicit;
          r["\u0275\u0275advance"](1),
            r["\u0275\u0275propertyInterpolate1"](
              "routerLink",
              "info/",
              e.id,
              ""
            ),
            r["\u0275\u0275advance"](1),
            r["\u0275\u0275textInterpolate"](e.title);
        }
      }
      function mp(e, t) {
        1 & e &&
          (r["\u0275\u0275elementStart"](0, "mat-header-cell", 18),
          r["\u0275\u0275text"](1, "Genres"),
          r["\u0275\u0275elementEnd"]());
      }
      function gp(e, t) {
        if (
          (1 & e &&
            (r["\u0275\u0275elementStart"](0, "mat-cell", 19),
            r["\u0275\u0275text"](1),
            r["\u0275\u0275elementEnd"]()),
          2 & e)
        ) {
          const e = t.$implicit;
          r["\u0275\u0275advance"](1),
            r["\u0275\u0275textInterpolate"](e.genre_names);
        }
      }
      function _p(e, t) {
        1 & e &&
          (r["\u0275\u0275elementStart"](0, "mat-header-cell", 18),
          r["\u0275\u0275text"](1, "add(+) or remove(-)"),
          r["\u0275\u0275element"](2, "br"),
          r["\u0275\u0275text"](3, "favorite film"),
          r["\u0275\u0275elementEnd"]());
      }
      const yp = function (e) {
        return { position: "absolute", right: e, cursor: "pointer" };
      };
      function vp(e, t) {
        if (1 & e) {
          const e = r["\u0275\u0275getCurrentView"]();
          r["\u0275\u0275elementStart"](0, "mat-icon", 22),
            r["\u0275\u0275listener"]("click", function () {
              r["\u0275\u0275restoreView"](e);
              const t = r["\u0275\u0275nextContext"]().$implicit;
              return r["\u0275\u0275nextContext"]().clickOnIcon(t);
            }),
            r["\u0275\u0275text"](1, "add"),
            r["\u0275\u0275elementEnd"]();
        }
        2 & e &&
          r["\u0275\u0275property"](
            "ngStyle",
            r["\u0275\u0275pureFunction1"](1, yp, "20%")
          );
      }
      function bp(e, t) {
        if (1 & e) {
          const e = r["\u0275\u0275getCurrentView"]();
          r["\u0275\u0275elementStart"](0, "mat-icon", 22),
            r["\u0275\u0275listener"]("click", function () {
              r["\u0275\u0275restoreView"](e);
              const t = r["\u0275\u0275nextContext"]().$implicit;
              return r["\u0275\u0275nextContext"]().clickOnIcon(t);
            }),
            r["\u0275\u0275text"](1, "remove"),
            r["\u0275\u0275elementEnd"]();
        }
        2 & e &&
          r["\u0275\u0275property"](
            "ngStyle",
            r["\u0275\u0275pureFunction1"](1, yp, "20%")
          );
      }
      const wp = function () {
        return { position: "relative" };
      };
      function Cp(e, t) {
        if (
          (1 & e &&
            (r["\u0275\u0275elementStart"](0, "mat-cell", 20),
            r["\u0275\u0275template"](1, vp, 2, 3, "mat-icon", 21),
            r["\u0275\u0275template"](2, bp, 2, 3, "mat-icon", 21),
            r["\u0275\u0275elementEnd"]()),
          2 & e)
        ) {
          const e = t.$implicit;
          r["\u0275\u0275property"](
            "ngStyle",
            r["\u0275\u0275pureFunction0"](3, wp)
          ),
            r["\u0275\u0275advance"](1),
            r["\u0275\u0275property"]("ngIf", !e.favorite),
            r["\u0275\u0275advance"](1),
            r["\u0275\u0275property"]("ngIf", e.favorite);
        }
      }
      function Sp(e, t) {
        1 & e && r["\u0275\u0275element"](0, "mat-header-row");
      }
      function Ep(e, t) {
        1 & e && r["\u0275\u0275element"](0, "mat-row");
      }
      function xp(e, t) {
        1 & e &&
          (r["\u0275\u0275elementStart"](0, "mat-header-cell"),
          r["\u0275\u0275text"](1, "Title"),
          r["\u0275\u0275elementEnd"]());
      }
      function Dp(e, t) {
        if (
          (1 & e &&
            (r["\u0275\u0275elementStart"](0, "mat-cell"),
            r["\u0275\u0275elementStart"](1, "a", 13),
            r["\u0275\u0275text"](2),
            r["\u0275\u0275elementEnd"](),
            r["\u0275\u0275elementEnd"]()),
          2 & e)
        ) {
          const e = t.$implicit;
          r["\u0275\u0275advance"](1),
            r["\u0275\u0275propertyInterpolate1"](
              "routerLink",
              "../info/",
              e.id,
              ""
            ),
            r["\u0275\u0275advance"](1),
            r["\u0275\u0275textInterpolate"](e.title);
        }
      }
      function Ip(e, t) {
        1 & e &&
          (r["\u0275\u0275elementStart"](0, "mat-header-cell", 14),
          r["\u0275\u0275text"](1, "Genres"),
          r["\u0275\u0275elementEnd"]());
      }
      function Op(e, t) {
        if (
          (1 & e &&
            (r["\u0275\u0275elementStart"](0, "mat-cell", 15),
            r["\u0275\u0275text"](1),
            r["\u0275\u0275elementEnd"]()),
          2 & e)
        ) {
          const e = t.$implicit;
          r["\u0275\u0275advance"](1),
            r["\u0275\u0275textInterpolate"](e.genres_names);
        }
      }
      function kp(e, t) {
        1 & e &&
          (r["\u0275\u0275elementStart"](0, "mat-header-cell", 14),
          r["\u0275\u0275text"](1, "add(+) or remove(-)"),
          r["\u0275\u0275element"](2, "br"),
          r["\u0275\u0275text"](3, "favorite film"),
          r["\u0275\u0275elementEnd"]());
      }
      const Rp = function () {
          return { position: "relative" };
        },
        Ap = function (e) {
          return { position: "absolute", right: e, cursor: "pointer" };
        };
      function Tp(e, t) {
        if (1 & e) {
          const e = r["\u0275\u0275getCurrentView"]();
          r["\u0275\u0275elementStart"](0, "mat-cell", 16),
            r["\u0275\u0275elementStart"](1, "mat-icon", 17),
            r["\u0275\u0275listener"]("click", function () {
              r["\u0275\u0275restoreView"](e);
              const n = t.$implicit;
              return r["\u0275\u0275nextContext"]().clickOnCloseIcon(n);
            }),
            r["\u0275\u0275text"](2, "close"),
            r["\u0275\u0275elementEnd"](),
            r["\u0275\u0275elementEnd"]();
        }
        2 & e &&
          (r["\u0275\u0275property"](
            "ngStyle",
            r["\u0275\u0275pureFunction0"](2, Rp)
          ),
          r["\u0275\u0275advance"](1),
          r["\u0275\u0275property"](
            "ngStyle",
            r["\u0275\u0275pureFunction1"](3, Ap, "20%")
          ));
      }
      function Fp(e, t) {
        1 & e && r["\u0275\u0275element"](0, "mat-header-row");
      }
      function Pp(e, t) {
        1 & e && r["\u0275\u0275element"](0, "mat-row");
      }
      const jp = [
        {
          path: "films",
          component: (() => {
            class e {
              constructor(e, t, n) {
                (this.appFlashMessageService = e),
                  (this.filmsService = t),
                  (this.localStorageService = n),
                  (this.searchString = ""),
                  (this.paginatorOptions = {
                    length: 1e3,
                    pageSize: 20,
                    pageSizeOptions: [5, 10, 20],
                  }),
                  (this.displayedColumns = [
                    "title",
                    "genre_names",
                    "favorites",
                  ]);
              }
              ngOnInit() {
                (this.dataSource = new tp(
                  this.filmsService,
                  this.localStorageService
                )),
                  this.dataSource.length.subscribe((e) => {
                    this.paginatorOptions.length = e;
                  }),
                  this.dataSource.loadFilmsAndTheirCount(1, 0, 20);
              }
              getNumOfPage(e) {
                return Math.trunc((e.pageIndex * e.pageSize) / 20) + 1;
              }
              getFirstIndex(e) {
                return (e.pageIndex * e.pageSize) % 20;
              }
              getSecondIndex(e) {
                return ((e.pageIndex * e.pageSize) % 20) + e.pageSize;
              }
              ngAfterViewInit() {
                this.paginator.page.subscribe((e) => {
                  "" === this.searchString
                    ? this.dataSource.loadFilms(
                        this.getNumOfPage(e),
                        this.getFirstIndex(e),
                        this.getSecondIndex(e)
                      )
                    : this.dataSource.searchFilms(
                        this.changeSpacesToPluses(),
                        this.getNumOfPage(e),
                        this.getFirstIndex(e),
                        this.getSecondIndex(e)
                      );
                });
              }
              changeSpacesToPluses() {
                return this.searchString.replace(/\s/g, "+");
              }
              onKey(e) {
                "" === e.target.value && this.onCloseSearchButton(),
                  (this.paginator.pageIndex = 0),
                  this.dataSource.searchFilmsAndTheirCount(
                    this.changeSpacesToPluses(),
                    0,
                    this.paginatorOptions.pageSize
                  );
              }
              onCloseSearchButton() {
                (this.searchString = ""),
                  this.dataSource.loadFilmsAndTheirCount(
                    1,
                    0,
                    this.paginatorOptions.pageSize
                  );
              }
              clickOnIcon(e) {
                e.favorite
                  ? (this.localStorageService.removeFavoriteFilm(new Wf(e)),
                    (e.favorite = !1),
                    this.appFlashMessageService.showRemoveMessage())
                  : (this.localStorageService.addFavoriteFilm(new Wf(e)),
                    (e.favorite = !0),
                    this.appFlashMessageService.showAddMessage());
              }
            }
            return (
              (e.ɵfac = function (t) {
                return new (t || e)(
                  r["\u0275\u0275directiveInject"](Kf),
                  r["\u0275\u0275directiveInject"](qf),
                  r["\u0275\u0275directiveInject"](Zf)
                );
              }),
              (e.ɵcmp = r["\u0275\u0275defineComponent"]({
                type: e,
                selectors: [["app-main"]],
                viewQuery: function (e, t) {
                  var n;
                  1 & e && r["\u0275\u0275staticViewQuery"](Hf, !0),
                    2 & e &&
                      r["\u0275\u0275queryRefresh"](
                        (n = r["\u0275\u0275loadQuery"]())
                      ) &&
                      (t.paginator = n.first);
                },
                decls: 20,
                vars: 8,
                consts: [
                  [1, "container"],
                  [1, "app_header"],
                  [
                    "matInput",
                    "",
                    "type",
                    "text",
                    3,
                    "ngModel",
                    "ngModelChange",
                    "keyup",
                  ],
                  [
                    "mat-button",
                    "",
                    "matSuffix",
                    "",
                    "mat-icon-button",
                    "",
                    "aria-label",
                    "Clear",
                    3,
                    "click",
                    4,
                    "ngIf",
                  ],
                  [1, "films-table", "mat-elevation-z8", 3, "dataSource"],
                  ["matColumnDef", "title"],
                  [4, "matHeaderCellDef"],
                  [4, "matCellDef"],
                  ["matColumnDef", "genre_names"],
                  ["router", "", 4, "matHeaderCellDef"],
                  ["class", "description-cell", 4, "matCellDef"],
                  ["matColumnDef", "favorites"],
                  ["class", "description-cell", 3, "ngStyle", 4, "matCellDef"],
                  [4, "matHeaderRowDef"],
                  [4, "matRowDef", "matRowDefColumns"],
                  [3, "length", "pageSize", "pageSizeOptions"],
                  [
                    "mat-button",
                    "",
                    "matSuffix",
                    "",
                    "mat-icon-button",
                    "",
                    "aria-label",
                    "Clear",
                    3,
                    "click",
                  ],
                  [3, "routerLink"],
                  ["router", ""],
                  [1, "description-cell"],
                  [1, "description-cell", 3, "ngStyle"],
                  [3, "ngStyle", "click", 4, "ngIf"],
                  [3, "ngStyle", "click"],
                ],
                template: function (e, t) {
                  1 & e &&
                    (r["\u0275\u0275elementStart"](0, "div", 0),
                    r["\u0275\u0275elementStart"](1, "mat-form-field", 1),
                    r["\u0275\u0275elementStart"](2, "mat-label"),
                    r["\u0275\u0275text"](3, "Search film"),
                    r["\u0275\u0275elementEnd"](),
                    r["\u0275\u0275elementStart"](4, "input", 2),
                    r["\u0275\u0275listener"]("ngModelChange", function (e) {
                      return (t.searchString = e);
                    })("keyup", function (e) {
                      return t.onKey(e);
                    }),
                    r["\u0275\u0275elementEnd"](),
                    r["\u0275\u0275template"](5, dp, 3, 0, "button", 3),
                    r["\u0275\u0275elementEnd"](),
                    r["\u0275\u0275element"](6, "flash-messages"),
                    r["\u0275\u0275elementStart"](7, "mat-table", 4),
                    r["\u0275\u0275elementContainerStart"](8, 5),
                    r["\u0275\u0275template"](
                      9,
                      fp,
                      2,
                      0,
                      "mat-header-cell",
                      6
                    ),
                    r["\u0275\u0275template"](10, pp, 3, 2, "mat-cell", 7),
                    r["\u0275\u0275elementContainerEnd"](),
                    r["\u0275\u0275elementContainerStart"](11, 8),
                    r["\u0275\u0275template"](
                      12,
                      mp,
                      2,
                      0,
                      "mat-header-cell",
                      9
                    ),
                    r["\u0275\u0275template"](13, gp, 2, 1, "mat-cell", 10),
                    r["\u0275\u0275elementContainerEnd"](),
                    r["\u0275\u0275elementContainerStart"](14, 11),
                    r["\u0275\u0275template"](
                      15,
                      _p,
                      4,
                      0,
                      "mat-header-cell",
                      9
                    ),
                    r["\u0275\u0275template"](16, Cp, 3, 4, "mat-cell", 12),
                    r["\u0275\u0275elementContainerEnd"](),
                    r["\u0275\u0275template"](
                      17,
                      Sp,
                      1,
                      0,
                      "mat-header-row",
                      13
                    ),
                    r["\u0275\u0275template"](18, Ep, 1, 0, "mat-row", 14),
                    r["\u0275\u0275elementEnd"](),
                    r["\u0275\u0275element"](19, "mat-paginator", 15),
                    r["\u0275\u0275elementEnd"]()),
                    2 & e &&
                      (r["\u0275\u0275advance"](4),
                      r["\u0275\u0275property"]("ngModel", t.searchString),
                      r["\u0275\u0275advance"](1),
                      r["\u0275\u0275property"]("ngIf", t.searchString),
                      r["\u0275\u0275advance"](2),
                      r["\u0275\u0275property"]("dataSource", t.dataSource),
                      r["\u0275\u0275advance"](10),
                      r["\u0275\u0275property"](
                        "matHeaderRowDef",
                        t.displayedColumns
                      ),
                      r["\u0275\u0275advance"](1),
                      r["\u0275\u0275property"](
                        "matRowDefColumns",
                        t.displayedColumns
                      ),
                      r["\u0275\u0275advance"](1),
                      r["\u0275\u0275property"](
                        "length",
                        null == t.paginatorOptions
                          ? null
                          : t.paginatorOptions.length
                      )(
                        "pageSize",
                        null == t.paginatorOptions
                          ? null
                          : t.paginatorOptions.pageSize
                      )(
                        "pageSizeOptions",
                        null == t.paginatorOptions
                          ? null
                          : t.paginatorOptions.pageSizeOptions
                      ));
                },
                directives: [
                  Ah,
                  Ch,
                  up,
                  Lh,
                  $h,
                  Hd,
                  i.NgIf,
                  Qf.FlashMessagesComponent,
                  kc,
                  jc,
                  Fc,
                  Ac,
                  Vc,
                  zc,
                  Hf,
                  Jc,
                  xh,
                  Cs,
                  Mc,
                  Lc,
                  _l,
                  i.NgStyle,
                  Hc,
                  qc,
                ],
                styles: [
                  "mat-table[_ngcontent-%COMP%]{width:100%}mat-form-field.mat-form-field[_ngcontent-%COMP%]{font-size:1.5rem}mat-header-cell.mat-header-cell[_ngcontent-%COMP%]{font-size:1rem}mat-label.mat-label[_ngcontent-%COMP%]{font-size:1.5rem;line-height:1.5rem}mat-header-cell.mat-header-cell[_ngcontent-%COMP%]:nth-child(3){flex-direction:column;justify-content:center;align-items:flex-end;text-align:center}",
                ],
              })),
              e
            );
          })(),
        },
        { path: "", redirectTo: "/films", pathMatch: "full" },
        { path: "films/info/:id", component: ep },
        {
          path: "films/favorites",
          component: (() => {
            class e {
              constructor(e, t) {
                (this.localStorageService = e),
                  (this.appFlashMessageService = t),
                  (this.displayedColumns = ["title", "genres_names", "remove"]);
              }
              ngOnInit() {
                this.dataSource = this.localStorageService.getAllFavoriteFilms();
              }
              clickOnCloseIcon(e) {
                confirm("Are you sure you want to remove film!") &&
                  (this.localStorageService.removeFavoriteFilm(e),
                  (this.dataSource = this.localStorageService.getAllFavoriteFilms()),
                  this.appFlashMessageService.showRemoveMessage());
              }
            }
            return (
              (e.ɵfac = function (t) {
                return new (t || e)(
                  r["\u0275\u0275directiveInject"](Zf),
                  r["\u0275\u0275directiveInject"](Kf)
                );
              }),
              (e.ɵcmp = r["\u0275\u0275defineComponent"]({
                type: e,
                selectors: [["app-favorites"]],
                decls: 16,
                vars: 3,
                consts: [
                  [1, "container"],
                  [1, "app_header"],
                  [1, "films-table", "mat-elevation-z8", 3, "dataSource"],
                  ["matColumnDef", "title"],
                  [4, "matHeaderCellDef"],
                  [4, "matCellDef"],
                  ["matColumnDef", "genres_names"],
                  ["router", "", 4, "matHeaderCellDef"],
                  ["class", "description-cell", 4, "matCellDef"],
                  ["matColumnDef", "remove"],
                  ["class", "description-cell", 3, "ngStyle", 4, "matCellDef"],
                  [4, "matHeaderRowDef"],
                  [4, "matRowDef", "matRowDefColumns"],
                  [3, "routerLink"],
                  ["router", ""],
                  [1, "description-cell"],
                  [1, "description-cell", 3, "ngStyle"],
                  [3, "ngStyle", "click"],
                ],
                template: function (e, t) {
                  1 & e &&
                    (r["\u0275\u0275elementStart"](0, "div", 0),
                    r["\u0275\u0275elementStart"](1, "h1", 1),
                    r["\u0275\u0275text"](2, "Favorites"),
                    r["\u0275\u0275elementEnd"](),
                    r["\u0275\u0275element"](3, "flash-messages"),
                    r["\u0275\u0275elementStart"](4, "mat-table", 2),
                    r["\u0275\u0275elementContainerStart"](5, 3),
                    r["\u0275\u0275template"](
                      6,
                      xp,
                      2,
                      0,
                      "mat-header-cell",
                      4
                    ),
                    r["\u0275\u0275template"](7, Dp, 3, 2, "mat-cell", 5),
                    r["\u0275\u0275elementContainerEnd"](),
                    r["\u0275\u0275elementContainerStart"](8, 6),
                    r["\u0275\u0275template"](
                      9,
                      Ip,
                      2,
                      0,
                      "mat-header-cell",
                      7
                    ),
                    r["\u0275\u0275template"](10, Op, 2, 1, "mat-cell", 8),
                    r["\u0275\u0275elementContainerEnd"](),
                    r["\u0275\u0275elementContainerStart"](11, 9),
                    r["\u0275\u0275template"](
                      12,
                      kp,
                      4,
                      0,
                      "mat-header-cell",
                      7
                    ),
                    r["\u0275\u0275template"](13, Tp, 3, 5, "mat-cell", 10),
                    r["\u0275\u0275elementContainerEnd"](),
                    r["\u0275\u0275template"](
                      14,
                      Fp,
                      1,
                      0,
                      "mat-header-row",
                      11
                    ),
                    r["\u0275\u0275template"](15, Pp, 1, 0, "mat-row", 12),
                    r["\u0275\u0275elementEnd"](),
                    r["\u0275\u0275elementEnd"]()),
                    2 & e &&
                      (r["\u0275\u0275advance"](4),
                      r["\u0275\u0275property"]("dataSource", t.dataSource),
                      r["\u0275\u0275advance"](10),
                      r["\u0275\u0275property"](
                        "matHeaderRowDef",
                        t.displayedColumns
                      ),
                      r["\u0275\u0275advance"](1),
                      r["\u0275\u0275property"](
                        "matRowDefColumns",
                        t.displayedColumns
                      ));
                },
                directives: [
                  Qf.FlashMessagesComponent,
                  kc,
                  jc,
                  Fc,
                  Ac,
                  Vc,
                  zc,
                  Mc,
                  Lc,
                  _l,
                  i.NgStyle,
                  Cs,
                  Hc,
                  qc,
                ],
                styles: [
                  ".container[_ngcontent-%COMP%]{max-width:1200px;margin:auto}.uppercase_text[_ngcontent-%COMP%]{text-transform:uppercase}.italic[_ngcontent-%COMP%]{font-style:italic}.bold[_ngcontent-%COMP%]{font-weight:700}a[_ngcontent-%COMP%]{text-decoration:none;color:#000}.added[_ngcontent-%COMP%]{background:red;background:rgba(0,128,0,.1)}.added[_ngcontent-%COMP%], .removed[_ngcontent-%COMP%]{text-align:center;padding:1rem 0;font-size:1.5rem}.removed[_ngcontent-%COMP%]{background:rgba(255,0,0,.1)}.app_header[_ngcontent-%COMP%]{margin-top:1rem!important}mat-header-cell.mat-header-cell[_ngcontent-%COMP%]{font-size:1rem}mat-header-cell.mat-header-cell[_ngcontent-%COMP%]:nth-child(3){flex-direction:column;justify-content:center;align-items:flex-end;text-align:center}",
                ],
              })),
              e
            );
          })(),
        },
      ];
      let Np = (() => {
          class e {}
          return (
            (e.ɵmod = r["\u0275\u0275defineNgModule"]({ type: e })),
            (e.ɵinj = r["\u0275\u0275defineInjector"]({
              factory: function (t) {
                return new (t || e)();
              },
              imports: [
                [Al.forRoot(jp, { onSameUrlNavigation: "reload" })],
                Al,
              ],
            })),
            e
          );
        })(),
        Mp = (() => {
          class e {}
          return (
            (e.ɵmod = r["\u0275\u0275defineNgModule"]({
              type: e,
              bootstrap: [zl],
            })),
            (e.ɵinj = r["\u0275\u0275defineInjector"]({
              factory: function (t) {
                return new (t || e)();
              },
              providers: [qf, Zf, Kf],
              imports: [
                [
                  N,
                  Or,
                  Wc,
                  hp,
                  $f,
                  as,
                  Np,
                  Ss,
                  eu,
                  Th,
                  Wd,
                  Qf.FlashMessagesModule.forRoot(),
                ],
              ],
            })),
            e
          );
        })();
      Object(r.enableProdMode)(),
        P()
          .bootstrapModule(Mp)
          .catch((e) => console.error(e));
    },
    zn8P: function (e, t) {
      function n(e) {
        return Promise.resolve().then(function () {
          var t = new Error("Cannot find module '" + e + "'");
          throw ((t.code = "MODULE_NOT_FOUND"), t);
        });
      }
      (n.keys = function () {
        return [];
      }),
        (n.resolve = n),
        (e.exports = n),
        (n.id = "zn8P");
    },
  },
  [[0, 0]],
]);
